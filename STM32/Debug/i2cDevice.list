
i2cDevice.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000834c  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000604  08008460  08008460  00018460  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008a64  08008a64  000201e4  2**0
                  CONTENTS
  4 .ARM          00000000  08008a64  08008a64  000201e4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08008a64  08008a64  000201e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008a64  08008a64  00018a64  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008a68  08008a68  00018a68  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e4  20000000  08008a6c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000004e4  200001e4  08008c50  000201e4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200006c8  08008c50  000206c8  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201e4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00010469  00000000  00000000  0002020d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000028ae  00000000  00000000  00030676  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001158  00000000  00000000  00032f28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001058  00000000  00000000  00034080  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019cb3  00000000  00000000  000350d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013ca9  00000000  00000000  0004ed8b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008e63e  00000000  00000000  00062a34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f1072  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005b3c  00000000  00000000  000f10c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001e4 	.word	0x200001e4
 800012c:	00000000 	.word	0x00000000
 8000130:	08008444 	.word	0x08008444

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001e8 	.word	0x200001e8
 800014c:	08008444 	.word	0x08008444

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <dht20_init>:
#define SLAVE_ADDRESS_DHT20 (0x38 << 1)

uint16_t value_x10[2] = {0, 0};
char temp[20], humid[20];

void dht20_init(){
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b084      	sub	sp, #16
 8000a8c:	af02      	add	r7, sp, #8
	//Set register when call a wrong reset
	uint8_t init[3];

	init[0] = 0xA8;
 8000a8e:	23a8      	movs	r3, #168	; 0xa8
 8000a90:	713b      	strb	r3, [r7, #4]
	init[1] = 0x00;
 8000a92:	2300      	movs	r3, #0
 8000a94:	717b      	strb	r3, [r7, #5]
	init[2] = 0x00;
 8000a96:	2300      	movs	r3, #0
 8000a98:	71bb      	strb	r3, [r7, #6]
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) init, 3, 0xFF);
 8000a9a:	1d3a      	adds	r2, r7, #4
 8000a9c:	23ff      	movs	r3, #255	; 0xff
 8000a9e:	9300      	str	r3, [sp, #0]
 8000aa0:	2303      	movs	r3, #3
 8000aa2:	2170      	movs	r1, #112	; 0x70
 8000aa4:	480d      	ldr	r0, [pc, #52]	; (8000adc <dht20_init+0x54>)
 8000aa6:	f001 ffa5 	bl	80029f4 <HAL_I2C_Master_Transmit>
	HAL_Delay(20);
 8000aaa:	2014      	movs	r0, #20
 8000aac:	f001 fae0 	bl	8002070 <HAL_Delay>

	init[0] = 0xBE;
 8000ab0:	23be      	movs	r3, #190	; 0xbe
 8000ab2:	713b      	strb	r3, [r7, #4]
	init[1] = 0x08;
 8000ab4:	2308      	movs	r3, #8
 8000ab6:	717b      	strb	r3, [r7, #5]
	init[2] = 0x00;
 8000ab8:	2300      	movs	r3, #0
 8000aba:	71bb      	strb	r3, [r7, #6]
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) init, 3, 0xFF);
 8000abc:	1d3a      	adds	r2, r7, #4
 8000abe:	23ff      	movs	r3, #255	; 0xff
 8000ac0:	9300      	str	r3, [sp, #0]
 8000ac2:	2303      	movs	r3, #3
 8000ac4:	2170      	movs	r1, #112	; 0x70
 8000ac6:	4805      	ldr	r0, [pc, #20]	; (8000adc <dht20_init+0x54>)
 8000ac8:	f001 ff94 	bl	80029f4 <HAL_I2C_Master_Transmit>
	HAL_Delay(20);
 8000acc:	2014      	movs	r0, #20
 8000ace:	f001 facf 	bl	8002070 <HAL_Delay>
}
 8000ad2:	bf00      	nop
 8000ad4:	3708      	adds	r7, #8
 8000ad6:	46bd      	mov	sp, r7
 8000ad8:	bd80      	pop	{r7, pc}
 8000ada:	bf00      	nop
 8000adc:	2000022c 	.word	0x2000022c

08000ae0 <dht20_reset>:

void dht20_reset(uint8_t regist){
 8000ae0:	b580      	push	{r7, lr}
 8000ae2:	b086      	sub	sp, #24
 8000ae4:	af02      	add	r7, sp, #8
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	71fb      	strb	r3, [r7, #7]
	//reset register
	uint8_t reset[3], reply[3];

	reset[0] = regist;
 8000aea:	79fb      	ldrb	r3, [r7, #7]
 8000aec:	733b      	strb	r3, [r7, #12]
	reset[1] = 0x00;
 8000aee:	2300      	movs	r3, #0
 8000af0:	737b      	strb	r3, [r7, #13]
	reset[2] = 0x00;
 8000af2:	2300      	movs	r3, #0
 8000af4:	73bb      	strb	r3, [r7, #14]
 	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) reset, 3, 0xFF);
 8000af6:	f107 020c 	add.w	r2, r7, #12
 8000afa:	23ff      	movs	r3, #255	; 0xff
 8000afc:	9300      	str	r3, [sp, #0]
 8000afe:	2303      	movs	r3, #3
 8000b00:	2170      	movs	r1, #112	; 0x70
 8000b02:	4814      	ldr	r0, [pc, #80]	; (8000b54 <dht20_reset+0x74>)
 8000b04:	f001 ff76 	bl	80029f4 <HAL_I2C_Master_Transmit>
	HAL_Delay(10);
 8000b08:	200a      	movs	r0, #10
 8000b0a:	f001 fab1 	bl	8002070 <HAL_Delay>

	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) reply, 3, 0xFF);
 8000b0e:	f107 0208 	add.w	r2, r7, #8
 8000b12:	23ff      	movs	r3, #255	; 0xff
 8000b14:	9300      	str	r3, [sp, #0]
 8000b16:	2303      	movs	r3, #3
 8000b18:	2171      	movs	r1, #113	; 0x71
 8000b1a:	480e      	ldr	r0, [pc, #56]	; (8000b54 <dht20_reset+0x74>)
 8000b1c:	f002 f868 	bl	8002bf0 <HAL_I2C_Master_Receive>
	reset[0] = 0xB0 | regist;
 8000b20:	79fb      	ldrb	r3, [r7, #7]
 8000b22:	f063 034f 	orn	r3, r3, #79	; 0x4f
 8000b26:	b2db      	uxtb	r3, r3
 8000b28:	733b      	strb	r3, [r7, #12]
	reset[1] = reply[1];
 8000b2a:	7a7b      	ldrb	r3, [r7, #9]
 8000b2c:	737b      	strb	r3, [r7, #13]
	reset[2] = reply[2];
 8000b2e:	7abb      	ldrb	r3, [r7, #10]
 8000b30:	73bb      	strb	r3, [r7, #14]
	HAL_Delay(10);
 8000b32:	200a      	movs	r0, #10
 8000b34:	f001 fa9c 	bl	8002070 <HAL_Delay>

	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) reset, 3, 0xFF);
 8000b38:	f107 020c 	add.w	r2, r7, #12
 8000b3c:	23ff      	movs	r3, #255	; 0xff
 8000b3e:	9300      	str	r3, [sp, #0]
 8000b40:	2303      	movs	r3, #3
 8000b42:	2170      	movs	r1, #112	; 0x70
 8000b44:	4803      	ldr	r0, [pc, #12]	; (8000b54 <dht20_reset+0x74>)
 8000b46:	f001 ff55 	bl	80029f4 <HAL_I2C_Master_Transmit>
}
 8000b4a:	bf00      	nop
 8000b4c:	3710      	adds	r7, #16
 8000b4e:	46bd      	mov	sp, r7
 8000b50:	bd80      	pop	{r7, pc}
 8000b52:	bf00      	nop
 8000b54:	2000022c 	.word	0x2000022c

08000b58 <dht20_start>:

void dht20_start(){
 8000b58:	b580      	push	{r7, lr}
 8000b5a:	b084      	sub	sp, #16
 8000b5c:	af02      	add	r7, sp, #8
	//query the DHT20
	uint8_t status[1];
	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) status, 1, 0xFF);
 8000b5e:	1d3a      	adds	r2, r7, #4
 8000b60:	23ff      	movs	r3, #255	; 0xff
 8000b62:	9300      	str	r3, [sp, #0]
 8000b64:	2301      	movs	r3, #1
 8000b66:	2171      	movs	r1, #113	; 0x71
 8000b68:	481b      	ldr	r0, [pc, #108]	; (8000bd8 <dht20_start+0x80>)
 8000b6a:	f002 f841 	bl	8002bf0 <HAL_I2C_Master_Receive>

	if((status[0] & 0x18) != 0x18){
 8000b6e:	793b      	ldrb	r3, [r7, #4]
 8000b70:	f003 0318 	and.w	r3, r3, #24
 8000b74:	2b18      	cmp	r3, #24
 8000b76:	d00d      	beq.n	8000b94 <dht20_start+0x3c>
		dht20_reset(0x1B);
 8000b78:	201b      	movs	r0, #27
 8000b7a:	f7ff ffb1 	bl	8000ae0 <dht20_reset>
		dht20_reset(0x1C);
 8000b7e:	201c      	movs	r0, #28
 8000b80:	f7ff ffae 	bl	8000ae0 <dht20_reset>
		dht20_reset(0x1E);
 8000b84:	201e      	movs	r0, #30
 8000b86:	f7ff ffab 	bl	8000ae0 <dht20_reset>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, RESET);
 8000b8a:	2200      	movs	r2, #0
 8000b8c:	2102      	movs	r1, #2
 8000b8e:	4813      	ldr	r0, [pc, #76]	; (8000bdc <dht20_start+0x84>)
 8000b90:	f001 fdd4 	bl	800273c <HAL_GPIO_WritePin>
	}

	if ((status[0] & 0x18) == 0x18){
 8000b94:	793b      	ldrb	r3, [r7, #4]
 8000b96:	f003 0318 	and.w	r3, r3, #24
 8000b9a:	2b18      	cmp	r3, #24
 8000b9c:	d104      	bne.n	8000ba8 <dht20_start+0x50>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, SET);
 8000b9e:	2201      	movs	r2, #1
 8000ba0:	2102      	movs	r1, #2
 8000ba2:	480e      	ldr	r0, [pc, #56]	; (8000bdc <dht20_start+0x84>)
 8000ba4:	f001 fdca 	bl	800273c <HAL_GPIO_WritePin>
	}

	uint8_t data[3] = {0xAC, 0x33, 0x00};
 8000ba8:	4a0d      	ldr	r2, [pc, #52]	; (8000be0 <dht20_start+0x88>)
 8000baa:	463b      	mov	r3, r7
 8000bac:	6812      	ldr	r2, [r2, #0]
 8000bae:	4611      	mov	r1, r2
 8000bb0:	8019      	strh	r1, [r3, #0]
 8000bb2:	3302      	adds	r3, #2
 8000bb4:	0c12      	lsrs	r2, r2, #16
 8000bb6:	701a      	strb	r2, [r3, #0]

	//HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) trigger, 1, 0xFF);
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) data, 3, 0xFF);
 8000bb8:	463a      	mov	r2, r7
 8000bba:	23ff      	movs	r3, #255	; 0xff
 8000bbc:	9300      	str	r3, [sp, #0]
 8000bbe:	2303      	movs	r3, #3
 8000bc0:	2170      	movs	r1, #112	; 0x70
 8000bc2:	4805      	ldr	r0, [pc, #20]	; (8000bd8 <dht20_start+0x80>)
 8000bc4:	f001 ff16 	bl	80029f4 <HAL_I2C_Master_Transmit>
	HAL_Delay(80);
 8000bc8:	2050      	movs	r0, #80	; 0x50
 8000bca:	f001 fa51 	bl	8002070 <HAL_Delay>
}
 8000bce:	bf00      	nop
 8000bd0:	3708      	adds	r7, #8
 8000bd2:	46bd      	mov	sp, r7
 8000bd4:	bd80      	pop	{r7, pc}
 8000bd6:	bf00      	nop
 8000bd8:	2000022c 	.word	0x2000022c
 8000bdc:	40010800 	.word	0x40010800
 8000be0:	08008460 	.word	0x08008460

08000be4 <dht20_read>:

void dht20_read(uint16_t* value){
 8000be4:	b580      	push	{r7, lr}
 8000be6:	b088      	sub	sp, #32
 8000be8:	af02      	add	r7, sp, #8
 8000bea:	6078      	str	r0, [r7, #4]
	dht20_start();
 8000bec:	f7ff ffb4 	bl	8000b58 <dht20_start>
	uint8_t data[7];
	uint32_t Temper = 0, Humid = 0;
 8000bf0:	2300      	movs	r3, #0
 8000bf2:	617b      	str	r3, [r7, #20]
 8000bf4:	2300      	movs	r3, #0
 8000bf6:	613b      	str	r3, [r7, #16]
	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) data, 7, 0xFF);
 8000bf8:	f107 0208 	add.w	r2, r7, #8
 8000bfc:	23ff      	movs	r3, #255	; 0xff
 8000bfe:	9300      	str	r3, [sp, #0]
 8000c00:	2307      	movs	r3, #7
 8000c02:	2171      	movs	r1, #113	; 0x71
 8000c04:	4824      	ldr	r0, [pc, #144]	; (8000c98 <dht20_read+0xb4>)
 8000c06:	f001 fff3 	bl	8002bf0 <HAL_I2C_Master_Receive>

	//Humid
	Humid = (Humid | data[1]) << 8;
 8000c0a:	7a7b      	ldrb	r3, [r7, #9]
 8000c0c:	461a      	mov	r2, r3
 8000c0e:	693b      	ldr	r3, [r7, #16]
 8000c10:	4313      	orrs	r3, r2
 8000c12:	021b      	lsls	r3, r3, #8
 8000c14:	613b      	str	r3, [r7, #16]
	Humid = (Humid | data[2]) << 8;
 8000c16:	7abb      	ldrb	r3, [r7, #10]
 8000c18:	461a      	mov	r2, r3
 8000c1a:	693b      	ldr	r3, [r7, #16]
 8000c1c:	4313      	orrs	r3, r2
 8000c1e:	021b      	lsls	r3, r3, #8
 8000c20:	613b      	str	r3, [r7, #16]
	Humid = Humid | data[3];
 8000c22:	7afb      	ldrb	r3, [r7, #11]
 8000c24:	461a      	mov	r2, r3
 8000c26:	693b      	ldr	r3, [r7, #16]
 8000c28:	4313      	orrs	r3, r2
 8000c2a:	613b      	str	r3, [r7, #16]
	Humid = Humid >> 4;
 8000c2c:	693b      	ldr	r3, [r7, #16]
 8000c2e:	091b      	lsrs	r3, r3, #4
 8000c30:	613b      	str	r3, [r7, #16]
    Humid = (Humid * 100 * 10 / 1024 / 1024);
 8000c32:	693b      	ldr	r3, [r7, #16]
 8000c34:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000c38:	fb02 f303 	mul.w	r3, r2, r3
 8000c3c:	0d1b      	lsrs	r3, r3, #20
 8000c3e:	613b      	str	r3, [r7, #16]
    value[0] = Humid;
 8000c40:	693b      	ldr	r3, [r7, #16]
 8000c42:	b29a      	uxth	r2, r3
 8000c44:	687b      	ldr	r3, [r7, #4]
 8000c46:	801a      	strh	r2, [r3, #0]

	//Temperature
    Temper = (Temper | data[3]) << 8;
 8000c48:	7afb      	ldrb	r3, [r7, #11]
 8000c4a:	461a      	mov	r2, r3
 8000c4c:	697b      	ldr	r3, [r7, #20]
 8000c4e:	4313      	orrs	r3, r2
 8000c50:	021b      	lsls	r3, r3, #8
 8000c52:	617b      	str	r3, [r7, #20]
    Temper = (Temper | data[4]) << 8;
 8000c54:	7b3b      	ldrb	r3, [r7, #12]
 8000c56:	461a      	mov	r2, r3
 8000c58:	697b      	ldr	r3, [r7, #20]
 8000c5a:	4313      	orrs	r3, r2
 8000c5c:	021b      	lsls	r3, r3, #8
 8000c5e:	617b      	str	r3, [r7, #20]
    Temper = Temper | data[5];
 8000c60:	7b7b      	ldrb	r3, [r7, #13]
 8000c62:	461a      	mov	r2, r3
 8000c64:	697b      	ldr	r3, [r7, #20]
 8000c66:	4313      	orrs	r3, r2
 8000c68:	617b      	str	r3, [r7, #20]
    Temper = Temper & 0xfffff;
 8000c6a:	697b      	ldr	r3, [r7, #20]
 8000c6c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8000c70:	617b      	str	r3, [r7, #20]
    Temper = Temper*200*10/1024/1024 - 500;
 8000c72:	697b      	ldr	r3, [r7, #20]
 8000c74:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8000c78:	fb02 f303 	mul.w	r3, r2, r3
 8000c7c:	0d1b      	lsrs	r3, r3, #20
 8000c7e:	f5a3 73fa 	sub.w	r3, r3, #500	; 0x1f4
 8000c82:	617b      	str	r3, [r7, #20]
	value[1] = Temper;
 8000c84:	687b      	ldr	r3, [r7, #4]
 8000c86:	3302      	adds	r3, #2
 8000c88:	697a      	ldr	r2, [r7, #20]
 8000c8a:	b292      	uxth	r2, r2
 8000c8c:	801a      	strh	r2, [r3, #0]

}
 8000c8e:	bf00      	nop
 8000c90:	3718      	adds	r7, #24
 8000c92:	46bd      	mov	sp, r7
 8000c94:	bd80      	pop	{r7, pc}
 8000c96:	bf00      	nop
 8000c98:	2000022c 	.word	0x2000022c

08000c9c <dht20_output>:

void dht20_output(){
 8000c9c:	b590      	push	{r4, r7, lr}
 8000c9e:	b095      	sub	sp, #84	; 0x54
 8000ca0:	af02      	add	r7, sp, #8
	dht20_read(value_x10);
 8000ca2:	486a      	ldr	r0, [pc, #424]	; (8000e4c <dht20_output+0x1b0>)
 8000ca4:	f7ff ff9e 	bl	8000be4 <dht20_read>
	char msg[64];
	uint32_t checkSum = 0;
 8000ca8:	2300      	movs	r3, #0
 8000caa:	647b      	str	r3, [r7, #68]	; 0x44
	//Checksum temp and publish
	checkSum = msgCheckSum(&msg[0], sprintf(msg, "!TEMP:%d.%d#",value_x10[1]/10,value_x10[1]%10));
 8000cac:	4b67      	ldr	r3, [pc, #412]	; (8000e4c <dht20_output+0x1b0>)
 8000cae:	885b      	ldrh	r3, [r3, #2]
 8000cb0:	4a67      	ldr	r2, [pc, #412]	; (8000e50 <dht20_output+0x1b4>)
 8000cb2:	fba2 2303 	umull	r2, r3, r2, r3
 8000cb6:	08db      	lsrs	r3, r3, #3
 8000cb8:	b29b      	uxth	r3, r3
 8000cba:	461c      	mov	r4, r3
 8000cbc:	4b63      	ldr	r3, [pc, #396]	; (8000e4c <dht20_output+0x1b0>)
 8000cbe:	885a      	ldrh	r2, [r3, #2]
 8000cc0:	4b63      	ldr	r3, [pc, #396]	; (8000e50 <dht20_output+0x1b4>)
 8000cc2:	fba3 1302 	umull	r1, r3, r3, r2
 8000cc6:	08d9      	lsrs	r1, r3, #3
 8000cc8:	460b      	mov	r3, r1
 8000cca:	009b      	lsls	r3, r3, #2
 8000ccc:	440b      	add	r3, r1
 8000cce:	005b      	lsls	r3, r3, #1
 8000cd0:	1ad3      	subs	r3, r2, r3
 8000cd2:	b29b      	uxth	r3, r3
 8000cd4:	1d38      	adds	r0, r7, #4
 8000cd6:	4622      	mov	r2, r4
 8000cd8:	495e      	ldr	r1, [pc, #376]	; (8000e54 <dht20_output+0x1b8>)
 8000cda:	f005 f859 	bl	8005d90 <siprintf>
 8000cde:	4603      	mov	r3, r0
 8000ce0:	461a      	mov	r2, r3
 8000ce2:	1d3b      	adds	r3, r7, #4
 8000ce4:	4611      	mov	r1, r2
 8000ce6:	4618      	mov	r0, r3
 8000ce8:	f001 f84e 	bl	8001d88 <msgCheckSum>
 8000cec:	6478      	str	r0, [r7, #68]	; 0x44
	sprintf(msg, "!TEMP:%d.%d:%lu#",value_x10[1]/10,value_x10[1]%10,checkSum);
 8000cee:	4b57      	ldr	r3, [pc, #348]	; (8000e4c <dht20_output+0x1b0>)
 8000cf0:	885b      	ldrh	r3, [r3, #2]
 8000cf2:	4a57      	ldr	r2, [pc, #348]	; (8000e50 <dht20_output+0x1b4>)
 8000cf4:	fba2 2303 	umull	r2, r3, r2, r3
 8000cf8:	08db      	lsrs	r3, r3, #3
 8000cfa:	b29b      	uxth	r3, r3
 8000cfc:	461c      	mov	r4, r3
 8000cfe:	4b53      	ldr	r3, [pc, #332]	; (8000e4c <dht20_output+0x1b0>)
 8000d00:	885a      	ldrh	r2, [r3, #2]
 8000d02:	4b53      	ldr	r3, [pc, #332]	; (8000e50 <dht20_output+0x1b4>)
 8000d04:	fba3 1302 	umull	r1, r3, r3, r2
 8000d08:	08d9      	lsrs	r1, r3, #3
 8000d0a:	460b      	mov	r3, r1
 8000d0c:	009b      	lsls	r3, r3, #2
 8000d0e:	440b      	add	r3, r1
 8000d10:	005b      	lsls	r3, r3, #1
 8000d12:	1ad3      	subs	r3, r2, r3
 8000d14:	b29b      	uxth	r3, r3
 8000d16:	461a      	mov	r2, r3
 8000d18:	1d38      	adds	r0, r7, #4
 8000d1a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000d1c:	9300      	str	r3, [sp, #0]
 8000d1e:	4613      	mov	r3, r2
 8000d20:	4622      	mov	r2, r4
 8000d22:	494d      	ldr	r1, [pc, #308]	; (8000e58 <dht20_output+0x1bc>)
 8000d24:	f005 f834 	bl	8005d90 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 1000);
 8000d28:	1d3b      	adds	r3, r7, #4
 8000d2a:	4618      	mov	r0, r3
 8000d2c:	f7ff fa10 	bl	8000150 <strlen>
 8000d30:	4603      	mov	r3, r0
 8000d32:	b29a      	uxth	r2, r3
 8000d34:	1d39      	adds	r1, r7, #4
 8000d36:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000d3a:	4848      	ldr	r0, [pc, #288]	; (8000e5c <dht20_output+0x1c0>)
 8000d3c:	f003 fe73 	bl	8004a26 <HAL_UART_Transmit>
	//Checksum humid and publish
	checkSum = msgCheckSum(&msg[0], sprintf(msg, "!HUMID:%01d.%d#",value_x10[0]/10,value_x10[0]%10));
 8000d40:	4b42      	ldr	r3, [pc, #264]	; (8000e4c <dht20_output+0x1b0>)
 8000d42:	881b      	ldrh	r3, [r3, #0]
 8000d44:	4a42      	ldr	r2, [pc, #264]	; (8000e50 <dht20_output+0x1b4>)
 8000d46:	fba2 2303 	umull	r2, r3, r2, r3
 8000d4a:	08db      	lsrs	r3, r3, #3
 8000d4c:	b29b      	uxth	r3, r3
 8000d4e:	461c      	mov	r4, r3
 8000d50:	4b3e      	ldr	r3, [pc, #248]	; (8000e4c <dht20_output+0x1b0>)
 8000d52:	881a      	ldrh	r2, [r3, #0]
 8000d54:	4b3e      	ldr	r3, [pc, #248]	; (8000e50 <dht20_output+0x1b4>)
 8000d56:	fba3 1302 	umull	r1, r3, r3, r2
 8000d5a:	08d9      	lsrs	r1, r3, #3
 8000d5c:	460b      	mov	r3, r1
 8000d5e:	009b      	lsls	r3, r3, #2
 8000d60:	440b      	add	r3, r1
 8000d62:	005b      	lsls	r3, r3, #1
 8000d64:	1ad3      	subs	r3, r2, r3
 8000d66:	b29b      	uxth	r3, r3
 8000d68:	1d38      	adds	r0, r7, #4
 8000d6a:	4622      	mov	r2, r4
 8000d6c:	493c      	ldr	r1, [pc, #240]	; (8000e60 <dht20_output+0x1c4>)
 8000d6e:	f005 f80f 	bl	8005d90 <siprintf>
 8000d72:	4603      	mov	r3, r0
 8000d74:	461a      	mov	r2, r3
 8000d76:	1d3b      	adds	r3, r7, #4
 8000d78:	4611      	mov	r1, r2
 8000d7a:	4618      	mov	r0, r3
 8000d7c:	f001 f804 	bl	8001d88 <msgCheckSum>
 8000d80:	6478      	str	r0, [r7, #68]	; 0x44
	sprintf(msg, "!HUMID:%01d.%d:%lu#",value_x10[0]/10,value_x10[0]%10,checkSum);
 8000d82:	4b32      	ldr	r3, [pc, #200]	; (8000e4c <dht20_output+0x1b0>)
 8000d84:	881b      	ldrh	r3, [r3, #0]
 8000d86:	4a32      	ldr	r2, [pc, #200]	; (8000e50 <dht20_output+0x1b4>)
 8000d88:	fba2 2303 	umull	r2, r3, r2, r3
 8000d8c:	08db      	lsrs	r3, r3, #3
 8000d8e:	b29b      	uxth	r3, r3
 8000d90:	461c      	mov	r4, r3
 8000d92:	4b2e      	ldr	r3, [pc, #184]	; (8000e4c <dht20_output+0x1b0>)
 8000d94:	881a      	ldrh	r2, [r3, #0]
 8000d96:	4b2e      	ldr	r3, [pc, #184]	; (8000e50 <dht20_output+0x1b4>)
 8000d98:	fba3 1302 	umull	r1, r3, r3, r2
 8000d9c:	08d9      	lsrs	r1, r3, #3
 8000d9e:	460b      	mov	r3, r1
 8000da0:	009b      	lsls	r3, r3, #2
 8000da2:	440b      	add	r3, r1
 8000da4:	005b      	lsls	r3, r3, #1
 8000da6:	1ad3      	subs	r3, r2, r3
 8000da8:	b29b      	uxth	r3, r3
 8000daa:	461a      	mov	r2, r3
 8000dac:	1d38      	adds	r0, r7, #4
 8000dae:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000db0:	9300      	str	r3, [sp, #0]
 8000db2:	4613      	mov	r3, r2
 8000db4:	4622      	mov	r2, r4
 8000db6:	492b      	ldr	r1, [pc, #172]	; (8000e64 <dht20_output+0x1c8>)
 8000db8:	f004 ffea 	bl	8005d90 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 1000);
 8000dbc:	1d3b      	adds	r3, r7, #4
 8000dbe:	4618      	mov	r0, r3
 8000dc0:	f7ff f9c6 	bl	8000150 <strlen>
 8000dc4:	4603      	mov	r3, r0
 8000dc6:	b29a      	uxth	r2, r3
 8000dc8:	1d39      	adds	r1, r7, #4
 8000dca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000dce:	4823      	ldr	r0, [pc, #140]	; (8000e5c <dht20_output+0x1c0>)
 8000dd0:	f003 fe29 	bl	8004a26 <HAL_UART_Transmit>
	//Display on the LCD
	sprintf(temp, "TEMP:  %d.%d %cC",value_x10[1]/10,value_x10[1]%10 ,0b11011111);
 8000dd4:	4b1d      	ldr	r3, [pc, #116]	; (8000e4c <dht20_output+0x1b0>)
 8000dd6:	885b      	ldrh	r3, [r3, #2]
 8000dd8:	4a1d      	ldr	r2, [pc, #116]	; (8000e50 <dht20_output+0x1b4>)
 8000dda:	fba2 2303 	umull	r2, r3, r2, r3
 8000dde:	08db      	lsrs	r3, r3, #3
 8000de0:	b29b      	uxth	r3, r3
 8000de2:	4618      	mov	r0, r3
 8000de4:	4b19      	ldr	r3, [pc, #100]	; (8000e4c <dht20_output+0x1b0>)
 8000de6:	885a      	ldrh	r2, [r3, #2]
 8000de8:	4b19      	ldr	r3, [pc, #100]	; (8000e50 <dht20_output+0x1b4>)
 8000dea:	fba3 1302 	umull	r1, r3, r3, r2
 8000dee:	08d9      	lsrs	r1, r3, #3
 8000df0:	460b      	mov	r3, r1
 8000df2:	009b      	lsls	r3, r3, #2
 8000df4:	440b      	add	r3, r1
 8000df6:	005b      	lsls	r3, r3, #1
 8000df8:	1ad3      	subs	r3, r2, r3
 8000dfa:	b29b      	uxth	r3, r3
 8000dfc:	461a      	mov	r2, r3
 8000dfe:	23df      	movs	r3, #223	; 0xdf
 8000e00:	9300      	str	r3, [sp, #0]
 8000e02:	4613      	mov	r3, r2
 8000e04:	4602      	mov	r2, r0
 8000e06:	4918      	ldr	r1, [pc, #96]	; (8000e68 <dht20_output+0x1cc>)
 8000e08:	4818      	ldr	r0, [pc, #96]	; (8000e6c <dht20_output+0x1d0>)
 8000e0a:	f004 ffc1 	bl	8005d90 <siprintf>
	sprintf(humid,"HUMID: %01d.%d %%   ",value_x10[0]/10,value_x10[0]%10);
 8000e0e:	4b0f      	ldr	r3, [pc, #60]	; (8000e4c <dht20_output+0x1b0>)
 8000e10:	881b      	ldrh	r3, [r3, #0]
 8000e12:	4a0f      	ldr	r2, [pc, #60]	; (8000e50 <dht20_output+0x1b4>)
 8000e14:	fba2 2303 	umull	r2, r3, r2, r3
 8000e18:	08db      	lsrs	r3, r3, #3
 8000e1a:	b29b      	uxth	r3, r3
 8000e1c:	4618      	mov	r0, r3
 8000e1e:	4b0b      	ldr	r3, [pc, #44]	; (8000e4c <dht20_output+0x1b0>)
 8000e20:	881a      	ldrh	r2, [r3, #0]
 8000e22:	4b0b      	ldr	r3, [pc, #44]	; (8000e50 <dht20_output+0x1b4>)
 8000e24:	fba3 1302 	umull	r1, r3, r3, r2
 8000e28:	08d9      	lsrs	r1, r3, #3
 8000e2a:	460b      	mov	r3, r1
 8000e2c:	009b      	lsls	r3, r3, #2
 8000e2e:	440b      	add	r3, r1
 8000e30:	005b      	lsls	r3, r3, #1
 8000e32:	1ad3      	subs	r3, r2, r3
 8000e34:	b29b      	uxth	r3, r3
 8000e36:	4602      	mov	r2, r0
 8000e38:	490d      	ldr	r1, [pc, #52]	; (8000e70 <dht20_output+0x1d4>)
 8000e3a:	480e      	ldr	r0, [pc, #56]	; (8000e74 <dht20_output+0x1d8>)
 8000e3c:	f004 ffa8 	bl	8005d90 <siprintf>
	lcd_show_value();
 8000e40:	f000 f8f4 	bl	800102c <lcd_show_value>
}
 8000e44:	bf00      	nop
 8000e46:	374c      	adds	r7, #76	; 0x4c
 8000e48:	46bd      	mov	sp, r7
 8000e4a:	bd90      	pop	{r4, r7, pc}
 8000e4c:	20000200 	.word	0x20000200
 8000e50:	cccccccd 	.word	0xcccccccd
 8000e54:	08008464 	.word	0x08008464
 8000e58:	08008474 	.word	0x08008474
 8000e5c:	200002c8 	.word	0x200002c8
 8000e60:	08008488 	.word	0x08008488
 8000e64:	08008498 	.word	0x08008498
 8000e68:	080084ac 	.word	0x080084ac
 8000e6c:	20000204 	.word	0x20000204
 8000e70:	080084c0 	.word	0x080084c0
 8000e74:	20000218 	.word	0x20000218

08000e78 <lcd_send_cmd>:

#define SLAVE_ADDRESS_LCD (0x27 << 1)
//(0x3F << 1)  // change this according to ur setup

void lcd_send_cmd (char cmd)
{
 8000e78:	b580      	push	{r7, lr}
 8000e7a:	b086      	sub	sp, #24
 8000e7c:	af02      	add	r7, sp, #8
 8000e7e:	4603      	mov	r3, r0
 8000e80:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (cmd&0xf0);
 8000e82:	79fb      	ldrb	r3, [r7, #7]
 8000e84:	f023 030f 	bic.w	r3, r3, #15
 8000e88:	73fb      	strb	r3, [r7, #15]
	data_l = ((cmd<<4)&0xf0);
 8000e8a:	79fb      	ldrb	r3, [r7, #7]
 8000e8c:	011b      	lsls	r3, r3, #4
 8000e8e:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0C;  //en=1, rs=0
 8000e90:	7bfb      	ldrb	r3, [r7, #15]
 8000e92:	f043 030c 	orr.w	r3, r3, #12
 8000e96:	b2db      	uxtb	r3, r3
 8000e98:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x08;  //en=0, rs=0
 8000e9a:	7bfb      	ldrb	r3, [r7, #15]
 8000e9c:	f043 0308 	orr.w	r3, r3, #8
 8000ea0:	b2db      	uxtb	r3, r3
 8000ea2:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0C;  //en=1, rs=0
 8000ea4:	7bbb      	ldrb	r3, [r7, #14]
 8000ea6:	f043 030c 	orr.w	r3, r3, #12
 8000eaa:	b2db      	uxtb	r3, r3
 8000eac:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x08;  //en=0, rs=0
 8000eae:	7bbb      	ldrb	r3, [r7, #14]
 8000eb0:	f043 0308 	orr.w	r3, r3, #8
 8000eb4:	b2db      	uxtb	r3, r3
 8000eb6:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 8000eb8:	f107 0208 	add.w	r2, r7, #8
 8000ebc:	2364      	movs	r3, #100	; 0x64
 8000ebe:	9300      	str	r3, [sp, #0]
 8000ec0:	2304      	movs	r3, #4
 8000ec2:	214e      	movs	r1, #78	; 0x4e
 8000ec4:	4803      	ldr	r0, [pc, #12]	; (8000ed4 <lcd_send_cmd+0x5c>)
 8000ec6:	f001 fd95 	bl	80029f4 <HAL_I2C_Master_Transmit>
}
 8000eca:	bf00      	nop
 8000ecc:	3710      	adds	r7, #16
 8000ece:	46bd      	mov	sp, r7
 8000ed0:	bd80      	pop	{r7, pc}
 8000ed2:	bf00      	nop
 8000ed4:	2000022c 	.word	0x2000022c

08000ed8 <lcd_send_data>:

void lcd_send_data (char data)
{
 8000ed8:	b580      	push	{r7, lr}
 8000eda:	b086      	sub	sp, #24
 8000edc:	af02      	add	r7, sp, #8
 8000ede:	4603      	mov	r3, r0
 8000ee0:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (data&0xf0);
 8000ee2:	79fb      	ldrb	r3, [r7, #7]
 8000ee4:	f023 030f 	bic.w	r3, r3, #15
 8000ee8:	73fb      	strb	r3, [r7, #15]
	data_l = ((data<<4)&0xf0);
 8000eea:	79fb      	ldrb	r3, [r7, #7]
 8000eec:	011b      	lsls	r3, r3, #4
 8000eee:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0D;  //en=1, rs=0
 8000ef0:	7bfb      	ldrb	r3, [r7, #15]
 8000ef2:	f043 030d 	orr.w	r3, r3, #13
 8000ef6:	b2db      	uxtb	r3, r3
 8000ef8:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x09;  //en=0, rs=0
 8000efa:	7bfb      	ldrb	r3, [r7, #15]
 8000efc:	f043 0309 	orr.w	r3, r3, #9
 8000f00:	b2db      	uxtb	r3, r3
 8000f02:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0D;  //en=1, rs=0
 8000f04:	7bbb      	ldrb	r3, [r7, #14]
 8000f06:	f043 030d 	orr.w	r3, r3, #13
 8000f0a:	b2db      	uxtb	r3, r3
 8000f0c:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x09;  //en=0, rs=0
 8000f0e:	7bbb      	ldrb	r3, [r7, #14]
 8000f10:	f043 0309 	orr.w	r3, r3, #9
 8000f14:	b2db      	uxtb	r3, r3
 8000f16:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 8000f18:	f107 0208 	add.w	r2, r7, #8
 8000f1c:	2364      	movs	r3, #100	; 0x64
 8000f1e:	9300      	str	r3, [sp, #0]
 8000f20:	2304      	movs	r3, #4
 8000f22:	214e      	movs	r1, #78	; 0x4e
 8000f24:	4803      	ldr	r0, [pc, #12]	; (8000f34 <lcd_send_data+0x5c>)
 8000f26:	f001 fd65 	bl	80029f4 <HAL_I2C_Master_Transmit>
}
 8000f2a:	bf00      	nop
 8000f2c:	3710      	adds	r7, #16
 8000f2e:	46bd      	mov	sp, r7
 8000f30:	bd80      	pop	{r7, pc}
 8000f32:	bf00      	nop
 8000f34:	2000022c 	.word	0x2000022c

08000f38 <lcd_init>:

void lcd_init ()
{
 8000f38:	b580      	push	{r7, lr}
 8000f3a:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x33);
 8000f3c:	2033      	movs	r0, #51	; 0x33
 8000f3e:	f7ff ff9b 	bl	8000e78 <lcd_send_cmd>
	lcd_send_cmd (0x32);
 8000f42:	2032      	movs	r0, #50	; 0x32
 8000f44:	f7ff ff98 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f48:	2032      	movs	r0, #50	; 0x32
 8000f4a:	f001 f891 	bl	8002070 <HAL_Delay>
	lcd_send_cmd (0x28); /* start to set LCD function (4-bit mode) */
 8000f4e:	2028      	movs	r0, #40	; 0x28
 8000f50:	f7ff ff92 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f54:	2032      	movs	r0, #50	; 0x32
 8000f56:	f001 f88b 	bl	8002070 <HAL_Delay>
	lcd_send_cmd (0x01); /* clear display */
 8000f5a:	2001      	movs	r0, #1
 8000f5c:	f7ff ff8c 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f60:	2032      	movs	r0, #50	; 0x32
 8000f62:	f001 f885 	bl	8002070 <HAL_Delay>
	lcd_send_cmd (0x06); /* set entry mode */
 8000f66:	2006      	movs	r0, #6
 8000f68:	f7ff ff86 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f6c:	2032      	movs	r0, #50	; 0x32
 8000f6e:	f001 f87f 	bl	8002070 <HAL_Delay>
	lcd_send_cmd (0x0c); /* set display to on */	
 8000f72:	200c      	movs	r0, #12
 8000f74:	f7ff ff80 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f78:	2032      	movs	r0, #50	; 0x32
 8000f7a:	f001 f879 	bl	8002070 <HAL_Delay>
	lcd_send_cmd (0x02); /* move cursor to home and set data address to 0 */
 8000f7e:	2002      	movs	r0, #2
 8000f80:	f7ff ff7a 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f84:	2032      	movs	r0, #50	; 0x32
 8000f86:	f001 f873 	bl	8002070 <HAL_Delay>
	lcd_send_cmd (0x80);
 8000f8a:	2080      	movs	r0, #128	; 0x80
 8000f8c:	f7ff ff74 	bl	8000e78 <lcd_send_cmd>
}
 8000f90:	bf00      	nop
 8000f92:	bd80      	pop	{r7, pc}

08000f94 <lcd_send_string>:

void lcd_send_string (char *str)
{
 8000f94:	b580      	push	{r7, lr}
 8000f96:	b082      	sub	sp, #8
 8000f98:	af00      	add	r7, sp, #0
 8000f9a:	6078      	str	r0, [r7, #4]
	while (*str) lcd_send_data (*str++);
 8000f9c:	e006      	b.n	8000fac <lcd_send_string+0x18>
 8000f9e:	687b      	ldr	r3, [r7, #4]
 8000fa0:	1c5a      	adds	r2, r3, #1
 8000fa2:	607a      	str	r2, [r7, #4]
 8000fa4:	781b      	ldrb	r3, [r3, #0]
 8000fa6:	4618      	mov	r0, r3
 8000fa8:	f7ff ff96 	bl	8000ed8 <lcd_send_data>
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	781b      	ldrb	r3, [r3, #0]
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d1f4      	bne.n	8000f9e <lcd_send_string+0xa>
}
 8000fb4:	bf00      	nop
 8000fb6:	bf00      	nop
 8000fb8:	3708      	adds	r7, #8
 8000fba:	46bd      	mov	sp, r7
 8000fbc:	bd80      	pop	{r7, pc}

08000fbe <lcd_clear_display>:

void lcd_clear_display ()
{
 8000fbe:	b580      	push	{r7, lr}
 8000fc0:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x01); //clear display
 8000fc2:	2001      	movs	r0, #1
 8000fc4:	f7ff ff58 	bl	8000e78 <lcd_send_cmd>
}
 8000fc8:	bf00      	nop
 8000fca:	bd80      	pop	{r7, pc}

08000fcc <lcd_goto_XY>:

void lcd_goto_XY (int row, int col)
{
 8000fcc:	b580      	push	{r7, lr}
 8000fce:	b084      	sub	sp, #16
 8000fd0:	af00      	add	r7, sp, #0
 8000fd2:	6078      	str	r0, [r7, #4]
 8000fd4:	6039      	str	r1, [r7, #0]
	uint8_t pos_Addr;
	if(row == 0)
 8000fd6:	687b      	ldr	r3, [r7, #4]
 8000fd8:	2b00      	cmp	r3, #0
 8000fda:	d104      	bne.n	8000fe6 <lcd_goto_XY+0x1a>
	{
		pos_Addr = 0x80 + col;
 8000fdc:	683b      	ldr	r3, [r7, #0]
 8000fde:	b2db      	uxtb	r3, r3
 8000fe0:	3b80      	subs	r3, #128	; 0x80
 8000fe2:	73fb      	strb	r3, [r7, #15]
 8000fe4:	e003      	b.n	8000fee <lcd_goto_XY+0x22>
	}
	else
	{
		pos_Addr = 0xC0 + col;
 8000fe6:	683b      	ldr	r3, [r7, #0]
 8000fe8:	b2db      	uxtb	r3, r3
 8000fea:	3b40      	subs	r3, #64	; 0x40
 8000fec:	73fb      	strb	r3, [r7, #15]
	}
	lcd_send_cmd(pos_Addr);
 8000fee:	7bfb      	ldrb	r3, [r7, #15]
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	f7ff ff41 	bl	8000e78 <lcd_send_cmd>
}
 8000ff6:	bf00      	nop
 8000ff8:	3710      	adds	r7, #16
 8000ffa:	46bd      	mov	sp, r7
 8000ffc:	bd80      	pop	{r7, pc}
	...

08001000 <lcd_greeting>:

void lcd_greeting (){
 8001000:	b580      	push	{r7, lr}
 8001002:	af00      	add	r7, sp, #0
	  lcd_goto_XY(0, 0);
 8001004:	2100      	movs	r1, #0
 8001006:	2000      	movs	r0, #0
 8001008:	f7ff ffe0 	bl	8000fcc <lcd_goto_XY>
	  lcd_send_string("System Boot Done");
 800100c:	4805      	ldr	r0, [pc, #20]	; (8001024 <lcd_greeting+0x24>)
 800100e:	f7ff ffc1 	bl	8000f94 <lcd_send_string>
	  lcd_goto_XY(1, 0);
 8001012:	2100      	movs	r1, #0
 8001014:	2001      	movs	r0, #1
 8001016:	f7ff ffd9 	bl	8000fcc <lcd_goto_XY>
	  lcd_send_string("Waiting...");
 800101a:	4803      	ldr	r0, [pc, #12]	; (8001028 <lcd_greeting+0x28>)
 800101c:	f7ff ffba 	bl	8000f94 <lcd_send_string>
}
 8001020:	bf00      	nop
 8001022:	bd80      	pop	{r7, pc}
 8001024:	080084d8 	.word	0x080084d8
 8001028:	080084ec 	.word	0x080084ec

0800102c <lcd_show_value>:

void lcd_show_value(){
 800102c:	b580      	push	{r7, lr}
 800102e:	af00      	add	r7, sp, #0
	  lcd_goto_XY(0, 0);
 8001030:	2100      	movs	r1, #0
 8001032:	2000      	movs	r0, #0
 8001034:	f7ff ffca 	bl	8000fcc <lcd_goto_XY>
	  lcd_send_string(humid);
 8001038:	4805      	ldr	r0, [pc, #20]	; (8001050 <lcd_show_value+0x24>)
 800103a:	f7ff ffab 	bl	8000f94 <lcd_send_string>
	  lcd_goto_XY(1, 0);
 800103e:	2100      	movs	r1, #0
 8001040:	2001      	movs	r0, #1
 8001042:	f7ff ffc3 	bl	8000fcc <lcd_goto_XY>
	  lcd_send_string(temp);
 8001046:	4803      	ldr	r0, [pc, #12]	; (8001054 <lcd_show_value+0x28>)
 8001048:	f7ff ffa4 	bl	8000f94 <lcd_send_string>
}
 800104c:	bf00      	nop
 800104e:	bd80      	pop	{r7, pc}
 8001050:	20000218 	.word	0x20000218
 8001054:	20000204 	.word	0x20000204

08001058 <turnLedOn>:
 *      Author: acer
 */

#include "led_display.h"

void turnLedOn(){
 8001058:	b580      	push	{r7, lr}
 800105a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 800105c:	2200      	movs	r2, #0
 800105e:	2102      	movs	r1, #2
 8001060:	4802      	ldr	r0, [pc, #8]	; (800106c <turnLedOn+0x14>)
 8001062:	f001 fb6b 	bl	800273c <HAL_GPIO_WritePin>
}
 8001066:	bf00      	nop
 8001068:	bd80      	pop	{r7, pc}
 800106a:	bf00      	nop
 800106c:	40010800 	.word	0x40010800

08001070 <turnLedOff>:

void turnLedOff(){
 8001070:	b580      	push	{r7, lr}
 8001072:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 8001074:	2201      	movs	r2, #1
 8001076:	2102      	movs	r1, #2
 8001078:	4802      	ldr	r0, [pc, #8]	; (8001084 <turnLedOff+0x14>)
 800107a:	f001 fb5f 	bl	800273c <HAL_GPIO_WritePin>
}
 800107e:	bf00      	nop
 8001080:	bd80      	pop	{r7, pc}
 8001082:	bf00      	nop
 8001084:	40010800 	.word	0x40010800

08001088 <turnOBLedOn>:

void toggleLed(){
	HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
}

void turnOBLedOn(){
 8001088:	b580      	push	{r7, lr}
 800108a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(OB_LED_GPIO_Port, OB_LED_Pin, SET);
 800108c:	2201      	movs	r2, #1
 800108e:	2120      	movs	r1, #32
 8001090:	4802      	ldr	r0, [pc, #8]	; (800109c <turnOBLedOn+0x14>)
 8001092:	f001 fb53 	bl	800273c <HAL_GPIO_WritePin>
}
 8001096:	bf00      	nop
 8001098:	bd80      	pop	{r7, pc}
 800109a:	bf00      	nop
 800109c:	40010800 	.word	0x40010800

080010a0 <turnOBLedOff>:

void turnOBLedOff(){
 80010a0:	b580      	push	{r7, lr}
 80010a2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(OB_LED_GPIO_Port, OB_LED_Pin, RESET);
 80010a4:	2200      	movs	r2, #0
 80010a6:	2120      	movs	r1, #32
 80010a8:	4802      	ldr	r0, [pc, #8]	; (80010b4 <turnOBLedOff+0x14>)
 80010aa:	f001 fb47 	bl	800273c <HAL_GPIO_WritePin>
}
 80010ae:	bf00      	nop
 80010b0:	bd80      	pop	{r7, pc}
 80010b2:	bf00      	nop
 80010b4:	40010800 	.word	0x40010800

080010b8 <HAL_UART_RxCpltCallback>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 80010b8:	b580      	push	{r7, lr}
 80010ba:	b082      	sub	sp, #8
 80010bc:	af00      	add	r7, sp, #0
 80010be:	6078      	str	r0, [r7, #4]
	if (huart->Instance == USART2){
 80010c0:	687b      	ldr	r3, [r7, #4]
 80010c2:	681b      	ldr	r3, [r3, #0]
 80010c4:	4a12      	ldr	r2, [pc, #72]	; (8001110 <HAL_UART_RxCpltCallback+0x58>)
 80010c6:	4293      	cmp	r3, r2
 80010c8:	d11d      	bne.n	8001106 <HAL_UART_RxCpltCallback+0x4e>
//		HAL_UART_Transmit(&huart2, &buffer_byte, 1, 500);
		buffer[index_buffer] = buffer_byte;
 80010ca:	4b12      	ldr	r3, [pc, #72]	; (8001114 <HAL_UART_RxCpltCallback+0x5c>)
 80010cc:	781b      	ldrb	r3, [r3, #0]
 80010ce:	461a      	mov	r2, r3
 80010d0:	4b11      	ldr	r3, [pc, #68]	; (8001118 <HAL_UART_RxCpltCallback+0x60>)
 80010d2:	7819      	ldrb	r1, [r3, #0]
 80010d4:	4b11      	ldr	r3, [pc, #68]	; (800111c <HAL_UART_RxCpltCallback+0x64>)
 80010d6:	5499      	strb	r1, [r3, r2]
		index_buffer++;
 80010d8:	4b0e      	ldr	r3, [pc, #56]	; (8001114 <HAL_UART_RxCpltCallback+0x5c>)
 80010da:	781b      	ldrb	r3, [r3, #0]
 80010dc:	3301      	adds	r3, #1
 80010de:	b2da      	uxtb	r2, r3
 80010e0:	4b0c      	ldr	r3, [pc, #48]	; (8001114 <HAL_UART_RxCpltCallback+0x5c>)
 80010e2:	701a      	strb	r2, [r3, #0]
		if (index_buffer == MAX_BUFFER_SIZE){
 80010e4:	4b0b      	ldr	r3, [pc, #44]	; (8001114 <HAL_UART_RxCpltCallback+0x5c>)
 80010e6:	781b      	ldrb	r3, [r3, #0]
 80010e8:	2b1e      	cmp	r3, #30
 80010ea:	d104      	bne.n	80010f6 <HAL_UART_RxCpltCallback+0x3e>
			index_buffer = 0;
 80010ec:	4b09      	ldr	r3, [pc, #36]	; (8001114 <HAL_UART_RxCpltCallback+0x5c>)
 80010ee:	2200      	movs	r2, #0
 80010f0:	701a      	strb	r2, [r3, #0]
			rst_buffer();
 80010f2:	f000 fcbf 	bl	8001a74 <rst_buffer>
		}
		buffer_flag = 1;
 80010f6:	4b0a      	ldr	r3, [pc, #40]	; (8001120 <HAL_UART_RxCpltCallback+0x68>)
 80010f8:	2201      	movs	r2, #1
 80010fa:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(&huart2, &buffer_byte, 1);
 80010fc:	2201      	movs	r2, #1
 80010fe:	4906      	ldr	r1, [pc, #24]	; (8001118 <HAL_UART_RxCpltCallback+0x60>)
 8001100:	4808      	ldr	r0, [pc, #32]	; (8001124 <HAL_UART_RxCpltCallback+0x6c>)
 8001102:	f003 fd22 	bl	8004b4a <HAL_UART_Receive_IT>
	}
}
 8001106:	bf00      	nop
 8001108:	3708      	adds	r7, #8
 800110a:	46bd      	mov	sp, r7
 800110c:	bd80      	pop	{r7, pc}
 800110e:	bf00      	nop
 8001110:	40004400 	.word	0x40004400
 8001114:	200006a2 	.word	0x200006a2
 8001118:	20000680 	.word	0x20000680
 800111c:	20000684 	.word	0x20000684
 8001120:	200006a3 	.word	0x200006a3
 8001124:	200002c8 	.word	0x200002c8

08001128 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001128:	b580      	push	{r7, lr}
 800112a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800112c:	f000 ff3e 	bl	8001fac <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001130:	f000 f83e 	bl	80011b0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001134:	f000 f926 	bl	8001384 <MX_GPIO_Init>
  MX_I2C1_Init();
 8001138:	f000 f880 	bl	800123c <MX_I2C1_Init>
  MX_TIM2_Init();
 800113c:	f000 f8ac 	bl	8001298 <MX_TIM2_Init>
  MX_USART2_UART_Init();
 8001140:	f000 f8f6 	bl	8001330 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8001144:	4815      	ldr	r0, [pc, #84]	; (800119c <main+0x74>)
 8001146:	f003 f877 	bl	8004238 <HAL_TIM_Base_Start_IT>
  HAL_UART_Receive_IT(&huart2, &buffer_byte, 1);
 800114a:	2201      	movs	r2, #1
 800114c:	4914      	ldr	r1, [pc, #80]	; (80011a0 <main+0x78>)
 800114e:	4815      	ldr	r0, [pc, #84]	; (80011a4 <main+0x7c>)
 8001150:	f003 fcfb 	bl	8004b4a <HAL_UART_Receive_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  //Scan the address of I2C device
  Scan_Addr();
 8001154:	f000 fe38 	bl	8001dc8 <Scan_Addr>
  //MCU & FIRWARE Info
  Mcu_info();
 8001158:	f000 fed0 	bl	8001efc <Mcu_info>
  //Initialization for LCD
  lcd_clear_display();
 800115c:	f7ff ff2f 	bl	8000fbe <lcd_clear_display>
  lcd_init();
 8001160:	f7ff feea 	bl	8000f38 <lcd_init>
  lcd_greeting();
 8001164:	f7ff ff4c 	bl	8001000 <lcd_greeting>
  //Initialization for DHT-20
  dht20_init();
 8001168:	f7ff fc8e 	bl	8000a88 <dht20_init>
  setTimer1(300);
 800116c:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8001170:	f000 f97c 	bl	800146c <setTimer1>
//  SCH_Add_Task(intercep_UartCmd, 0, 1);
//  SCH_Add_Task(uart_control_fsm, 100, 1);
  while (1)
  {
	  //Using timer to synchronize
	  if (buffer_flag == 1){
 8001174:	4b0c      	ldr	r3, [pc, #48]	; (80011a8 <main+0x80>)
 8001176:	781b      	ldrb	r3, [r3, #0]
 8001178:	2b01      	cmp	r3, #1
 800117a:	d104      	bne.n	8001186 <main+0x5e>
		  cmd_parser_fsm();
 800117c:	f000 fcc6 	bl	8001b0c <cmd_parser_fsm>
		  buffer_flag = 0;
 8001180:	4b09      	ldr	r3, [pc, #36]	; (80011a8 <main+0x80>)
 8001182:	2200      	movs	r2, #0
 8001184:	701a      	strb	r2, [r3, #0]
	  }
	  if(timer1_flag == 1){
 8001186:	4b09      	ldr	r3, [pc, #36]	; (80011ac <main+0x84>)
 8001188:	681b      	ldr	r3, [r3, #0]
 800118a:	2b01      	cmp	r3, #1
 800118c:	d1f2      	bne.n	8001174 <main+0x4c>
		  setTimer1(1);
 800118e:	2001      	movs	r0, #1
 8001190:	f000 f96c 	bl	800146c <setTimer1>
		  uart_control_fsm();
 8001194:	f000 fd6e 	bl	8001c74 <uart_control_fsm>
	  if (buffer_flag == 1){
 8001198:	e7ec      	b.n	8001174 <main+0x4c>
 800119a:	bf00      	nop
 800119c:	20000280 	.word	0x20000280
 80011a0:	20000680 	.word	0x20000680
 80011a4:	200002c8 	.word	0x200002c8
 80011a8:	200006a3 	.word	0x200006a3
 80011ac:	20000630 	.word	0x20000630

080011b0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80011b0:	b580      	push	{r7, lr}
 80011b2:	b090      	sub	sp, #64	; 0x40
 80011b4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80011b6:	f107 0318 	add.w	r3, r7, #24
 80011ba:	2228      	movs	r2, #40	; 0x28
 80011bc:	2100      	movs	r1, #0
 80011be:	4618      	mov	r0, r3
 80011c0:	f004 f94a 	bl	8005458 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80011c4:	1d3b      	adds	r3, r7, #4
 80011c6:	2200      	movs	r2, #0
 80011c8:	601a      	str	r2, [r3, #0]
 80011ca:	605a      	str	r2, [r3, #4]
 80011cc:	609a      	str	r2, [r3, #8]
 80011ce:	60da      	str	r2, [r3, #12]
 80011d0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80011d2:	2301      	movs	r3, #1
 80011d4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80011d6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80011da:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80011dc:	2300      	movs	r3, #0
 80011de:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011e0:	2301      	movs	r3, #1
 80011e2:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80011e4:	2302      	movs	r3, #2
 80011e6:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80011e8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80011ec:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80011ee:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 80011f2:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011f4:	f107 0318 	add.w	r3, r7, #24
 80011f8:	4618      	mov	r0, r3
 80011fa:	f002 fbb3 	bl	8003964 <HAL_RCC_OscConfig>
 80011fe:	4603      	mov	r3, r0
 8001200:	2b00      	cmp	r3, #0
 8001202:	d001      	beq.n	8001208 <SystemClock_Config+0x58>
  {
    Error_Handler();
 8001204:	f000 f914 	bl	8001430 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001208:	230f      	movs	r3, #15
 800120a:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800120c:	2302      	movs	r3, #2
 800120e:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001210:	2300      	movs	r3, #0
 8001212:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001214:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001218:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800121a:	2300      	movs	r3, #0
 800121c:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 800121e:	1d3b      	adds	r3, r7, #4
 8001220:	2102      	movs	r1, #2
 8001222:	4618      	mov	r0, r3
 8001224:	f002 fe20 	bl	8003e68 <HAL_RCC_ClockConfig>
 8001228:	4603      	mov	r3, r0
 800122a:	2b00      	cmp	r3, #0
 800122c:	d001      	beq.n	8001232 <SystemClock_Config+0x82>
  {
    Error_Handler();
 800122e:	f000 f8ff 	bl	8001430 <Error_Handler>
  }
}
 8001232:	bf00      	nop
 8001234:	3740      	adds	r7, #64	; 0x40
 8001236:	46bd      	mov	sp, r7
 8001238:	bd80      	pop	{r7, pc}
	...

0800123c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 800123c:	b580      	push	{r7, lr}
 800123e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001240:	4b12      	ldr	r3, [pc, #72]	; (800128c <MX_I2C1_Init+0x50>)
 8001242:	4a13      	ldr	r2, [pc, #76]	; (8001290 <MX_I2C1_Init+0x54>)
 8001244:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8001246:	4b11      	ldr	r3, [pc, #68]	; (800128c <MX_I2C1_Init+0x50>)
 8001248:	4a12      	ldr	r2, [pc, #72]	; (8001294 <MX_I2C1_Init+0x58>)
 800124a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 800124c:	4b0f      	ldr	r3, [pc, #60]	; (800128c <MX_I2C1_Init+0x50>)
 800124e:	2200      	movs	r2, #0
 8001250:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001252:	4b0e      	ldr	r3, [pc, #56]	; (800128c <MX_I2C1_Init+0x50>)
 8001254:	2200      	movs	r2, #0
 8001256:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001258:	4b0c      	ldr	r3, [pc, #48]	; (800128c <MX_I2C1_Init+0x50>)
 800125a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800125e:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001260:	4b0a      	ldr	r3, [pc, #40]	; (800128c <MX_I2C1_Init+0x50>)
 8001262:	2200      	movs	r2, #0
 8001264:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001266:	4b09      	ldr	r3, [pc, #36]	; (800128c <MX_I2C1_Init+0x50>)
 8001268:	2200      	movs	r2, #0
 800126a:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800126c:	4b07      	ldr	r3, [pc, #28]	; (800128c <MX_I2C1_Init+0x50>)
 800126e:	2200      	movs	r2, #0
 8001270:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001272:	4b06      	ldr	r3, [pc, #24]	; (800128c <MX_I2C1_Init+0x50>)
 8001274:	2200      	movs	r2, #0
 8001276:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001278:	4804      	ldr	r0, [pc, #16]	; (800128c <MX_I2C1_Init+0x50>)
 800127a:	f001 fa77 	bl	800276c <HAL_I2C_Init>
 800127e:	4603      	mov	r3, r0
 8001280:	2b00      	cmp	r3, #0
 8001282:	d001      	beq.n	8001288 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001284:	f000 f8d4 	bl	8001430 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001288:	bf00      	nop
 800128a:	bd80      	pop	{r7, pc}
 800128c:	2000022c 	.word	0x2000022c
 8001290:	40005400 	.word	0x40005400
 8001294:	000186a0 	.word	0x000186a0

08001298 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001298:	b580      	push	{r7, lr}
 800129a:	b086      	sub	sp, #24
 800129c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800129e:	f107 0308 	add.w	r3, r7, #8
 80012a2:	2200      	movs	r2, #0
 80012a4:	601a      	str	r2, [r3, #0]
 80012a6:	605a      	str	r2, [r3, #4]
 80012a8:	609a      	str	r2, [r3, #8]
 80012aa:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80012ac:	463b      	mov	r3, r7
 80012ae:	2200      	movs	r2, #0
 80012b0:	601a      	str	r2, [r3, #0]
 80012b2:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80012b4:	4b1d      	ldr	r3, [pc, #116]	; (800132c <MX_TIM2_Init+0x94>)
 80012b6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80012ba:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7199;
 80012bc:	4b1b      	ldr	r3, [pc, #108]	; (800132c <MX_TIM2_Init+0x94>)
 80012be:	f641 421f 	movw	r2, #7199	; 0x1c1f
 80012c2:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80012c4:	4b19      	ldr	r3, [pc, #100]	; (800132c <MX_TIM2_Init+0x94>)
 80012c6:	2200      	movs	r2, #0
 80012c8:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 99;
 80012ca:	4b18      	ldr	r3, [pc, #96]	; (800132c <MX_TIM2_Init+0x94>)
 80012cc:	2263      	movs	r2, #99	; 0x63
 80012ce:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80012d0:	4b16      	ldr	r3, [pc, #88]	; (800132c <MX_TIM2_Init+0x94>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80012d6:	4b15      	ldr	r3, [pc, #84]	; (800132c <MX_TIM2_Init+0x94>)
 80012d8:	2200      	movs	r2, #0
 80012da:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80012dc:	4813      	ldr	r0, [pc, #76]	; (800132c <MX_TIM2_Init+0x94>)
 80012de:	f002 ff5b 	bl	8004198 <HAL_TIM_Base_Init>
 80012e2:	4603      	mov	r3, r0
 80012e4:	2b00      	cmp	r3, #0
 80012e6:	d001      	beq.n	80012ec <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80012e8:	f000 f8a2 	bl	8001430 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80012ec:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80012f0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80012f2:	f107 0308 	add.w	r3, r7, #8
 80012f6:	4619      	mov	r1, r3
 80012f8:	480c      	ldr	r0, [pc, #48]	; (800132c <MX_TIM2_Init+0x94>)
 80012fa:	f003 f8f7 	bl	80044ec <HAL_TIM_ConfigClockSource>
 80012fe:	4603      	mov	r3, r0
 8001300:	2b00      	cmp	r3, #0
 8001302:	d001      	beq.n	8001308 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 8001304:	f000 f894 	bl	8001430 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001308:	2300      	movs	r3, #0
 800130a:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800130c:	2300      	movs	r3, #0
 800130e:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001310:	463b      	mov	r3, r7
 8001312:	4619      	mov	r1, r3
 8001314:	4805      	ldr	r0, [pc, #20]	; (800132c <MX_TIM2_Init+0x94>)
 8001316:	f003 fac9 	bl	80048ac <HAL_TIMEx_MasterConfigSynchronization>
 800131a:	4603      	mov	r3, r0
 800131c:	2b00      	cmp	r3, #0
 800131e:	d001      	beq.n	8001324 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8001320:	f000 f886 	bl	8001430 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8001324:	bf00      	nop
 8001326:	3718      	adds	r7, #24
 8001328:	46bd      	mov	sp, r7
 800132a:	bd80      	pop	{r7, pc}
 800132c:	20000280 	.word	0x20000280

08001330 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001330:	b580      	push	{r7, lr}
 8001332:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001334:	4b11      	ldr	r3, [pc, #68]	; (800137c <MX_USART2_UART_Init+0x4c>)
 8001336:	4a12      	ldr	r2, [pc, #72]	; (8001380 <MX_USART2_UART_Init+0x50>)
 8001338:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800133a:	4b10      	ldr	r3, [pc, #64]	; (800137c <MX_USART2_UART_Init+0x4c>)
 800133c:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8001340:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001342:	4b0e      	ldr	r3, [pc, #56]	; (800137c <MX_USART2_UART_Init+0x4c>)
 8001344:	2200      	movs	r2, #0
 8001346:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001348:	4b0c      	ldr	r3, [pc, #48]	; (800137c <MX_USART2_UART_Init+0x4c>)
 800134a:	2200      	movs	r2, #0
 800134c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800134e:	4b0b      	ldr	r3, [pc, #44]	; (800137c <MX_USART2_UART_Init+0x4c>)
 8001350:	2200      	movs	r2, #0
 8001352:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001354:	4b09      	ldr	r3, [pc, #36]	; (800137c <MX_USART2_UART_Init+0x4c>)
 8001356:	220c      	movs	r2, #12
 8001358:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800135a:	4b08      	ldr	r3, [pc, #32]	; (800137c <MX_USART2_UART_Init+0x4c>)
 800135c:	2200      	movs	r2, #0
 800135e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001360:	4b06      	ldr	r3, [pc, #24]	; (800137c <MX_USART2_UART_Init+0x4c>)
 8001362:	2200      	movs	r2, #0
 8001364:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001366:	4805      	ldr	r0, [pc, #20]	; (800137c <MX_USART2_UART_Init+0x4c>)
 8001368:	f003 fb10 	bl	800498c <HAL_UART_Init>
 800136c:	4603      	mov	r3, r0
 800136e:	2b00      	cmp	r3, #0
 8001370:	d001      	beq.n	8001376 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8001372:	f000 f85d 	bl	8001430 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001376:	bf00      	nop
 8001378:	bd80      	pop	{r7, pc}
 800137a:	bf00      	nop
 800137c:	200002c8 	.word	0x200002c8
 8001380:	40004400 	.word	0x40004400

08001384 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001384:	b580      	push	{r7, lr}
 8001386:	b088      	sub	sp, #32
 8001388:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800138a:	f107 0310 	add.w	r3, r7, #16
 800138e:	2200      	movs	r2, #0
 8001390:	601a      	str	r2, [r3, #0]
 8001392:	605a      	str	r2, [r3, #4]
 8001394:	609a      	str	r2, [r3, #8]
 8001396:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001398:	4b1d      	ldr	r3, [pc, #116]	; (8001410 <MX_GPIO_Init+0x8c>)
 800139a:	699b      	ldr	r3, [r3, #24]
 800139c:	4a1c      	ldr	r2, [pc, #112]	; (8001410 <MX_GPIO_Init+0x8c>)
 800139e:	f043 0320 	orr.w	r3, r3, #32
 80013a2:	6193      	str	r3, [r2, #24]
 80013a4:	4b1a      	ldr	r3, [pc, #104]	; (8001410 <MX_GPIO_Init+0x8c>)
 80013a6:	699b      	ldr	r3, [r3, #24]
 80013a8:	f003 0320 	and.w	r3, r3, #32
 80013ac:	60fb      	str	r3, [r7, #12]
 80013ae:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80013b0:	4b17      	ldr	r3, [pc, #92]	; (8001410 <MX_GPIO_Init+0x8c>)
 80013b2:	699b      	ldr	r3, [r3, #24]
 80013b4:	4a16      	ldr	r2, [pc, #88]	; (8001410 <MX_GPIO_Init+0x8c>)
 80013b6:	f043 0304 	orr.w	r3, r3, #4
 80013ba:	6193      	str	r3, [r2, #24]
 80013bc:	4b14      	ldr	r3, [pc, #80]	; (8001410 <MX_GPIO_Init+0x8c>)
 80013be:	699b      	ldr	r3, [r3, #24]
 80013c0:	f003 0304 	and.w	r3, r3, #4
 80013c4:	60bb      	str	r3, [r7, #8]
 80013c6:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80013c8:	4b11      	ldr	r3, [pc, #68]	; (8001410 <MX_GPIO_Init+0x8c>)
 80013ca:	699b      	ldr	r3, [r3, #24]
 80013cc:	4a10      	ldr	r2, [pc, #64]	; (8001410 <MX_GPIO_Init+0x8c>)
 80013ce:	f043 0308 	orr.w	r3, r3, #8
 80013d2:	6193      	str	r3, [r2, #24]
 80013d4:	4b0e      	ldr	r3, [pc, #56]	; (8001410 <MX_GPIO_Init+0x8c>)
 80013d6:	699b      	ldr	r3, [r3, #24]
 80013d8:	f003 0308 	and.w	r3, r3, #8
 80013dc:	607b      	str	r3, [r7, #4]
 80013de:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LED_Pin|OB_LED_Pin, GPIO_PIN_RESET);
 80013e0:	2200      	movs	r2, #0
 80013e2:	2122      	movs	r1, #34	; 0x22
 80013e4:	480b      	ldr	r0, [pc, #44]	; (8001414 <MX_GPIO_Init+0x90>)
 80013e6:	f001 f9a9 	bl	800273c <HAL_GPIO_WritePin>

  /*Configure GPIO pins : LED_Pin OB_LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin|OB_LED_Pin;
 80013ea:	2322      	movs	r3, #34	; 0x22
 80013ec:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013ee:	2301      	movs	r3, #1
 80013f0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013f2:	2300      	movs	r3, #0
 80013f4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013f6:	2302      	movs	r3, #2
 80013f8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80013fa:	f107 0310 	add.w	r3, r7, #16
 80013fe:	4619      	mov	r1, r3
 8001400:	4804      	ldr	r0, [pc, #16]	; (8001414 <MX_GPIO_Init+0x90>)
 8001402:	f001 f817 	bl	8002434 <HAL_GPIO_Init>

}
 8001406:	bf00      	nop
 8001408:	3720      	adds	r7, #32
 800140a:	46bd      	mov	sp, r7
 800140c:	bd80      	pop	{r7, pc}
 800140e:	bf00      	nop
 8001410:	40021000 	.word	0x40021000
 8001414:	40010800 	.word	0x40010800

08001418 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8001418:	b580      	push	{r7, lr}
 800141a:	b082      	sub	sp, #8
 800141c:	af00      	add	r7, sp, #0
 800141e:	6078      	str	r0, [r7, #4]
	timerRun();
 8001420:	f000 f860 	bl	80014e4 <timerRun>
	SCH_Update();
 8001424:	f000 f80a 	bl	800143c <SCH_Update>
}
 8001428:	bf00      	nop
 800142a:	3708      	adds	r7, #8
 800142c:	46bd      	mov	sp, r7
 800142e:	bd80      	pop	{r7, pc}

08001430 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001430:	b480      	push	{r7}
 8001432:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001434:	b672      	cpsid	i
}
 8001436:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001438:	e7fe      	b.n	8001438 <Error_Handler+0x8>
	...

0800143c <SCH_Update>:
			if (backup.Period > 0) SCH_Add_Task(backup.pTask, backup.Period, backup.Period);
		}
	}
}

void SCH_Update(void){
 800143c:	b480      	push	{r7}
 800143e:	af00      	add	r7, sp, #0
	if (SCH_tasks_G[0].Delay > 0) SCH_tasks_G[0].Delay--;
 8001440:	4b09      	ldr	r3, [pc, #36]	; (8001468 <SCH_Update+0x2c>)
 8001442:	685b      	ldr	r3, [r3, #4]
 8001444:	2b00      	cmp	r3, #0
 8001446:	d005      	beq.n	8001454 <SCH_Update+0x18>
 8001448:	4b07      	ldr	r3, [pc, #28]	; (8001468 <SCH_Update+0x2c>)
 800144a:	685b      	ldr	r3, [r3, #4]
 800144c:	3b01      	subs	r3, #1
 800144e:	4a06      	ldr	r2, [pc, #24]	; (8001468 <SCH_Update+0x2c>)
 8001450:	6053      	str	r3, [r2, #4]
	else SCH_tasks_G[0].RunMe++;
}
 8001452:	e005      	b.n	8001460 <SCH_Update+0x24>
	else SCH_tasks_G[0].RunMe++;
 8001454:	4b04      	ldr	r3, [pc, #16]	; (8001468 <SCH_Update+0x2c>)
 8001456:	7b1b      	ldrb	r3, [r3, #12]
 8001458:	3301      	adds	r3, #1
 800145a:	b2da      	uxtb	r2, r3
 800145c:	4b02      	ldr	r3, [pc, #8]	; (8001468 <SCH_Update+0x2c>)
 800145e:	731a      	strb	r2, [r3, #12]
}
 8001460:	bf00      	nop
 8001462:	46bd      	mov	sp, r7
 8001464:	bc80      	pop	{r7}
 8001466:	4770      	bx	lr
 8001468:	2000030c 	.word	0x2000030c

0800146c <setTimer1>:
int timer9_flag = 0;

int timer10_counter = 0;
int timer10_flag = 0;

void setTimer1(int duration){
 800146c:	b480      	push	{r7}
 800146e:	b083      	sub	sp, #12
 8001470:	af00      	add	r7, sp, #0
 8001472:	6078      	str	r0, [r7, #4]
	timer1_counter = duration;
 8001474:	4a05      	ldr	r2, [pc, #20]	; (800148c <setTimer1+0x20>)
 8001476:	687b      	ldr	r3, [r7, #4]
 8001478:	6013      	str	r3, [r2, #0]
	timer1_flag = 0;
 800147a:	4b05      	ldr	r3, [pc, #20]	; (8001490 <setTimer1+0x24>)
 800147c:	2200      	movs	r2, #0
 800147e:	601a      	str	r2, [r3, #0]
}
 8001480:	bf00      	nop
 8001482:	370c      	adds	r7, #12
 8001484:	46bd      	mov	sp, r7
 8001486:	bc80      	pop	{r7}
 8001488:	4770      	bx	lr
 800148a:	bf00      	nop
 800148c:	2000062c 	.word	0x2000062c
 8001490:	20000630 	.word	0x20000630

08001494 <setTimer2>:

void setTimer2(int duration){
 8001494:	b480      	push	{r7}
 8001496:	b083      	sub	sp, #12
 8001498:	af00      	add	r7, sp, #0
 800149a:	6078      	str	r0, [r7, #4]
	timer2_counter = duration;
 800149c:	4a05      	ldr	r2, [pc, #20]	; (80014b4 <setTimer2+0x20>)
 800149e:	687b      	ldr	r3, [r7, #4]
 80014a0:	6013      	str	r3, [r2, #0]
	timer2_flag = 0;
 80014a2:	4b05      	ldr	r3, [pc, #20]	; (80014b8 <setTimer2+0x24>)
 80014a4:	2200      	movs	r2, #0
 80014a6:	601a      	str	r2, [r3, #0]
}
 80014a8:	bf00      	nop
 80014aa:	370c      	adds	r7, #12
 80014ac:	46bd      	mov	sp, r7
 80014ae:	bc80      	pop	{r7}
 80014b0:	4770      	bx	lr
 80014b2:	bf00      	nop
 80014b4:	20000634 	.word	0x20000634
 80014b8:	20000638 	.word	0x20000638

080014bc <setTimer3>:

void setTimer3(int duration){
 80014bc:	b480      	push	{r7}
 80014be:	b083      	sub	sp, #12
 80014c0:	af00      	add	r7, sp, #0
 80014c2:	6078      	str	r0, [r7, #4]
	timer3_counter = duration;
 80014c4:	4a05      	ldr	r2, [pc, #20]	; (80014dc <setTimer3+0x20>)
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	6013      	str	r3, [r2, #0]
	timer3_flag = 0;
 80014ca:	4b05      	ldr	r3, [pc, #20]	; (80014e0 <setTimer3+0x24>)
 80014cc:	2200      	movs	r2, #0
 80014ce:	601a      	str	r2, [r3, #0]
}
 80014d0:	bf00      	nop
 80014d2:	370c      	adds	r7, #12
 80014d4:	46bd      	mov	sp, r7
 80014d6:	bc80      	pop	{r7}
 80014d8:	4770      	bx	lr
 80014da:	bf00      	nop
 80014dc:	2000063c 	.word	0x2000063c
 80014e0:	20000640 	.word	0x20000640

080014e4 <timerRun>:
void setTimer10(int duration){
	timer10_counter = duration;
	timer10_flag = 0;
}

void timerRun(){
 80014e4:	b480      	push	{r7}
 80014e6:	af00      	add	r7, sp, #0
	if(timer1_counter > 0){
 80014e8:	4b51      	ldr	r3, [pc, #324]	; (8001630 <timerRun+0x14c>)
 80014ea:	681b      	ldr	r3, [r3, #0]
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	dd0b      	ble.n	8001508 <timerRun+0x24>
		timer1_counter--;
 80014f0:	4b4f      	ldr	r3, [pc, #316]	; (8001630 <timerRun+0x14c>)
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	3b01      	subs	r3, #1
 80014f6:	4a4e      	ldr	r2, [pc, #312]	; (8001630 <timerRun+0x14c>)
 80014f8:	6013      	str	r3, [r2, #0]
		if(timer1_counter == 0){
 80014fa:	4b4d      	ldr	r3, [pc, #308]	; (8001630 <timerRun+0x14c>)
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	2b00      	cmp	r3, #0
 8001500:	d102      	bne.n	8001508 <timerRun+0x24>
			timer1_flag = 1;
 8001502:	4b4c      	ldr	r3, [pc, #304]	; (8001634 <timerRun+0x150>)
 8001504:	2201      	movs	r2, #1
 8001506:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer2_counter > 0){
 8001508:	4b4b      	ldr	r3, [pc, #300]	; (8001638 <timerRun+0x154>)
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	2b00      	cmp	r3, #0
 800150e:	dd0b      	ble.n	8001528 <timerRun+0x44>
		timer2_counter--;
 8001510:	4b49      	ldr	r3, [pc, #292]	; (8001638 <timerRun+0x154>)
 8001512:	681b      	ldr	r3, [r3, #0]
 8001514:	3b01      	subs	r3, #1
 8001516:	4a48      	ldr	r2, [pc, #288]	; (8001638 <timerRun+0x154>)
 8001518:	6013      	str	r3, [r2, #0]
		if(timer2_counter == 0){
 800151a:	4b47      	ldr	r3, [pc, #284]	; (8001638 <timerRun+0x154>)
 800151c:	681b      	ldr	r3, [r3, #0]
 800151e:	2b00      	cmp	r3, #0
 8001520:	d102      	bne.n	8001528 <timerRun+0x44>
			timer2_flag = 1;
 8001522:	4b46      	ldr	r3, [pc, #280]	; (800163c <timerRun+0x158>)
 8001524:	2201      	movs	r2, #1
 8001526:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer3_counter > 0){
 8001528:	4b45      	ldr	r3, [pc, #276]	; (8001640 <timerRun+0x15c>)
 800152a:	681b      	ldr	r3, [r3, #0]
 800152c:	2b00      	cmp	r3, #0
 800152e:	dd0b      	ble.n	8001548 <timerRun+0x64>
		timer3_counter--;
 8001530:	4b43      	ldr	r3, [pc, #268]	; (8001640 <timerRun+0x15c>)
 8001532:	681b      	ldr	r3, [r3, #0]
 8001534:	3b01      	subs	r3, #1
 8001536:	4a42      	ldr	r2, [pc, #264]	; (8001640 <timerRun+0x15c>)
 8001538:	6013      	str	r3, [r2, #0]
		if(timer3_counter == 0){
 800153a:	4b41      	ldr	r3, [pc, #260]	; (8001640 <timerRun+0x15c>)
 800153c:	681b      	ldr	r3, [r3, #0]
 800153e:	2b00      	cmp	r3, #0
 8001540:	d102      	bne.n	8001548 <timerRun+0x64>
			timer3_flag = 1;
 8001542:	4b40      	ldr	r3, [pc, #256]	; (8001644 <timerRun+0x160>)
 8001544:	2201      	movs	r2, #1
 8001546:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer4_counter > 0){
 8001548:	4b3f      	ldr	r3, [pc, #252]	; (8001648 <timerRun+0x164>)
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	2b00      	cmp	r3, #0
 800154e:	dd0b      	ble.n	8001568 <timerRun+0x84>
		timer4_counter--;
 8001550:	4b3d      	ldr	r3, [pc, #244]	; (8001648 <timerRun+0x164>)
 8001552:	681b      	ldr	r3, [r3, #0]
 8001554:	3b01      	subs	r3, #1
 8001556:	4a3c      	ldr	r2, [pc, #240]	; (8001648 <timerRun+0x164>)
 8001558:	6013      	str	r3, [r2, #0]
		if(timer4_counter == 0){
 800155a:	4b3b      	ldr	r3, [pc, #236]	; (8001648 <timerRun+0x164>)
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	2b00      	cmp	r3, #0
 8001560:	d102      	bne.n	8001568 <timerRun+0x84>
			timer4_flag = 1;
 8001562:	4b3a      	ldr	r3, [pc, #232]	; (800164c <timerRun+0x168>)
 8001564:	2201      	movs	r2, #1
 8001566:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer5_counter > 0){
 8001568:	4b39      	ldr	r3, [pc, #228]	; (8001650 <timerRun+0x16c>)
 800156a:	681b      	ldr	r3, [r3, #0]
 800156c:	2b00      	cmp	r3, #0
 800156e:	dd0b      	ble.n	8001588 <timerRun+0xa4>
		timer5_counter--;
 8001570:	4b37      	ldr	r3, [pc, #220]	; (8001650 <timerRun+0x16c>)
 8001572:	681b      	ldr	r3, [r3, #0]
 8001574:	3b01      	subs	r3, #1
 8001576:	4a36      	ldr	r2, [pc, #216]	; (8001650 <timerRun+0x16c>)
 8001578:	6013      	str	r3, [r2, #0]
		if(timer5_counter == 0){
 800157a:	4b35      	ldr	r3, [pc, #212]	; (8001650 <timerRun+0x16c>)
 800157c:	681b      	ldr	r3, [r3, #0]
 800157e:	2b00      	cmp	r3, #0
 8001580:	d102      	bne.n	8001588 <timerRun+0xa4>
			timer5_flag = 1;
 8001582:	4b34      	ldr	r3, [pc, #208]	; (8001654 <timerRun+0x170>)
 8001584:	2201      	movs	r2, #1
 8001586:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer6_counter > 0){
 8001588:	4b33      	ldr	r3, [pc, #204]	; (8001658 <timerRun+0x174>)
 800158a:	681b      	ldr	r3, [r3, #0]
 800158c:	2b00      	cmp	r3, #0
 800158e:	dd0b      	ble.n	80015a8 <timerRun+0xc4>
		timer6_counter--;
 8001590:	4b31      	ldr	r3, [pc, #196]	; (8001658 <timerRun+0x174>)
 8001592:	681b      	ldr	r3, [r3, #0]
 8001594:	3b01      	subs	r3, #1
 8001596:	4a30      	ldr	r2, [pc, #192]	; (8001658 <timerRun+0x174>)
 8001598:	6013      	str	r3, [r2, #0]
		if(timer6_counter == 0){
 800159a:	4b2f      	ldr	r3, [pc, #188]	; (8001658 <timerRun+0x174>)
 800159c:	681b      	ldr	r3, [r3, #0]
 800159e:	2b00      	cmp	r3, #0
 80015a0:	d102      	bne.n	80015a8 <timerRun+0xc4>
			timer6_flag = 1;
 80015a2:	4b2e      	ldr	r3, [pc, #184]	; (800165c <timerRun+0x178>)
 80015a4:	2201      	movs	r2, #1
 80015a6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer7_counter > 0){
 80015a8:	4b2d      	ldr	r3, [pc, #180]	; (8001660 <timerRun+0x17c>)
 80015aa:	681b      	ldr	r3, [r3, #0]
 80015ac:	2b00      	cmp	r3, #0
 80015ae:	dd0b      	ble.n	80015c8 <timerRun+0xe4>
		timer7_counter--;
 80015b0:	4b2b      	ldr	r3, [pc, #172]	; (8001660 <timerRun+0x17c>)
 80015b2:	681b      	ldr	r3, [r3, #0]
 80015b4:	3b01      	subs	r3, #1
 80015b6:	4a2a      	ldr	r2, [pc, #168]	; (8001660 <timerRun+0x17c>)
 80015b8:	6013      	str	r3, [r2, #0]
		if(timer7_counter == 0){
 80015ba:	4b29      	ldr	r3, [pc, #164]	; (8001660 <timerRun+0x17c>)
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	2b00      	cmp	r3, #0
 80015c0:	d102      	bne.n	80015c8 <timerRun+0xe4>
			timer7_flag = 1;
 80015c2:	4b28      	ldr	r3, [pc, #160]	; (8001664 <timerRun+0x180>)
 80015c4:	2201      	movs	r2, #1
 80015c6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer8_counter > 0){
 80015c8:	4b27      	ldr	r3, [pc, #156]	; (8001668 <timerRun+0x184>)
 80015ca:	681b      	ldr	r3, [r3, #0]
 80015cc:	2b00      	cmp	r3, #0
 80015ce:	dd0b      	ble.n	80015e8 <timerRun+0x104>
		timer8_counter--;
 80015d0:	4b25      	ldr	r3, [pc, #148]	; (8001668 <timerRun+0x184>)
 80015d2:	681b      	ldr	r3, [r3, #0]
 80015d4:	3b01      	subs	r3, #1
 80015d6:	4a24      	ldr	r2, [pc, #144]	; (8001668 <timerRun+0x184>)
 80015d8:	6013      	str	r3, [r2, #0]
		if(timer8_counter == 0){
 80015da:	4b23      	ldr	r3, [pc, #140]	; (8001668 <timerRun+0x184>)
 80015dc:	681b      	ldr	r3, [r3, #0]
 80015de:	2b00      	cmp	r3, #0
 80015e0:	d102      	bne.n	80015e8 <timerRun+0x104>
			timer8_flag = 1;
 80015e2:	4b22      	ldr	r3, [pc, #136]	; (800166c <timerRun+0x188>)
 80015e4:	2201      	movs	r2, #1
 80015e6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer9_counter > 0){
 80015e8:	4b21      	ldr	r3, [pc, #132]	; (8001670 <timerRun+0x18c>)
 80015ea:	681b      	ldr	r3, [r3, #0]
 80015ec:	2b00      	cmp	r3, #0
 80015ee:	dd0b      	ble.n	8001608 <timerRun+0x124>
		timer9_counter--;
 80015f0:	4b1f      	ldr	r3, [pc, #124]	; (8001670 <timerRun+0x18c>)
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	3b01      	subs	r3, #1
 80015f6:	4a1e      	ldr	r2, [pc, #120]	; (8001670 <timerRun+0x18c>)
 80015f8:	6013      	str	r3, [r2, #0]
		if(timer9_counter == 0){
 80015fa:	4b1d      	ldr	r3, [pc, #116]	; (8001670 <timerRun+0x18c>)
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	2b00      	cmp	r3, #0
 8001600:	d102      	bne.n	8001608 <timerRun+0x124>
			timer9_flag = 1;
 8001602:	4b1c      	ldr	r3, [pc, #112]	; (8001674 <timerRun+0x190>)
 8001604:	2201      	movs	r2, #1
 8001606:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer10_counter > 0){
 8001608:	4b1b      	ldr	r3, [pc, #108]	; (8001678 <timerRun+0x194>)
 800160a:	681b      	ldr	r3, [r3, #0]
 800160c:	2b00      	cmp	r3, #0
 800160e:	dd0b      	ble.n	8001628 <timerRun+0x144>
		timer10_counter--;
 8001610:	4b19      	ldr	r3, [pc, #100]	; (8001678 <timerRun+0x194>)
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	3b01      	subs	r3, #1
 8001616:	4a18      	ldr	r2, [pc, #96]	; (8001678 <timerRun+0x194>)
 8001618:	6013      	str	r3, [r2, #0]
		if(timer10_counter == 0){
 800161a:	4b17      	ldr	r3, [pc, #92]	; (8001678 <timerRun+0x194>)
 800161c:	681b      	ldr	r3, [r3, #0]
 800161e:	2b00      	cmp	r3, #0
 8001620:	d102      	bne.n	8001628 <timerRun+0x144>
			timer10_flag = 1;
 8001622:	4b16      	ldr	r3, [pc, #88]	; (800167c <timerRun+0x198>)
 8001624:	2201      	movs	r2, #1
 8001626:	601a      	str	r2, [r3, #0]
		}
	}
}
 8001628:	bf00      	nop
 800162a:	46bd      	mov	sp, r7
 800162c:	bc80      	pop	{r7}
 800162e:	4770      	bx	lr
 8001630:	2000062c 	.word	0x2000062c
 8001634:	20000630 	.word	0x20000630
 8001638:	20000634 	.word	0x20000634
 800163c:	20000638 	.word	0x20000638
 8001640:	2000063c 	.word	0x2000063c
 8001644:	20000640 	.word	0x20000640
 8001648:	20000644 	.word	0x20000644
 800164c:	20000648 	.word	0x20000648
 8001650:	2000064c 	.word	0x2000064c
 8001654:	20000650 	.word	0x20000650
 8001658:	20000654 	.word	0x20000654
 800165c:	20000658 	.word	0x20000658
 8001660:	2000065c 	.word	0x2000065c
 8001664:	20000660 	.word	0x20000660
 8001668:	20000664 	.word	0x20000664
 800166c:	20000668 	.word	0x20000668
 8001670:	2000066c 	.word	0x2000066c
 8001674:	20000670 	.word	0x20000670
 8001678:	20000674 	.word	0x20000674
 800167c:	20000678 	.word	0x20000678

08001680 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001680:	b480      	push	{r7}
 8001682:	b085      	sub	sp, #20
 8001684:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8001686:	4b15      	ldr	r3, [pc, #84]	; (80016dc <HAL_MspInit+0x5c>)
 8001688:	699b      	ldr	r3, [r3, #24]
 800168a:	4a14      	ldr	r2, [pc, #80]	; (80016dc <HAL_MspInit+0x5c>)
 800168c:	f043 0301 	orr.w	r3, r3, #1
 8001690:	6193      	str	r3, [r2, #24]
 8001692:	4b12      	ldr	r3, [pc, #72]	; (80016dc <HAL_MspInit+0x5c>)
 8001694:	699b      	ldr	r3, [r3, #24]
 8001696:	f003 0301 	and.w	r3, r3, #1
 800169a:	60bb      	str	r3, [r7, #8]
 800169c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 800169e:	4b0f      	ldr	r3, [pc, #60]	; (80016dc <HAL_MspInit+0x5c>)
 80016a0:	69db      	ldr	r3, [r3, #28]
 80016a2:	4a0e      	ldr	r2, [pc, #56]	; (80016dc <HAL_MspInit+0x5c>)
 80016a4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80016a8:	61d3      	str	r3, [r2, #28]
 80016aa:	4b0c      	ldr	r3, [pc, #48]	; (80016dc <HAL_MspInit+0x5c>)
 80016ac:	69db      	ldr	r3, [r3, #28]
 80016ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80016b2:	607b      	str	r3, [r7, #4]
 80016b4:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 80016b6:	4b0a      	ldr	r3, [pc, #40]	; (80016e0 <HAL_MspInit+0x60>)
 80016b8:	685b      	ldr	r3, [r3, #4]
 80016ba:	60fb      	str	r3, [r7, #12]
 80016bc:	68fb      	ldr	r3, [r7, #12]
 80016be:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 80016c2:	60fb      	str	r3, [r7, #12]
 80016c4:	68fb      	ldr	r3, [r7, #12]
 80016c6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80016ca:	60fb      	str	r3, [r7, #12]
 80016cc:	4a04      	ldr	r2, [pc, #16]	; (80016e0 <HAL_MspInit+0x60>)
 80016ce:	68fb      	ldr	r3, [r7, #12]
 80016d0:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80016d2:	bf00      	nop
 80016d4:	3714      	adds	r7, #20
 80016d6:	46bd      	mov	sp, r7
 80016d8:	bc80      	pop	{r7}
 80016da:	4770      	bx	lr
 80016dc:	40021000 	.word	0x40021000
 80016e0:	40010000 	.word	0x40010000

080016e4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80016e4:	b580      	push	{r7, lr}
 80016e6:	b08a      	sub	sp, #40	; 0x28
 80016e8:	af00      	add	r7, sp, #0
 80016ea:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016ec:	f107 0314 	add.w	r3, r7, #20
 80016f0:	2200      	movs	r2, #0
 80016f2:	601a      	str	r2, [r3, #0]
 80016f4:	605a      	str	r2, [r3, #4]
 80016f6:	609a      	str	r2, [r3, #8]
 80016f8:	60da      	str	r2, [r3, #12]
  if(hi2c->Instance==I2C1)
 80016fa:	687b      	ldr	r3, [r7, #4]
 80016fc:	681b      	ldr	r3, [r3, #0]
 80016fe:	4a1d      	ldr	r2, [pc, #116]	; (8001774 <HAL_I2C_MspInit+0x90>)
 8001700:	4293      	cmp	r3, r2
 8001702:	d132      	bne.n	800176a <HAL_I2C_MspInit+0x86>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001704:	4b1c      	ldr	r3, [pc, #112]	; (8001778 <HAL_I2C_MspInit+0x94>)
 8001706:	699b      	ldr	r3, [r3, #24]
 8001708:	4a1b      	ldr	r2, [pc, #108]	; (8001778 <HAL_I2C_MspInit+0x94>)
 800170a:	f043 0308 	orr.w	r3, r3, #8
 800170e:	6193      	str	r3, [r2, #24]
 8001710:	4b19      	ldr	r3, [pc, #100]	; (8001778 <HAL_I2C_MspInit+0x94>)
 8001712:	699b      	ldr	r3, [r3, #24]
 8001714:	f003 0308 	and.w	r3, r3, #8
 8001718:	613b      	str	r3, [r7, #16]
 800171a:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800171c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001720:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001722:	2312      	movs	r3, #18
 8001724:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001726:	2303      	movs	r3, #3
 8001728:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800172a:	f107 0314 	add.w	r3, r7, #20
 800172e:	4619      	mov	r1, r3
 8001730:	4812      	ldr	r0, [pc, #72]	; (800177c <HAL_I2C_MspInit+0x98>)
 8001732:	f000 fe7f 	bl	8002434 <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_I2C1_ENABLE();
 8001736:	4b12      	ldr	r3, [pc, #72]	; (8001780 <HAL_I2C_MspInit+0x9c>)
 8001738:	685b      	ldr	r3, [r3, #4]
 800173a:	627b      	str	r3, [r7, #36]	; 0x24
 800173c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800173e:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8001742:	627b      	str	r3, [r7, #36]	; 0x24
 8001744:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001746:	f043 0302 	orr.w	r3, r3, #2
 800174a:	627b      	str	r3, [r7, #36]	; 0x24
 800174c:	4a0c      	ldr	r2, [pc, #48]	; (8001780 <HAL_I2C_MspInit+0x9c>)
 800174e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001750:	6053      	str	r3, [r2, #4]

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001752:	4b09      	ldr	r3, [pc, #36]	; (8001778 <HAL_I2C_MspInit+0x94>)
 8001754:	69db      	ldr	r3, [r3, #28]
 8001756:	4a08      	ldr	r2, [pc, #32]	; (8001778 <HAL_I2C_MspInit+0x94>)
 8001758:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800175c:	61d3      	str	r3, [r2, #28]
 800175e:	4b06      	ldr	r3, [pc, #24]	; (8001778 <HAL_I2C_MspInit+0x94>)
 8001760:	69db      	ldr	r3, [r3, #28]
 8001762:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001766:	60fb      	str	r3, [r7, #12]
 8001768:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 800176a:	bf00      	nop
 800176c:	3728      	adds	r7, #40	; 0x28
 800176e:	46bd      	mov	sp, r7
 8001770:	bd80      	pop	{r7, pc}
 8001772:	bf00      	nop
 8001774:	40005400 	.word	0x40005400
 8001778:	40021000 	.word	0x40021000
 800177c:	40010c00 	.word	0x40010c00
 8001780:	40010000 	.word	0x40010000

08001784 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001784:	b580      	push	{r7, lr}
 8001786:	b084      	sub	sp, #16
 8001788:	af00      	add	r7, sp, #0
 800178a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 800178c:	687b      	ldr	r3, [r7, #4]
 800178e:	681b      	ldr	r3, [r3, #0]
 8001790:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001794:	d113      	bne.n	80017be <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001796:	4b0c      	ldr	r3, [pc, #48]	; (80017c8 <HAL_TIM_Base_MspInit+0x44>)
 8001798:	69db      	ldr	r3, [r3, #28]
 800179a:	4a0b      	ldr	r2, [pc, #44]	; (80017c8 <HAL_TIM_Base_MspInit+0x44>)
 800179c:	f043 0301 	orr.w	r3, r3, #1
 80017a0:	61d3      	str	r3, [r2, #28]
 80017a2:	4b09      	ldr	r3, [pc, #36]	; (80017c8 <HAL_TIM_Base_MspInit+0x44>)
 80017a4:	69db      	ldr	r3, [r3, #28]
 80017a6:	f003 0301 	and.w	r3, r3, #1
 80017aa:	60fb      	str	r3, [r7, #12]
 80017ac:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 80017ae:	2200      	movs	r2, #0
 80017b0:	2100      	movs	r1, #0
 80017b2:	201c      	movs	r0, #28
 80017b4:	f000 fd57 	bl	8002266 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80017b8:	201c      	movs	r0, #28
 80017ba:	f000 fd70 	bl	800229e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 80017be:	bf00      	nop
 80017c0:	3710      	adds	r7, #16
 80017c2:	46bd      	mov	sp, r7
 80017c4:	bd80      	pop	{r7, pc}
 80017c6:	bf00      	nop
 80017c8:	40021000 	.word	0x40021000

080017cc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80017cc:	b580      	push	{r7, lr}
 80017ce:	b088      	sub	sp, #32
 80017d0:	af00      	add	r7, sp, #0
 80017d2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017d4:	f107 0310 	add.w	r3, r7, #16
 80017d8:	2200      	movs	r2, #0
 80017da:	601a      	str	r2, [r3, #0]
 80017dc:	605a      	str	r2, [r3, #4]
 80017de:	609a      	str	r2, [r3, #8]
 80017e0:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART2)
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	681b      	ldr	r3, [r3, #0]
 80017e6:	4a1f      	ldr	r2, [pc, #124]	; (8001864 <HAL_UART_MspInit+0x98>)
 80017e8:	4293      	cmp	r3, r2
 80017ea:	d137      	bne.n	800185c <HAL_UART_MspInit+0x90>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80017ec:	4b1e      	ldr	r3, [pc, #120]	; (8001868 <HAL_UART_MspInit+0x9c>)
 80017ee:	69db      	ldr	r3, [r3, #28]
 80017f0:	4a1d      	ldr	r2, [pc, #116]	; (8001868 <HAL_UART_MspInit+0x9c>)
 80017f2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80017f6:	61d3      	str	r3, [r2, #28]
 80017f8:	4b1b      	ldr	r3, [pc, #108]	; (8001868 <HAL_UART_MspInit+0x9c>)
 80017fa:	69db      	ldr	r3, [r3, #28]
 80017fc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001800:	60fb      	str	r3, [r7, #12]
 8001802:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001804:	4b18      	ldr	r3, [pc, #96]	; (8001868 <HAL_UART_MspInit+0x9c>)
 8001806:	699b      	ldr	r3, [r3, #24]
 8001808:	4a17      	ldr	r2, [pc, #92]	; (8001868 <HAL_UART_MspInit+0x9c>)
 800180a:	f043 0304 	orr.w	r3, r3, #4
 800180e:	6193      	str	r3, [r2, #24]
 8001810:	4b15      	ldr	r3, [pc, #84]	; (8001868 <HAL_UART_MspInit+0x9c>)
 8001812:	699b      	ldr	r3, [r3, #24]
 8001814:	f003 0304 	and.w	r3, r3, #4
 8001818:	60bb      	str	r3, [r7, #8]
 800181a:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800181c:	2304      	movs	r3, #4
 800181e:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001820:	2302      	movs	r3, #2
 8001822:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001824:	2303      	movs	r3, #3
 8001826:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001828:	f107 0310 	add.w	r3, r7, #16
 800182c:	4619      	mov	r1, r3
 800182e:	480f      	ldr	r0, [pc, #60]	; (800186c <HAL_UART_MspInit+0xa0>)
 8001830:	f000 fe00 	bl	8002434 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001834:	2308      	movs	r3, #8
 8001836:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001838:	2300      	movs	r3, #0
 800183a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800183c:	2300      	movs	r3, #0
 800183e:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001840:	f107 0310 	add.w	r3, r7, #16
 8001844:	4619      	mov	r1, r3
 8001846:	4809      	ldr	r0, [pc, #36]	; (800186c <HAL_UART_MspInit+0xa0>)
 8001848:	f000 fdf4 	bl	8002434 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800184c:	2200      	movs	r2, #0
 800184e:	2100      	movs	r1, #0
 8001850:	2026      	movs	r0, #38	; 0x26
 8001852:	f000 fd08 	bl	8002266 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001856:	2026      	movs	r0, #38	; 0x26
 8001858:	f000 fd21 	bl	800229e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800185c:	bf00      	nop
 800185e:	3720      	adds	r7, #32
 8001860:	46bd      	mov	sp, r7
 8001862:	bd80      	pop	{r7, pc}
 8001864:	40004400 	.word	0x40004400
 8001868:	40021000 	.word	0x40021000
 800186c:	40010800 	.word	0x40010800

08001870 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001870:	b480      	push	{r7}
 8001872:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001874:	e7fe      	b.n	8001874 <NMI_Handler+0x4>

08001876 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001876:	b480      	push	{r7}
 8001878:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800187a:	e7fe      	b.n	800187a <HardFault_Handler+0x4>

0800187c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800187c:	b480      	push	{r7}
 800187e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001880:	e7fe      	b.n	8001880 <MemManage_Handler+0x4>

08001882 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001882:	b480      	push	{r7}
 8001884:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001886:	e7fe      	b.n	8001886 <BusFault_Handler+0x4>

08001888 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001888:	b480      	push	{r7}
 800188a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800188c:	e7fe      	b.n	800188c <UsageFault_Handler+0x4>

0800188e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800188e:	b480      	push	{r7}
 8001890:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001892:	bf00      	nop
 8001894:	46bd      	mov	sp, r7
 8001896:	bc80      	pop	{r7}
 8001898:	4770      	bx	lr

0800189a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800189a:	b480      	push	{r7}
 800189c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800189e:	bf00      	nop
 80018a0:	46bd      	mov	sp, r7
 80018a2:	bc80      	pop	{r7}
 80018a4:	4770      	bx	lr

080018a6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80018a6:	b480      	push	{r7}
 80018a8:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80018aa:	bf00      	nop
 80018ac:	46bd      	mov	sp, r7
 80018ae:	bc80      	pop	{r7}
 80018b0:	4770      	bx	lr

080018b2 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80018b2:	b580      	push	{r7, lr}
 80018b4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80018b6:	f000 fbbf 	bl	8002038 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80018ba:	bf00      	nop
 80018bc:	bd80      	pop	{r7, pc}
	...

080018c0 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 80018c0:	b580      	push	{r7, lr}
 80018c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80018c4:	4802      	ldr	r0, [pc, #8]	; (80018d0 <TIM2_IRQHandler+0x10>)
 80018c6:	f002 fd09 	bl	80042dc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 80018ca:	bf00      	nop
 80018cc:	bd80      	pop	{r7, pc}
 80018ce:	bf00      	nop
 80018d0:	20000280 	.word	0x20000280

080018d4 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 80018d4:	b580      	push	{r7, lr}
 80018d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 80018d8:	4802      	ldr	r0, [pc, #8]	; (80018e4 <USART2_IRQHandler+0x10>)
 80018da:	f003 f967 	bl	8004bac <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 80018de:	bf00      	nop
 80018e0:	bd80      	pop	{r7, pc}
 80018e2:	bf00      	nop
 80018e4:	200002c8 	.word	0x200002c8

080018e8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80018e8:	b480      	push	{r7}
 80018ea:	af00      	add	r7, sp, #0
  return 1;
 80018ec:	2301      	movs	r3, #1
}
 80018ee:	4618      	mov	r0, r3
 80018f0:	46bd      	mov	sp, r7
 80018f2:	bc80      	pop	{r7}
 80018f4:	4770      	bx	lr

080018f6 <_kill>:

int _kill(int pid, int sig)
{
 80018f6:	b580      	push	{r7, lr}
 80018f8:	b082      	sub	sp, #8
 80018fa:	af00      	add	r7, sp, #0
 80018fc:	6078      	str	r0, [r7, #4]
 80018fe:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001900:	f003 fd80 	bl	8005404 <__errno>
 8001904:	4603      	mov	r3, r0
 8001906:	2216      	movs	r2, #22
 8001908:	601a      	str	r2, [r3, #0]
  return -1;
 800190a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800190e:	4618      	mov	r0, r3
 8001910:	3708      	adds	r7, #8
 8001912:	46bd      	mov	sp, r7
 8001914:	bd80      	pop	{r7, pc}

08001916 <_exit>:

void _exit (int status)
{
 8001916:	b580      	push	{r7, lr}
 8001918:	b082      	sub	sp, #8
 800191a:	af00      	add	r7, sp, #0
 800191c:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 800191e:	f04f 31ff 	mov.w	r1, #4294967295
 8001922:	6878      	ldr	r0, [r7, #4]
 8001924:	f7ff ffe7 	bl	80018f6 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001928:	e7fe      	b.n	8001928 <_exit+0x12>

0800192a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800192a:	b580      	push	{r7, lr}
 800192c:	b086      	sub	sp, #24
 800192e:	af00      	add	r7, sp, #0
 8001930:	60f8      	str	r0, [r7, #12]
 8001932:	60b9      	str	r1, [r7, #8]
 8001934:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001936:	2300      	movs	r3, #0
 8001938:	617b      	str	r3, [r7, #20]
 800193a:	e00a      	b.n	8001952 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800193c:	f3af 8000 	nop.w
 8001940:	4601      	mov	r1, r0
 8001942:	68bb      	ldr	r3, [r7, #8]
 8001944:	1c5a      	adds	r2, r3, #1
 8001946:	60ba      	str	r2, [r7, #8]
 8001948:	b2ca      	uxtb	r2, r1
 800194a:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800194c:	697b      	ldr	r3, [r7, #20]
 800194e:	3301      	adds	r3, #1
 8001950:	617b      	str	r3, [r7, #20]
 8001952:	697a      	ldr	r2, [r7, #20]
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	429a      	cmp	r2, r3
 8001958:	dbf0      	blt.n	800193c <_read+0x12>
  }

  return len;
 800195a:	687b      	ldr	r3, [r7, #4]
}
 800195c:	4618      	mov	r0, r3
 800195e:	3718      	adds	r7, #24
 8001960:	46bd      	mov	sp, r7
 8001962:	bd80      	pop	{r7, pc}

08001964 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001964:	b580      	push	{r7, lr}
 8001966:	b086      	sub	sp, #24
 8001968:	af00      	add	r7, sp, #0
 800196a:	60f8      	str	r0, [r7, #12]
 800196c:	60b9      	str	r1, [r7, #8]
 800196e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001970:	2300      	movs	r3, #0
 8001972:	617b      	str	r3, [r7, #20]
 8001974:	e009      	b.n	800198a <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001976:	68bb      	ldr	r3, [r7, #8]
 8001978:	1c5a      	adds	r2, r3, #1
 800197a:	60ba      	str	r2, [r7, #8]
 800197c:	781b      	ldrb	r3, [r3, #0]
 800197e:	4618      	mov	r0, r3
 8001980:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001984:	697b      	ldr	r3, [r7, #20]
 8001986:	3301      	adds	r3, #1
 8001988:	617b      	str	r3, [r7, #20]
 800198a:	697a      	ldr	r2, [r7, #20]
 800198c:	687b      	ldr	r3, [r7, #4]
 800198e:	429a      	cmp	r2, r3
 8001990:	dbf1      	blt.n	8001976 <_write+0x12>
  }
  return len;
 8001992:	687b      	ldr	r3, [r7, #4]
}
 8001994:	4618      	mov	r0, r3
 8001996:	3718      	adds	r7, #24
 8001998:	46bd      	mov	sp, r7
 800199a:	bd80      	pop	{r7, pc}

0800199c <_close>:

int _close(int file)
{
 800199c:	b480      	push	{r7}
 800199e:	b083      	sub	sp, #12
 80019a0:	af00      	add	r7, sp, #0
 80019a2:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80019a4:	f04f 33ff 	mov.w	r3, #4294967295
}
 80019a8:	4618      	mov	r0, r3
 80019aa:	370c      	adds	r7, #12
 80019ac:	46bd      	mov	sp, r7
 80019ae:	bc80      	pop	{r7}
 80019b0:	4770      	bx	lr

080019b2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80019b2:	b480      	push	{r7}
 80019b4:	b083      	sub	sp, #12
 80019b6:	af00      	add	r7, sp, #0
 80019b8:	6078      	str	r0, [r7, #4]
 80019ba:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80019bc:	683b      	ldr	r3, [r7, #0]
 80019be:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80019c2:	605a      	str	r2, [r3, #4]
  return 0;
 80019c4:	2300      	movs	r3, #0
}
 80019c6:	4618      	mov	r0, r3
 80019c8:	370c      	adds	r7, #12
 80019ca:	46bd      	mov	sp, r7
 80019cc:	bc80      	pop	{r7}
 80019ce:	4770      	bx	lr

080019d0 <_isatty>:

int _isatty(int file)
{
 80019d0:	b480      	push	{r7}
 80019d2:	b083      	sub	sp, #12
 80019d4:	af00      	add	r7, sp, #0
 80019d6:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80019d8:	2301      	movs	r3, #1
}
 80019da:	4618      	mov	r0, r3
 80019dc:	370c      	adds	r7, #12
 80019de:	46bd      	mov	sp, r7
 80019e0:	bc80      	pop	{r7}
 80019e2:	4770      	bx	lr

080019e4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80019e4:	b480      	push	{r7}
 80019e6:	b085      	sub	sp, #20
 80019e8:	af00      	add	r7, sp, #0
 80019ea:	60f8      	str	r0, [r7, #12]
 80019ec:	60b9      	str	r1, [r7, #8]
 80019ee:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80019f0:	2300      	movs	r3, #0
}
 80019f2:	4618      	mov	r0, r3
 80019f4:	3714      	adds	r7, #20
 80019f6:	46bd      	mov	sp, r7
 80019f8:	bc80      	pop	{r7}
 80019fa:	4770      	bx	lr

080019fc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80019fc:	b580      	push	{r7, lr}
 80019fe:	b086      	sub	sp, #24
 8001a00:	af00      	add	r7, sp, #0
 8001a02:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001a04:	4a14      	ldr	r2, [pc, #80]	; (8001a58 <_sbrk+0x5c>)
 8001a06:	4b15      	ldr	r3, [pc, #84]	; (8001a5c <_sbrk+0x60>)
 8001a08:	1ad3      	subs	r3, r2, r3
 8001a0a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001a0c:	697b      	ldr	r3, [r7, #20]
 8001a0e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001a10:	4b13      	ldr	r3, [pc, #76]	; (8001a60 <_sbrk+0x64>)
 8001a12:	681b      	ldr	r3, [r3, #0]
 8001a14:	2b00      	cmp	r3, #0
 8001a16:	d102      	bne.n	8001a1e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001a18:	4b11      	ldr	r3, [pc, #68]	; (8001a60 <_sbrk+0x64>)
 8001a1a:	4a12      	ldr	r2, [pc, #72]	; (8001a64 <_sbrk+0x68>)
 8001a1c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001a1e:	4b10      	ldr	r3, [pc, #64]	; (8001a60 <_sbrk+0x64>)
 8001a20:	681a      	ldr	r2, [r3, #0]
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	4413      	add	r3, r2
 8001a26:	693a      	ldr	r2, [r7, #16]
 8001a28:	429a      	cmp	r2, r3
 8001a2a:	d207      	bcs.n	8001a3c <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001a2c:	f003 fcea 	bl	8005404 <__errno>
 8001a30:	4603      	mov	r3, r0
 8001a32:	220c      	movs	r2, #12
 8001a34:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001a36:	f04f 33ff 	mov.w	r3, #4294967295
 8001a3a:	e009      	b.n	8001a50 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001a3c:	4b08      	ldr	r3, [pc, #32]	; (8001a60 <_sbrk+0x64>)
 8001a3e:	681b      	ldr	r3, [r3, #0]
 8001a40:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001a42:	4b07      	ldr	r3, [pc, #28]	; (8001a60 <_sbrk+0x64>)
 8001a44:	681a      	ldr	r2, [r3, #0]
 8001a46:	687b      	ldr	r3, [r7, #4]
 8001a48:	4413      	add	r3, r2
 8001a4a:	4a05      	ldr	r2, [pc, #20]	; (8001a60 <_sbrk+0x64>)
 8001a4c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001a4e:	68fb      	ldr	r3, [r7, #12]
}
 8001a50:	4618      	mov	r0, r3
 8001a52:	3718      	adds	r7, #24
 8001a54:	46bd      	mov	sp, r7
 8001a56:	bd80      	pop	{r7, pc}
 8001a58:	20005000 	.word	0x20005000
 8001a5c:	00000400 	.word	0x00000400
 8001a60:	2000067c 	.word	0x2000067c
 8001a64:	200006c8 	.word	0x200006c8

08001a68 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001a68:	b480      	push	{r7}
 8001a6a:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001a6c:	bf00      	nop
 8001a6e:	46bd      	mov	sp, r7
 8001a70:	bc80      	pop	{r7}
 8001a72:	4770      	bx	lr

08001a74 <rst_buffer>:
//Active cycle
static int period = 1000;
static int holdTime = 1500;
static int newCycle = 0;

void rst_buffer(){
 8001a74:	b480      	push	{r7}
 8001a76:	b083      	sub	sp, #12
 8001a78:	af00      	add	r7, sp, #0
	for(int i=0; i<MAX_BUFFER_SIZE; i++)
 8001a7a:	2300      	movs	r3, #0
 8001a7c:	607b      	str	r3, [r7, #4]
 8001a7e:	e007      	b.n	8001a90 <rst_buffer+0x1c>
		buffer[i] = ' ';
 8001a80:	4a08      	ldr	r2, [pc, #32]	; (8001aa4 <rst_buffer+0x30>)
 8001a82:	687b      	ldr	r3, [r7, #4]
 8001a84:	4413      	add	r3, r2
 8001a86:	2220      	movs	r2, #32
 8001a88:	701a      	strb	r2, [r3, #0]
	for(int i=0; i<MAX_BUFFER_SIZE; i++)
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	3301      	adds	r3, #1
 8001a8e:	607b      	str	r3, [r7, #4]
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	2b1d      	cmp	r3, #29
 8001a94:	ddf4      	ble.n	8001a80 <rst_buffer+0xc>
}
 8001a96:	bf00      	nop
 8001a98:	bf00      	nop
 8001a9a:	370c      	adds	r7, #12
 8001a9c:	46bd      	mov	sp, r7
 8001a9e:	bc80      	pop	{r7}
 8001aa0:	4770      	bx	lr
 8001aa2:	bf00      	nop
 8001aa4:	20000684 	.word	0x20000684

08001aa8 <rst_cmd>:

void rst_cmd(){
 8001aa8:	b480      	push	{r7}
 8001aaa:	b083      	sub	sp, #12
 8001aac:	af00      	add	r7, sp, #0
	for(int i=0; i<MAX_CMD_SIZE; i++)
 8001aae:	2300      	movs	r3, #0
 8001ab0:	607b      	str	r3, [r7, #4]
 8001ab2:	e007      	b.n	8001ac4 <rst_cmd+0x1c>
		cmd_data[i] = ' ';
 8001ab4:	4a08      	ldr	r2, [pc, #32]	; (8001ad8 <rst_cmd+0x30>)
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	4413      	add	r3, r2
 8001aba:	2220      	movs	r2, #32
 8001abc:	701a      	strb	r2, [r3, #0]
	for(int i=0; i<MAX_CMD_SIZE; i++)
 8001abe:	687b      	ldr	r3, [r7, #4]
 8001ac0:	3301      	adds	r3, #1
 8001ac2:	607b      	str	r3, [r7, #4]
 8001ac4:	687b      	ldr	r3, [r7, #4]
 8001ac6:	2b05      	cmp	r3, #5
 8001ac8:	ddf4      	ble.n	8001ab4 <rst_cmd+0xc>
}
 8001aca:	bf00      	nop
 8001acc:	bf00      	nop
 8001ace:	370c      	adds	r7, #12
 8001ad0:	46bd      	mov	sp, r7
 8001ad2:	bc80      	pop	{r7}
 8001ad4:	4770      	bx	lr
 8001ad6:	bf00      	nop
 8001ad8:	200006a4 	.word	0x200006a4

08001adc <cleanUp>:

void cleanUp(){
 8001adc:	b580      	push	{r7, lr}
 8001ade:	af00      	add	r7, sp, #0
	index_buffer = 0;
 8001ae0:	4b07      	ldr	r3, [pc, #28]	; (8001b00 <cleanUp+0x24>)
 8001ae2:	2200      	movs	r2, #0
 8001ae4:	701a      	strb	r2, [r3, #0]
	cmd_index = 0;
 8001ae6:	4b07      	ldr	r3, [pc, #28]	; (8001b04 <cleanUp+0x28>)
 8001ae8:	2200      	movs	r2, #0
 8001aea:	701a      	strb	r2, [r3, #0]
	buffer_idx = 0;
 8001aec:	4b06      	ldr	r3, [pc, #24]	; (8001b08 <cleanUp+0x2c>)
 8001aee:	2200      	movs	r2, #0
 8001af0:	701a      	strb	r2, [r3, #0]
	rst_buffer();
 8001af2:	f7ff ffbf 	bl	8001a74 <rst_buffer>
	rst_cmd();
 8001af6:	f7ff ffd7 	bl	8001aa8 <rst_cmd>
}
 8001afa:	bf00      	nop
 8001afc:	bd80      	pop	{r7, pc}
 8001afe:	bf00      	nop
 8001b00:	200006a2 	.word	0x200006a2
 8001b04:	200006aa 	.word	0x200006aa
 8001b08:	200006ab 	.word	0x200006ab

08001b0c <cmd_parser_fsm>:

void cmd_parser_fsm(){
 8001b0c:	b580      	push	{r7, lr}
 8001b0e:	b082      	sub	sp, #8
 8001b10:	af00      	add	r7, sp, #0
	if (buffer[buffer_idx] == '@'){
 8001b12:	4b51      	ldr	r3, [pc, #324]	; (8001c58 <cmd_parser_fsm+0x14c>)
 8001b14:	781b      	ldrb	r3, [r3, #0]
 8001b16:	461a      	mov	r2, r3
 8001b18:	4b50      	ldr	r3, [pc, #320]	; (8001c5c <cmd_parser_fsm+0x150>)
 8001b1a:	5c9b      	ldrb	r3, [r3, r2]
 8001b1c:	2b40      	cmp	r3, #64	; 0x40
 8001b1e:	d106      	bne.n	8001b2e <cmd_parser_fsm+0x22>
		buffer_idx++;
 8001b20:	4b4d      	ldr	r3, [pc, #308]	; (8001c58 <cmd_parser_fsm+0x14c>)
 8001b22:	781b      	ldrb	r3, [r3, #0]
 8001b24:	3301      	adds	r3, #1
 8001b26:	b2da      	uxtb	r2, r3
 8001b28:	4b4b      	ldr	r3, [pc, #300]	; (8001c58 <cmd_parser_fsm+0x14c>)
 8001b2a:	701a      	strb	r2, [r3, #0]
			payload = strtok(NULL, DELIM);
			newCycle = atoi(payload);
		}
		cleanUp();
	}
}
 8001b2c:	e090      	b.n	8001c50 <cmd_parser_fsm+0x144>
	else if (buffer[buffer_idx] != '@' && buffer[buffer_idx] != '*'){
 8001b2e:	4b4a      	ldr	r3, [pc, #296]	; (8001c58 <cmd_parser_fsm+0x14c>)
 8001b30:	781b      	ldrb	r3, [r3, #0]
 8001b32:	461a      	mov	r2, r3
 8001b34:	4b49      	ldr	r3, [pc, #292]	; (8001c5c <cmd_parser_fsm+0x150>)
 8001b36:	5c9b      	ldrb	r3, [r3, r2]
 8001b38:	2b40      	cmp	r3, #64	; 0x40
 8001b3a:	d01d      	beq.n	8001b78 <cmd_parser_fsm+0x6c>
 8001b3c:	4b46      	ldr	r3, [pc, #280]	; (8001c58 <cmd_parser_fsm+0x14c>)
 8001b3e:	781b      	ldrb	r3, [r3, #0]
 8001b40:	461a      	mov	r2, r3
 8001b42:	4b46      	ldr	r3, [pc, #280]	; (8001c5c <cmd_parser_fsm+0x150>)
 8001b44:	5c9b      	ldrb	r3, [r3, r2]
 8001b46:	2b2a      	cmp	r3, #42	; 0x2a
 8001b48:	d016      	beq.n	8001b78 <cmd_parser_fsm+0x6c>
		cmd_data[cmd_index] = buffer[buffer_idx];
 8001b4a:	4b43      	ldr	r3, [pc, #268]	; (8001c58 <cmd_parser_fsm+0x14c>)
 8001b4c:	781b      	ldrb	r3, [r3, #0]
 8001b4e:	4619      	mov	r1, r3
 8001b50:	4b43      	ldr	r3, [pc, #268]	; (8001c60 <cmd_parser_fsm+0x154>)
 8001b52:	781b      	ldrb	r3, [r3, #0]
 8001b54:	461a      	mov	r2, r3
 8001b56:	4b41      	ldr	r3, [pc, #260]	; (8001c5c <cmd_parser_fsm+0x150>)
 8001b58:	5c59      	ldrb	r1, [r3, r1]
 8001b5a:	4b42      	ldr	r3, [pc, #264]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001b5c:	5499      	strb	r1, [r3, r2]
		cmd_index++;
 8001b5e:	4b40      	ldr	r3, [pc, #256]	; (8001c60 <cmd_parser_fsm+0x154>)
 8001b60:	781b      	ldrb	r3, [r3, #0]
 8001b62:	3301      	adds	r3, #1
 8001b64:	b2da      	uxtb	r2, r3
 8001b66:	4b3e      	ldr	r3, [pc, #248]	; (8001c60 <cmd_parser_fsm+0x154>)
 8001b68:	701a      	strb	r2, [r3, #0]
		buffer_idx++;
 8001b6a:	4b3b      	ldr	r3, [pc, #236]	; (8001c58 <cmd_parser_fsm+0x14c>)
 8001b6c:	781b      	ldrb	r3, [r3, #0]
 8001b6e:	3301      	adds	r3, #1
 8001b70:	b2da      	uxtb	r2, r3
 8001b72:	4b39      	ldr	r3, [pc, #228]	; (8001c58 <cmd_parser_fsm+0x14c>)
 8001b74:	701a      	strb	r2, [r3, #0]
}
 8001b76:	e06b      	b.n	8001c50 <cmd_parser_fsm+0x144>
	else if (buffer[buffer_idx] == '*'){
 8001b78:	4b37      	ldr	r3, [pc, #220]	; (8001c58 <cmd_parser_fsm+0x14c>)
 8001b7a:	781b      	ldrb	r3, [r3, #0]
 8001b7c:	461a      	mov	r2, r3
 8001b7e:	4b37      	ldr	r3, [pc, #220]	; (8001c5c <cmd_parser_fsm+0x150>)
 8001b80:	5c9b      	ldrb	r3, [r3, r2]
 8001b82:	2b2a      	cmp	r3, #42	; 0x2a
 8001b84:	d164      	bne.n	8001c50 <cmd_parser_fsm+0x144>
		if (cmd_data[0] == 'O' && cmd_data[1] == 'N' && cmd_data[2] == '1') cmd_flag = isCAP;
 8001b86:	4b37      	ldr	r3, [pc, #220]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001b88:	781b      	ldrb	r3, [r3, #0]
 8001b8a:	2b4f      	cmp	r3, #79	; 0x4f
 8001b8c:	d10b      	bne.n	8001ba6 <cmd_parser_fsm+0x9a>
 8001b8e:	4b35      	ldr	r3, [pc, #212]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001b90:	785b      	ldrb	r3, [r3, #1]
 8001b92:	2b4e      	cmp	r3, #78	; 0x4e
 8001b94:	d107      	bne.n	8001ba6 <cmd_parser_fsm+0x9a>
 8001b96:	4b33      	ldr	r3, [pc, #204]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001b98:	789b      	ldrb	r3, [r3, #2]
 8001b9a:	2b31      	cmp	r3, #49	; 0x31
 8001b9c:	d103      	bne.n	8001ba6 <cmd_parser_fsm+0x9a>
 8001b9e:	4b32      	ldr	r3, [pc, #200]	; (8001c68 <cmd_parser_fsm+0x15c>)
 8001ba0:	2202      	movs	r2, #2
 8001ba2:	701a      	strb	r2, [r3, #0]
 8001ba4:	e052      	b.n	8001c4c <cmd_parser_fsm+0x140>
		else if (cmd_data[0] == 'O' && cmd_data[1] == 'F' && cmd_data[2] == 'F' && cmd_data[3] == '1') cmd_flag = isRST;
 8001ba6:	4b2f      	ldr	r3, [pc, #188]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001ba8:	781b      	ldrb	r3, [r3, #0]
 8001baa:	2b4f      	cmp	r3, #79	; 0x4f
 8001bac:	d10f      	bne.n	8001bce <cmd_parser_fsm+0xc2>
 8001bae:	4b2d      	ldr	r3, [pc, #180]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001bb0:	785b      	ldrb	r3, [r3, #1]
 8001bb2:	2b46      	cmp	r3, #70	; 0x46
 8001bb4:	d10b      	bne.n	8001bce <cmd_parser_fsm+0xc2>
 8001bb6:	4b2b      	ldr	r3, [pc, #172]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001bb8:	789b      	ldrb	r3, [r3, #2]
 8001bba:	2b46      	cmp	r3, #70	; 0x46
 8001bbc:	d107      	bne.n	8001bce <cmd_parser_fsm+0xc2>
 8001bbe:	4b29      	ldr	r3, [pc, #164]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001bc0:	78db      	ldrb	r3, [r3, #3]
 8001bc2:	2b31      	cmp	r3, #49	; 0x31
 8001bc4:	d103      	bne.n	8001bce <cmd_parser_fsm+0xc2>
 8001bc6:	4b28      	ldr	r3, [pc, #160]	; (8001c68 <cmd_parser_fsm+0x15c>)
 8001bc8:	2204      	movs	r2, #4
 8001bca:	701a      	strb	r2, [r3, #0]
 8001bcc:	e03e      	b.n	8001c4c <cmd_parser_fsm+0x140>
		else if (cmd_data[0] == 'O' && cmd_data[1] == 'N' && cmd_data[2] == '2') cmd_flag = OBLED_ON;
 8001bce:	4b25      	ldr	r3, [pc, #148]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001bd0:	781b      	ldrb	r3, [r3, #0]
 8001bd2:	2b4f      	cmp	r3, #79	; 0x4f
 8001bd4:	d10b      	bne.n	8001bee <cmd_parser_fsm+0xe2>
 8001bd6:	4b23      	ldr	r3, [pc, #140]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001bd8:	785b      	ldrb	r3, [r3, #1]
 8001bda:	2b4e      	cmp	r3, #78	; 0x4e
 8001bdc:	d107      	bne.n	8001bee <cmd_parser_fsm+0xe2>
 8001bde:	4b21      	ldr	r3, [pc, #132]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001be0:	789b      	ldrb	r3, [r3, #2]
 8001be2:	2b32      	cmp	r3, #50	; 0x32
 8001be4:	d103      	bne.n	8001bee <cmd_parser_fsm+0xe2>
 8001be6:	4b20      	ldr	r3, [pc, #128]	; (8001c68 <cmd_parser_fsm+0x15c>)
 8001be8:	2205      	movs	r2, #5
 8001bea:	701a      	strb	r2, [r3, #0]
 8001bec:	e02e      	b.n	8001c4c <cmd_parser_fsm+0x140>
		else if (cmd_data[0] == 'O' && cmd_data[1] == 'F' && cmd_data[2] == 'F' && cmd_data[3] == '2') cmd_flag = OBLED_OFF;
 8001bee:	4b1d      	ldr	r3, [pc, #116]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001bf0:	781b      	ldrb	r3, [r3, #0]
 8001bf2:	2b4f      	cmp	r3, #79	; 0x4f
 8001bf4:	d10f      	bne.n	8001c16 <cmd_parser_fsm+0x10a>
 8001bf6:	4b1b      	ldr	r3, [pc, #108]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001bf8:	785b      	ldrb	r3, [r3, #1]
 8001bfa:	2b46      	cmp	r3, #70	; 0x46
 8001bfc:	d10b      	bne.n	8001c16 <cmd_parser_fsm+0x10a>
 8001bfe:	4b19      	ldr	r3, [pc, #100]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001c00:	789b      	ldrb	r3, [r3, #2]
 8001c02:	2b46      	cmp	r3, #70	; 0x46
 8001c04:	d107      	bne.n	8001c16 <cmd_parser_fsm+0x10a>
 8001c06:	4b17      	ldr	r3, [pc, #92]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001c08:	78db      	ldrb	r3, [r3, #3]
 8001c0a:	2b32      	cmp	r3, #50	; 0x32
 8001c0c:	d103      	bne.n	8001c16 <cmd_parser_fsm+0x10a>
 8001c0e:	4b16      	ldr	r3, [pc, #88]	; (8001c68 <cmd_parser_fsm+0x15c>)
 8001c10:	2206      	movs	r2, #6
 8001c12:	701a      	strb	r2, [r3, #0]
 8001c14:	e01a      	b.n	8001c4c <cmd_parser_fsm+0x140>
		else if (cmd_data[0] == 'F' && cmd_data[1] == ':'){
 8001c16:	4b13      	ldr	r3, [pc, #76]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001c18:	781b      	ldrb	r3, [r3, #0]
 8001c1a:	2b46      	cmp	r3, #70	; 0x46
 8001c1c:	d116      	bne.n	8001c4c <cmd_parser_fsm+0x140>
 8001c1e:	4b11      	ldr	r3, [pc, #68]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001c20:	785b      	ldrb	r3, [r3, #1]
 8001c22:	2b3a      	cmp	r3, #58	; 0x3a
 8001c24:	d112      	bne.n	8001c4c <cmd_parser_fsm+0x140>
			cmd_flag = MOD_CYCLE;
 8001c26:	4b10      	ldr	r3, [pc, #64]	; (8001c68 <cmd_parser_fsm+0x15c>)
 8001c28:	2207      	movs	r2, #7
 8001c2a:	701a      	strb	r2, [r3, #0]
			char* payload = strtok((char*)cmd_data, DELIM);
 8001c2c:	490f      	ldr	r1, [pc, #60]	; (8001c6c <cmd_parser_fsm+0x160>)
 8001c2e:	480d      	ldr	r0, [pc, #52]	; (8001c64 <cmd_parser_fsm+0x158>)
 8001c30:	f004 f8ce 	bl	8005dd0 <strtok>
 8001c34:	6078      	str	r0, [r7, #4]
			payload = strtok(NULL, DELIM);
 8001c36:	490d      	ldr	r1, [pc, #52]	; (8001c6c <cmd_parser_fsm+0x160>)
 8001c38:	2000      	movs	r0, #0
 8001c3a:	f004 f8c9 	bl	8005dd0 <strtok>
 8001c3e:	6078      	str	r0, [r7, #4]
			newCycle = atoi(payload);
 8001c40:	6878      	ldr	r0, [r7, #4]
 8001c42:	f003 fbdb 	bl	80053fc <atoi>
 8001c46:	4603      	mov	r3, r0
 8001c48:	4a09      	ldr	r2, [pc, #36]	; (8001c70 <cmd_parser_fsm+0x164>)
 8001c4a:	6013      	str	r3, [r2, #0]
		cleanUp();
 8001c4c:	f7ff ff46 	bl	8001adc <cleanUp>
}
 8001c50:	bf00      	nop
 8001c52:	3708      	adds	r7, #8
 8001c54:	46bd      	mov	sp, r7
 8001c56:	bd80      	pop	{r7, pc}
 8001c58:	200006ab 	.word	0x200006ab
 8001c5c:	20000684 	.word	0x20000684
 8001c60:	200006aa 	.word	0x200006aa
 8001c64:	200006a4 	.word	0x200006a4
 8001c68:	200006ac 	.word	0x200006ac
 8001c6c:	080084f8 	.word	0x080084f8
 8001c70:	200006b0 	.word	0x200006b0

08001c74 <uart_control_fsm>:
//	}
//}

//User timer to synchronize
void uart_control_fsm()
{
 8001c74:	b580      	push	{r7, lr}
 8001c76:	b090      	sub	sp, #64	; 0x40
 8001c78:	af00      	add	r7, sp, #0
	switch (cmd_flag){
 8001c7a:	4b3b      	ldr	r3, [pc, #236]	; (8001d68 <uart_control_fsm+0xf4>)
 8001c7c:	781b      	ldrb	r3, [r3, #0]
 8001c7e:	2b07      	cmp	r3, #7
 8001c80:	d86b      	bhi.n	8001d5a <uart_control_fsm+0xe6>
 8001c82:	a201      	add	r2, pc, #4	; (adr r2, 8001c88 <uart_control_fsm+0x14>)
 8001c84:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001c88:	08001ca9 	.word	0x08001ca9
 8001c8c:	08001cb7 	.word	0x08001cb7
 8001c90:	08001cd7 	.word	0x08001cd7
 8001c94:	08001ced 	.word	0x08001ced
 8001c98:	08001d01 	.word	0x08001d01
 8001c9c:	08001d09 	.word	0x08001d09
 8001ca0:	08001d15 	.word	0x08001d15
 8001ca4:	08001d21 	.word	0x08001d21
		case INIT_UART:
			cmd_flag = AUTO;
 8001ca8:	4b2f      	ldr	r3, [pc, #188]	; (8001d68 <uart_control_fsm+0xf4>)
 8001caa:	2201      	movs	r2, #1
 8001cac:	701a      	strb	r2, [r3, #0]
			setTimer2(1);
 8001cae:	2001      	movs	r0, #1
 8001cb0:	f7ff fbf0 	bl	8001494 <setTimer2>
			break;
 8001cb4:	e054      	b.n	8001d60 <uart_control_fsm+0xec>
		case AUTO:
			if (timer2_flag == 1){
 8001cb6:	4b2d      	ldr	r3, [pc, #180]	; (8001d6c <uart_control_fsm+0xf8>)
 8001cb8:	681b      	ldr	r3, [r3, #0]
 8001cba:	2b01      	cmp	r3, #1
 8001cbc:	d108      	bne.n	8001cd0 <uart_control_fsm+0x5c>
				turnLedOn();
 8001cbe:	f7ff f9cb 	bl	8001058 <turnLedOn>
				dht20_output();
 8001cc2:	f7fe ffeb 	bl	8000c9c <dht20_output>
				setTimer2(period);
 8001cc6:	4b2a      	ldr	r3, [pc, #168]	; (8001d70 <uart_control_fsm+0xfc>)
 8001cc8:	681b      	ldr	r3, [r3, #0]
 8001cca:	4618      	mov	r0, r3
 8001ccc:	f7ff fbe2 	bl	8001494 <setTimer2>
			}
			turnLedOff();
 8001cd0:	f7ff f9ce 	bl	8001070 <turnLedOff>
			break;
 8001cd4:	e044      	b.n	8001d60 <uart_control_fsm+0xec>
		case isCAP:
			setTimer3(holdTime);
 8001cd6:	4b27      	ldr	r3, [pc, #156]	; (8001d74 <uart_control_fsm+0x100>)
 8001cd8:	681b      	ldr	r3, [r3, #0]
 8001cda:	4618      	mov	r0, r3
 8001cdc:	f7ff fbee 	bl	80014bc <setTimer3>
			cmd_flag = WAIT;
 8001ce0:	4b21      	ldr	r3, [pc, #132]	; (8001d68 <uart_control_fsm+0xf4>)
 8001ce2:	2203      	movs	r2, #3
 8001ce4:	701a      	strb	r2, [r3, #0]
			turnLedOn();
 8001ce6:	f7ff f9b7 	bl	8001058 <turnLedOn>
			break;
 8001cea:	e039      	b.n	8001d60 <uart_control_fsm+0xec>
		case WAIT:
			turnLedOn();
 8001cec:	f7ff f9b4 	bl	8001058 <turnLedOn>
			if (timer3_flag == 1) cmd_flag = INIT_UART;
 8001cf0:	4b21      	ldr	r3, [pc, #132]	; (8001d78 <uart_control_fsm+0x104>)
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	2b01      	cmp	r3, #1
 8001cf6:	d132      	bne.n	8001d5e <uart_control_fsm+0xea>
 8001cf8:	4b1b      	ldr	r3, [pc, #108]	; (8001d68 <uart_control_fsm+0xf4>)
 8001cfa:	2200      	movs	r2, #0
 8001cfc:	701a      	strb	r2, [r3, #0]
			break;
 8001cfe:	e02e      	b.n	8001d5e <uart_control_fsm+0xea>
		case isRST:
			cmd_flag = INIT_UART;
 8001d00:	4b19      	ldr	r3, [pc, #100]	; (8001d68 <uart_control_fsm+0xf4>)
 8001d02:	2200      	movs	r2, #0
 8001d04:	701a      	strb	r2, [r3, #0]
			break;
 8001d06:	e02b      	b.n	8001d60 <uart_control_fsm+0xec>
		case OBLED_ON:
			turnOBLedOn();
 8001d08:	f7ff f9be 	bl	8001088 <turnOBLedOn>
			cmd_flag = INIT_UART;
 8001d0c:	4b16      	ldr	r3, [pc, #88]	; (8001d68 <uart_control_fsm+0xf4>)
 8001d0e:	2200      	movs	r2, #0
 8001d10:	701a      	strb	r2, [r3, #0]
			break;
 8001d12:	e025      	b.n	8001d60 <uart_control_fsm+0xec>
		case OBLED_OFF:
			turnOBLedOff();
 8001d14:	f7ff f9c4 	bl	80010a0 <turnOBLedOff>
			cmd_flag = INIT_UART;
 8001d18:	4b13      	ldr	r3, [pc, #76]	; (8001d68 <uart_control_fsm+0xf4>)
 8001d1a:	2200      	movs	r2, #0
 8001d1c:	701a      	strb	r2, [r3, #0]
			break;
 8001d1e:	e01f      	b.n	8001d60 <uart_control_fsm+0xec>
		case MOD_CYCLE:
			period = newCycle*100;
 8001d20:	4b16      	ldr	r3, [pc, #88]	; (8001d7c <uart_control_fsm+0x108>)
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	2264      	movs	r2, #100	; 0x64
 8001d26:	fb02 f303 	mul.w	r3, r2, r3
 8001d2a:	4a11      	ldr	r2, [pc, #68]	; (8001d70 <uart_control_fsm+0xfc>)
 8001d2c:	6013      	str	r3, [r2, #0]
			char msg[64];
			sprintf(msg, "Freq: %d", period);
 8001d2e:	4b10      	ldr	r3, [pc, #64]	; (8001d70 <uart_control_fsm+0xfc>)
 8001d30:	681a      	ldr	r2, [r3, #0]
 8001d32:	463b      	mov	r3, r7
 8001d34:	4912      	ldr	r1, [pc, #72]	; (8001d80 <uart_control_fsm+0x10c>)
 8001d36:	4618      	mov	r0, r3
 8001d38:	f004 f82a 	bl	8005d90 <siprintf>
			HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 100);
 8001d3c:	463b      	mov	r3, r7
 8001d3e:	4618      	mov	r0, r3
 8001d40:	f7fe fa06 	bl	8000150 <strlen>
 8001d44:	4603      	mov	r3, r0
 8001d46:	b29a      	uxth	r2, r3
 8001d48:	4639      	mov	r1, r7
 8001d4a:	2364      	movs	r3, #100	; 0x64
 8001d4c:	480d      	ldr	r0, [pc, #52]	; (8001d84 <uart_control_fsm+0x110>)
 8001d4e:	f002 fe6a 	bl	8004a26 <HAL_UART_Transmit>
			cmd_flag = INIT_UART;
 8001d52:	4b05      	ldr	r3, [pc, #20]	; (8001d68 <uart_control_fsm+0xf4>)
 8001d54:	2200      	movs	r2, #0
 8001d56:	701a      	strb	r2, [r3, #0]
			break;
 8001d58:	e002      	b.n	8001d60 <uart_control_fsm+0xec>
		default:
			break;
 8001d5a:	bf00      	nop
 8001d5c:	e000      	b.n	8001d60 <uart_control_fsm+0xec>
			break;
 8001d5e:	bf00      	nop
	}
}
 8001d60:	bf00      	nop
 8001d62:	3740      	adds	r7, #64	; 0x40
 8001d64:	46bd      	mov	sp, r7
 8001d66:	bd80      	pop	{r7, pc}
 8001d68:	200006ac 	.word	0x200006ac
 8001d6c:	20000638 	.word	0x20000638
 8001d70:	20000004 	.word	0x20000004
 8001d74:	20000008 	.word	0x20000008
 8001d78:	20000640 	.word	0x20000640
 8001d7c:	200006b0 	.word	0x200006b0
 8001d80:	080084fc 	.word	0x080084fc
 8001d84:	200002c8 	.word	0x200002c8

08001d88 <msgCheckSum>:

uint32_t msgCheckSum(char* msg, uint32_t msgLen){
 8001d88:	b480      	push	{r7}
 8001d8a:	b085      	sub	sp, #20
 8001d8c:	af00      	add	r7, sp, #0
 8001d8e:	6078      	str	r0, [r7, #4]
 8001d90:	6039      	str	r1, [r7, #0]
	uint32_t result = 0;
 8001d92:	2300      	movs	r3, #0
 8001d94:	60fb      	str	r3, [r7, #12]
	for(int i=0; i<msgLen; i++){
 8001d96:	2300      	movs	r3, #0
 8001d98:	60bb      	str	r3, [r7, #8]
 8001d9a:	e00a      	b.n	8001db2 <msgCheckSum+0x2a>
		result += msg[i];
 8001d9c:	68bb      	ldr	r3, [r7, #8]
 8001d9e:	687a      	ldr	r2, [r7, #4]
 8001da0:	4413      	add	r3, r2
 8001da2:	781b      	ldrb	r3, [r3, #0]
 8001da4:	461a      	mov	r2, r3
 8001da6:	68fb      	ldr	r3, [r7, #12]
 8001da8:	4413      	add	r3, r2
 8001daa:	60fb      	str	r3, [r7, #12]
	for(int i=0; i<msgLen; i++){
 8001dac:	68bb      	ldr	r3, [r7, #8]
 8001dae:	3301      	adds	r3, #1
 8001db0:	60bb      	str	r3, [r7, #8]
 8001db2:	68bb      	ldr	r3, [r7, #8]
 8001db4:	683a      	ldr	r2, [r7, #0]
 8001db6:	429a      	cmp	r2, r3
 8001db8:	d8f0      	bhi.n	8001d9c <msgCheckSum+0x14>
	}
	return result;
 8001dba:	68fb      	ldr	r3, [r7, #12]
}
 8001dbc:	4618      	mov	r0, r3
 8001dbe:	3714      	adds	r7, #20
 8001dc0:	46bd      	mov	sp, r7
 8001dc2:	bc80      	pop	{r7}
 8001dc4:	4770      	bx	lr
	...

08001dc8 <Scan_Addr>:

void Scan_Addr() {
 8001dc8:	b5b0      	push	{r4, r5, r7, lr}
 8001dca:	b09a      	sub	sp, #104	; 0x68
 8001dcc:	af00      	add	r7, sp, #0
    char info[] = "\r\n\r\nScanning I2C bus...\r\n";
 8001dce:	4b44      	ldr	r3, [pc, #272]	; (8001ee0 <Scan_Addr+0x118>)
 8001dd0:	f107 0444 	add.w	r4, r7, #68	; 0x44
 8001dd4:	461d      	mov	r5, r3
 8001dd6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001dd8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001dda:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001dde:	c403      	stmia	r4!, {r0, r1}
 8001de0:	8022      	strh	r2, [r4, #0]
    HAL_UART_Transmit(&huart2, (uint8_t*)info, strlen(info), 100);
 8001de2:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8001de6:	4618      	mov	r0, r3
 8001de8:	f7fe f9b2 	bl	8000150 <strlen>
 8001dec:	4603      	mov	r3, r0
 8001dee:	b29a      	uxth	r2, r3
 8001df0:	f107 0144 	add.w	r1, r7, #68	; 0x44
 8001df4:	2364      	movs	r3, #100	; 0x64
 8001df6:	483b      	ldr	r0, [pc, #236]	; (8001ee4 <Scan_Addr+0x11c>)
 8001df8:	f002 fe15 	bl	8004a26 <HAL_UART_Transmit>

    HAL_StatusTypeDef res;
    uint8_t device_counter = 0;
 8001dfc:	2300      	movs	r3, #0
 8001dfe:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
    for(uint16_t i = 0; i < 128; i++) {
 8001e02:	2300      	movs	r3, #0
 8001e04:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64
 8001e08:	e032      	b.n	8001e70 <Scan_Addr+0xa8>
        res = HAL_I2C_IsDeviceReady(&hi2c1, i << 1, 1, 10);
 8001e0a:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8001e0e:	005b      	lsls	r3, r3, #1
 8001e10:	b299      	uxth	r1, r3
 8001e12:	230a      	movs	r3, #10
 8001e14:	2201      	movs	r2, #1
 8001e16:	4834      	ldr	r0, [pc, #208]	; (8001ee8 <Scan_Addr+0x120>)
 8001e18:	f001 f94a 	bl	80030b0 <HAL_I2C_IsDeviceReady>
 8001e1c:	4603      	mov	r3, r0
 8001e1e:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
        if(res == HAL_OK) {
 8001e22:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8001e26:	2b00      	cmp	r3, #0
 8001e28:	d117      	bne.n	8001e5a <Scan_Addr+0x92>
        	device_counter += 1;
 8001e2a:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001e2e:	3301      	adds	r3, #1
 8001e30:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
            char msg[64];
            snprintf(msg, sizeof(msg), "0x%02X", i);
 8001e34:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8001e38:	1d38      	adds	r0, r7, #4
 8001e3a:	4a2c      	ldr	r2, [pc, #176]	; (8001eec <Scan_Addr+0x124>)
 8001e3c:	2140      	movs	r1, #64	; 0x40
 8001e3e:	f003 ff73 	bl	8005d28 <sniprintf>
            HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 100);
 8001e42:	1d3b      	adds	r3, r7, #4
 8001e44:	4618      	mov	r0, r3
 8001e46:	f7fe f983 	bl	8000150 <strlen>
 8001e4a:	4603      	mov	r3, r0
 8001e4c:	b29a      	uxth	r2, r3
 8001e4e:	1d39      	adds	r1, r7, #4
 8001e50:	2364      	movs	r3, #100	; 0x64
 8001e52:	4824      	ldr	r0, [pc, #144]	; (8001ee4 <Scan_Addr+0x11c>)
 8001e54:	f002 fde7 	bl	8004a26 <HAL_UART_Transmit>
 8001e58:	e005      	b.n	8001e66 <Scan_Addr+0x9e>
        }
        else {
            HAL_UART_Transmit(&huart2, (uint8_t*)".", 1, 100);
 8001e5a:	2364      	movs	r3, #100	; 0x64
 8001e5c:	2201      	movs	r2, #1
 8001e5e:	4924      	ldr	r1, [pc, #144]	; (8001ef0 <Scan_Addr+0x128>)
 8001e60:	4820      	ldr	r0, [pc, #128]	; (8001ee4 <Scan_Addr+0x11c>)
 8001e62:	f002 fde0 	bl	8004a26 <HAL_UART_Transmit>
    for(uint16_t i = 0; i < 128; i++) {
 8001e66:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8001e6a:	3301      	adds	r3, #1
 8001e6c:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64
 8001e70:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8001e74:	2b7f      	cmp	r3, #127	; 0x7f
 8001e76:	d9c8      	bls.n	8001e0a <Scan_Addr+0x42>
        }
    }

    if (device_counter == 0){
 8001e78:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001e7c:	2b00      	cmp	r3, #0
 8001e7e:	d12b      	bne.n	8001ed8 <Scan_Addr+0x110>
    	char msg[64] = "!ERROR:Sensor Not Found...#";
 8001e80:	4b1c      	ldr	r3, [pc, #112]	; (8001ef4 <Scan_Addr+0x12c>)
 8001e82:	1d3c      	adds	r4, r7, #4
 8001e84:	461d      	mov	r5, r3
 8001e86:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001e88:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001e8a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001e8e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8001e92:	f107 0320 	add.w	r3, r7, #32
 8001e96:	2224      	movs	r2, #36	; 0x24
 8001e98:	2100      	movs	r1, #0
 8001e9a:	4618      	mov	r0, r3
 8001e9c:	f003 fadc 	bl	8005458 <memset>
    	uint32_t checkSum = msgCheckSum(&msg[0], strlen(msg));
 8001ea0:	1d3b      	adds	r3, r7, #4
 8001ea2:	4618      	mov	r0, r3
 8001ea4:	f7fe f954 	bl	8000150 <strlen>
 8001ea8:	4602      	mov	r2, r0
 8001eaa:	1d3b      	adds	r3, r7, #4
 8001eac:	4611      	mov	r1, r2
 8001eae:	4618      	mov	r0, r3
 8001eb0:	f7ff ff6a 	bl	8001d88 <msgCheckSum>
 8001eb4:	6638      	str	r0, [r7, #96]	; 0x60
    	sprintf(msg, "!ERROR:Sensor Not Found...:%lu#", checkSum);
 8001eb6:	1d3b      	adds	r3, r7, #4
 8001eb8:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8001eba:	490f      	ldr	r1, [pc, #60]	; (8001ef8 <Scan_Addr+0x130>)
 8001ebc:	4618      	mov	r0, r3
 8001ebe:	f003 ff67 	bl	8005d90 <siprintf>
    	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 100);
 8001ec2:	1d3b      	adds	r3, r7, #4
 8001ec4:	4618      	mov	r0, r3
 8001ec6:	f7fe f943 	bl	8000150 <strlen>
 8001eca:	4603      	mov	r3, r0
 8001ecc:	b29a      	uxth	r2, r3
 8001ece:	1d39      	adds	r1, r7, #4
 8001ed0:	2364      	movs	r3, #100	; 0x64
 8001ed2:	4804      	ldr	r0, [pc, #16]	; (8001ee4 <Scan_Addr+0x11c>)
 8001ed4:	f002 fda7 	bl	8004a26 <HAL_UART_Transmit>
    }
}
 8001ed8:	bf00      	nop
 8001eda:	3768      	adds	r7, #104	; 0x68
 8001edc:	46bd      	mov	sp, r7
 8001ede:	bdb0      	pop	{r4, r5, r7, pc}
 8001ee0:	08008534 	.word	0x08008534
 8001ee4:	200002c8 	.word	0x200002c8
 8001ee8:	2000022c 	.word	0x2000022c
 8001eec:	08008508 	.word	0x08008508
 8001ef0:	08008510 	.word	0x08008510
 8001ef4:	08008550 	.word	0x08008550
 8001ef8:	08008514 	.word	0x08008514

08001efc <Mcu_info>:

void Mcu_info(){
 8001efc:	b580      	push	{r7, lr}
 8001efe:	b094      	sub	sp, #80	; 0x50
 8001f00:	af02      	add	r7, sp, #8
	char msg[64];
	uint32_t checkSum = msgCheckSum(&msg[0], sprintf(msg, "!INFO:MCU_VERSION-%s,FIRWARE_VERSION-%s#", MCU_VERSION, FIRMWARE_VERSION));
 8001f02:	1d38      	adds	r0, r7, #4
 8001f04:	4b11      	ldr	r3, [pc, #68]	; (8001f4c <Mcu_info+0x50>)
 8001f06:	4a12      	ldr	r2, [pc, #72]	; (8001f50 <Mcu_info+0x54>)
 8001f08:	4912      	ldr	r1, [pc, #72]	; (8001f54 <Mcu_info+0x58>)
 8001f0a:	f003 ff41 	bl	8005d90 <siprintf>
 8001f0e:	4603      	mov	r3, r0
 8001f10:	461a      	mov	r2, r3
 8001f12:	1d3b      	adds	r3, r7, #4
 8001f14:	4611      	mov	r1, r2
 8001f16:	4618      	mov	r0, r3
 8001f18:	f7ff ff36 	bl	8001d88 <msgCheckSum>
 8001f1c:	6478      	str	r0, [r7, #68]	; 0x44
	sprintf(msg, "!INFO:MCU VERSION %s, FIRWARE VERSION %s:%lu#", MCU_VERSION, FIRMWARE_VERSION, checkSum);
 8001f1e:	1d38      	adds	r0, r7, #4
 8001f20:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001f22:	9300      	str	r3, [sp, #0]
 8001f24:	4b09      	ldr	r3, [pc, #36]	; (8001f4c <Mcu_info+0x50>)
 8001f26:	4a0a      	ldr	r2, [pc, #40]	; (8001f50 <Mcu_info+0x54>)
 8001f28:	490b      	ldr	r1, [pc, #44]	; (8001f58 <Mcu_info+0x5c>)
 8001f2a:	f003 ff31 	bl	8005d90 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 100);
 8001f2e:	1d3b      	adds	r3, r7, #4
 8001f30:	4618      	mov	r0, r3
 8001f32:	f7fe f90d 	bl	8000150 <strlen>
 8001f36:	4603      	mov	r3, r0
 8001f38:	b29a      	uxth	r2, r3
 8001f3a:	1d39      	adds	r1, r7, #4
 8001f3c:	2364      	movs	r3, #100	; 0x64
 8001f3e:	4807      	ldr	r0, [pc, #28]	; (8001f5c <Mcu_info+0x60>)
 8001f40:	f002 fd71 	bl	8004a26 <HAL_UART_Transmit>
}
 8001f44:	bf00      	nop
 8001f46:	3748      	adds	r7, #72	; 0x48
 8001f48:	46bd      	mov	sp, r7
 8001f4a:	bd80      	pop	{r7, pc}
 8001f4c:	08008590 	.word	0x08008590
 8001f50:	08008594 	.word	0x08008594
 8001f54:	080085a4 	.word	0x080085a4
 8001f58:	080085d0 	.word	0x080085d0
 8001f5c:	200002c8 	.word	0x200002c8

08001f60 <Reset_Handler>:
 8001f60:	480c      	ldr	r0, [pc, #48]	; (8001f94 <LoopFillZerobss+0x12>)
 8001f62:	490d      	ldr	r1, [pc, #52]	; (8001f98 <LoopFillZerobss+0x16>)
 8001f64:	4a0d      	ldr	r2, [pc, #52]	; (8001f9c <LoopFillZerobss+0x1a>)
 8001f66:	2300      	movs	r3, #0
 8001f68:	e002      	b.n	8001f70 <LoopCopyDataInit>

08001f6a <CopyDataInit>:
 8001f6a:	58d4      	ldr	r4, [r2, r3]
 8001f6c:	50c4      	str	r4, [r0, r3]
 8001f6e:	3304      	adds	r3, #4

08001f70 <LoopCopyDataInit>:
 8001f70:	18c4      	adds	r4, r0, r3
 8001f72:	428c      	cmp	r4, r1
 8001f74:	d3f9      	bcc.n	8001f6a <CopyDataInit>
 8001f76:	4a0a      	ldr	r2, [pc, #40]	; (8001fa0 <LoopFillZerobss+0x1e>)
 8001f78:	4c0a      	ldr	r4, [pc, #40]	; (8001fa4 <LoopFillZerobss+0x22>)
 8001f7a:	2300      	movs	r3, #0
 8001f7c:	e001      	b.n	8001f82 <LoopFillZerobss>

08001f7e <FillZerobss>:
 8001f7e:	6013      	str	r3, [r2, #0]
 8001f80:	3204      	adds	r2, #4

08001f82 <LoopFillZerobss>:
 8001f82:	42a2      	cmp	r2, r4
 8001f84:	d3fb      	bcc.n	8001f7e <FillZerobss>
 8001f86:	f7ff fd6f 	bl	8001a68 <SystemInit>
 8001f8a:	f003 fa41 	bl	8005410 <__libc_init_array>
 8001f8e:	f7ff f8cb 	bl	8001128 <main>
 8001f92:	4770      	bx	lr
 8001f94:	20000000 	.word	0x20000000
 8001f98:	200001e4 	.word	0x200001e4
 8001f9c:	08008a6c 	.word	0x08008a6c
 8001fa0:	200001e4 	.word	0x200001e4
 8001fa4:	200006c8 	.word	0x200006c8

08001fa8 <ADC1_2_IRQHandler>:
 8001fa8:	e7fe      	b.n	8001fa8 <ADC1_2_IRQHandler>
	...

08001fac <HAL_Init>:
 8001fac:	b580      	push	{r7, lr}
 8001fae:	af00      	add	r7, sp, #0
 8001fb0:	4b08      	ldr	r3, [pc, #32]	; (8001fd4 <HAL_Init+0x28>)
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	4a07      	ldr	r2, [pc, #28]	; (8001fd4 <HAL_Init+0x28>)
 8001fb6:	f043 0310 	orr.w	r3, r3, #16
 8001fba:	6013      	str	r3, [r2, #0]
 8001fbc:	2003      	movs	r0, #3
 8001fbe:	f000 f947 	bl	8002250 <HAL_NVIC_SetPriorityGrouping>
 8001fc2:	200f      	movs	r0, #15
 8001fc4:	f000 f808 	bl	8001fd8 <HAL_InitTick>
 8001fc8:	f7ff fb5a 	bl	8001680 <HAL_MspInit>
 8001fcc:	2300      	movs	r3, #0
 8001fce:	4618      	mov	r0, r3
 8001fd0:	bd80      	pop	{r7, pc}
 8001fd2:	bf00      	nop
 8001fd4:	40022000 	.word	0x40022000

08001fd8 <HAL_InitTick>:
 8001fd8:	b580      	push	{r7, lr}
 8001fda:	b082      	sub	sp, #8
 8001fdc:	af00      	add	r7, sp, #0
 8001fde:	6078      	str	r0, [r7, #4]
 8001fe0:	4b12      	ldr	r3, [pc, #72]	; (800202c <HAL_InitTick+0x54>)
 8001fe2:	681a      	ldr	r2, [r3, #0]
 8001fe4:	4b12      	ldr	r3, [pc, #72]	; (8002030 <HAL_InitTick+0x58>)
 8001fe6:	781b      	ldrb	r3, [r3, #0]
 8001fe8:	4619      	mov	r1, r3
 8001fea:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001fee:	fbb3 f3f1 	udiv	r3, r3, r1
 8001ff2:	fbb2 f3f3 	udiv	r3, r2, r3
 8001ff6:	4618      	mov	r0, r3
 8001ff8:	f000 f95f 	bl	80022ba <HAL_SYSTICK_Config>
 8001ffc:	4603      	mov	r3, r0
 8001ffe:	2b00      	cmp	r3, #0
 8002000:	d001      	beq.n	8002006 <HAL_InitTick+0x2e>
 8002002:	2301      	movs	r3, #1
 8002004:	e00e      	b.n	8002024 <HAL_InitTick+0x4c>
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	2b0f      	cmp	r3, #15
 800200a:	d80a      	bhi.n	8002022 <HAL_InitTick+0x4a>
 800200c:	2200      	movs	r2, #0
 800200e:	6879      	ldr	r1, [r7, #4]
 8002010:	f04f 30ff 	mov.w	r0, #4294967295
 8002014:	f000 f927 	bl	8002266 <HAL_NVIC_SetPriority>
 8002018:	4a06      	ldr	r2, [pc, #24]	; (8002034 <HAL_InitTick+0x5c>)
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	6013      	str	r3, [r2, #0]
 800201e:	2300      	movs	r3, #0
 8002020:	e000      	b.n	8002024 <HAL_InitTick+0x4c>
 8002022:	2301      	movs	r3, #1
 8002024:	4618      	mov	r0, r3
 8002026:	3708      	adds	r7, #8
 8002028:	46bd      	mov	sp, r7
 800202a:	bd80      	pop	{r7, pc}
 800202c:	20000000 	.word	0x20000000
 8002030:	20000010 	.word	0x20000010
 8002034:	2000000c 	.word	0x2000000c

08002038 <HAL_IncTick>:
 8002038:	b480      	push	{r7}
 800203a:	af00      	add	r7, sp, #0
 800203c:	4b05      	ldr	r3, [pc, #20]	; (8002054 <HAL_IncTick+0x1c>)
 800203e:	781b      	ldrb	r3, [r3, #0]
 8002040:	461a      	mov	r2, r3
 8002042:	4b05      	ldr	r3, [pc, #20]	; (8002058 <HAL_IncTick+0x20>)
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	4413      	add	r3, r2
 8002048:	4a03      	ldr	r2, [pc, #12]	; (8002058 <HAL_IncTick+0x20>)
 800204a:	6013      	str	r3, [r2, #0]
 800204c:	bf00      	nop
 800204e:	46bd      	mov	sp, r7
 8002050:	bc80      	pop	{r7}
 8002052:	4770      	bx	lr
 8002054:	20000010 	.word	0x20000010
 8002058:	200006b4 	.word	0x200006b4

0800205c <HAL_GetTick>:
 800205c:	b480      	push	{r7}
 800205e:	af00      	add	r7, sp, #0
 8002060:	4b02      	ldr	r3, [pc, #8]	; (800206c <HAL_GetTick+0x10>)
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	4618      	mov	r0, r3
 8002066:	46bd      	mov	sp, r7
 8002068:	bc80      	pop	{r7}
 800206a:	4770      	bx	lr
 800206c:	200006b4 	.word	0x200006b4

08002070 <HAL_Delay>:
 8002070:	b580      	push	{r7, lr}
 8002072:	b084      	sub	sp, #16
 8002074:	af00      	add	r7, sp, #0
 8002076:	6078      	str	r0, [r7, #4]
 8002078:	f7ff fff0 	bl	800205c <HAL_GetTick>
 800207c:	60b8      	str	r0, [r7, #8]
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	60fb      	str	r3, [r7, #12]
 8002082:	68fb      	ldr	r3, [r7, #12]
 8002084:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002088:	d005      	beq.n	8002096 <HAL_Delay+0x26>
 800208a:	4b0a      	ldr	r3, [pc, #40]	; (80020b4 <HAL_Delay+0x44>)
 800208c:	781b      	ldrb	r3, [r3, #0]
 800208e:	461a      	mov	r2, r3
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	4413      	add	r3, r2
 8002094:	60fb      	str	r3, [r7, #12]
 8002096:	bf00      	nop
 8002098:	f7ff ffe0 	bl	800205c <HAL_GetTick>
 800209c:	4602      	mov	r2, r0
 800209e:	68bb      	ldr	r3, [r7, #8]
 80020a0:	1ad3      	subs	r3, r2, r3
 80020a2:	68fa      	ldr	r2, [r7, #12]
 80020a4:	429a      	cmp	r2, r3
 80020a6:	d8f7      	bhi.n	8002098 <HAL_Delay+0x28>
 80020a8:	bf00      	nop
 80020aa:	bf00      	nop
 80020ac:	3710      	adds	r7, #16
 80020ae:	46bd      	mov	sp, r7
 80020b0:	bd80      	pop	{r7, pc}
 80020b2:	bf00      	nop
 80020b4:	20000010 	.word	0x20000010

080020b8 <__NVIC_SetPriorityGrouping>:
 80020b8:	b480      	push	{r7}
 80020ba:	b085      	sub	sp, #20
 80020bc:	af00      	add	r7, sp, #0
 80020be:	6078      	str	r0, [r7, #4]
 80020c0:	687b      	ldr	r3, [r7, #4]
 80020c2:	f003 0307 	and.w	r3, r3, #7
 80020c6:	60fb      	str	r3, [r7, #12]
 80020c8:	4b0c      	ldr	r3, [pc, #48]	; (80020fc <__NVIC_SetPriorityGrouping+0x44>)
 80020ca:	68db      	ldr	r3, [r3, #12]
 80020cc:	60bb      	str	r3, [r7, #8]
 80020ce:	68ba      	ldr	r2, [r7, #8]
 80020d0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80020d4:	4013      	ands	r3, r2
 80020d6:	60bb      	str	r3, [r7, #8]
 80020d8:	68fb      	ldr	r3, [r7, #12]
 80020da:	021a      	lsls	r2, r3, #8
 80020dc:	68bb      	ldr	r3, [r7, #8]
 80020de:	4313      	orrs	r3, r2
 80020e0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80020e4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80020e8:	60bb      	str	r3, [r7, #8]
 80020ea:	4a04      	ldr	r2, [pc, #16]	; (80020fc <__NVIC_SetPriorityGrouping+0x44>)
 80020ec:	68bb      	ldr	r3, [r7, #8]
 80020ee:	60d3      	str	r3, [r2, #12]
 80020f0:	bf00      	nop
 80020f2:	3714      	adds	r7, #20
 80020f4:	46bd      	mov	sp, r7
 80020f6:	bc80      	pop	{r7}
 80020f8:	4770      	bx	lr
 80020fa:	bf00      	nop
 80020fc:	e000ed00 	.word	0xe000ed00

08002100 <__NVIC_GetPriorityGrouping>:
 8002100:	b480      	push	{r7}
 8002102:	af00      	add	r7, sp, #0
 8002104:	4b04      	ldr	r3, [pc, #16]	; (8002118 <__NVIC_GetPriorityGrouping+0x18>)
 8002106:	68db      	ldr	r3, [r3, #12]
 8002108:	0a1b      	lsrs	r3, r3, #8
 800210a:	f003 0307 	and.w	r3, r3, #7
 800210e:	4618      	mov	r0, r3
 8002110:	46bd      	mov	sp, r7
 8002112:	bc80      	pop	{r7}
 8002114:	4770      	bx	lr
 8002116:	bf00      	nop
 8002118:	e000ed00 	.word	0xe000ed00

0800211c <__NVIC_EnableIRQ>:
 800211c:	b480      	push	{r7}
 800211e:	b083      	sub	sp, #12
 8002120:	af00      	add	r7, sp, #0
 8002122:	4603      	mov	r3, r0
 8002124:	71fb      	strb	r3, [r7, #7]
 8002126:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800212a:	2b00      	cmp	r3, #0
 800212c:	db0b      	blt.n	8002146 <__NVIC_EnableIRQ+0x2a>
 800212e:	79fb      	ldrb	r3, [r7, #7]
 8002130:	f003 021f 	and.w	r2, r3, #31
 8002134:	4906      	ldr	r1, [pc, #24]	; (8002150 <__NVIC_EnableIRQ+0x34>)
 8002136:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800213a:	095b      	lsrs	r3, r3, #5
 800213c:	2001      	movs	r0, #1
 800213e:	fa00 f202 	lsl.w	r2, r0, r2
 8002142:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002146:	bf00      	nop
 8002148:	370c      	adds	r7, #12
 800214a:	46bd      	mov	sp, r7
 800214c:	bc80      	pop	{r7}
 800214e:	4770      	bx	lr
 8002150:	e000e100 	.word	0xe000e100

08002154 <__NVIC_SetPriority>:
 8002154:	b480      	push	{r7}
 8002156:	b083      	sub	sp, #12
 8002158:	af00      	add	r7, sp, #0
 800215a:	4603      	mov	r3, r0
 800215c:	6039      	str	r1, [r7, #0]
 800215e:	71fb      	strb	r3, [r7, #7]
 8002160:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002164:	2b00      	cmp	r3, #0
 8002166:	db0a      	blt.n	800217e <__NVIC_SetPriority+0x2a>
 8002168:	683b      	ldr	r3, [r7, #0]
 800216a:	b2da      	uxtb	r2, r3
 800216c:	490c      	ldr	r1, [pc, #48]	; (80021a0 <__NVIC_SetPriority+0x4c>)
 800216e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002172:	0112      	lsls	r2, r2, #4
 8002174:	b2d2      	uxtb	r2, r2
 8002176:	440b      	add	r3, r1
 8002178:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800217c:	e00a      	b.n	8002194 <__NVIC_SetPriority+0x40>
 800217e:	683b      	ldr	r3, [r7, #0]
 8002180:	b2da      	uxtb	r2, r3
 8002182:	4908      	ldr	r1, [pc, #32]	; (80021a4 <__NVIC_SetPriority+0x50>)
 8002184:	79fb      	ldrb	r3, [r7, #7]
 8002186:	f003 030f 	and.w	r3, r3, #15
 800218a:	3b04      	subs	r3, #4
 800218c:	0112      	lsls	r2, r2, #4
 800218e:	b2d2      	uxtb	r2, r2
 8002190:	440b      	add	r3, r1
 8002192:	761a      	strb	r2, [r3, #24]
 8002194:	bf00      	nop
 8002196:	370c      	adds	r7, #12
 8002198:	46bd      	mov	sp, r7
 800219a:	bc80      	pop	{r7}
 800219c:	4770      	bx	lr
 800219e:	bf00      	nop
 80021a0:	e000e100 	.word	0xe000e100
 80021a4:	e000ed00 	.word	0xe000ed00

080021a8 <NVIC_EncodePriority>:
 80021a8:	b480      	push	{r7}
 80021aa:	b089      	sub	sp, #36	; 0x24
 80021ac:	af00      	add	r7, sp, #0
 80021ae:	60f8      	str	r0, [r7, #12]
 80021b0:	60b9      	str	r1, [r7, #8]
 80021b2:	607a      	str	r2, [r7, #4]
 80021b4:	68fb      	ldr	r3, [r7, #12]
 80021b6:	f003 0307 	and.w	r3, r3, #7
 80021ba:	61fb      	str	r3, [r7, #28]
 80021bc:	69fb      	ldr	r3, [r7, #28]
 80021be:	f1c3 0307 	rsb	r3, r3, #7
 80021c2:	2b04      	cmp	r3, #4
 80021c4:	bf28      	it	cs
 80021c6:	2304      	movcs	r3, #4
 80021c8:	61bb      	str	r3, [r7, #24]
 80021ca:	69fb      	ldr	r3, [r7, #28]
 80021cc:	3304      	adds	r3, #4
 80021ce:	2b06      	cmp	r3, #6
 80021d0:	d902      	bls.n	80021d8 <NVIC_EncodePriority+0x30>
 80021d2:	69fb      	ldr	r3, [r7, #28]
 80021d4:	3b03      	subs	r3, #3
 80021d6:	e000      	b.n	80021da <NVIC_EncodePriority+0x32>
 80021d8:	2300      	movs	r3, #0
 80021da:	617b      	str	r3, [r7, #20]
 80021dc:	f04f 32ff 	mov.w	r2, #4294967295
 80021e0:	69bb      	ldr	r3, [r7, #24]
 80021e2:	fa02 f303 	lsl.w	r3, r2, r3
 80021e6:	43da      	mvns	r2, r3
 80021e8:	68bb      	ldr	r3, [r7, #8]
 80021ea:	401a      	ands	r2, r3
 80021ec:	697b      	ldr	r3, [r7, #20]
 80021ee:	409a      	lsls	r2, r3
 80021f0:	f04f 31ff 	mov.w	r1, #4294967295
 80021f4:	697b      	ldr	r3, [r7, #20]
 80021f6:	fa01 f303 	lsl.w	r3, r1, r3
 80021fa:	43d9      	mvns	r1, r3
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	400b      	ands	r3, r1
 8002200:	4313      	orrs	r3, r2
 8002202:	4618      	mov	r0, r3
 8002204:	3724      	adds	r7, #36	; 0x24
 8002206:	46bd      	mov	sp, r7
 8002208:	bc80      	pop	{r7}
 800220a:	4770      	bx	lr

0800220c <SysTick_Config>:
 800220c:	b580      	push	{r7, lr}
 800220e:	b082      	sub	sp, #8
 8002210:	af00      	add	r7, sp, #0
 8002212:	6078      	str	r0, [r7, #4]
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	3b01      	subs	r3, #1
 8002218:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800221c:	d301      	bcc.n	8002222 <SysTick_Config+0x16>
 800221e:	2301      	movs	r3, #1
 8002220:	e00f      	b.n	8002242 <SysTick_Config+0x36>
 8002222:	4a0a      	ldr	r2, [pc, #40]	; (800224c <SysTick_Config+0x40>)
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	3b01      	subs	r3, #1
 8002228:	6053      	str	r3, [r2, #4]
 800222a:	210f      	movs	r1, #15
 800222c:	f04f 30ff 	mov.w	r0, #4294967295
 8002230:	f7ff ff90 	bl	8002154 <__NVIC_SetPriority>
 8002234:	4b05      	ldr	r3, [pc, #20]	; (800224c <SysTick_Config+0x40>)
 8002236:	2200      	movs	r2, #0
 8002238:	609a      	str	r2, [r3, #8]
 800223a:	4b04      	ldr	r3, [pc, #16]	; (800224c <SysTick_Config+0x40>)
 800223c:	2207      	movs	r2, #7
 800223e:	601a      	str	r2, [r3, #0]
 8002240:	2300      	movs	r3, #0
 8002242:	4618      	mov	r0, r3
 8002244:	3708      	adds	r7, #8
 8002246:	46bd      	mov	sp, r7
 8002248:	bd80      	pop	{r7, pc}
 800224a:	bf00      	nop
 800224c:	e000e010 	.word	0xe000e010

08002250 <HAL_NVIC_SetPriorityGrouping>:
 8002250:	b580      	push	{r7, lr}
 8002252:	b082      	sub	sp, #8
 8002254:	af00      	add	r7, sp, #0
 8002256:	6078      	str	r0, [r7, #4]
 8002258:	6878      	ldr	r0, [r7, #4]
 800225a:	f7ff ff2d 	bl	80020b8 <__NVIC_SetPriorityGrouping>
 800225e:	bf00      	nop
 8002260:	3708      	adds	r7, #8
 8002262:	46bd      	mov	sp, r7
 8002264:	bd80      	pop	{r7, pc}

08002266 <HAL_NVIC_SetPriority>:
 8002266:	b580      	push	{r7, lr}
 8002268:	b086      	sub	sp, #24
 800226a:	af00      	add	r7, sp, #0
 800226c:	4603      	mov	r3, r0
 800226e:	60b9      	str	r1, [r7, #8]
 8002270:	607a      	str	r2, [r7, #4]
 8002272:	73fb      	strb	r3, [r7, #15]
 8002274:	2300      	movs	r3, #0
 8002276:	617b      	str	r3, [r7, #20]
 8002278:	f7ff ff42 	bl	8002100 <__NVIC_GetPriorityGrouping>
 800227c:	6178      	str	r0, [r7, #20]
 800227e:	687a      	ldr	r2, [r7, #4]
 8002280:	68b9      	ldr	r1, [r7, #8]
 8002282:	6978      	ldr	r0, [r7, #20]
 8002284:	f7ff ff90 	bl	80021a8 <NVIC_EncodePriority>
 8002288:	4602      	mov	r2, r0
 800228a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800228e:	4611      	mov	r1, r2
 8002290:	4618      	mov	r0, r3
 8002292:	f7ff ff5f 	bl	8002154 <__NVIC_SetPriority>
 8002296:	bf00      	nop
 8002298:	3718      	adds	r7, #24
 800229a:	46bd      	mov	sp, r7
 800229c:	bd80      	pop	{r7, pc}

0800229e <HAL_NVIC_EnableIRQ>:
 800229e:	b580      	push	{r7, lr}
 80022a0:	b082      	sub	sp, #8
 80022a2:	af00      	add	r7, sp, #0
 80022a4:	4603      	mov	r3, r0
 80022a6:	71fb      	strb	r3, [r7, #7]
 80022a8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80022ac:	4618      	mov	r0, r3
 80022ae:	f7ff ff35 	bl	800211c <__NVIC_EnableIRQ>
 80022b2:	bf00      	nop
 80022b4:	3708      	adds	r7, #8
 80022b6:	46bd      	mov	sp, r7
 80022b8:	bd80      	pop	{r7, pc}

080022ba <HAL_SYSTICK_Config>:
 80022ba:	b580      	push	{r7, lr}
 80022bc:	b082      	sub	sp, #8
 80022be:	af00      	add	r7, sp, #0
 80022c0:	6078      	str	r0, [r7, #4]
 80022c2:	6878      	ldr	r0, [r7, #4]
 80022c4:	f7ff ffa2 	bl	800220c <SysTick_Config>
 80022c8:	4603      	mov	r3, r0
 80022ca:	4618      	mov	r0, r3
 80022cc:	3708      	adds	r7, #8
 80022ce:	46bd      	mov	sp, r7
 80022d0:	bd80      	pop	{r7, pc}

080022d2 <HAL_DMA_Abort>:
 80022d2:	b480      	push	{r7}
 80022d4:	b085      	sub	sp, #20
 80022d6:	af00      	add	r7, sp, #0
 80022d8:	6078      	str	r0, [r7, #4]
 80022da:	2300      	movs	r3, #0
 80022dc:	73fb      	strb	r3, [r7, #15]
 80022de:	687b      	ldr	r3, [r7, #4]
 80022e0:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80022e4:	2b02      	cmp	r3, #2
 80022e6:	d008      	beq.n	80022fa <HAL_DMA_Abort+0x28>
 80022e8:	687b      	ldr	r3, [r7, #4]
 80022ea:	2204      	movs	r2, #4
 80022ec:	639a      	str	r2, [r3, #56]	; 0x38
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	2200      	movs	r2, #0
 80022f2:	f883 2020 	strb.w	r2, [r3, #32]
 80022f6:	2301      	movs	r3, #1
 80022f8:	e020      	b.n	800233c <HAL_DMA_Abort+0x6a>
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	681a      	ldr	r2, [r3, #0]
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	f022 020e 	bic.w	r2, r2, #14
 8002308:	601a      	str	r2, [r3, #0]
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	681a      	ldr	r2, [r3, #0]
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	681b      	ldr	r3, [r3, #0]
 8002314:	f022 0201 	bic.w	r2, r2, #1
 8002318:	601a      	str	r2, [r3, #0]
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002322:	2101      	movs	r1, #1
 8002324:	fa01 f202 	lsl.w	r2, r1, r2
 8002328:	605a      	str	r2, [r3, #4]
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	2201      	movs	r2, #1
 800232e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002332:	687b      	ldr	r3, [r7, #4]
 8002334:	2200      	movs	r2, #0
 8002336:	f883 2020 	strb.w	r2, [r3, #32]
 800233a:	7bfb      	ldrb	r3, [r7, #15]
 800233c:	4618      	mov	r0, r3
 800233e:	3714      	adds	r7, #20
 8002340:	46bd      	mov	sp, r7
 8002342:	bc80      	pop	{r7}
 8002344:	4770      	bx	lr
	...

08002348 <HAL_DMA_Abort_IT>:
 8002348:	b580      	push	{r7, lr}
 800234a:	b084      	sub	sp, #16
 800234c:	af00      	add	r7, sp, #0
 800234e:	6078      	str	r0, [r7, #4]
 8002350:	2300      	movs	r3, #0
 8002352:	73fb      	strb	r3, [r7, #15]
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800235a:	2b02      	cmp	r3, #2
 800235c:	d005      	beq.n	800236a <HAL_DMA_Abort_IT+0x22>
 800235e:	687b      	ldr	r3, [r7, #4]
 8002360:	2204      	movs	r2, #4
 8002362:	639a      	str	r2, [r3, #56]	; 0x38
 8002364:	2301      	movs	r3, #1
 8002366:	73fb      	strb	r3, [r7, #15]
 8002368:	e051      	b.n	800240e <HAL_DMA_Abort_IT+0xc6>
 800236a:	687b      	ldr	r3, [r7, #4]
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	681a      	ldr	r2, [r3, #0]
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	681b      	ldr	r3, [r3, #0]
 8002374:	f022 020e 	bic.w	r2, r2, #14
 8002378:	601a      	str	r2, [r3, #0]
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	681b      	ldr	r3, [r3, #0]
 800237e:	681a      	ldr	r2, [r3, #0]
 8002380:	687b      	ldr	r3, [r7, #4]
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	f022 0201 	bic.w	r2, r2, #1
 8002388:	601a      	str	r2, [r3, #0]
 800238a:	687b      	ldr	r3, [r7, #4]
 800238c:	681b      	ldr	r3, [r3, #0]
 800238e:	4a22      	ldr	r2, [pc, #136]	; (8002418 <HAL_DMA_Abort_IT+0xd0>)
 8002390:	4293      	cmp	r3, r2
 8002392:	d029      	beq.n	80023e8 <HAL_DMA_Abort_IT+0xa0>
 8002394:	687b      	ldr	r3, [r7, #4]
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	4a20      	ldr	r2, [pc, #128]	; (800241c <HAL_DMA_Abort_IT+0xd4>)
 800239a:	4293      	cmp	r3, r2
 800239c:	d022      	beq.n	80023e4 <HAL_DMA_Abort_IT+0x9c>
 800239e:	687b      	ldr	r3, [r7, #4]
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	4a1f      	ldr	r2, [pc, #124]	; (8002420 <HAL_DMA_Abort_IT+0xd8>)
 80023a4:	4293      	cmp	r3, r2
 80023a6:	d01a      	beq.n	80023de <HAL_DMA_Abort_IT+0x96>
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	681b      	ldr	r3, [r3, #0]
 80023ac:	4a1d      	ldr	r2, [pc, #116]	; (8002424 <HAL_DMA_Abort_IT+0xdc>)
 80023ae:	4293      	cmp	r3, r2
 80023b0:	d012      	beq.n	80023d8 <HAL_DMA_Abort_IT+0x90>
 80023b2:	687b      	ldr	r3, [r7, #4]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	4a1c      	ldr	r2, [pc, #112]	; (8002428 <HAL_DMA_Abort_IT+0xe0>)
 80023b8:	4293      	cmp	r3, r2
 80023ba:	d00a      	beq.n	80023d2 <HAL_DMA_Abort_IT+0x8a>
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	4a1a      	ldr	r2, [pc, #104]	; (800242c <HAL_DMA_Abort_IT+0xe4>)
 80023c2:	4293      	cmp	r3, r2
 80023c4:	d102      	bne.n	80023cc <HAL_DMA_Abort_IT+0x84>
 80023c6:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80023ca:	e00e      	b.n	80023ea <HAL_DMA_Abort_IT+0xa2>
 80023cc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80023d0:	e00b      	b.n	80023ea <HAL_DMA_Abort_IT+0xa2>
 80023d2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80023d6:	e008      	b.n	80023ea <HAL_DMA_Abort_IT+0xa2>
 80023d8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80023dc:	e005      	b.n	80023ea <HAL_DMA_Abort_IT+0xa2>
 80023de:	f44f 7380 	mov.w	r3, #256	; 0x100
 80023e2:	e002      	b.n	80023ea <HAL_DMA_Abort_IT+0xa2>
 80023e4:	2310      	movs	r3, #16
 80023e6:	e000      	b.n	80023ea <HAL_DMA_Abort_IT+0xa2>
 80023e8:	2301      	movs	r3, #1
 80023ea:	4a11      	ldr	r2, [pc, #68]	; (8002430 <HAL_DMA_Abort_IT+0xe8>)
 80023ec:	6053      	str	r3, [r2, #4]
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	2201      	movs	r2, #1
 80023f2:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	2200      	movs	r2, #0
 80023fa:	f883 2020 	strb.w	r2, [r3, #32]
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002402:	2b00      	cmp	r3, #0
 8002404:	d003      	beq.n	800240e <HAL_DMA_Abort_IT+0xc6>
 8002406:	687b      	ldr	r3, [r7, #4]
 8002408:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800240a:	6878      	ldr	r0, [r7, #4]
 800240c:	4798      	blx	r3
 800240e:	7bfb      	ldrb	r3, [r7, #15]
 8002410:	4618      	mov	r0, r3
 8002412:	3710      	adds	r7, #16
 8002414:	46bd      	mov	sp, r7
 8002416:	bd80      	pop	{r7, pc}
 8002418:	40020008 	.word	0x40020008
 800241c:	4002001c 	.word	0x4002001c
 8002420:	40020030 	.word	0x40020030
 8002424:	40020044 	.word	0x40020044
 8002428:	40020058 	.word	0x40020058
 800242c:	4002006c 	.word	0x4002006c
 8002430:	40020000 	.word	0x40020000

08002434 <HAL_GPIO_Init>:
 8002434:	b480      	push	{r7}
 8002436:	b08b      	sub	sp, #44	; 0x2c
 8002438:	af00      	add	r7, sp, #0
 800243a:	6078      	str	r0, [r7, #4]
 800243c:	6039      	str	r1, [r7, #0]
 800243e:	2300      	movs	r3, #0
 8002440:	627b      	str	r3, [r7, #36]	; 0x24
 8002442:	2300      	movs	r3, #0
 8002444:	623b      	str	r3, [r7, #32]
 8002446:	e169      	b.n	800271c <HAL_GPIO_Init+0x2e8>
 8002448:	2201      	movs	r2, #1
 800244a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800244c:	fa02 f303 	lsl.w	r3, r2, r3
 8002450:	61fb      	str	r3, [r7, #28]
 8002452:	683b      	ldr	r3, [r7, #0]
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	69fa      	ldr	r2, [r7, #28]
 8002458:	4013      	ands	r3, r2
 800245a:	61bb      	str	r3, [r7, #24]
 800245c:	69ba      	ldr	r2, [r7, #24]
 800245e:	69fb      	ldr	r3, [r7, #28]
 8002460:	429a      	cmp	r2, r3
 8002462:	f040 8158 	bne.w	8002716 <HAL_GPIO_Init+0x2e2>
 8002466:	683b      	ldr	r3, [r7, #0]
 8002468:	685b      	ldr	r3, [r3, #4]
 800246a:	4a9a      	ldr	r2, [pc, #616]	; (80026d4 <HAL_GPIO_Init+0x2a0>)
 800246c:	4293      	cmp	r3, r2
 800246e:	d05e      	beq.n	800252e <HAL_GPIO_Init+0xfa>
 8002470:	4a98      	ldr	r2, [pc, #608]	; (80026d4 <HAL_GPIO_Init+0x2a0>)
 8002472:	4293      	cmp	r3, r2
 8002474:	d875      	bhi.n	8002562 <HAL_GPIO_Init+0x12e>
 8002476:	4a98      	ldr	r2, [pc, #608]	; (80026d8 <HAL_GPIO_Init+0x2a4>)
 8002478:	4293      	cmp	r3, r2
 800247a:	d058      	beq.n	800252e <HAL_GPIO_Init+0xfa>
 800247c:	4a96      	ldr	r2, [pc, #600]	; (80026d8 <HAL_GPIO_Init+0x2a4>)
 800247e:	4293      	cmp	r3, r2
 8002480:	d86f      	bhi.n	8002562 <HAL_GPIO_Init+0x12e>
 8002482:	4a96      	ldr	r2, [pc, #600]	; (80026dc <HAL_GPIO_Init+0x2a8>)
 8002484:	4293      	cmp	r3, r2
 8002486:	d052      	beq.n	800252e <HAL_GPIO_Init+0xfa>
 8002488:	4a94      	ldr	r2, [pc, #592]	; (80026dc <HAL_GPIO_Init+0x2a8>)
 800248a:	4293      	cmp	r3, r2
 800248c:	d869      	bhi.n	8002562 <HAL_GPIO_Init+0x12e>
 800248e:	4a94      	ldr	r2, [pc, #592]	; (80026e0 <HAL_GPIO_Init+0x2ac>)
 8002490:	4293      	cmp	r3, r2
 8002492:	d04c      	beq.n	800252e <HAL_GPIO_Init+0xfa>
 8002494:	4a92      	ldr	r2, [pc, #584]	; (80026e0 <HAL_GPIO_Init+0x2ac>)
 8002496:	4293      	cmp	r3, r2
 8002498:	d863      	bhi.n	8002562 <HAL_GPIO_Init+0x12e>
 800249a:	4a92      	ldr	r2, [pc, #584]	; (80026e4 <HAL_GPIO_Init+0x2b0>)
 800249c:	4293      	cmp	r3, r2
 800249e:	d046      	beq.n	800252e <HAL_GPIO_Init+0xfa>
 80024a0:	4a90      	ldr	r2, [pc, #576]	; (80026e4 <HAL_GPIO_Init+0x2b0>)
 80024a2:	4293      	cmp	r3, r2
 80024a4:	d85d      	bhi.n	8002562 <HAL_GPIO_Init+0x12e>
 80024a6:	2b12      	cmp	r3, #18
 80024a8:	d82a      	bhi.n	8002500 <HAL_GPIO_Init+0xcc>
 80024aa:	2b12      	cmp	r3, #18
 80024ac:	d859      	bhi.n	8002562 <HAL_GPIO_Init+0x12e>
 80024ae:	a201      	add	r2, pc, #4	; (adr r2, 80024b4 <HAL_GPIO_Init+0x80>)
 80024b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80024b4:	0800252f 	.word	0x0800252f
 80024b8:	08002509 	.word	0x08002509
 80024bc:	0800251b 	.word	0x0800251b
 80024c0:	0800255d 	.word	0x0800255d
 80024c4:	08002563 	.word	0x08002563
 80024c8:	08002563 	.word	0x08002563
 80024cc:	08002563 	.word	0x08002563
 80024d0:	08002563 	.word	0x08002563
 80024d4:	08002563 	.word	0x08002563
 80024d8:	08002563 	.word	0x08002563
 80024dc:	08002563 	.word	0x08002563
 80024e0:	08002563 	.word	0x08002563
 80024e4:	08002563 	.word	0x08002563
 80024e8:	08002563 	.word	0x08002563
 80024ec:	08002563 	.word	0x08002563
 80024f0:	08002563 	.word	0x08002563
 80024f4:	08002563 	.word	0x08002563
 80024f8:	08002511 	.word	0x08002511
 80024fc:	08002525 	.word	0x08002525
 8002500:	4a79      	ldr	r2, [pc, #484]	; (80026e8 <HAL_GPIO_Init+0x2b4>)
 8002502:	4293      	cmp	r3, r2
 8002504:	d013      	beq.n	800252e <HAL_GPIO_Init+0xfa>
 8002506:	e02c      	b.n	8002562 <HAL_GPIO_Init+0x12e>
 8002508:	683b      	ldr	r3, [r7, #0]
 800250a:	68db      	ldr	r3, [r3, #12]
 800250c:	623b      	str	r3, [r7, #32]
 800250e:	e029      	b.n	8002564 <HAL_GPIO_Init+0x130>
 8002510:	683b      	ldr	r3, [r7, #0]
 8002512:	68db      	ldr	r3, [r3, #12]
 8002514:	3304      	adds	r3, #4
 8002516:	623b      	str	r3, [r7, #32]
 8002518:	e024      	b.n	8002564 <HAL_GPIO_Init+0x130>
 800251a:	683b      	ldr	r3, [r7, #0]
 800251c:	68db      	ldr	r3, [r3, #12]
 800251e:	3308      	adds	r3, #8
 8002520:	623b      	str	r3, [r7, #32]
 8002522:	e01f      	b.n	8002564 <HAL_GPIO_Init+0x130>
 8002524:	683b      	ldr	r3, [r7, #0]
 8002526:	68db      	ldr	r3, [r3, #12]
 8002528:	330c      	adds	r3, #12
 800252a:	623b      	str	r3, [r7, #32]
 800252c:	e01a      	b.n	8002564 <HAL_GPIO_Init+0x130>
 800252e:	683b      	ldr	r3, [r7, #0]
 8002530:	689b      	ldr	r3, [r3, #8]
 8002532:	2b00      	cmp	r3, #0
 8002534:	d102      	bne.n	800253c <HAL_GPIO_Init+0x108>
 8002536:	2304      	movs	r3, #4
 8002538:	623b      	str	r3, [r7, #32]
 800253a:	e013      	b.n	8002564 <HAL_GPIO_Init+0x130>
 800253c:	683b      	ldr	r3, [r7, #0]
 800253e:	689b      	ldr	r3, [r3, #8]
 8002540:	2b01      	cmp	r3, #1
 8002542:	d105      	bne.n	8002550 <HAL_GPIO_Init+0x11c>
 8002544:	2308      	movs	r3, #8
 8002546:	623b      	str	r3, [r7, #32]
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	69fa      	ldr	r2, [r7, #28]
 800254c:	611a      	str	r2, [r3, #16]
 800254e:	e009      	b.n	8002564 <HAL_GPIO_Init+0x130>
 8002550:	2308      	movs	r3, #8
 8002552:	623b      	str	r3, [r7, #32]
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	69fa      	ldr	r2, [r7, #28]
 8002558:	615a      	str	r2, [r3, #20]
 800255a:	e003      	b.n	8002564 <HAL_GPIO_Init+0x130>
 800255c:	2300      	movs	r3, #0
 800255e:	623b      	str	r3, [r7, #32]
 8002560:	e000      	b.n	8002564 <HAL_GPIO_Init+0x130>
 8002562:	bf00      	nop
 8002564:	69bb      	ldr	r3, [r7, #24]
 8002566:	2bff      	cmp	r3, #255	; 0xff
 8002568:	d801      	bhi.n	800256e <HAL_GPIO_Init+0x13a>
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	e001      	b.n	8002572 <HAL_GPIO_Init+0x13e>
 800256e:	687b      	ldr	r3, [r7, #4]
 8002570:	3304      	adds	r3, #4
 8002572:	617b      	str	r3, [r7, #20]
 8002574:	69bb      	ldr	r3, [r7, #24]
 8002576:	2bff      	cmp	r3, #255	; 0xff
 8002578:	d802      	bhi.n	8002580 <HAL_GPIO_Init+0x14c>
 800257a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800257c:	009b      	lsls	r3, r3, #2
 800257e:	e002      	b.n	8002586 <HAL_GPIO_Init+0x152>
 8002580:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002582:	3b08      	subs	r3, #8
 8002584:	009b      	lsls	r3, r3, #2
 8002586:	613b      	str	r3, [r7, #16]
 8002588:	697b      	ldr	r3, [r7, #20]
 800258a:	681a      	ldr	r2, [r3, #0]
 800258c:	210f      	movs	r1, #15
 800258e:	693b      	ldr	r3, [r7, #16]
 8002590:	fa01 f303 	lsl.w	r3, r1, r3
 8002594:	43db      	mvns	r3, r3
 8002596:	401a      	ands	r2, r3
 8002598:	6a39      	ldr	r1, [r7, #32]
 800259a:	693b      	ldr	r3, [r7, #16]
 800259c:	fa01 f303 	lsl.w	r3, r1, r3
 80025a0:	431a      	orrs	r2, r3
 80025a2:	697b      	ldr	r3, [r7, #20]
 80025a4:	601a      	str	r2, [r3, #0]
 80025a6:	683b      	ldr	r3, [r7, #0]
 80025a8:	685b      	ldr	r3, [r3, #4]
 80025aa:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80025ae:	2b00      	cmp	r3, #0
 80025b0:	f000 80b1 	beq.w	8002716 <HAL_GPIO_Init+0x2e2>
 80025b4:	4b4d      	ldr	r3, [pc, #308]	; (80026ec <HAL_GPIO_Init+0x2b8>)
 80025b6:	699b      	ldr	r3, [r3, #24]
 80025b8:	4a4c      	ldr	r2, [pc, #304]	; (80026ec <HAL_GPIO_Init+0x2b8>)
 80025ba:	f043 0301 	orr.w	r3, r3, #1
 80025be:	6193      	str	r3, [r2, #24]
 80025c0:	4b4a      	ldr	r3, [pc, #296]	; (80026ec <HAL_GPIO_Init+0x2b8>)
 80025c2:	699b      	ldr	r3, [r3, #24]
 80025c4:	f003 0301 	and.w	r3, r3, #1
 80025c8:	60bb      	str	r3, [r7, #8]
 80025ca:	68bb      	ldr	r3, [r7, #8]
 80025cc:	4a48      	ldr	r2, [pc, #288]	; (80026f0 <HAL_GPIO_Init+0x2bc>)
 80025ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80025d0:	089b      	lsrs	r3, r3, #2
 80025d2:	3302      	adds	r3, #2
 80025d4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80025d8:	60fb      	str	r3, [r7, #12]
 80025da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80025dc:	f003 0303 	and.w	r3, r3, #3
 80025e0:	009b      	lsls	r3, r3, #2
 80025e2:	220f      	movs	r2, #15
 80025e4:	fa02 f303 	lsl.w	r3, r2, r3
 80025e8:	43db      	mvns	r3, r3
 80025ea:	68fa      	ldr	r2, [r7, #12]
 80025ec:	4013      	ands	r3, r2
 80025ee:	60fb      	str	r3, [r7, #12]
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	4a40      	ldr	r2, [pc, #256]	; (80026f4 <HAL_GPIO_Init+0x2c0>)
 80025f4:	4293      	cmp	r3, r2
 80025f6:	d013      	beq.n	8002620 <HAL_GPIO_Init+0x1ec>
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	4a3f      	ldr	r2, [pc, #252]	; (80026f8 <HAL_GPIO_Init+0x2c4>)
 80025fc:	4293      	cmp	r3, r2
 80025fe:	d00d      	beq.n	800261c <HAL_GPIO_Init+0x1e8>
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	4a3e      	ldr	r2, [pc, #248]	; (80026fc <HAL_GPIO_Init+0x2c8>)
 8002604:	4293      	cmp	r3, r2
 8002606:	d007      	beq.n	8002618 <HAL_GPIO_Init+0x1e4>
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	4a3d      	ldr	r2, [pc, #244]	; (8002700 <HAL_GPIO_Init+0x2cc>)
 800260c:	4293      	cmp	r3, r2
 800260e:	d101      	bne.n	8002614 <HAL_GPIO_Init+0x1e0>
 8002610:	2303      	movs	r3, #3
 8002612:	e006      	b.n	8002622 <HAL_GPIO_Init+0x1ee>
 8002614:	2304      	movs	r3, #4
 8002616:	e004      	b.n	8002622 <HAL_GPIO_Init+0x1ee>
 8002618:	2302      	movs	r3, #2
 800261a:	e002      	b.n	8002622 <HAL_GPIO_Init+0x1ee>
 800261c:	2301      	movs	r3, #1
 800261e:	e000      	b.n	8002622 <HAL_GPIO_Init+0x1ee>
 8002620:	2300      	movs	r3, #0
 8002622:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002624:	f002 0203 	and.w	r2, r2, #3
 8002628:	0092      	lsls	r2, r2, #2
 800262a:	4093      	lsls	r3, r2
 800262c:	68fa      	ldr	r2, [r7, #12]
 800262e:	4313      	orrs	r3, r2
 8002630:	60fb      	str	r3, [r7, #12]
 8002632:	492f      	ldr	r1, [pc, #188]	; (80026f0 <HAL_GPIO_Init+0x2bc>)
 8002634:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002636:	089b      	lsrs	r3, r3, #2
 8002638:	3302      	adds	r3, #2
 800263a:	68fa      	ldr	r2, [r7, #12]
 800263c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002640:	683b      	ldr	r3, [r7, #0]
 8002642:	685b      	ldr	r3, [r3, #4]
 8002644:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002648:	2b00      	cmp	r3, #0
 800264a:	d006      	beq.n	800265a <HAL_GPIO_Init+0x226>
 800264c:	4b2d      	ldr	r3, [pc, #180]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 800264e:	681a      	ldr	r2, [r3, #0]
 8002650:	492c      	ldr	r1, [pc, #176]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 8002652:	69bb      	ldr	r3, [r7, #24]
 8002654:	4313      	orrs	r3, r2
 8002656:	600b      	str	r3, [r1, #0]
 8002658:	e006      	b.n	8002668 <HAL_GPIO_Init+0x234>
 800265a:	4b2a      	ldr	r3, [pc, #168]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 800265c:	681a      	ldr	r2, [r3, #0]
 800265e:	69bb      	ldr	r3, [r7, #24]
 8002660:	43db      	mvns	r3, r3
 8002662:	4928      	ldr	r1, [pc, #160]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 8002664:	4013      	ands	r3, r2
 8002666:	600b      	str	r3, [r1, #0]
 8002668:	683b      	ldr	r3, [r7, #0]
 800266a:	685b      	ldr	r3, [r3, #4]
 800266c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002670:	2b00      	cmp	r3, #0
 8002672:	d006      	beq.n	8002682 <HAL_GPIO_Init+0x24e>
 8002674:	4b23      	ldr	r3, [pc, #140]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 8002676:	685a      	ldr	r2, [r3, #4]
 8002678:	4922      	ldr	r1, [pc, #136]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 800267a:	69bb      	ldr	r3, [r7, #24]
 800267c:	4313      	orrs	r3, r2
 800267e:	604b      	str	r3, [r1, #4]
 8002680:	e006      	b.n	8002690 <HAL_GPIO_Init+0x25c>
 8002682:	4b20      	ldr	r3, [pc, #128]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 8002684:	685a      	ldr	r2, [r3, #4]
 8002686:	69bb      	ldr	r3, [r7, #24]
 8002688:	43db      	mvns	r3, r3
 800268a:	491e      	ldr	r1, [pc, #120]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 800268c:	4013      	ands	r3, r2
 800268e:	604b      	str	r3, [r1, #4]
 8002690:	683b      	ldr	r3, [r7, #0]
 8002692:	685b      	ldr	r3, [r3, #4]
 8002694:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002698:	2b00      	cmp	r3, #0
 800269a:	d006      	beq.n	80026aa <HAL_GPIO_Init+0x276>
 800269c:	4b19      	ldr	r3, [pc, #100]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 800269e:	689a      	ldr	r2, [r3, #8]
 80026a0:	4918      	ldr	r1, [pc, #96]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 80026a2:	69bb      	ldr	r3, [r7, #24]
 80026a4:	4313      	orrs	r3, r2
 80026a6:	608b      	str	r3, [r1, #8]
 80026a8:	e006      	b.n	80026b8 <HAL_GPIO_Init+0x284>
 80026aa:	4b16      	ldr	r3, [pc, #88]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 80026ac:	689a      	ldr	r2, [r3, #8]
 80026ae:	69bb      	ldr	r3, [r7, #24]
 80026b0:	43db      	mvns	r3, r3
 80026b2:	4914      	ldr	r1, [pc, #80]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 80026b4:	4013      	ands	r3, r2
 80026b6:	608b      	str	r3, [r1, #8]
 80026b8:	683b      	ldr	r3, [r7, #0]
 80026ba:	685b      	ldr	r3, [r3, #4]
 80026bc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80026c0:	2b00      	cmp	r3, #0
 80026c2:	d021      	beq.n	8002708 <HAL_GPIO_Init+0x2d4>
 80026c4:	4b0f      	ldr	r3, [pc, #60]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 80026c6:	68da      	ldr	r2, [r3, #12]
 80026c8:	490e      	ldr	r1, [pc, #56]	; (8002704 <HAL_GPIO_Init+0x2d0>)
 80026ca:	69bb      	ldr	r3, [r7, #24]
 80026cc:	4313      	orrs	r3, r2
 80026ce:	60cb      	str	r3, [r1, #12]
 80026d0:	e021      	b.n	8002716 <HAL_GPIO_Init+0x2e2>
 80026d2:	bf00      	nop
 80026d4:	10320000 	.word	0x10320000
 80026d8:	10310000 	.word	0x10310000
 80026dc:	10220000 	.word	0x10220000
 80026e0:	10210000 	.word	0x10210000
 80026e4:	10120000 	.word	0x10120000
 80026e8:	10110000 	.word	0x10110000
 80026ec:	40021000 	.word	0x40021000
 80026f0:	40010000 	.word	0x40010000
 80026f4:	40010800 	.word	0x40010800
 80026f8:	40010c00 	.word	0x40010c00
 80026fc:	40011000 	.word	0x40011000
 8002700:	40011400 	.word	0x40011400
 8002704:	40010400 	.word	0x40010400
 8002708:	4b0b      	ldr	r3, [pc, #44]	; (8002738 <HAL_GPIO_Init+0x304>)
 800270a:	68da      	ldr	r2, [r3, #12]
 800270c:	69bb      	ldr	r3, [r7, #24]
 800270e:	43db      	mvns	r3, r3
 8002710:	4909      	ldr	r1, [pc, #36]	; (8002738 <HAL_GPIO_Init+0x304>)
 8002712:	4013      	ands	r3, r2
 8002714:	60cb      	str	r3, [r1, #12]
 8002716:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002718:	3301      	adds	r3, #1
 800271a:	627b      	str	r3, [r7, #36]	; 0x24
 800271c:	683b      	ldr	r3, [r7, #0]
 800271e:	681a      	ldr	r2, [r3, #0]
 8002720:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002722:	fa22 f303 	lsr.w	r3, r2, r3
 8002726:	2b00      	cmp	r3, #0
 8002728:	f47f ae8e 	bne.w	8002448 <HAL_GPIO_Init+0x14>
 800272c:	bf00      	nop
 800272e:	bf00      	nop
 8002730:	372c      	adds	r7, #44	; 0x2c
 8002732:	46bd      	mov	sp, r7
 8002734:	bc80      	pop	{r7}
 8002736:	4770      	bx	lr
 8002738:	40010400 	.word	0x40010400

0800273c <HAL_GPIO_WritePin>:
 800273c:	b480      	push	{r7}
 800273e:	b083      	sub	sp, #12
 8002740:	af00      	add	r7, sp, #0
 8002742:	6078      	str	r0, [r7, #4]
 8002744:	460b      	mov	r3, r1
 8002746:	807b      	strh	r3, [r7, #2]
 8002748:	4613      	mov	r3, r2
 800274a:	707b      	strb	r3, [r7, #1]
 800274c:	787b      	ldrb	r3, [r7, #1]
 800274e:	2b00      	cmp	r3, #0
 8002750:	d003      	beq.n	800275a <HAL_GPIO_WritePin+0x1e>
 8002752:	887a      	ldrh	r2, [r7, #2]
 8002754:	687b      	ldr	r3, [r7, #4]
 8002756:	611a      	str	r2, [r3, #16]
 8002758:	e003      	b.n	8002762 <HAL_GPIO_WritePin+0x26>
 800275a:	887b      	ldrh	r3, [r7, #2]
 800275c:	041a      	lsls	r2, r3, #16
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	611a      	str	r2, [r3, #16]
 8002762:	bf00      	nop
 8002764:	370c      	adds	r7, #12
 8002766:	46bd      	mov	sp, r7
 8002768:	bc80      	pop	{r7}
 800276a:	4770      	bx	lr

0800276c <HAL_I2C_Init>:
 800276c:	b580      	push	{r7, lr}
 800276e:	b084      	sub	sp, #16
 8002770:	af00      	add	r7, sp, #0
 8002772:	6078      	str	r0, [r7, #4]
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	2b00      	cmp	r3, #0
 8002778:	d101      	bne.n	800277e <HAL_I2C_Init+0x12>
 800277a:	2301      	movs	r3, #1
 800277c:	e12b      	b.n	80029d6 <HAL_I2C_Init+0x26a>
 800277e:	687b      	ldr	r3, [r7, #4]
 8002780:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002784:	b2db      	uxtb	r3, r3
 8002786:	2b00      	cmp	r3, #0
 8002788:	d106      	bne.n	8002798 <HAL_I2C_Init+0x2c>
 800278a:	687b      	ldr	r3, [r7, #4]
 800278c:	2200      	movs	r2, #0
 800278e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002792:	6878      	ldr	r0, [r7, #4]
 8002794:	f7fe ffa6 	bl	80016e4 <HAL_I2C_MspInit>
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	2224      	movs	r2, #36	; 0x24
 800279c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	681a      	ldr	r2, [r3, #0]
 80027a6:	687b      	ldr	r3, [r7, #4]
 80027a8:	681b      	ldr	r3, [r3, #0]
 80027aa:	f022 0201 	bic.w	r2, r2, #1
 80027ae:	601a      	str	r2, [r3, #0]
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	681b      	ldr	r3, [r3, #0]
 80027b4:	681a      	ldr	r2, [r3, #0]
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80027be:	601a      	str	r2, [r3, #0]
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	681b      	ldr	r3, [r3, #0]
 80027c4:	681a      	ldr	r2, [r3, #0]
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80027ce:	601a      	str	r2, [r3, #0]
 80027d0:	f001 fc9c 	bl	800410c <HAL_RCC_GetPCLK1Freq>
 80027d4:	60f8      	str	r0, [r7, #12]
 80027d6:	687b      	ldr	r3, [r7, #4]
 80027d8:	685b      	ldr	r3, [r3, #4]
 80027da:	4a81      	ldr	r2, [pc, #516]	; (80029e0 <HAL_I2C_Init+0x274>)
 80027dc:	4293      	cmp	r3, r2
 80027de:	d807      	bhi.n	80027f0 <HAL_I2C_Init+0x84>
 80027e0:	68fb      	ldr	r3, [r7, #12]
 80027e2:	4a80      	ldr	r2, [pc, #512]	; (80029e4 <HAL_I2C_Init+0x278>)
 80027e4:	4293      	cmp	r3, r2
 80027e6:	bf94      	ite	ls
 80027e8:	2301      	movls	r3, #1
 80027ea:	2300      	movhi	r3, #0
 80027ec:	b2db      	uxtb	r3, r3
 80027ee:	e006      	b.n	80027fe <HAL_I2C_Init+0x92>
 80027f0:	68fb      	ldr	r3, [r7, #12]
 80027f2:	4a7d      	ldr	r2, [pc, #500]	; (80029e8 <HAL_I2C_Init+0x27c>)
 80027f4:	4293      	cmp	r3, r2
 80027f6:	bf94      	ite	ls
 80027f8:	2301      	movls	r3, #1
 80027fa:	2300      	movhi	r3, #0
 80027fc:	b2db      	uxtb	r3, r3
 80027fe:	2b00      	cmp	r3, #0
 8002800:	d001      	beq.n	8002806 <HAL_I2C_Init+0x9a>
 8002802:	2301      	movs	r3, #1
 8002804:	e0e7      	b.n	80029d6 <HAL_I2C_Init+0x26a>
 8002806:	68fb      	ldr	r3, [r7, #12]
 8002808:	4a78      	ldr	r2, [pc, #480]	; (80029ec <HAL_I2C_Init+0x280>)
 800280a:	fba2 2303 	umull	r2, r3, r2, r3
 800280e:	0c9b      	lsrs	r3, r3, #18
 8002810:	60bb      	str	r3, [r7, #8]
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	681b      	ldr	r3, [r3, #0]
 8002816:	685b      	ldr	r3, [r3, #4]
 8002818:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	68ba      	ldr	r2, [r7, #8]
 8002822:	430a      	orrs	r2, r1
 8002824:	605a      	str	r2, [r3, #4]
 8002826:	687b      	ldr	r3, [r7, #4]
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	6a1b      	ldr	r3, [r3, #32]
 800282c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	685b      	ldr	r3, [r3, #4]
 8002834:	4a6a      	ldr	r2, [pc, #424]	; (80029e0 <HAL_I2C_Init+0x274>)
 8002836:	4293      	cmp	r3, r2
 8002838:	d802      	bhi.n	8002840 <HAL_I2C_Init+0xd4>
 800283a:	68bb      	ldr	r3, [r7, #8]
 800283c:	3301      	adds	r3, #1
 800283e:	e009      	b.n	8002854 <HAL_I2C_Init+0xe8>
 8002840:	68bb      	ldr	r3, [r7, #8]
 8002842:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8002846:	fb02 f303 	mul.w	r3, r2, r3
 800284a:	4a69      	ldr	r2, [pc, #420]	; (80029f0 <HAL_I2C_Init+0x284>)
 800284c:	fba2 2303 	umull	r2, r3, r2, r3
 8002850:	099b      	lsrs	r3, r3, #6
 8002852:	3301      	adds	r3, #1
 8002854:	687a      	ldr	r2, [r7, #4]
 8002856:	6812      	ldr	r2, [r2, #0]
 8002858:	430b      	orrs	r3, r1
 800285a:	6213      	str	r3, [r2, #32]
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	69db      	ldr	r3, [r3, #28]
 8002862:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8002866:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	685b      	ldr	r3, [r3, #4]
 800286e:	495c      	ldr	r1, [pc, #368]	; (80029e0 <HAL_I2C_Init+0x274>)
 8002870:	428b      	cmp	r3, r1
 8002872:	d819      	bhi.n	80028a8 <HAL_I2C_Init+0x13c>
 8002874:	68fb      	ldr	r3, [r7, #12]
 8002876:	1e59      	subs	r1, r3, #1
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	685b      	ldr	r3, [r3, #4]
 800287c:	005b      	lsls	r3, r3, #1
 800287e:	fbb1 f3f3 	udiv	r3, r1, r3
 8002882:	1c59      	adds	r1, r3, #1
 8002884:	f640 73fc 	movw	r3, #4092	; 0xffc
 8002888:	400b      	ands	r3, r1
 800288a:	2b00      	cmp	r3, #0
 800288c:	d00a      	beq.n	80028a4 <HAL_I2C_Init+0x138>
 800288e:	68fb      	ldr	r3, [r7, #12]
 8002890:	1e59      	subs	r1, r3, #1
 8002892:	687b      	ldr	r3, [r7, #4]
 8002894:	685b      	ldr	r3, [r3, #4]
 8002896:	005b      	lsls	r3, r3, #1
 8002898:	fbb1 f3f3 	udiv	r3, r1, r3
 800289c:	3301      	adds	r3, #1
 800289e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80028a2:	e051      	b.n	8002948 <HAL_I2C_Init+0x1dc>
 80028a4:	2304      	movs	r3, #4
 80028a6:	e04f      	b.n	8002948 <HAL_I2C_Init+0x1dc>
 80028a8:	687b      	ldr	r3, [r7, #4]
 80028aa:	689b      	ldr	r3, [r3, #8]
 80028ac:	2b00      	cmp	r3, #0
 80028ae:	d111      	bne.n	80028d4 <HAL_I2C_Init+0x168>
 80028b0:	68fb      	ldr	r3, [r7, #12]
 80028b2:	1e58      	subs	r0, r3, #1
 80028b4:	687b      	ldr	r3, [r7, #4]
 80028b6:	6859      	ldr	r1, [r3, #4]
 80028b8:	460b      	mov	r3, r1
 80028ba:	005b      	lsls	r3, r3, #1
 80028bc:	440b      	add	r3, r1
 80028be:	fbb0 f3f3 	udiv	r3, r0, r3
 80028c2:	3301      	adds	r3, #1
 80028c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80028c8:	2b00      	cmp	r3, #0
 80028ca:	bf0c      	ite	eq
 80028cc:	2301      	moveq	r3, #1
 80028ce:	2300      	movne	r3, #0
 80028d0:	b2db      	uxtb	r3, r3
 80028d2:	e012      	b.n	80028fa <HAL_I2C_Init+0x18e>
 80028d4:	68fb      	ldr	r3, [r7, #12]
 80028d6:	1e58      	subs	r0, r3, #1
 80028d8:	687b      	ldr	r3, [r7, #4]
 80028da:	6859      	ldr	r1, [r3, #4]
 80028dc:	460b      	mov	r3, r1
 80028de:	009b      	lsls	r3, r3, #2
 80028e0:	440b      	add	r3, r1
 80028e2:	0099      	lsls	r1, r3, #2
 80028e4:	440b      	add	r3, r1
 80028e6:	fbb0 f3f3 	udiv	r3, r0, r3
 80028ea:	3301      	adds	r3, #1
 80028ec:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80028f0:	2b00      	cmp	r3, #0
 80028f2:	bf0c      	ite	eq
 80028f4:	2301      	moveq	r3, #1
 80028f6:	2300      	movne	r3, #0
 80028f8:	b2db      	uxtb	r3, r3
 80028fa:	2b00      	cmp	r3, #0
 80028fc:	d001      	beq.n	8002902 <HAL_I2C_Init+0x196>
 80028fe:	2301      	movs	r3, #1
 8002900:	e022      	b.n	8002948 <HAL_I2C_Init+0x1dc>
 8002902:	687b      	ldr	r3, [r7, #4]
 8002904:	689b      	ldr	r3, [r3, #8]
 8002906:	2b00      	cmp	r3, #0
 8002908:	d10e      	bne.n	8002928 <HAL_I2C_Init+0x1bc>
 800290a:	68fb      	ldr	r3, [r7, #12]
 800290c:	1e58      	subs	r0, r3, #1
 800290e:	687b      	ldr	r3, [r7, #4]
 8002910:	6859      	ldr	r1, [r3, #4]
 8002912:	460b      	mov	r3, r1
 8002914:	005b      	lsls	r3, r3, #1
 8002916:	440b      	add	r3, r1
 8002918:	fbb0 f3f3 	udiv	r3, r0, r3
 800291c:	3301      	adds	r3, #1
 800291e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002922:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002926:	e00f      	b.n	8002948 <HAL_I2C_Init+0x1dc>
 8002928:	68fb      	ldr	r3, [r7, #12]
 800292a:	1e58      	subs	r0, r3, #1
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	6859      	ldr	r1, [r3, #4]
 8002930:	460b      	mov	r3, r1
 8002932:	009b      	lsls	r3, r3, #2
 8002934:	440b      	add	r3, r1
 8002936:	0099      	lsls	r1, r3, #2
 8002938:	440b      	add	r3, r1
 800293a:	fbb0 f3f3 	udiv	r3, r0, r3
 800293e:	3301      	adds	r3, #1
 8002940:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002944:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8002948:	6879      	ldr	r1, [r7, #4]
 800294a:	6809      	ldr	r1, [r1, #0]
 800294c:	4313      	orrs	r3, r2
 800294e:	61cb      	str	r3, [r1, #28]
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	681b      	ldr	r3, [r3, #0]
 8002954:	681b      	ldr	r3, [r3, #0]
 8002956:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 800295a:	687b      	ldr	r3, [r7, #4]
 800295c:	69da      	ldr	r2, [r3, #28]
 800295e:	687b      	ldr	r3, [r7, #4]
 8002960:	6a1b      	ldr	r3, [r3, #32]
 8002962:	431a      	orrs	r2, r3
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	681b      	ldr	r3, [r3, #0]
 8002968:	430a      	orrs	r2, r1
 800296a:	601a      	str	r2, [r3, #0]
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	681b      	ldr	r3, [r3, #0]
 8002970:	689b      	ldr	r3, [r3, #8]
 8002972:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8002976:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800297a:	687a      	ldr	r2, [r7, #4]
 800297c:	6911      	ldr	r1, [r2, #16]
 800297e:	687a      	ldr	r2, [r7, #4]
 8002980:	68d2      	ldr	r2, [r2, #12]
 8002982:	4311      	orrs	r1, r2
 8002984:	687a      	ldr	r2, [r7, #4]
 8002986:	6812      	ldr	r2, [r2, #0]
 8002988:	430b      	orrs	r3, r1
 800298a:	6093      	str	r3, [r2, #8]
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	68db      	ldr	r3, [r3, #12]
 8002992:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	695a      	ldr	r2, [r3, #20]
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	699b      	ldr	r3, [r3, #24]
 800299e:	431a      	orrs	r2, r3
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	430a      	orrs	r2, r1
 80029a6:	60da      	str	r2, [r3, #12]
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	681a      	ldr	r2, [r3, #0]
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	681b      	ldr	r3, [r3, #0]
 80029b2:	f042 0201 	orr.w	r2, r2, #1
 80029b6:	601a      	str	r2, [r3, #0]
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	2200      	movs	r2, #0
 80029bc:	641a      	str	r2, [r3, #64]	; 0x40
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	2220      	movs	r2, #32
 80029c2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80029c6:	687b      	ldr	r3, [r7, #4]
 80029c8:	2200      	movs	r2, #0
 80029ca:	631a      	str	r2, [r3, #48]	; 0x30
 80029cc:	687b      	ldr	r3, [r7, #4]
 80029ce:	2200      	movs	r2, #0
 80029d0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80029d4:	2300      	movs	r3, #0
 80029d6:	4618      	mov	r0, r3
 80029d8:	3710      	adds	r7, #16
 80029da:	46bd      	mov	sp, r7
 80029dc:	bd80      	pop	{r7, pc}
 80029de:	bf00      	nop
 80029e0:	000186a0 	.word	0x000186a0
 80029e4:	001e847f 	.word	0x001e847f
 80029e8:	003d08ff 	.word	0x003d08ff
 80029ec:	431bde83 	.word	0x431bde83
 80029f0:	10624dd3 	.word	0x10624dd3

080029f4 <HAL_I2C_Master_Transmit>:
 80029f4:	b580      	push	{r7, lr}
 80029f6:	b088      	sub	sp, #32
 80029f8:	af02      	add	r7, sp, #8
 80029fa:	60f8      	str	r0, [r7, #12]
 80029fc:	607a      	str	r2, [r7, #4]
 80029fe:	461a      	mov	r2, r3
 8002a00:	460b      	mov	r3, r1
 8002a02:	817b      	strh	r3, [r7, #10]
 8002a04:	4613      	mov	r3, r2
 8002a06:	813b      	strh	r3, [r7, #8]
 8002a08:	f7ff fb28 	bl	800205c <HAL_GetTick>
 8002a0c:	6178      	str	r0, [r7, #20]
 8002a0e:	68fb      	ldr	r3, [r7, #12]
 8002a10:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002a14:	b2db      	uxtb	r3, r3
 8002a16:	2b20      	cmp	r3, #32
 8002a18:	f040 80e0 	bne.w	8002bdc <HAL_I2C_Master_Transmit+0x1e8>
 8002a1c:	697b      	ldr	r3, [r7, #20]
 8002a1e:	9300      	str	r3, [sp, #0]
 8002a20:	2319      	movs	r3, #25
 8002a22:	2201      	movs	r2, #1
 8002a24:	4970      	ldr	r1, [pc, #448]	; (8002be8 <HAL_I2C_Master_Transmit+0x1f4>)
 8002a26:	68f8      	ldr	r0, [r7, #12]
 8002a28:	f000 fdc0 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 8002a2c:	4603      	mov	r3, r0
 8002a2e:	2b00      	cmp	r3, #0
 8002a30:	d001      	beq.n	8002a36 <HAL_I2C_Master_Transmit+0x42>
 8002a32:	2302      	movs	r3, #2
 8002a34:	e0d3      	b.n	8002bde <HAL_I2C_Master_Transmit+0x1ea>
 8002a36:	68fb      	ldr	r3, [r7, #12]
 8002a38:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002a3c:	2b01      	cmp	r3, #1
 8002a3e:	d101      	bne.n	8002a44 <HAL_I2C_Master_Transmit+0x50>
 8002a40:	2302      	movs	r3, #2
 8002a42:	e0cc      	b.n	8002bde <HAL_I2C_Master_Transmit+0x1ea>
 8002a44:	68fb      	ldr	r3, [r7, #12]
 8002a46:	2201      	movs	r2, #1
 8002a48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002a4c:	68fb      	ldr	r3, [r7, #12]
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	f003 0301 	and.w	r3, r3, #1
 8002a56:	2b01      	cmp	r3, #1
 8002a58:	d007      	beq.n	8002a6a <HAL_I2C_Master_Transmit+0x76>
 8002a5a:	68fb      	ldr	r3, [r7, #12]
 8002a5c:	681b      	ldr	r3, [r3, #0]
 8002a5e:	681a      	ldr	r2, [r3, #0]
 8002a60:	68fb      	ldr	r3, [r7, #12]
 8002a62:	681b      	ldr	r3, [r3, #0]
 8002a64:	f042 0201 	orr.w	r2, r2, #1
 8002a68:	601a      	str	r2, [r3, #0]
 8002a6a:	68fb      	ldr	r3, [r7, #12]
 8002a6c:	681b      	ldr	r3, [r3, #0]
 8002a6e:	681a      	ldr	r2, [r3, #0]
 8002a70:	68fb      	ldr	r3, [r7, #12]
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002a78:	601a      	str	r2, [r3, #0]
 8002a7a:	68fb      	ldr	r3, [r7, #12]
 8002a7c:	2221      	movs	r2, #33	; 0x21
 8002a7e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a82:	68fb      	ldr	r3, [r7, #12]
 8002a84:	2210      	movs	r2, #16
 8002a86:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002a8a:	68fb      	ldr	r3, [r7, #12]
 8002a8c:	2200      	movs	r2, #0
 8002a8e:	641a      	str	r2, [r3, #64]	; 0x40
 8002a90:	68fb      	ldr	r3, [r7, #12]
 8002a92:	687a      	ldr	r2, [r7, #4]
 8002a94:	625a      	str	r2, [r3, #36]	; 0x24
 8002a96:	68fb      	ldr	r3, [r7, #12]
 8002a98:	893a      	ldrh	r2, [r7, #8]
 8002a9a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002a9c:	68fb      	ldr	r3, [r7, #12]
 8002a9e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002aa0:	b29a      	uxth	r2, r3
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	851a      	strh	r2, [r3, #40]	; 0x28
 8002aa6:	68fb      	ldr	r3, [r7, #12]
 8002aa8:	4a50      	ldr	r2, [pc, #320]	; (8002bec <HAL_I2C_Master_Transmit+0x1f8>)
 8002aaa:	62da      	str	r2, [r3, #44]	; 0x2c
 8002aac:	8979      	ldrh	r1, [r7, #10]
 8002aae:	697b      	ldr	r3, [r7, #20]
 8002ab0:	6a3a      	ldr	r2, [r7, #32]
 8002ab2:	68f8      	ldr	r0, [r7, #12]
 8002ab4:	f000 fc2a 	bl	800330c <I2C_MasterRequestWrite>
 8002ab8:	4603      	mov	r3, r0
 8002aba:	2b00      	cmp	r3, #0
 8002abc:	d001      	beq.n	8002ac2 <HAL_I2C_Master_Transmit+0xce>
 8002abe:	2301      	movs	r3, #1
 8002ac0:	e08d      	b.n	8002bde <HAL_I2C_Master_Transmit+0x1ea>
 8002ac2:	2300      	movs	r3, #0
 8002ac4:	613b      	str	r3, [r7, #16]
 8002ac6:	68fb      	ldr	r3, [r7, #12]
 8002ac8:	681b      	ldr	r3, [r3, #0]
 8002aca:	695b      	ldr	r3, [r3, #20]
 8002acc:	613b      	str	r3, [r7, #16]
 8002ace:	68fb      	ldr	r3, [r7, #12]
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	699b      	ldr	r3, [r3, #24]
 8002ad4:	613b      	str	r3, [r7, #16]
 8002ad6:	693b      	ldr	r3, [r7, #16]
 8002ad8:	e066      	b.n	8002ba8 <HAL_I2C_Master_Transmit+0x1b4>
 8002ada:	697a      	ldr	r2, [r7, #20]
 8002adc:	6a39      	ldr	r1, [r7, #32]
 8002ade:	68f8      	ldr	r0, [r7, #12]
 8002ae0:	f000 fe3a 	bl	8003758 <I2C_WaitOnTXEFlagUntilTimeout>
 8002ae4:	4603      	mov	r3, r0
 8002ae6:	2b00      	cmp	r3, #0
 8002ae8:	d00d      	beq.n	8002b06 <HAL_I2C_Master_Transmit+0x112>
 8002aea:	68fb      	ldr	r3, [r7, #12]
 8002aec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002aee:	2b04      	cmp	r3, #4
 8002af0:	d107      	bne.n	8002b02 <HAL_I2C_Master_Transmit+0x10e>
 8002af2:	68fb      	ldr	r3, [r7, #12]
 8002af4:	681b      	ldr	r3, [r3, #0]
 8002af6:	681a      	ldr	r2, [r3, #0]
 8002af8:	68fb      	ldr	r3, [r7, #12]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002b00:	601a      	str	r2, [r3, #0]
 8002b02:	2301      	movs	r3, #1
 8002b04:	e06b      	b.n	8002bde <HAL_I2C_Master_Transmit+0x1ea>
 8002b06:	68fb      	ldr	r3, [r7, #12]
 8002b08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b0a:	781a      	ldrb	r2, [r3, #0]
 8002b0c:	68fb      	ldr	r3, [r7, #12]
 8002b0e:	681b      	ldr	r3, [r3, #0]
 8002b10:	611a      	str	r2, [r3, #16]
 8002b12:	68fb      	ldr	r3, [r7, #12]
 8002b14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b16:	1c5a      	adds	r2, r3, #1
 8002b18:	68fb      	ldr	r3, [r7, #12]
 8002b1a:	625a      	str	r2, [r3, #36]	; 0x24
 8002b1c:	68fb      	ldr	r3, [r7, #12]
 8002b1e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002b20:	b29b      	uxth	r3, r3
 8002b22:	3b01      	subs	r3, #1
 8002b24:	b29a      	uxth	r2, r3
 8002b26:	68fb      	ldr	r3, [r7, #12]
 8002b28:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002b2a:	68fb      	ldr	r3, [r7, #12]
 8002b2c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002b2e:	3b01      	subs	r3, #1
 8002b30:	b29a      	uxth	r2, r3
 8002b32:	68fb      	ldr	r3, [r7, #12]
 8002b34:	851a      	strh	r2, [r3, #40]	; 0x28
 8002b36:	68fb      	ldr	r3, [r7, #12]
 8002b38:	681b      	ldr	r3, [r3, #0]
 8002b3a:	695b      	ldr	r3, [r3, #20]
 8002b3c:	f003 0304 	and.w	r3, r3, #4
 8002b40:	2b04      	cmp	r3, #4
 8002b42:	d11b      	bne.n	8002b7c <HAL_I2C_Master_Transmit+0x188>
 8002b44:	68fb      	ldr	r3, [r7, #12]
 8002b46:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002b48:	2b00      	cmp	r3, #0
 8002b4a:	d017      	beq.n	8002b7c <HAL_I2C_Master_Transmit+0x188>
 8002b4c:	68fb      	ldr	r3, [r7, #12]
 8002b4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b50:	781a      	ldrb	r2, [r3, #0]
 8002b52:	68fb      	ldr	r3, [r7, #12]
 8002b54:	681b      	ldr	r3, [r3, #0]
 8002b56:	611a      	str	r2, [r3, #16]
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b5c:	1c5a      	adds	r2, r3, #1
 8002b5e:	68fb      	ldr	r3, [r7, #12]
 8002b60:	625a      	str	r2, [r3, #36]	; 0x24
 8002b62:	68fb      	ldr	r3, [r7, #12]
 8002b64:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002b66:	b29b      	uxth	r3, r3
 8002b68:	3b01      	subs	r3, #1
 8002b6a:	b29a      	uxth	r2, r3
 8002b6c:	68fb      	ldr	r3, [r7, #12]
 8002b6e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002b74:	3b01      	subs	r3, #1
 8002b76:	b29a      	uxth	r2, r3
 8002b78:	68fb      	ldr	r3, [r7, #12]
 8002b7a:	851a      	strh	r2, [r3, #40]	; 0x28
 8002b7c:	697a      	ldr	r2, [r7, #20]
 8002b7e:	6a39      	ldr	r1, [r7, #32]
 8002b80:	68f8      	ldr	r0, [r7, #12]
 8002b82:	f000 fe2a 	bl	80037da <I2C_WaitOnBTFFlagUntilTimeout>
 8002b86:	4603      	mov	r3, r0
 8002b88:	2b00      	cmp	r3, #0
 8002b8a:	d00d      	beq.n	8002ba8 <HAL_I2C_Master_Transmit+0x1b4>
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b90:	2b04      	cmp	r3, #4
 8002b92:	d107      	bne.n	8002ba4 <HAL_I2C_Master_Transmit+0x1b0>
 8002b94:	68fb      	ldr	r3, [r7, #12]
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	681a      	ldr	r2, [r3, #0]
 8002b9a:	68fb      	ldr	r3, [r7, #12]
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002ba2:	601a      	str	r2, [r3, #0]
 8002ba4:	2301      	movs	r3, #1
 8002ba6:	e01a      	b.n	8002bde <HAL_I2C_Master_Transmit+0x1ea>
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	d194      	bne.n	8002ada <HAL_I2C_Master_Transmit+0xe6>
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	681a      	ldr	r2, [r3, #0]
 8002bb6:	68fb      	ldr	r3, [r7, #12]
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002bbe:	601a      	str	r2, [r3, #0]
 8002bc0:	68fb      	ldr	r3, [r7, #12]
 8002bc2:	2220      	movs	r2, #32
 8002bc4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002bc8:	68fb      	ldr	r3, [r7, #12]
 8002bca:	2200      	movs	r2, #0
 8002bcc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002bd0:	68fb      	ldr	r3, [r7, #12]
 8002bd2:	2200      	movs	r2, #0
 8002bd4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002bd8:	2300      	movs	r3, #0
 8002bda:	e000      	b.n	8002bde <HAL_I2C_Master_Transmit+0x1ea>
 8002bdc:	2302      	movs	r3, #2
 8002bde:	4618      	mov	r0, r3
 8002be0:	3718      	adds	r7, #24
 8002be2:	46bd      	mov	sp, r7
 8002be4:	bd80      	pop	{r7, pc}
 8002be6:	bf00      	nop
 8002be8:	00100002 	.word	0x00100002
 8002bec:	ffff0000 	.word	0xffff0000

08002bf0 <HAL_I2C_Master_Receive>:
 8002bf0:	b580      	push	{r7, lr}
 8002bf2:	b08c      	sub	sp, #48	; 0x30
 8002bf4:	af02      	add	r7, sp, #8
 8002bf6:	60f8      	str	r0, [r7, #12]
 8002bf8:	607a      	str	r2, [r7, #4]
 8002bfa:	461a      	mov	r2, r3
 8002bfc:	460b      	mov	r3, r1
 8002bfe:	817b      	strh	r3, [r7, #10]
 8002c00:	4613      	mov	r3, r2
 8002c02:	813b      	strh	r3, [r7, #8]
 8002c04:	2300      	movs	r3, #0
 8002c06:	623b      	str	r3, [r7, #32]
 8002c08:	f7ff fa28 	bl	800205c <HAL_GetTick>
 8002c0c:	6278      	str	r0, [r7, #36]	; 0x24
 8002c0e:	68fb      	ldr	r3, [r7, #12]
 8002c10:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002c14:	b2db      	uxtb	r3, r3
 8002c16:	2b20      	cmp	r3, #32
 8002c18:	f040 823f 	bne.w	800309a <HAL_I2C_Master_Receive+0x4aa>
 8002c1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002c1e:	9300      	str	r3, [sp, #0]
 8002c20:	2319      	movs	r3, #25
 8002c22:	2201      	movs	r2, #1
 8002c24:	497f      	ldr	r1, [pc, #508]	; (8002e24 <HAL_I2C_Master_Receive+0x234>)
 8002c26:	68f8      	ldr	r0, [r7, #12]
 8002c28:	f000 fcc0 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 8002c2c:	4603      	mov	r3, r0
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d001      	beq.n	8002c36 <HAL_I2C_Master_Receive+0x46>
 8002c32:	2302      	movs	r3, #2
 8002c34:	e232      	b.n	800309c <HAL_I2C_Master_Receive+0x4ac>
 8002c36:	68fb      	ldr	r3, [r7, #12]
 8002c38:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002c3c:	2b01      	cmp	r3, #1
 8002c3e:	d101      	bne.n	8002c44 <HAL_I2C_Master_Receive+0x54>
 8002c40:	2302      	movs	r3, #2
 8002c42:	e22b      	b.n	800309c <HAL_I2C_Master_Receive+0x4ac>
 8002c44:	68fb      	ldr	r3, [r7, #12]
 8002c46:	2201      	movs	r2, #1
 8002c48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c4c:	68fb      	ldr	r3, [r7, #12]
 8002c4e:	681b      	ldr	r3, [r3, #0]
 8002c50:	681b      	ldr	r3, [r3, #0]
 8002c52:	f003 0301 	and.w	r3, r3, #1
 8002c56:	2b01      	cmp	r3, #1
 8002c58:	d007      	beq.n	8002c6a <HAL_I2C_Master_Receive+0x7a>
 8002c5a:	68fb      	ldr	r3, [r7, #12]
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	681a      	ldr	r2, [r3, #0]
 8002c60:	68fb      	ldr	r3, [r7, #12]
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	f042 0201 	orr.w	r2, r2, #1
 8002c68:	601a      	str	r2, [r3, #0]
 8002c6a:	68fb      	ldr	r3, [r7, #12]
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	681a      	ldr	r2, [r3, #0]
 8002c70:	68fb      	ldr	r3, [r7, #12]
 8002c72:	681b      	ldr	r3, [r3, #0]
 8002c74:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002c78:	601a      	str	r2, [r3, #0]
 8002c7a:	68fb      	ldr	r3, [r7, #12]
 8002c7c:	2222      	movs	r2, #34	; 0x22
 8002c7e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c82:	68fb      	ldr	r3, [r7, #12]
 8002c84:	2210      	movs	r2, #16
 8002c86:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002c8a:	68fb      	ldr	r3, [r7, #12]
 8002c8c:	2200      	movs	r2, #0
 8002c8e:	641a      	str	r2, [r3, #64]	; 0x40
 8002c90:	68fb      	ldr	r3, [r7, #12]
 8002c92:	687a      	ldr	r2, [r7, #4]
 8002c94:	625a      	str	r2, [r3, #36]	; 0x24
 8002c96:	68fb      	ldr	r3, [r7, #12]
 8002c98:	893a      	ldrh	r2, [r7, #8]
 8002c9a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002c9c:	68fb      	ldr	r3, [r7, #12]
 8002c9e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002ca0:	b29a      	uxth	r2, r3
 8002ca2:	68fb      	ldr	r3, [r7, #12]
 8002ca4:	851a      	strh	r2, [r3, #40]	; 0x28
 8002ca6:	68fb      	ldr	r3, [r7, #12]
 8002ca8:	4a5f      	ldr	r2, [pc, #380]	; (8002e28 <HAL_I2C_Master_Receive+0x238>)
 8002caa:	62da      	str	r2, [r3, #44]	; 0x2c
 8002cac:	8979      	ldrh	r1, [r7, #10]
 8002cae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002cb0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002cb2:	68f8      	ldr	r0, [r7, #12]
 8002cb4:	f000 fbac 	bl	8003410 <I2C_MasterRequestRead>
 8002cb8:	4603      	mov	r3, r0
 8002cba:	2b00      	cmp	r3, #0
 8002cbc:	d001      	beq.n	8002cc2 <HAL_I2C_Master_Receive+0xd2>
 8002cbe:	2301      	movs	r3, #1
 8002cc0:	e1ec      	b.n	800309c <HAL_I2C_Master_Receive+0x4ac>
 8002cc2:	68fb      	ldr	r3, [r7, #12]
 8002cc4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002cc6:	2b00      	cmp	r3, #0
 8002cc8:	d113      	bne.n	8002cf2 <HAL_I2C_Master_Receive+0x102>
 8002cca:	2300      	movs	r3, #0
 8002ccc:	61fb      	str	r3, [r7, #28]
 8002cce:	68fb      	ldr	r3, [r7, #12]
 8002cd0:	681b      	ldr	r3, [r3, #0]
 8002cd2:	695b      	ldr	r3, [r3, #20]
 8002cd4:	61fb      	str	r3, [r7, #28]
 8002cd6:	68fb      	ldr	r3, [r7, #12]
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	699b      	ldr	r3, [r3, #24]
 8002cdc:	61fb      	str	r3, [r7, #28]
 8002cde:	69fb      	ldr	r3, [r7, #28]
 8002ce0:	68fb      	ldr	r3, [r7, #12]
 8002ce2:	681b      	ldr	r3, [r3, #0]
 8002ce4:	681a      	ldr	r2, [r3, #0]
 8002ce6:	68fb      	ldr	r3, [r7, #12]
 8002ce8:	681b      	ldr	r3, [r3, #0]
 8002cea:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002cee:	601a      	str	r2, [r3, #0]
 8002cf0:	e1c0      	b.n	8003074 <HAL_I2C_Master_Receive+0x484>
 8002cf2:	68fb      	ldr	r3, [r7, #12]
 8002cf4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002cf6:	2b01      	cmp	r3, #1
 8002cf8:	d11e      	bne.n	8002d38 <HAL_I2C_Master_Receive+0x148>
 8002cfa:	68fb      	ldr	r3, [r7, #12]
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	681a      	ldr	r2, [r3, #0]
 8002d00:	68fb      	ldr	r3, [r7, #12]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002d08:	601a      	str	r2, [r3, #0]
 8002d0a:	b672      	cpsid	i
 8002d0c:	bf00      	nop
 8002d0e:	2300      	movs	r3, #0
 8002d10:	61bb      	str	r3, [r7, #24]
 8002d12:	68fb      	ldr	r3, [r7, #12]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	695b      	ldr	r3, [r3, #20]
 8002d18:	61bb      	str	r3, [r7, #24]
 8002d1a:	68fb      	ldr	r3, [r7, #12]
 8002d1c:	681b      	ldr	r3, [r3, #0]
 8002d1e:	699b      	ldr	r3, [r3, #24]
 8002d20:	61bb      	str	r3, [r7, #24]
 8002d22:	69bb      	ldr	r3, [r7, #24]
 8002d24:	68fb      	ldr	r3, [r7, #12]
 8002d26:	681b      	ldr	r3, [r3, #0]
 8002d28:	681a      	ldr	r2, [r3, #0]
 8002d2a:	68fb      	ldr	r3, [r7, #12]
 8002d2c:	681b      	ldr	r3, [r3, #0]
 8002d2e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002d32:	601a      	str	r2, [r3, #0]
 8002d34:	b662      	cpsie	i
 8002d36:	e035      	b.n	8002da4 <HAL_I2C_Master_Receive+0x1b4>
 8002d38:	68fb      	ldr	r3, [r7, #12]
 8002d3a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002d3c:	2b02      	cmp	r3, #2
 8002d3e:	d11e      	bne.n	8002d7e <HAL_I2C_Master_Receive+0x18e>
 8002d40:	68fb      	ldr	r3, [r7, #12]
 8002d42:	681b      	ldr	r3, [r3, #0]
 8002d44:	681a      	ldr	r2, [r3, #0]
 8002d46:	68fb      	ldr	r3, [r7, #12]
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002d4e:	601a      	str	r2, [r3, #0]
 8002d50:	b672      	cpsid	i
 8002d52:	bf00      	nop
 8002d54:	2300      	movs	r3, #0
 8002d56:	617b      	str	r3, [r7, #20]
 8002d58:	68fb      	ldr	r3, [r7, #12]
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	695b      	ldr	r3, [r3, #20]
 8002d5e:	617b      	str	r3, [r7, #20]
 8002d60:	68fb      	ldr	r3, [r7, #12]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	699b      	ldr	r3, [r3, #24]
 8002d66:	617b      	str	r3, [r7, #20]
 8002d68:	697b      	ldr	r3, [r7, #20]
 8002d6a:	68fb      	ldr	r3, [r7, #12]
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	681a      	ldr	r2, [r3, #0]
 8002d70:	68fb      	ldr	r3, [r7, #12]
 8002d72:	681b      	ldr	r3, [r3, #0]
 8002d74:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002d78:	601a      	str	r2, [r3, #0]
 8002d7a:	b662      	cpsie	i
 8002d7c:	e012      	b.n	8002da4 <HAL_I2C_Master_Receive+0x1b4>
 8002d7e:	68fb      	ldr	r3, [r7, #12]
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	681a      	ldr	r2, [r3, #0]
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002d8c:	601a      	str	r2, [r3, #0]
 8002d8e:	2300      	movs	r3, #0
 8002d90:	613b      	str	r3, [r7, #16]
 8002d92:	68fb      	ldr	r3, [r7, #12]
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	695b      	ldr	r3, [r3, #20]
 8002d98:	613b      	str	r3, [r7, #16]
 8002d9a:	68fb      	ldr	r3, [r7, #12]
 8002d9c:	681b      	ldr	r3, [r3, #0]
 8002d9e:	699b      	ldr	r3, [r3, #24]
 8002da0:	613b      	str	r3, [r7, #16]
 8002da2:	693b      	ldr	r3, [r7, #16]
 8002da4:	e166      	b.n	8003074 <HAL_I2C_Master_Receive+0x484>
 8002da6:	68fb      	ldr	r3, [r7, #12]
 8002da8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002daa:	2b03      	cmp	r3, #3
 8002dac:	f200 811f 	bhi.w	8002fee <HAL_I2C_Master_Receive+0x3fe>
 8002db0:	68fb      	ldr	r3, [r7, #12]
 8002db2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002db4:	2b01      	cmp	r3, #1
 8002db6:	d123      	bne.n	8002e00 <HAL_I2C_Master_Receive+0x210>
 8002db8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002dba:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8002dbc:	68f8      	ldr	r0, [r7, #12]
 8002dbe:	f000 fd4d 	bl	800385c <I2C_WaitOnRXNEFlagUntilTimeout>
 8002dc2:	4603      	mov	r3, r0
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	d001      	beq.n	8002dcc <HAL_I2C_Master_Receive+0x1dc>
 8002dc8:	2301      	movs	r3, #1
 8002dca:	e167      	b.n	800309c <HAL_I2C_Master_Receive+0x4ac>
 8002dcc:	68fb      	ldr	r3, [r7, #12]
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	691a      	ldr	r2, [r3, #16]
 8002dd2:	68fb      	ldr	r3, [r7, #12]
 8002dd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dd6:	b2d2      	uxtb	r2, r2
 8002dd8:	701a      	strb	r2, [r3, #0]
 8002dda:	68fb      	ldr	r3, [r7, #12]
 8002ddc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dde:	1c5a      	adds	r2, r3, #1
 8002de0:	68fb      	ldr	r3, [r7, #12]
 8002de2:	625a      	str	r2, [r3, #36]	; 0x24
 8002de4:	68fb      	ldr	r3, [r7, #12]
 8002de6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002de8:	3b01      	subs	r3, #1
 8002dea:	b29a      	uxth	r2, r3
 8002dec:	68fb      	ldr	r3, [r7, #12]
 8002dee:	851a      	strh	r2, [r3, #40]	; 0x28
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002df4:	b29b      	uxth	r3, r3
 8002df6:	3b01      	subs	r3, #1
 8002df8:	b29a      	uxth	r2, r3
 8002dfa:	68fb      	ldr	r3, [r7, #12]
 8002dfc:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002dfe:	e139      	b.n	8003074 <HAL_I2C_Master_Receive+0x484>
 8002e00:	68fb      	ldr	r3, [r7, #12]
 8002e02:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002e04:	2b02      	cmp	r3, #2
 8002e06:	d152      	bne.n	8002eae <HAL_I2C_Master_Receive+0x2be>
 8002e08:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002e0a:	9300      	str	r3, [sp, #0]
 8002e0c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e0e:	2200      	movs	r2, #0
 8002e10:	4906      	ldr	r1, [pc, #24]	; (8002e2c <HAL_I2C_Master_Receive+0x23c>)
 8002e12:	68f8      	ldr	r0, [r7, #12]
 8002e14:	f000 fbca 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 8002e18:	4603      	mov	r3, r0
 8002e1a:	2b00      	cmp	r3, #0
 8002e1c:	d008      	beq.n	8002e30 <HAL_I2C_Master_Receive+0x240>
 8002e1e:	2301      	movs	r3, #1
 8002e20:	e13c      	b.n	800309c <HAL_I2C_Master_Receive+0x4ac>
 8002e22:	bf00      	nop
 8002e24:	00100002 	.word	0x00100002
 8002e28:	ffff0000 	.word	0xffff0000
 8002e2c:	00010004 	.word	0x00010004
 8002e30:	b672      	cpsid	i
 8002e32:	bf00      	nop
 8002e34:	68fb      	ldr	r3, [r7, #12]
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	681a      	ldr	r2, [r3, #0]
 8002e3a:	68fb      	ldr	r3, [r7, #12]
 8002e3c:	681b      	ldr	r3, [r3, #0]
 8002e3e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002e42:	601a      	str	r2, [r3, #0]
 8002e44:	68fb      	ldr	r3, [r7, #12]
 8002e46:	681b      	ldr	r3, [r3, #0]
 8002e48:	691a      	ldr	r2, [r3, #16]
 8002e4a:	68fb      	ldr	r3, [r7, #12]
 8002e4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e4e:	b2d2      	uxtb	r2, r2
 8002e50:	701a      	strb	r2, [r3, #0]
 8002e52:	68fb      	ldr	r3, [r7, #12]
 8002e54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e56:	1c5a      	adds	r2, r3, #1
 8002e58:	68fb      	ldr	r3, [r7, #12]
 8002e5a:	625a      	str	r2, [r3, #36]	; 0x24
 8002e5c:	68fb      	ldr	r3, [r7, #12]
 8002e5e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002e60:	3b01      	subs	r3, #1
 8002e62:	b29a      	uxth	r2, r3
 8002e64:	68fb      	ldr	r3, [r7, #12]
 8002e66:	851a      	strh	r2, [r3, #40]	; 0x28
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002e6c:	b29b      	uxth	r3, r3
 8002e6e:	3b01      	subs	r3, #1
 8002e70:	b29a      	uxth	r2, r3
 8002e72:	68fb      	ldr	r3, [r7, #12]
 8002e74:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002e76:	b662      	cpsie	i
 8002e78:	bf00      	nop
 8002e7a:	68fb      	ldr	r3, [r7, #12]
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	691a      	ldr	r2, [r3, #16]
 8002e80:	68fb      	ldr	r3, [r7, #12]
 8002e82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e84:	b2d2      	uxtb	r2, r2
 8002e86:	701a      	strb	r2, [r3, #0]
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e8c:	1c5a      	adds	r2, r3, #1
 8002e8e:	68fb      	ldr	r3, [r7, #12]
 8002e90:	625a      	str	r2, [r3, #36]	; 0x24
 8002e92:	68fb      	ldr	r3, [r7, #12]
 8002e94:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002e96:	3b01      	subs	r3, #1
 8002e98:	b29a      	uxth	r2, r3
 8002e9a:	68fb      	ldr	r3, [r7, #12]
 8002e9c:	851a      	strh	r2, [r3, #40]	; 0x28
 8002e9e:	68fb      	ldr	r3, [r7, #12]
 8002ea0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002ea2:	b29b      	uxth	r3, r3
 8002ea4:	3b01      	subs	r3, #1
 8002ea6:	b29a      	uxth	r2, r3
 8002ea8:	68fb      	ldr	r3, [r7, #12]
 8002eaa:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002eac:	e0e2      	b.n	8003074 <HAL_I2C_Master_Receive+0x484>
 8002eae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002eb0:	9300      	str	r3, [sp, #0]
 8002eb2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002eb4:	2200      	movs	r2, #0
 8002eb6:	497b      	ldr	r1, [pc, #492]	; (80030a4 <HAL_I2C_Master_Receive+0x4b4>)
 8002eb8:	68f8      	ldr	r0, [r7, #12]
 8002eba:	f000 fb77 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 8002ebe:	4603      	mov	r3, r0
 8002ec0:	2b00      	cmp	r3, #0
 8002ec2:	d001      	beq.n	8002ec8 <HAL_I2C_Master_Receive+0x2d8>
 8002ec4:	2301      	movs	r3, #1
 8002ec6:	e0e9      	b.n	800309c <HAL_I2C_Master_Receive+0x4ac>
 8002ec8:	68fb      	ldr	r3, [r7, #12]
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	681a      	ldr	r2, [r3, #0]
 8002ece:	68fb      	ldr	r3, [r7, #12]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002ed6:	601a      	str	r2, [r3, #0]
 8002ed8:	b672      	cpsid	i
 8002eda:	bf00      	nop
 8002edc:	68fb      	ldr	r3, [r7, #12]
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	691a      	ldr	r2, [r3, #16]
 8002ee2:	68fb      	ldr	r3, [r7, #12]
 8002ee4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ee6:	b2d2      	uxtb	r2, r2
 8002ee8:	701a      	strb	r2, [r3, #0]
 8002eea:	68fb      	ldr	r3, [r7, #12]
 8002eec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002eee:	1c5a      	adds	r2, r3, #1
 8002ef0:	68fb      	ldr	r3, [r7, #12]
 8002ef2:	625a      	str	r2, [r3, #36]	; 0x24
 8002ef4:	68fb      	ldr	r3, [r7, #12]
 8002ef6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002ef8:	3b01      	subs	r3, #1
 8002efa:	b29a      	uxth	r2, r3
 8002efc:	68fb      	ldr	r3, [r7, #12]
 8002efe:	851a      	strh	r2, [r3, #40]	; 0x28
 8002f00:	68fb      	ldr	r3, [r7, #12]
 8002f02:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002f04:	b29b      	uxth	r3, r3
 8002f06:	3b01      	subs	r3, #1
 8002f08:	b29a      	uxth	r2, r3
 8002f0a:	68fb      	ldr	r3, [r7, #12]
 8002f0c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002f0e:	4b66      	ldr	r3, [pc, #408]	; (80030a8 <HAL_I2C_Master_Receive+0x4b8>)
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	08db      	lsrs	r3, r3, #3
 8002f14:	4a65      	ldr	r2, [pc, #404]	; (80030ac <HAL_I2C_Master_Receive+0x4bc>)
 8002f16:	fba2 2303 	umull	r2, r3, r2, r3
 8002f1a:	0a1a      	lsrs	r2, r3, #8
 8002f1c:	4613      	mov	r3, r2
 8002f1e:	009b      	lsls	r3, r3, #2
 8002f20:	4413      	add	r3, r2
 8002f22:	00da      	lsls	r2, r3, #3
 8002f24:	1ad3      	subs	r3, r2, r3
 8002f26:	623b      	str	r3, [r7, #32]
 8002f28:	6a3b      	ldr	r3, [r7, #32]
 8002f2a:	3b01      	subs	r3, #1
 8002f2c:	623b      	str	r3, [r7, #32]
 8002f2e:	6a3b      	ldr	r3, [r7, #32]
 8002f30:	2b00      	cmp	r3, #0
 8002f32:	d118      	bne.n	8002f66 <HAL_I2C_Master_Receive+0x376>
 8002f34:	68fb      	ldr	r3, [r7, #12]
 8002f36:	2200      	movs	r2, #0
 8002f38:	631a      	str	r2, [r3, #48]	; 0x30
 8002f3a:	68fb      	ldr	r3, [r7, #12]
 8002f3c:	2220      	movs	r2, #32
 8002f3e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002f42:	68fb      	ldr	r3, [r7, #12]
 8002f44:	2200      	movs	r2, #0
 8002f46:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002f4a:	68fb      	ldr	r3, [r7, #12]
 8002f4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002f4e:	f043 0220 	orr.w	r2, r3, #32
 8002f52:	68fb      	ldr	r3, [r7, #12]
 8002f54:	641a      	str	r2, [r3, #64]	; 0x40
 8002f56:	b662      	cpsie	i
 8002f58:	bf00      	nop
 8002f5a:	68fb      	ldr	r3, [r7, #12]
 8002f5c:	2200      	movs	r2, #0
 8002f5e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002f62:	2301      	movs	r3, #1
 8002f64:	e09a      	b.n	800309c <HAL_I2C_Master_Receive+0x4ac>
 8002f66:	68fb      	ldr	r3, [r7, #12]
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	695b      	ldr	r3, [r3, #20]
 8002f6c:	f003 0304 	and.w	r3, r3, #4
 8002f70:	2b04      	cmp	r3, #4
 8002f72:	d1d9      	bne.n	8002f28 <HAL_I2C_Master_Receive+0x338>
 8002f74:	68fb      	ldr	r3, [r7, #12]
 8002f76:	681b      	ldr	r3, [r3, #0]
 8002f78:	681a      	ldr	r2, [r3, #0]
 8002f7a:	68fb      	ldr	r3, [r7, #12]
 8002f7c:	681b      	ldr	r3, [r3, #0]
 8002f7e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002f82:	601a      	str	r2, [r3, #0]
 8002f84:	68fb      	ldr	r3, [r7, #12]
 8002f86:	681b      	ldr	r3, [r3, #0]
 8002f88:	691a      	ldr	r2, [r3, #16]
 8002f8a:	68fb      	ldr	r3, [r7, #12]
 8002f8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f8e:	b2d2      	uxtb	r2, r2
 8002f90:	701a      	strb	r2, [r3, #0]
 8002f92:	68fb      	ldr	r3, [r7, #12]
 8002f94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f96:	1c5a      	adds	r2, r3, #1
 8002f98:	68fb      	ldr	r3, [r7, #12]
 8002f9a:	625a      	str	r2, [r3, #36]	; 0x24
 8002f9c:	68fb      	ldr	r3, [r7, #12]
 8002f9e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002fa0:	3b01      	subs	r3, #1
 8002fa2:	b29a      	uxth	r2, r3
 8002fa4:	68fb      	ldr	r3, [r7, #12]
 8002fa6:	851a      	strh	r2, [r3, #40]	; 0x28
 8002fa8:	68fb      	ldr	r3, [r7, #12]
 8002faa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002fac:	b29b      	uxth	r3, r3
 8002fae:	3b01      	subs	r3, #1
 8002fb0:	b29a      	uxth	r2, r3
 8002fb2:	68fb      	ldr	r3, [r7, #12]
 8002fb4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002fb6:	b662      	cpsie	i
 8002fb8:	bf00      	nop
 8002fba:	68fb      	ldr	r3, [r7, #12]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	691a      	ldr	r2, [r3, #16]
 8002fc0:	68fb      	ldr	r3, [r7, #12]
 8002fc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fc4:	b2d2      	uxtb	r2, r2
 8002fc6:	701a      	strb	r2, [r3, #0]
 8002fc8:	68fb      	ldr	r3, [r7, #12]
 8002fca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002fcc:	1c5a      	adds	r2, r3, #1
 8002fce:	68fb      	ldr	r3, [r7, #12]
 8002fd0:	625a      	str	r2, [r3, #36]	; 0x24
 8002fd2:	68fb      	ldr	r3, [r7, #12]
 8002fd4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002fd6:	3b01      	subs	r3, #1
 8002fd8:	b29a      	uxth	r2, r3
 8002fda:	68fb      	ldr	r3, [r7, #12]
 8002fdc:	851a      	strh	r2, [r3, #40]	; 0x28
 8002fde:	68fb      	ldr	r3, [r7, #12]
 8002fe0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002fe2:	b29b      	uxth	r3, r3
 8002fe4:	3b01      	subs	r3, #1
 8002fe6:	b29a      	uxth	r2, r3
 8002fe8:	68fb      	ldr	r3, [r7, #12]
 8002fea:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002fec:	e042      	b.n	8003074 <HAL_I2C_Master_Receive+0x484>
 8002fee:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002ff0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8002ff2:	68f8      	ldr	r0, [r7, #12]
 8002ff4:	f000 fc32 	bl	800385c <I2C_WaitOnRXNEFlagUntilTimeout>
 8002ff8:	4603      	mov	r3, r0
 8002ffa:	2b00      	cmp	r3, #0
 8002ffc:	d001      	beq.n	8003002 <HAL_I2C_Master_Receive+0x412>
 8002ffe:	2301      	movs	r3, #1
 8003000:	e04c      	b.n	800309c <HAL_I2C_Master_Receive+0x4ac>
 8003002:	68fb      	ldr	r3, [r7, #12]
 8003004:	681b      	ldr	r3, [r3, #0]
 8003006:	691a      	ldr	r2, [r3, #16]
 8003008:	68fb      	ldr	r3, [r7, #12]
 800300a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800300c:	b2d2      	uxtb	r2, r2
 800300e:	701a      	strb	r2, [r3, #0]
 8003010:	68fb      	ldr	r3, [r7, #12]
 8003012:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003014:	1c5a      	adds	r2, r3, #1
 8003016:	68fb      	ldr	r3, [r7, #12]
 8003018:	625a      	str	r2, [r3, #36]	; 0x24
 800301a:	68fb      	ldr	r3, [r7, #12]
 800301c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800301e:	3b01      	subs	r3, #1
 8003020:	b29a      	uxth	r2, r3
 8003022:	68fb      	ldr	r3, [r7, #12]
 8003024:	851a      	strh	r2, [r3, #40]	; 0x28
 8003026:	68fb      	ldr	r3, [r7, #12]
 8003028:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800302a:	b29b      	uxth	r3, r3
 800302c:	3b01      	subs	r3, #1
 800302e:	b29a      	uxth	r2, r3
 8003030:	68fb      	ldr	r3, [r7, #12]
 8003032:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003034:	68fb      	ldr	r3, [r7, #12]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	695b      	ldr	r3, [r3, #20]
 800303a:	f003 0304 	and.w	r3, r3, #4
 800303e:	2b04      	cmp	r3, #4
 8003040:	d118      	bne.n	8003074 <HAL_I2C_Master_Receive+0x484>
 8003042:	68fb      	ldr	r3, [r7, #12]
 8003044:	681b      	ldr	r3, [r3, #0]
 8003046:	691a      	ldr	r2, [r3, #16]
 8003048:	68fb      	ldr	r3, [r7, #12]
 800304a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800304c:	b2d2      	uxtb	r2, r2
 800304e:	701a      	strb	r2, [r3, #0]
 8003050:	68fb      	ldr	r3, [r7, #12]
 8003052:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003054:	1c5a      	adds	r2, r3, #1
 8003056:	68fb      	ldr	r3, [r7, #12]
 8003058:	625a      	str	r2, [r3, #36]	; 0x24
 800305a:	68fb      	ldr	r3, [r7, #12]
 800305c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800305e:	3b01      	subs	r3, #1
 8003060:	b29a      	uxth	r2, r3
 8003062:	68fb      	ldr	r3, [r7, #12]
 8003064:	851a      	strh	r2, [r3, #40]	; 0x28
 8003066:	68fb      	ldr	r3, [r7, #12]
 8003068:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800306a:	b29b      	uxth	r3, r3
 800306c:	3b01      	subs	r3, #1
 800306e:	b29a      	uxth	r2, r3
 8003070:	68fb      	ldr	r3, [r7, #12]
 8003072:	855a      	strh	r2, [r3, #42]	; 0x2a
 8003074:	68fb      	ldr	r3, [r7, #12]
 8003076:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8003078:	2b00      	cmp	r3, #0
 800307a:	f47f ae94 	bne.w	8002da6 <HAL_I2C_Master_Receive+0x1b6>
 800307e:	68fb      	ldr	r3, [r7, #12]
 8003080:	2220      	movs	r2, #32
 8003082:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003086:	68fb      	ldr	r3, [r7, #12]
 8003088:	2200      	movs	r2, #0
 800308a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800308e:	68fb      	ldr	r3, [r7, #12]
 8003090:	2200      	movs	r2, #0
 8003092:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003096:	2300      	movs	r3, #0
 8003098:	e000      	b.n	800309c <HAL_I2C_Master_Receive+0x4ac>
 800309a:	2302      	movs	r3, #2
 800309c:	4618      	mov	r0, r3
 800309e:	3728      	adds	r7, #40	; 0x28
 80030a0:	46bd      	mov	sp, r7
 80030a2:	bd80      	pop	{r7, pc}
 80030a4:	00010004 	.word	0x00010004
 80030a8:	20000000 	.word	0x20000000
 80030ac:	14f8b589 	.word	0x14f8b589

080030b0 <HAL_I2C_IsDeviceReady>:
 80030b0:	b580      	push	{r7, lr}
 80030b2:	b08a      	sub	sp, #40	; 0x28
 80030b4:	af02      	add	r7, sp, #8
 80030b6:	60f8      	str	r0, [r7, #12]
 80030b8:	607a      	str	r2, [r7, #4]
 80030ba:	603b      	str	r3, [r7, #0]
 80030bc:	460b      	mov	r3, r1
 80030be:	817b      	strh	r3, [r7, #10]
 80030c0:	f7fe ffcc 	bl	800205c <HAL_GetTick>
 80030c4:	61f8      	str	r0, [r7, #28]
 80030c6:	2301      	movs	r3, #1
 80030c8:	61bb      	str	r3, [r7, #24]
 80030ca:	68fb      	ldr	r3, [r7, #12]
 80030cc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80030d0:	b2db      	uxtb	r3, r3
 80030d2:	2b20      	cmp	r3, #32
 80030d4:	f040 8111 	bne.w	80032fa <HAL_I2C_IsDeviceReady+0x24a>
 80030d8:	69fb      	ldr	r3, [r7, #28]
 80030da:	9300      	str	r3, [sp, #0]
 80030dc:	2319      	movs	r3, #25
 80030de:	2201      	movs	r2, #1
 80030e0:	4988      	ldr	r1, [pc, #544]	; (8003304 <HAL_I2C_IsDeviceReady+0x254>)
 80030e2:	68f8      	ldr	r0, [r7, #12]
 80030e4:	f000 fa62 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 80030e8:	4603      	mov	r3, r0
 80030ea:	2b00      	cmp	r3, #0
 80030ec:	d001      	beq.n	80030f2 <HAL_I2C_IsDeviceReady+0x42>
 80030ee:	2302      	movs	r3, #2
 80030f0:	e104      	b.n	80032fc <HAL_I2C_IsDeviceReady+0x24c>
 80030f2:	68fb      	ldr	r3, [r7, #12]
 80030f4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80030f8:	2b01      	cmp	r3, #1
 80030fa:	d101      	bne.n	8003100 <HAL_I2C_IsDeviceReady+0x50>
 80030fc:	2302      	movs	r3, #2
 80030fe:	e0fd      	b.n	80032fc <HAL_I2C_IsDeviceReady+0x24c>
 8003100:	68fb      	ldr	r3, [r7, #12]
 8003102:	2201      	movs	r2, #1
 8003104:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003108:	68fb      	ldr	r3, [r7, #12]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	f003 0301 	and.w	r3, r3, #1
 8003112:	2b01      	cmp	r3, #1
 8003114:	d007      	beq.n	8003126 <HAL_I2C_IsDeviceReady+0x76>
 8003116:	68fb      	ldr	r3, [r7, #12]
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	681a      	ldr	r2, [r3, #0]
 800311c:	68fb      	ldr	r3, [r7, #12]
 800311e:	681b      	ldr	r3, [r3, #0]
 8003120:	f042 0201 	orr.w	r2, r2, #1
 8003124:	601a      	str	r2, [r3, #0]
 8003126:	68fb      	ldr	r3, [r7, #12]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	681a      	ldr	r2, [r3, #0]
 800312c:	68fb      	ldr	r3, [r7, #12]
 800312e:	681b      	ldr	r3, [r3, #0]
 8003130:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003134:	601a      	str	r2, [r3, #0]
 8003136:	68fb      	ldr	r3, [r7, #12]
 8003138:	2224      	movs	r2, #36	; 0x24
 800313a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800313e:	68fb      	ldr	r3, [r7, #12]
 8003140:	2200      	movs	r2, #0
 8003142:	641a      	str	r2, [r3, #64]	; 0x40
 8003144:	68fb      	ldr	r3, [r7, #12]
 8003146:	4a70      	ldr	r2, [pc, #448]	; (8003308 <HAL_I2C_IsDeviceReady+0x258>)
 8003148:	62da      	str	r2, [r3, #44]	; 0x2c
 800314a:	68fb      	ldr	r3, [r7, #12]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	681a      	ldr	r2, [r3, #0]
 8003150:	68fb      	ldr	r3, [r7, #12]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003158:	601a      	str	r2, [r3, #0]
 800315a:	69fb      	ldr	r3, [r7, #28]
 800315c:	9300      	str	r3, [sp, #0]
 800315e:	683b      	ldr	r3, [r7, #0]
 8003160:	2200      	movs	r2, #0
 8003162:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003166:	68f8      	ldr	r0, [r7, #12]
 8003168:	f000 fa20 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 800316c:	4603      	mov	r3, r0
 800316e:	2b00      	cmp	r3, #0
 8003170:	d00d      	beq.n	800318e <HAL_I2C_IsDeviceReady+0xde>
 8003172:	68fb      	ldr	r3, [r7, #12]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800317c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003180:	d103      	bne.n	800318a <HAL_I2C_IsDeviceReady+0xda>
 8003182:	68fb      	ldr	r3, [r7, #12]
 8003184:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003188:	641a      	str	r2, [r3, #64]	; 0x40
 800318a:	2303      	movs	r3, #3
 800318c:	e0b6      	b.n	80032fc <HAL_I2C_IsDeviceReady+0x24c>
 800318e:	897b      	ldrh	r3, [r7, #10]
 8003190:	b2db      	uxtb	r3, r3
 8003192:	461a      	mov	r2, r3
 8003194:	68fb      	ldr	r3, [r7, #12]
 8003196:	681b      	ldr	r3, [r3, #0]
 8003198:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800319c:	611a      	str	r2, [r3, #16]
 800319e:	f7fe ff5d 	bl	800205c <HAL_GetTick>
 80031a2:	61f8      	str	r0, [r7, #28]
 80031a4:	68fb      	ldr	r3, [r7, #12]
 80031a6:	681b      	ldr	r3, [r3, #0]
 80031a8:	695b      	ldr	r3, [r3, #20]
 80031aa:	f003 0302 	and.w	r3, r3, #2
 80031ae:	2b02      	cmp	r3, #2
 80031b0:	bf0c      	ite	eq
 80031b2:	2301      	moveq	r3, #1
 80031b4:	2300      	movne	r3, #0
 80031b6:	b2db      	uxtb	r3, r3
 80031b8:	75fb      	strb	r3, [r7, #23]
 80031ba:	68fb      	ldr	r3, [r7, #12]
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	695b      	ldr	r3, [r3, #20]
 80031c0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80031c4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80031c8:	bf0c      	ite	eq
 80031ca:	2301      	moveq	r3, #1
 80031cc:	2300      	movne	r3, #0
 80031ce:	b2db      	uxtb	r3, r3
 80031d0:	75bb      	strb	r3, [r7, #22]
 80031d2:	e025      	b.n	8003220 <HAL_I2C_IsDeviceReady+0x170>
 80031d4:	f7fe ff42 	bl	800205c <HAL_GetTick>
 80031d8:	4602      	mov	r2, r0
 80031da:	69fb      	ldr	r3, [r7, #28]
 80031dc:	1ad3      	subs	r3, r2, r3
 80031de:	683a      	ldr	r2, [r7, #0]
 80031e0:	429a      	cmp	r2, r3
 80031e2:	d302      	bcc.n	80031ea <HAL_I2C_IsDeviceReady+0x13a>
 80031e4:	683b      	ldr	r3, [r7, #0]
 80031e6:	2b00      	cmp	r3, #0
 80031e8:	d103      	bne.n	80031f2 <HAL_I2C_IsDeviceReady+0x142>
 80031ea:	68fb      	ldr	r3, [r7, #12]
 80031ec:	22a0      	movs	r2, #160	; 0xa0
 80031ee:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031f2:	68fb      	ldr	r3, [r7, #12]
 80031f4:	681b      	ldr	r3, [r3, #0]
 80031f6:	695b      	ldr	r3, [r3, #20]
 80031f8:	f003 0302 	and.w	r3, r3, #2
 80031fc:	2b02      	cmp	r3, #2
 80031fe:	bf0c      	ite	eq
 8003200:	2301      	moveq	r3, #1
 8003202:	2300      	movne	r3, #0
 8003204:	b2db      	uxtb	r3, r3
 8003206:	75fb      	strb	r3, [r7, #23]
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	695b      	ldr	r3, [r3, #20]
 800320e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003212:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003216:	bf0c      	ite	eq
 8003218:	2301      	moveq	r3, #1
 800321a:	2300      	movne	r3, #0
 800321c:	b2db      	uxtb	r3, r3
 800321e:	75bb      	strb	r3, [r7, #22]
 8003220:	68fb      	ldr	r3, [r7, #12]
 8003222:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003226:	b2db      	uxtb	r3, r3
 8003228:	2ba0      	cmp	r3, #160	; 0xa0
 800322a:	d005      	beq.n	8003238 <HAL_I2C_IsDeviceReady+0x188>
 800322c:	7dfb      	ldrb	r3, [r7, #23]
 800322e:	2b00      	cmp	r3, #0
 8003230:	d102      	bne.n	8003238 <HAL_I2C_IsDeviceReady+0x188>
 8003232:	7dbb      	ldrb	r3, [r7, #22]
 8003234:	2b00      	cmp	r3, #0
 8003236:	d0cd      	beq.n	80031d4 <HAL_I2C_IsDeviceReady+0x124>
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	2220      	movs	r2, #32
 800323c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003240:	68fb      	ldr	r3, [r7, #12]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	695b      	ldr	r3, [r3, #20]
 8003246:	f003 0302 	and.w	r3, r3, #2
 800324a:	2b02      	cmp	r3, #2
 800324c:	d129      	bne.n	80032a2 <HAL_I2C_IsDeviceReady+0x1f2>
 800324e:	68fb      	ldr	r3, [r7, #12]
 8003250:	681b      	ldr	r3, [r3, #0]
 8003252:	681a      	ldr	r2, [r3, #0]
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800325c:	601a      	str	r2, [r3, #0]
 800325e:	2300      	movs	r3, #0
 8003260:	613b      	str	r3, [r7, #16]
 8003262:	68fb      	ldr	r3, [r7, #12]
 8003264:	681b      	ldr	r3, [r3, #0]
 8003266:	695b      	ldr	r3, [r3, #20]
 8003268:	613b      	str	r3, [r7, #16]
 800326a:	68fb      	ldr	r3, [r7, #12]
 800326c:	681b      	ldr	r3, [r3, #0]
 800326e:	699b      	ldr	r3, [r3, #24]
 8003270:	613b      	str	r3, [r7, #16]
 8003272:	693b      	ldr	r3, [r7, #16]
 8003274:	69fb      	ldr	r3, [r7, #28]
 8003276:	9300      	str	r3, [sp, #0]
 8003278:	2319      	movs	r3, #25
 800327a:	2201      	movs	r2, #1
 800327c:	4921      	ldr	r1, [pc, #132]	; (8003304 <HAL_I2C_IsDeviceReady+0x254>)
 800327e:	68f8      	ldr	r0, [r7, #12]
 8003280:	f000 f994 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 8003284:	4603      	mov	r3, r0
 8003286:	2b00      	cmp	r3, #0
 8003288:	d001      	beq.n	800328e <HAL_I2C_IsDeviceReady+0x1de>
 800328a:	2301      	movs	r3, #1
 800328c:	e036      	b.n	80032fc <HAL_I2C_IsDeviceReady+0x24c>
 800328e:	68fb      	ldr	r3, [r7, #12]
 8003290:	2220      	movs	r2, #32
 8003292:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003296:	68fb      	ldr	r3, [r7, #12]
 8003298:	2200      	movs	r2, #0
 800329a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800329e:	2300      	movs	r3, #0
 80032a0:	e02c      	b.n	80032fc <HAL_I2C_IsDeviceReady+0x24c>
 80032a2:	68fb      	ldr	r3, [r7, #12]
 80032a4:	681b      	ldr	r3, [r3, #0]
 80032a6:	681a      	ldr	r2, [r3, #0]
 80032a8:	68fb      	ldr	r3, [r7, #12]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80032b0:	601a      	str	r2, [r3, #0]
 80032b2:	68fb      	ldr	r3, [r7, #12]
 80032b4:	681b      	ldr	r3, [r3, #0]
 80032b6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80032ba:	615a      	str	r2, [r3, #20]
 80032bc:	69fb      	ldr	r3, [r7, #28]
 80032be:	9300      	str	r3, [sp, #0]
 80032c0:	2319      	movs	r3, #25
 80032c2:	2201      	movs	r2, #1
 80032c4:	490f      	ldr	r1, [pc, #60]	; (8003304 <HAL_I2C_IsDeviceReady+0x254>)
 80032c6:	68f8      	ldr	r0, [r7, #12]
 80032c8:	f000 f970 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 80032cc:	4603      	mov	r3, r0
 80032ce:	2b00      	cmp	r3, #0
 80032d0:	d001      	beq.n	80032d6 <HAL_I2C_IsDeviceReady+0x226>
 80032d2:	2301      	movs	r3, #1
 80032d4:	e012      	b.n	80032fc <HAL_I2C_IsDeviceReady+0x24c>
 80032d6:	69bb      	ldr	r3, [r7, #24]
 80032d8:	3301      	adds	r3, #1
 80032da:	61bb      	str	r3, [r7, #24]
 80032dc:	69ba      	ldr	r2, [r7, #24]
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	429a      	cmp	r2, r3
 80032e2:	f4ff af32 	bcc.w	800314a <HAL_I2C_IsDeviceReady+0x9a>
 80032e6:	68fb      	ldr	r3, [r7, #12]
 80032e8:	2220      	movs	r2, #32
 80032ea:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80032ee:	68fb      	ldr	r3, [r7, #12]
 80032f0:	2200      	movs	r2, #0
 80032f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80032f6:	2301      	movs	r3, #1
 80032f8:	e000      	b.n	80032fc <HAL_I2C_IsDeviceReady+0x24c>
 80032fa:	2302      	movs	r3, #2
 80032fc:	4618      	mov	r0, r3
 80032fe:	3720      	adds	r7, #32
 8003300:	46bd      	mov	sp, r7
 8003302:	bd80      	pop	{r7, pc}
 8003304:	00100002 	.word	0x00100002
 8003308:	ffff0000 	.word	0xffff0000

0800330c <I2C_MasterRequestWrite>:
 800330c:	b580      	push	{r7, lr}
 800330e:	b088      	sub	sp, #32
 8003310:	af02      	add	r7, sp, #8
 8003312:	60f8      	str	r0, [r7, #12]
 8003314:	607a      	str	r2, [r7, #4]
 8003316:	603b      	str	r3, [r7, #0]
 8003318:	460b      	mov	r3, r1
 800331a:	817b      	strh	r3, [r7, #10]
 800331c:	68fb      	ldr	r3, [r7, #12]
 800331e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003320:	617b      	str	r3, [r7, #20]
 8003322:	697b      	ldr	r3, [r7, #20]
 8003324:	2b08      	cmp	r3, #8
 8003326:	d006      	beq.n	8003336 <I2C_MasterRequestWrite+0x2a>
 8003328:	697b      	ldr	r3, [r7, #20]
 800332a:	2b01      	cmp	r3, #1
 800332c:	d003      	beq.n	8003336 <I2C_MasterRequestWrite+0x2a>
 800332e:	697b      	ldr	r3, [r7, #20]
 8003330:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8003334:	d108      	bne.n	8003348 <I2C_MasterRequestWrite+0x3c>
 8003336:	68fb      	ldr	r3, [r7, #12]
 8003338:	681b      	ldr	r3, [r3, #0]
 800333a:	681a      	ldr	r2, [r3, #0]
 800333c:	68fb      	ldr	r3, [r7, #12]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003344:	601a      	str	r2, [r3, #0]
 8003346:	e00b      	b.n	8003360 <I2C_MasterRequestWrite+0x54>
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800334c:	2b12      	cmp	r3, #18
 800334e:	d107      	bne.n	8003360 <I2C_MasterRequestWrite+0x54>
 8003350:	68fb      	ldr	r3, [r7, #12]
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	681a      	ldr	r2, [r3, #0]
 8003356:	68fb      	ldr	r3, [r7, #12]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800335e:	601a      	str	r2, [r3, #0]
 8003360:	683b      	ldr	r3, [r7, #0]
 8003362:	9300      	str	r3, [sp, #0]
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	2200      	movs	r2, #0
 8003368:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800336c:	68f8      	ldr	r0, [r7, #12]
 800336e:	f000 f91d 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 8003372:	4603      	mov	r3, r0
 8003374:	2b00      	cmp	r3, #0
 8003376:	d00d      	beq.n	8003394 <I2C_MasterRequestWrite+0x88>
 8003378:	68fb      	ldr	r3, [r7, #12]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003382:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003386:	d103      	bne.n	8003390 <I2C_MasterRequestWrite+0x84>
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800338e:	641a      	str	r2, [r3, #64]	; 0x40
 8003390:	2303      	movs	r3, #3
 8003392:	e035      	b.n	8003400 <I2C_MasterRequestWrite+0xf4>
 8003394:	68fb      	ldr	r3, [r7, #12]
 8003396:	691b      	ldr	r3, [r3, #16]
 8003398:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800339c:	d108      	bne.n	80033b0 <I2C_MasterRequestWrite+0xa4>
 800339e:	897b      	ldrh	r3, [r7, #10]
 80033a0:	b2db      	uxtb	r3, r3
 80033a2:	461a      	mov	r2, r3
 80033a4:	68fb      	ldr	r3, [r7, #12]
 80033a6:	681b      	ldr	r3, [r3, #0]
 80033a8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 80033ac:	611a      	str	r2, [r3, #16]
 80033ae:	e01b      	b.n	80033e8 <I2C_MasterRequestWrite+0xdc>
 80033b0:	897b      	ldrh	r3, [r7, #10]
 80033b2:	11db      	asrs	r3, r3, #7
 80033b4:	b2db      	uxtb	r3, r3
 80033b6:	f003 0306 	and.w	r3, r3, #6
 80033ba:	b2db      	uxtb	r3, r3
 80033bc:	f063 030f 	orn	r3, r3, #15
 80033c0:	b2da      	uxtb	r2, r3
 80033c2:	68fb      	ldr	r3, [r7, #12]
 80033c4:	681b      	ldr	r3, [r3, #0]
 80033c6:	611a      	str	r2, [r3, #16]
 80033c8:	683b      	ldr	r3, [r7, #0]
 80033ca:	687a      	ldr	r2, [r7, #4]
 80033cc:	490e      	ldr	r1, [pc, #56]	; (8003408 <I2C_MasterRequestWrite+0xfc>)
 80033ce:	68f8      	ldr	r0, [r7, #12]
 80033d0:	f000 f943 	bl	800365a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80033d4:	4603      	mov	r3, r0
 80033d6:	2b00      	cmp	r3, #0
 80033d8:	d001      	beq.n	80033de <I2C_MasterRequestWrite+0xd2>
 80033da:	2301      	movs	r3, #1
 80033dc:	e010      	b.n	8003400 <I2C_MasterRequestWrite+0xf4>
 80033de:	897b      	ldrh	r3, [r7, #10]
 80033e0:	b2da      	uxtb	r2, r3
 80033e2:	68fb      	ldr	r3, [r7, #12]
 80033e4:	681b      	ldr	r3, [r3, #0]
 80033e6:	611a      	str	r2, [r3, #16]
 80033e8:	683b      	ldr	r3, [r7, #0]
 80033ea:	687a      	ldr	r2, [r7, #4]
 80033ec:	4907      	ldr	r1, [pc, #28]	; (800340c <I2C_MasterRequestWrite+0x100>)
 80033ee:	68f8      	ldr	r0, [r7, #12]
 80033f0:	f000 f933 	bl	800365a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80033f4:	4603      	mov	r3, r0
 80033f6:	2b00      	cmp	r3, #0
 80033f8:	d001      	beq.n	80033fe <I2C_MasterRequestWrite+0xf2>
 80033fa:	2301      	movs	r3, #1
 80033fc:	e000      	b.n	8003400 <I2C_MasterRequestWrite+0xf4>
 80033fe:	2300      	movs	r3, #0
 8003400:	4618      	mov	r0, r3
 8003402:	3718      	adds	r7, #24
 8003404:	46bd      	mov	sp, r7
 8003406:	bd80      	pop	{r7, pc}
 8003408:	00010008 	.word	0x00010008
 800340c:	00010002 	.word	0x00010002

08003410 <I2C_MasterRequestRead>:
 8003410:	b580      	push	{r7, lr}
 8003412:	b088      	sub	sp, #32
 8003414:	af02      	add	r7, sp, #8
 8003416:	60f8      	str	r0, [r7, #12]
 8003418:	607a      	str	r2, [r7, #4]
 800341a:	603b      	str	r3, [r7, #0]
 800341c:	460b      	mov	r3, r1
 800341e:	817b      	strh	r3, [r7, #10]
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003424:	617b      	str	r3, [r7, #20]
 8003426:	68fb      	ldr	r3, [r7, #12]
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	681a      	ldr	r2, [r3, #0]
 800342c:	68fb      	ldr	r3, [r7, #12]
 800342e:	681b      	ldr	r3, [r3, #0]
 8003430:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003434:	601a      	str	r2, [r3, #0]
 8003436:	697b      	ldr	r3, [r7, #20]
 8003438:	2b08      	cmp	r3, #8
 800343a:	d006      	beq.n	800344a <I2C_MasterRequestRead+0x3a>
 800343c:	697b      	ldr	r3, [r7, #20]
 800343e:	2b01      	cmp	r3, #1
 8003440:	d003      	beq.n	800344a <I2C_MasterRequestRead+0x3a>
 8003442:	697b      	ldr	r3, [r7, #20]
 8003444:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8003448:	d108      	bne.n	800345c <I2C_MasterRequestRead+0x4c>
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	681b      	ldr	r3, [r3, #0]
 800344e:	681a      	ldr	r2, [r3, #0]
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	681b      	ldr	r3, [r3, #0]
 8003454:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003458:	601a      	str	r2, [r3, #0]
 800345a:	e00b      	b.n	8003474 <I2C_MasterRequestRead+0x64>
 800345c:	68fb      	ldr	r3, [r7, #12]
 800345e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003460:	2b11      	cmp	r3, #17
 8003462:	d107      	bne.n	8003474 <I2C_MasterRequestRead+0x64>
 8003464:	68fb      	ldr	r3, [r7, #12]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	681a      	ldr	r2, [r3, #0]
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003472:	601a      	str	r2, [r3, #0]
 8003474:	683b      	ldr	r3, [r7, #0]
 8003476:	9300      	str	r3, [sp, #0]
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	2200      	movs	r2, #0
 800347c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003480:	68f8      	ldr	r0, [r7, #12]
 8003482:	f000 f893 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 8003486:	4603      	mov	r3, r0
 8003488:	2b00      	cmp	r3, #0
 800348a:	d00d      	beq.n	80034a8 <I2C_MasterRequestRead+0x98>
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003496:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800349a:	d103      	bne.n	80034a4 <I2C_MasterRequestRead+0x94>
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	f44f 7200 	mov.w	r2, #512	; 0x200
 80034a2:	641a      	str	r2, [r3, #64]	; 0x40
 80034a4:	2303      	movs	r3, #3
 80034a6:	e079      	b.n	800359c <I2C_MasterRequestRead+0x18c>
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	691b      	ldr	r3, [r3, #16]
 80034ac:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80034b0:	d108      	bne.n	80034c4 <I2C_MasterRequestRead+0xb4>
 80034b2:	897b      	ldrh	r3, [r7, #10]
 80034b4:	b2db      	uxtb	r3, r3
 80034b6:	f043 0301 	orr.w	r3, r3, #1
 80034ba:	b2da      	uxtb	r2, r3
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	681b      	ldr	r3, [r3, #0]
 80034c0:	611a      	str	r2, [r3, #16]
 80034c2:	e05f      	b.n	8003584 <I2C_MasterRequestRead+0x174>
 80034c4:	897b      	ldrh	r3, [r7, #10]
 80034c6:	11db      	asrs	r3, r3, #7
 80034c8:	b2db      	uxtb	r3, r3
 80034ca:	f003 0306 	and.w	r3, r3, #6
 80034ce:	b2db      	uxtb	r3, r3
 80034d0:	f063 030f 	orn	r3, r3, #15
 80034d4:	b2da      	uxtb	r2, r3
 80034d6:	68fb      	ldr	r3, [r7, #12]
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	611a      	str	r2, [r3, #16]
 80034dc:	683b      	ldr	r3, [r7, #0]
 80034de:	687a      	ldr	r2, [r7, #4]
 80034e0:	4930      	ldr	r1, [pc, #192]	; (80035a4 <I2C_MasterRequestRead+0x194>)
 80034e2:	68f8      	ldr	r0, [r7, #12]
 80034e4:	f000 f8b9 	bl	800365a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80034e8:	4603      	mov	r3, r0
 80034ea:	2b00      	cmp	r3, #0
 80034ec:	d001      	beq.n	80034f2 <I2C_MasterRequestRead+0xe2>
 80034ee:	2301      	movs	r3, #1
 80034f0:	e054      	b.n	800359c <I2C_MasterRequestRead+0x18c>
 80034f2:	897b      	ldrh	r3, [r7, #10]
 80034f4:	b2da      	uxtb	r2, r3
 80034f6:	68fb      	ldr	r3, [r7, #12]
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	611a      	str	r2, [r3, #16]
 80034fc:	683b      	ldr	r3, [r7, #0]
 80034fe:	687a      	ldr	r2, [r7, #4]
 8003500:	4929      	ldr	r1, [pc, #164]	; (80035a8 <I2C_MasterRequestRead+0x198>)
 8003502:	68f8      	ldr	r0, [r7, #12]
 8003504:	f000 f8a9 	bl	800365a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003508:	4603      	mov	r3, r0
 800350a:	2b00      	cmp	r3, #0
 800350c:	d001      	beq.n	8003512 <I2C_MasterRequestRead+0x102>
 800350e:	2301      	movs	r3, #1
 8003510:	e044      	b.n	800359c <I2C_MasterRequestRead+0x18c>
 8003512:	2300      	movs	r3, #0
 8003514:	613b      	str	r3, [r7, #16]
 8003516:	68fb      	ldr	r3, [r7, #12]
 8003518:	681b      	ldr	r3, [r3, #0]
 800351a:	695b      	ldr	r3, [r3, #20]
 800351c:	613b      	str	r3, [r7, #16]
 800351e:	68fb      	ldr	r3, [r7, #12]
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	699b      	ldr	r3, [r3, #24]
 8003524:	613b      	str	r3, [r7, #16]
 8003526:	693b      	ldr	r3, [r7, #16]
 8003528:	68fb      	ldr	r3, [r7, #12]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	681a      	ldr	r2, [r3, #0]
 800352e:	68fb      	ldr	r3, [r7, #12]
 8003530:	681b      	ldr	r3, [r3, #0]
 8003532:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003536:	601a      	str	r2, [r3, #0]
 8003538:	683b      	ldr	r3, [r7, #0]
 800353a:	9300      	str	r3, [sp, #0]
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	2200      	movs	r2, #0
 8003540:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003544:	68f8      	ldr	r0, [r7, #12]
 8003546:	f000 f831 	bl	80035ac <I2C_WaitOnFlagUntilTimeout>
 800354a:	4603      	mov	r3, r0
 800354c:	2b00      	cmp	r3, #0
 800354e:	d00d      	beq.n	800356c <I2C_MasterRequestRead+0x15c>
 8003550:	68fb      	ldr	r3, [r7, #12]
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800355a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800355e:	d103      	bne.n	8003568 <I2C_MasterRequestRead+0x158>
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003566:	641a      	str	r2, [r3, #64]	; 0x40
 8003568:	2303      	movs	r3, #3
 800356a:	e017      	b.n	800359c <I2C_MasterRequestRead+0x18c>
 800356c:	897b      	ldrh	r3, [r7, #10]
 800356e:	11db      	asrs	r3, r3, #7
 8003570:	b2db      	uxtb	r3, r3
 8003572:	f003 0306 	and.w	r3, r3, #6
 8003576:	b2db      	uxtb	r3, r3
 8003578:	f063 030e 	orn	r3, r3, #14
 800357c:	b2da      	uxtb	r2, r3
 800357e:	68fb      	ldr	r3, [r7, #12]
 8003580:	681b      	ldr	r3, [r3, #0]
 8003582:	611a      	str	r2, [r3, #16]
 8003584:	683b      	ldr	r3, [r7, #0]
 8003586:	687a      	ldr	r2, [r7, #4]
 8003588:	4907      	ldr	r1, [pc, #28]	; (80035a8 <I2C_MasterRequestRead+0x198>)
 800358a:	68f8      	ldr	r0, [r7, #12]
 800358c:	f000 f865 	bl	800365a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003590:	4603      	mov	r3, r0
 8003592:	2b00      	cmp	r3, #0
 8003594:	d001      	beq.n	800359a <I2C_MasterRequestRead+0x18a>
 8003596:	2301      	movs	r3, #1
 8003598:	e000      	b.n	800359c <I2C_MasterRequestRead+0x18c>
 800359a:	2300      	movs	r3, #0
 800359c:	4618      	mov	r0, r3
 800359e:	3718      	adds	r7, #24
 80035a0:	46bd      	mov	sp, r7
 80035a2:	bd80      	pop	{r7, pc}
 80035a4:	00010008 	.word	0x00010008
 80035a8:	00010002 	.word	0x00010002

080035ac <I2C_WaitOnFlagUntilTimeout>:
 80035ac:	b580      	push	{r7, lr}
 80035ae:	b084      	sub	sp, #16
 80035b0:	af00      	add	r7, sp, #0
 80035b2:	60f8      	str	r0, [r7, #12]
 80035b4:	60b9      	str	r1, [r7, #8]
 80035b6:	603b      	str	r3, [r7, #0]
 80035b8:	4613      	mov	r3, r2
 80035ba:	71fb      	strb	r3, [r7, #7]
 80035bc:	e025      	b.n	800360a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80035be:	683b      	ldr	r3, [r7, #0]
 80035c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80035c4:	d021      	beq.n	800360a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80035c6:	f7fe fd49 	bl	800205c <HAL_GetTick>
 80035ca:	4602      	mov	r2, r0
 80035cc:	69bb      	ldr	r3, [r7, #24]
 80035ce:	1ad3      	subs	r3, r2, r3
 80035d0:	683a      	ldr	r2, [r7, #0]
 80035d2:	429a      	cmp	r2, r3
 80035d4:	d302      	bcc.n	80035dc <I2C_WaitOnFlagUntilTimeout+0x30>
 80035d6:	683b      	ldr	r3, [r7, #0]
 80035d8:	2b00      	cmp	r3, #0
 80035da:	d116      	bne.n	800360a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80035dc:	68fb      	ldr	r3, [r7, #12]
 80035de:	2200      	movs	r2, #0
 80035e0:	631a      	str	r2, [r3, #48]	; 0x30
 80035e2:	68fb      	ldr	r3, [r7, #12]
 80035e4:	2220      	movs	r2, #32
 80035e6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	2200      	movs	r2, #0
 80035ee:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80035f2:	68fb      	ldr	r3, [r7, #12]
 80035f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035f6:	f043 0220 	orr.w	r2, r3, #32
 80035fa:	68fb      	ldr	r3, [r7, #12]
 80035fc:	641a      	str	r2, [r3, #64]	; 0x40
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	2200      	movs	r2, #0
 8003602:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003606:	2301      	movs	r3, #1
 8003608:	e023      	b.n	8003652 <I2C_WaitOnFlagUntilTimeout+0xa6>
 800360a:	68bb      	ldr	r3, [r7, #8]
 800360c:	0c1b      	lsrs	r3, r3, #16
 800360e:	b2db      	uxtb	r3, r3
 8003610:	2b01      	cmp	r3, #1
 8003612:	d10d      	bne.n	8003630 <I2C_WaitOnFlagUntilTimeout+0x84>
 8003614:	68fb      	ldr	r3, [r7, #12]
 8003616:	681b      	ldr	r3, [r3, #0]
 8003618:	695b      	ldr	r3, [r3, #20]
 800361a:	43da      	mvns	r2, r3
 800361c:	68bb      	ldr	r3, [r7, #8]
 800361e:	4013      	ands	r3, r2
 8003620:	b29b      	uxth	r3, r3
 8003622:	2b00      	cmp	r3, #0
 8003624:	bf0c      	ite	eq
 8003626:	2301      	moveq	r3, #1
 8003628:	2300      	movne	r3, #0
 800362a:	b2db      	uxtb	r3, r3
 800362c:	461a      	mov	r2, r3
 800362e:	e00c      	b.n	800364a <I2C_WaitOnFlagUntilTimeout+0x9e>
 8003630:	68fb      	ldr	r3, [r7, #12]
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	699b      	ldr	r3, [r3, #24]
 8003636:	43da      	mvns	r2, r3
 8003638:	68bb      	ldr	r3, [r7, #8]
 800363a:	4013      	ands	r3, r2
 800363c:	b29b      	uxth	r3, r3
 800363e:	2b00      	cmp	r3, #0
 8003640:	bf0c      	ite	eq
 8003642:	2301      	moveq	r3, #1
 8003644:	2300      	movne	r3, #0
 8003646:	b2db      	uxtb	r3, r3
 8003648:	461a      	mov	r2, r3
 800364a:	79fb      	ldrb	r3, [r7, #7]
 800364c:	429a      	cmp	r2, r3
 800364e:	d0b6      	beq.n	80035be <I2C_WaitOnFlagUntilTimeout+0x12>
 8003650:	2300      	movs	r3, #0
 8003652:	4618      	mov	r0, r3
 8003654:	3710      	adds	r7, #16
 8003656:	46bd      	mov	sp, r7
 8003658:	bd80      	pop	{r7, pc}

0800365a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 800365a:	b580      	push	{r7, lr}
 800365c:	b084      	sub	sp, #16
 800365e:	af00      	add	r7, sp, #0
 8003660:	60f8      	str	r0, [r7, #12]
 8003662:	60b9      	str	r1, [r7, #8]
 8003664:	607a      	str	r2, [r7, #4]
 8003666:	603b      	str	r3, [r7, #0]
 8003668:	e051      	b.n	800370e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800366a:	68fb      	ldr	r3, [r7, #12]
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	695b      	ldr	r3, [r3, #20]
 8003670:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003674:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003678:	d123      	bne.n	80036c2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800367a:	68fb      	ldr	r3, [r7, #12]
 800367c:	681b      	ldr	r3, [r3, #0]
 800367e:	681a      	ldr	r2, [r3, #0]
 8003680:	68fb      	ldr	r3, [r7, #12]
 8003682:	681b      	ldr	r3, [r3, #0]
 8003684:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003688:	601a      	str	r2, [r3, #0]
 800368a:	68fb      	ldr	r3, [r7, #12]
 800368c:	681b      	ldr	r3, [r3, #0]
 800368e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003692:	615a      	str	r2, [r3, #20]
 8003694:	68fb      	ldr	r3, [r7, #12]
 8003696:	2200      	movs	r2, #0
 8003698:	631a      	str	r2, [r3, #48]	; 0x30
 800369a:	68fb      	ldr	r3, [r7, #12]
 800369c:	2220      	movs	r2, #32
 800369e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80036a2:	68fb      	ldr	r3, [r7, #12]
 80036a4:	2200      	movs	r2, #0
 80036a6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80036aa:	68fb      	ldr	r3, [r7, #12]
 80036ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036ae:	f043 0204 	orr.w	r2, r3, #4
 80036b2:	68fb      	ldr	r3, [r7, #12]
 80036b4:	641a      	str	r2, [r3, #64]	; 0x40
 80036b6:	68fb      	ldr	r3, [r7, #12]
 80036b8:	2200      	movs	r2, #0
 80036ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80036be:	2301      	movs	r3, #1
 80036c0:	e046      	b.n	8003750 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80036c8:	d021      	beq.n	800370e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80036ca:	f7fe fcc7 	bl	800205c <HAL_GetTick>
 80036ce:	4602      	mov	r2, r0
 80036d0:	683b      	ldr	r3, [r7, #0]
 80036d2:	1ad3      	subs	r3, r2, r3
 80036d4:	687a      	ldr	r2, [r7, #4]
 80036d6:	429a      	cmp	r2, r3
 80036d8:	d302      	bcc.n	80036e0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d116      	bne.n	800370e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80036e0:	68fb      	ldr	r3, [r7, #12]
 80036e2:	2200      	movs	r2, #0
 80036e4:	631a      	str	r2, [r3, #48]	; 0x30
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	2220      	movs	r2, #32
 80036ea:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80036ee:	68fb      	ldr	r3, [r7, #12]
 80036f0:	2200      	movs	r2, #0
 80036f2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80036f6:	68fb      	ldr	r3, [r7, #12]
 80036f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036fa:	f043 0220 	orr.w	r2, r3, #32
 80036fe:	68fb      	ldr	r3, [r7, #12]
 8003700:	641a      	str	r2, [r3, #64]	; 0x40
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	2200      	movs	r2, #0
 8003706:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800370a:	2301      	movs	r3, #1
 800370c:	e020      	b.n	8003750 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800370e:	68bb      	ldr	r3, [r7, #8]
 8003710:	0c1b      	lsrs	r3, r3, #16
 8003712:	b2db      	uxtb	r3, r3
 8003714:	2b01      	cmp	r3, #1
 8003716:	d10c      	bne.n	8003732 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8003718:	68fb      	ldr	r3, [r7, #12]
 800371a:	681b      	ldr	r3, [r3, #0]
 800371c:	695b      	ldr	r3, [r3, #20]
 800371e:	43da      	mvns	r2, r3
 8003720:	68bb      	ldr	r3, [r7, #8]
 8003722:	4013      	ands	r3, r2
 8003724:	b29b      	uxth	r3, r3
 8003726:	2b00      	cmp	r3, #0
 8003728:	bf14      	ite	ne
 800372a:	2301      	movne	r3, #1
 800372c:	2300      	moveq	r3, #0
 800372e:	b2db      	uxtb	r3, r3
 8003730:	e00b      	b.n	800374a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8003732:	68fb      	ldr	r3, [r7, #12]
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	699b      	ldr	r3, [r3, #24]
 8003738:	43da      	mvns	r2, r3
 800373a:	68bb      	ldr	r3, [r7, #8]
 800373c:	4013      	ands	r3, r2
 800373e:	b29b      	uxth	r3, r3
 8003740:	2b00      	cmp	r3, #0
 8003742:	bf14      	ite	ne
 8003744:	2301      	movne	r3, #1
 8003746:	2300      	moveq	r3, #0
 8003748:	b2db      	uxtb	r3, r3
 800374a:	2b00      	cmp	r3, #0
 800374c:	d18d      	bne.n	800366a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800374e:	2300      	movs	r3, #0
 8003750:	4618      	mov	r0, r3
 8003752:	3710      	adds	r7, #16
 8003754:	46bd      	mov	sp, r7
 8003756:	bd80      	pop	{r7, pc}

08003758 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003758:	b580      	push	{r7, lr}
 800375a:	b084      	sub	sp, #16
 800375c:	af00      	add	r7, sp, #0
 800375e:	60f8      	str	r0, [r7, #12]
 8003760:	60b9      	str	r1, [r7, #8]
 8003762:	607a      	str	r2, [r7, #4]
 8003764:	e02d      	b.n	80037c2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8003766:	68f8      	ldr	r0, [r7, #12]
 8003768:	f000 f8ce 	bl	8003908 <I2C_IsAcknowledgeFailed>
 800376c:	4603      	mov	r3, r0
 800376e:	2b00      	cmp	r3, #0
 8003770:	d001      	beq.n	8003776 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003772:	2301      	movs	r3, #1
 8003774:	e02d      	b.n	80037d2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8003776:	68bb      	ldr	r3, [r7, #8]
 8003778:	f1b3 3fff 	cmp.w	r3, #4294967295
 800377c:	d021      	beq.n	80037c2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800377e:	f7fe fc6d 	bl	800205c <HAL_GetTick>
 8003782:	4602      	mov	r2, r0
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	1ad3      	subs	r3, r2, r3
 8003788:	68ba      	ldr	r2, [r7, #8]
 800378a:	429a      	cmp	r2, r3
 800378c:	d302      	bcc.n	8003794 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800378e:	68bb      	ldr	r3, [r7, #8]
 8003790:	2b00      	cmp	r3, #0
 8003792:	d116      	bne.n	80037c2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8003794:	68fb      	ldr	r3, [r7, #12]
 8003796:	2200      	movs	r2, #0
 8003798:	631a      	str	r2, [r3, #48]	; 0x30
 800379a:	68fb      	ldr	r3, [r7, #12]
 800379c:	2220      	movs	r2, #32
 800379e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037a2:	68fb      	ldr	r3, [r7, #12]
 80037a4:	2200      	movs	r2, #0
 80037a6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80037aa:	68fb      	ldr	r3, [r7, #12]
 80037ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037ae:	f043 0220 	orr.w	r2, r3, #32
 80037b2:	68fb      	ldr	r3, [r7, #12]
 80037b4:	641a      	str	r2, [r3, #64]	; 0x40
 80037b6:	68fb      	ldr	r3, [r7, #12]
 80037b8:	2200      	movs	r2, #0
 80037ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80037be:	2301      	movs	r3, #1
 80037c0:	e007      	b.n	80037d2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 80037c2:	68fb      	ldr	r3, [r7, #12]
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	695b      	ldr	r3, [r3, #20]
 80037c8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80037cc:	2b80      	cmp	r3, #128	; 0x80
 80037ce:	d1ca      	bne.n	8003766 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 80037d0:	2300      	movs	r3, #0
 80037d2:	4618      	mov	r0, r3
 80037d4:	3710      	adds	r7, #16
 80037d6:	46bd      	mov	sp, r7
 80037d8:	bd80      	pop	{r7, pc}

080037da <I2C_WaitOnBTFFlagUntilTimeout>:
 80037da:	b580      	push	{r7, lr}
 80037dc:	b084      	sub	sp, #16
 80037de:	af00      	add	r7, sp, #0
 80037e0:	60f8      	str	r0, [r7, #12]
 80037e2:	60b9      	str	r1, [r7, #8]
 80037e4:	607a      	str	r2, [r7, #4]
 80037e6:	e02d      	b.n	8003844 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 80037e8:	68f8      	ldr	r0, [r7, #12]
 80037ea:	f000 f88d 	bl	8003908 <I2C_IsAcknowledgeFailed>
 80037ee:	4603      	mov	r3, r0
 80037f0:	2b00      	cmp	r3, #0
 80037f2:	d001      	beq.n	80037f8 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 80037f4:	2301      	movs	r3, #1
 80037f6:	e02d      	b.n	8003854 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 80037f8:	68bb      	ldr	r3, [r7, #8]
 80037fa:	f1b3 3fff 	cmp.w	r3, #4294967295
 80037fe:	d021      	beq.n	8003844 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003800:	f7fe fc2c 	bl	800205c <HAL_GetTick>
 8003804:	4602      	mov	r2, r0
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	1ad3      	subs	r3, r2, r3
 800380a:	68ba      	ldr	r2, [r7, #8]
 800380c:	429a      	cmp	r2, r3
 800380e:	d302      	bcc.n	8003816 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8003810:	68bb      	ldr	r3, [r7, #8]
 8003812:	2b00      	cmp	r3, #0
 8003814:	d116      	bne.n	8003844 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	2200      	movs	r2, #0
 800381a:	631a      	str	r2, [r3, #48]	; 0x30
 800381c:	68fb      	ldr	r3, [r7, #12]
 800381e:	2220      	movs	r2, #32
 8003820:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003824:	68fb      	ldr	r3, [r7, #12]
 8003826:	2200      	movs	r2, #0
 8003828:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800382c:	68fb      	ldr	r3, [r7, #12]
 800382e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003830:	f043 0220 	orr.w	r2, r3, #32
 8003834:	68fb      	ldr	r3, [r7, #12]
 8003836:	641a      	str	r2, [r3, #64]	; 0x40
 8003838:	68fb      	ldr	r3, [r7, #12]
 800383a:	2200      	movs	r2, #0
 800383c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003840:	2301      	movs	r3, #1
 8003842:	e007      	b.n	8003854 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8003844:	68fb      	ldr	r3, [r7, #12]
 8003846:	681b      	ldr	r3, [r3, #0]
 8003848:	695b      	ldr	r3, [r3, #20]
 800384a:	f003 0304 	and.w	r3, r3, #4
 800384e:	2b04      	cmp	r3, #4
 8003850:	d1ca      	bne.n	80037e8 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8003852:	2300      	movs	r3, #0
 8003854:	4618      	mov	r0, r3
 8003856:	3710      	adds	r7, #16
 8003858:	46bd      	mov	sp, r7
 800385a:	bd80      	pop	{r7, pc}

0800385c <I2C_WaitOnRXNEFlagUntilTimeout>:
 800385c:	b580      	push	{r7, lr}
 800385e:	b084      	sub	sp, #16
 8003860:	af00      	add	r7, sp, #0
 8003862:	60f8      	str	r0, [r7, #12]
 8003864:	60b9      	str	r1, [r7, #8]
 8003866:	607a      	str	r2, [r7, #4]
 8003868:	e042      	b.n	80038f0 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800386a:	68fb      	ldr	r3, [r7, #12]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	695b      	ldr	r3, [r3, #20]
 8003870:	f003 0310 	and.w	r3, r3, #16
 8003874:	2b10      	cmp	r3, #16
 8003876:	d119      	bne.n	80038ac <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8003878:	68fb      	ldr	r3, [r7, #12]
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	f06f 0210 	mvn.w	r2, #16
 8003880:	615a      	str	r2, [r3, #20]
 8003882:	68fb      	ldr	r3, [r7, #12]
 8003884:	2200      	movs	r2, #0
 8003886:	631a      	str	r2, [r3, #48]	; 0x30
 8003888:	68fb      	ldr	r3, [r7, #12]
 800388a:	2220      	movs	r2, #32
 800388c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003890:	68fb      	ldr	r3, [r7, #12]
 8003892:	2200      	movs	r2, #0
 8003894:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003898:	68fb      	ldr	r3, [r7, #12]
 800389a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800389c:	68fb      	ldr	r3, [r7, #12]
 800389e:	641a      	str	r2, [r3, #64]	; 0x40
 80038a0:	68fb      	ldr	r3, [r7, #12]
 80038a2:	2200      	movs	r2, #0
 80038a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80038a8:	2301      	movs	r3, #1
 80038aa:	e029      	b.n	8003900 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 80038ac:	f7fe fbd6 	bl	800205c <HAL_GetTick>
 80038b0:	4602      	mov	r2, r0
 80038b2:	687b      	ldr	r3, [r7, #4]
 80038b4:	1ad3      	subs	r3, r2, r3
 80038b6:	68ba      	ldr	r2, [r7, #8]
 80038b8:	429a      	cmp	r2, r3
 80038ba:	d302      	bcc.n	80038c2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80038bc:	68bb      	ldr	r3, [r7, #8]
 80038be:	2b00      	cmp	r3, #0
 80038c0:	d116      	bne.n	80038f0 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 80038c2:	68fb      	ldr	r3, [r7, #12]
 80038c4:	2200      	movs	r2, #0
 80038c6:	631a      	str	r2, [r3, #48]	; 0x30
 80038c8:	68fb      	ldr	r3, [r7, #12]
 80038ca:	2220      	movs	r2, #32
 80038cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80038d0:	68fb      	ldr	r3, [r7, #12]
 80038d2:	2200      	movs	r2, #0
 80038d4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80038d8:	68fb      	ldr	r3, [r7, #12]
 80038da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038dc:	f043 0220 	orr.w	r2, r3, #32
 80038e0:	68fb      	ldr	r3, [r7, #12]
 80038e2:	641a      	str	r2, [r3, #64]	; 0x40
 80038e4:	68fb      	ldr	r3, [r7, #12]
 80038e6:	2200      	movs	r2, #0
 80038e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80038ec:	2301      	movs	r3, #1
 80038ee:	e007      	b.n	8003900 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 80038f0:	68fb      	ldr	r3, [r7, #12]
 80038f2:	681b      	ldr	r3, [r3, #0]
 80038f4:	695b      	ldr	r3, [r3, #20]
 80038f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80038fa:	2b40      	cmp	r3, #64	; 0x40
 80038fc:	d1b5      	bne.n	800386a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 80038fe:	2300      	movs	r3, #0
 8003900:	4618      	mov	r0, r3
 8003902:	3710      	adds	r7, #16
 8003904:	46bd      	mov	sp, r7
 8003906:	bd80      	pop	{r7, pc}

08003908 <I2C_IsAcknowledgeFailed>:
 8003908:	b480      	push	{r7}
 800390a:	b083      	sub	sp, #12
 800390c:	af00      	add	r7, sp, #0
 800390e:	6078      	str	r0, [r7, #4]
 8003910:	687b      	ldr	r3, [r7, #4]
 8003912:	681b      	ldr	r3, [r3, #0]
 8003914:	695b      	ldr	r3, [r3, #20]
 8003916:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800391a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800391e:	d11b      	bne.n	8003958 <I2C_IsAcknowledgeFailed+0x50>
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003928:	615a      	str	r2, [r3, #20]
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	2200      	movs	r2, #0
 800392e:	631a      	str	r2, [r3, #48]	; 0x30
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	2220      	movs	r2, #32
 8003934:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	2200      	movs	r2, #0
 800393c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003940:	687b      	ldr	r3, [r7, #4]
 8003942:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003944:	f043 0204 	orr.w	r2, r3, #4
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	641a      	str	r2, [r3, #64]	; 0x40
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	2200      	movs	r2, #0
 8003950:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003954:	2301      	movs	r3, #1
 8003956:	e000      	b.n	800395a <I2C_IsAcknowledgeFailed+0x52>
 8003958:	2300      	movs	r3, #0
 800395a:	4618      	mov	r0, r3
 800395c:	370c      	adds	r7, #12
 800395e:	46bd      	mov	sp, r7
 8003960:	bc80      	pop	{r7}
 8003962:	4770      	bx	lr

08003964 <HAL_RCC_OscConfig>:
 8003964:	b580      	push	{r7, lr}
 8003966:	b086      	sub	sp, #24
 8003968:	af00      	add	r7, sp, #0
 800396a:	6078      	str	r0, [r7, #4]
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	2b00      	cmp	r3, #0
 8003970:	d101      	bne.n	8003976 <HAL_RCC_OscConfig+0x12>
 8003972:	2301      	movs	r3, #1
 8003974:	e272      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003976:	687b      	ldr	r3, [r7, #4]
 8003978:	681b      	ldr	r3, [r3, #0]
 800397a:	f003 0301 	and.w	r3, r3, #1
 800397e:	2b00      	cmp	r3, #0
 8003980:	f000 8087 	beq.w	8003a92 <HAL_RCC_OscConfig+0x12e>
 8003984:	4b92      	ldr	r3, [pc, #584]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003986:	685b      	ldr	r3, [r3, #4]
 8003988:	f003 030c 	and.w	r3, r3, #12
 800398c:	2b04      	cmp	r3, #4
 800398e:	d00c      	beq.n	80039aa <HAL_RCC_OscConfig+0x46>
 8003990:	4b8f      	ldr	r3, [pc, #572]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003992:	685b      	ldr	r3, [r3, #4]
 8003994:	f003 030c 	and.w	r3, r3, #12
 8003998:	2b08      	cmp	r3, #8
 800399a:	d112      	bne.n	80039c2 <HAL_RCC_OscConfig+0x5e>
 800399c:	4b8c      	ldr	r3, [pc, #560]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 800399e:	685b      	ldr	r3, [r3, #4]
 80039a0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80039a4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80039a8:	d10b      	bne.n	80039c2 <HAL_RCC_OscConfig+0x5e>
 80039aa:	4b89      	ldr	r3, [pc, #548]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80039b2:	2b00      	cmp	r3, #0
 80039b4:	d06c      	beq.n	8003a90 <HAL_RCC_OscConfig+0x12c>
 80039b6:	687b      	ldr	r3, [r7, #4]
 80039b8:	685b      	ldr	r3, [r3, #4]
 80039ba:	2b00      	cmp	r3, #0
 80039bc:	d168      	bne.n	8003a90 <HAL_RCC_OscConfig+0x12c>
 80039be:	2301      	movs	r3, #1
 80039c0:	e24c      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	685b      	ldr	r3, [r3, #4]
 80039c6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80039ca:	d106      	bne.n	80039da <HAL_RCC_OscConfig+0x76>
 80039cc:	4b80      	ldr	r3, [pc, #512]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	4a7f      	ldr	r2, [pc, #508]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 80039d2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80039d6:	6013      	str	r3, [r2, #0]
 80039d8:	e02e      	b.n	8003a38 <HAL_RCC_OscConfig+0xd4>
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	685b      	ldr	r3, [r3, #4]
 80039de:	2b00      	cmp	r3, #0
 80039e0:	d10c      	bne.n	80039fc <HAL_RCC_OscConfig+0x98>
 80039e2:	4b7b      	ldr	r3, [pc, #492]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	4a7a      	ldr	r2, [pc, #488]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 80039e8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80039ec:	6013      	str	r3, [r2, #0]
 80039ee:	4b78      	ldr	r3, [pc, #480]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 80039f0:	681b      	ldr	r3, [r3, #0]
 80039f2:	4a77      	ldr	r2, [pc, #476]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 80039f4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80039f8:	6013      	str	r3, [r2, #0]
 80039fa:	e01d      	b.n	8003a38 <HAL_RCC_OscConfig+0xd4>
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	685b      	ldr	r3, [r3, #4]
 8003a00:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003a04:	d10c      	bne.n	8003a20 <HAL_RCC_OscConfig+0xbc>
 8003a06:	4b72      	ldr	r3, [pc, #456]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003a08:	681b      	ldr	r3, [r3, #0]
 8003a0a:	4a71      	ldr	r2, [pc, #452]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003a0c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003a10:	6013      	str	r3, [r2, #0]
 8003a12:	4b6f      	ldr	r3, [pc, #444]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	4a6e      	ldr	r2, [pc, #440]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003a18:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003a1c:	6013      	str	r3, [r2, #0]
 8003a1e:	e00b      	b.n	8003a38 <HAL_RCC_OscConfig+0xd4>
 8003a20:	4b6b      	ldr	r3, [pc, #428]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	4a6a      	ldr	r2, [pc, #424]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003a26:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003a2a:	6013      	str	r3, [r2, #0]
 8003a2c:	4b68      	ldr	r3, [pc, #416]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003a2e:	681b      	ldr	r3, [r3, #0]
 8003a30:	4a67      	ldr	r2, [pc, #412]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003a32:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003a36:	6013      	str	r3, [r2, #0]
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	685b      	ldr	r3, [r3, #4]
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	d013      	beq.n	8003a68 <HAL_RCC_OscConfig+0x104>
 8003a40:	f7fe fb0c 	bl	800205c <HAL_GetTick>
 8003a44:	6138      	str	r0, [r7, #16]
 8003a46:	e008      	b.n	8003a5a <HAL_RCC_OscConfig+0xf6>
 8003a48:	f7fe fb08 	bl	800205c <HAL_GetTick>
 8003a4c:	4602      	mov	r2, r0
 8003a4e:	693b      	ldr	r3, [r7, #16]
 8003a50:	1ad3      	subs	r3, r2, r3
 8003a52:	2b64      	cmp	r3, #100	; 0x64
 8003a54:	d901      	bls.n	8003a5a <HAL_RCC_OscConfig+0xf6>
 8003a56:	2303      	movs	r3, #3
 8003a58:	e200      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003a5a:	4b5d      	ldr	r3, [pc, #372]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003a5c:	681b      	ldr	r3, [r3, #0]
 8003a5e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d0f0      	beq.n	8003a48 <HAL_RCC_OscConfig+0xe4>
 8003a66:	e014      	b.n	8003a92 <HAL_RCC_OscConfig+0x12e>
 8003a68:	f7fe faf8 	bl	800205c <HAL_GetTick>
 8003a6c:	6138      	str	r0, [r7, #16]
 8003a6e:	e008      	b.n	8003a82 <HAL_RCC_OscConfig+0x11e>
 8003a70:	f7fe faf4 	bl	800205c <HAL_GetTick>
 8003a74:	4602      	mov	r2, r0
 8003a76:	693b      	ldr	r3, [r7, #16]
 8003a78:	1ad3      	subs	r3, r2, r3
 8003a7a:	2b64      	cmp	r3, #100	; 0x64
 8003a7c:	d901      	bls.n	8003a82 <HAL_RCC_OscConfig+0x11e>
 8003a7e:	2303      	movs	r3, #3
 8003a80:	e1ec      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003a82:	4b53      	ldr	r3, [pc, #332]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003a8a:	2b00      	cmp	r3, #0
 8003a8c:	d1f0      	bne.n	8003a70 <HAL_RCC_OscConfig+0x10c>
 8003a8e:	e000      	b.n	8003a92 <HAL_RCC_OscConfig+0x12e>
 8003a90:	bf00      	nop
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	f003 0302 	and.w	r3, r3, #2
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d063      	beq.n	8003b66 <HAL_RCC_OscConfig+0x202>
 8003a9e:	4b4c      	ldr	r3, [pc, #304]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003aa0:	685b      	ldr	r3, [r3, #4]
 8003aa2:	f003 030c 	and.w	r3, r3, #12
 8003aa6:	2b00      	cmp	r3, #0
 8003aa8:	d00b      	beq.n	8003ac2 <HAL_RCC_OscConfig+0x15e>
 8003aaa:	4b49      	ldr	r3, [pc, #292]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003aac:	685b      	ldr	r3, [r3, #4]
 8003aae:	f003 030c 	and.w	r3, r3, #12
 8003ab2:	2b08      	cmp	r3, #8
 8003ab4:	d11c      	bne.n	8003af0 <HAL_RCC_OscConfig+0x18c>
 8003ab6:	4b46      	ldr	r3, [pc, #280]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003ab8:	685b      	ldr	r3, [r3, #4]
 8003aba:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003abe:	2b00      	cmp	r3, #0
 8003ac0:	d116      	bne.n	8003af0 <HAL_RCC_OscConfig+0x18c>
 8003ac2:	4b43      	ldr	r3, [pc, #268]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	f003 0302 	and.w	r3, r3, #2
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	d005      	beq.n	8003ada <HAL_RCC_OscConfig+0x176>
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	691b      	ldr	r3, [r3, #16]
 8003ad2:	2b01      	cmp	r3, #1
 8003ad4:	d001      	beq.n	8003ada <HAL_RCC_OscConfig+0x176>
 8003ad6:	2301      	movs	r3, #1
 8003ad8:	e1c0      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003ada:	4b3d      	ldr	r3, [pc, #244]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003adc:	681b      	ldr	r3, [r3, #0]
 8003ade:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	695b      	ldr	r3, [r3, #20]
 8003ae6:	00db      	lsls	r3, r3, #3
 8003ae8:	4939      	ldr	r1, [pc, #228]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003aea:	4313      	orrs	r3, r2
 8003aec:	600b      	str	r3, [r1, #0]
 8003aee:	e03a      	b.n	8003b66 <HAL_RCC_OscConfig+0x202>
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	691b      	ldr	r3, [r3, #16]
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	d020      	beq.n	8003b3a <HAL_RCC_OscConfig+0x1d6>
 8003af8:	4b36      	ldr	r3, [pc, #216]	; (8003bd4 <HAL_RCC_OscConfig+0x270>)
 8003afa:	2201      	movs	r2, #1
 8003afc:	601a      	str	r2, [r3, #0]
 8003afe:	f7fe faad 	bl	800205c <HAL_GetTick>
 8003b02:	6138      	str	r0, [r7, #16]
 8003b04:	e008      	b.n	8003b18 <HAL_RCC_OscConfig+0x1b4>
 8003b06:	f7fe faa9 	bl	800205c <HAL_GetTick>
 8003b0a:	4602      	mov	r2, r0
 8003b0c:	693b      	ldr	r3, [r7, #16]
 8003b0e:	1ad3      	subs	r3, r2, r3
 8003b10:	2b02      	cmp	r3, #2
 8003b12:	d901      	bls.n	8003b18 <HAL_RCC_OscConfig+0x1b4>
 8003b14:	2303      	movs	r3, #3
 8003b16:	e1a1      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003b18:	4b2d      	ldr	r3, [pc, #180]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	f003 0302 	and.w	r3, r3, #2
 8003b20:	2b00      	cmp	r3, #0
 8003b22:	d0f0      	beq.n	8003b06 <HAL_RCC_OscConfig+0x1a2>
 8003b24:	4b2a      	ldr	r3, [pc, #168]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	695b      	ldr	r3, [r3, #20]
 8003b30:	00db      	lsls	r3, r3, #3
 8003b32:	4927      	ldr	r1, [pc, #156]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003b34:	4313      	orrs	r3, r2
 8003b36:	600b      	str	r3, [r1, #0]
 8003b38:	e015      	b.n	8003b66 <HAL_RCC_OscConfig+0x202>
 8003b3a:	4b26      	ldr	r3, [pc, #152]	; (8003bd4 <HAL_RCC_OscConfig+0x270>)
 8003b3c:	2200      	movs	r2, #0
 8003b3e:	601a      	str	r2, [r3, #0]
 8003b40:	f7fe fa8c 	bl	800205c <HAL_GetTick>
 8003b44:	6138      	str	r0, [r7, #16]
 8003b46:	e008      	b.n	8003b5a <HAL_RCC_OscConfig+0x1f6>
 8003b48:	f7fe fa88 	bl	800205c <HAL_GetTick>
 8003b4c:	4602      	mov	r2, r0
 8003b4e:	693b      	ldr	r3, [r7, #16]
 8003b50:	1ad3      	subs	r3, r2, r3
 8003b52:	2b02      	cmp	r3, #2
 8003b54:	d901      	bls.n	8003b5a <HAL_RCC_OscConfig+0x1f6>
 8003b56:	2303      	movs	r3, #3
 8003b58:	e180      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003b5a:	4b1d      	ldr	r3, [pc, #116]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	f003 0302 	and.w	r3, r3, #2
 8003b62:	2b00      	cmp	r3, #0
 8003b64:	d1f0      	bne.n	8003b48 <HAL_RCC_OscConfig+0x1e4>
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	f003 0308 	and.w	r3, r3, #8
 8003b6e:	2b00      	cmp	r3, #0
 8003b70:	d03a      	beq.n	8003be8 <HAL_RCC_OscConfig+0x284>
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	699b      	ldr	r3, [r3, #24]
 8003b76:	2b00      	cmp	r3, #0
 8003b78:	d019      	beq.n	8003bae <HAL_RCC_OscConfig+0x24a>
 8003b7a:	4b17      	ldr	r3, [pc, #92]	; (8003bd8 <HAL_RCC_OscConfig+0x274>)
 8003b7c:	2201      	movs	r2, #1
 8003b7e:	601a      	str	r2, [r3, #0]
 8003b80:	f7fe fa6c 	bl	800205c <HAL_GetTick>
 8003b84:	6138      	str	r0, [r7, #16]
 8003b86:	e008      	b.n	8003b9a <HAL_RCC_OscConfig+0x236>
 8003b88:	f7fe fa68 	bl	800205c <HAL_GetTick>
 8003b8c:	4602      	mov	r2, r0
 8003b8e:	693b      	ldr	r3, [r7, #16]
 8003b90:	1ad3      	subs	r3, r2, r3
 8003b92:	2b02      	cmp	r3, #2
 8003b94:	d901      	bls.n	8003b9a <HAL_RCC_OscConfig+0x236>
 8003b96:	2303      	movs	r3, #3
 8003b98:	e160      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003b9a:	4b0d      	ldr	r3, [pc, #52]	; (8003bd0 <HAL_RCC_OscConfig+0x26c>)
 8003b9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b9e:	f003 0302 	and.w	r3, r3, #2
 8003ba2:	2b00      	cmp	r3, #0
 8003ba4:	d0f0      	beq.n	8003b88 <HAL_RCC_OscConfig+0x224>
 8003ba6:	2001      	movs	r0, #1
 8003ba8:	f000 fad8 	bl	800415c <RCC_Delay>
 8003bac:	e01c      	b.n	8003be8 <HAL_RCC_OscConfig+0x284>
 8003bae:	4b0a      	ldr	r3, [pc, #40]	; (8003bd8 <HAL_RCC_OscConfig+0x274>)
 8003bb0:	2200      	movs	r2, #0
 8003bb2:	601a      	str	r2, [r3, #0]
 8003bb4:	f7fe fa52 	bl	800205c <HAL_GetTick>
 8003bb8:	6138      	str	r0, [r7, #16]
 8003bba:	e00f      	b.n	8003bdc <HAL_RCC_OscConfig+0x278>
 8003bbc:	f7fe fa4e 	bl	800205c <HAL_GetTick>
 8003bc0:	4602      	mov	r2, r0
 8003bc2:	693b      	ldr	r3, [r7, #16]
 8003bc4:	1ad3      	subs	r3, r2, r3
 8003bc6:	2b02      	cmp	r3, #2
 8003bc8:	d908      	bls.n	8003bdc <HAL_RCC_OscConfig+0x278>
 8003bca:	2303      	movs	r3, #3
 8003bcc:	e146      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003bce:	bf00      	nop
 8003bd0:	40021000 	.word	0x40021000
 8003bd4:	42420000 	.word	0x42420000
 8003bd8:	42420480 	.word	0x42420480
 8003bdc:	4b92      	ldr	r3, [pc, #584]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003bde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003be0:	f003 0302 	and.w	r3, r3, #2
 8003be4:	2b00      	cmp	r3, #0
 8003be6:	d1e9      	bne.n	8003bbc <HAL_RCC_OscConfig+0x258>
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	681b      	ldr	r3, [r3, #0]
 8003bec:	f003 0304 	and.w	r3, r3, #4
 8003bf0:	2b00      	cmp	r3, #0
 8003bf2:	f000 80a6 	beq.w	8003d42 <HAL_RCC_OscConfig+0x3de>
 8003bf6:	2300      	movs	r3, #0
 8003bf8:	75fb      	strb	r3, [r7, #23]
 8003bfa:	4b8b      	ldr	r3, [pc, #556]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003bfc:	69db      	ldr	r3, [r3, #28]
 8003bfe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003c02:	2b00      	cmp	r3, #0
 8003c04:	d10d      	bne.n	8003c22 <HAL_RCC_OscConfig+0x2be>
 8003c06:	4b88      	ldr	r3, [pc, #544]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003c08:	69db      	ldr	r3, [r3, #28]
 8003c0a:	4a87      	ldr	r2, [pc, #540]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003c0c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003c10:	61d3      	str	r3, [r2, #28]
 8003c12:	4b85      	ldr	r3, [pc, #532]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003c14:	69db      	ldr	r3, [r3, #28]
 8003c16:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003c1a:	60bb      	str	r3, [r7, #8]
 8003c1c:	68bb      	ldr	r3, [r7, #8]
 8003c1e:	2301      	movs	r3, #1
 8003c20:	75fb      	strb	r3, [r7, #23]
 8003c22:	4b82      	ldr	r3, [pc, #520]	; (8003e2c <HAL_RCC_OscConfig+0x4c8>)
 8003c24:	681b      	ldr	r3, [r3, #0]
 8003c26:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003c2a:	2b00      	cmp	r3, #0
 8003c2c:	d118      	bne.n	8003c60 <HAL_RCC_OscConfig+0x2fc>
 8003c2e:	4b7f      	ldr	r3, [pc, #508]	; (8003e2c <HAL_RCC_OscConfig+0x4c8>)
 8003c30:	681b      	ldr	r3, [r3, #0]
 8003c32:	4a7e      	ldr	r2, [pc, #504]	; (8003e2c <HAL_RCC_OscConfig+0x4c8>)
 8003c34:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003c38:	6013      	str	r3, [r2, #0]
 8003c3a:	f7fe fa0f 	bl	800205c <HAL_GetTick>
 8003c3e:	6138      	str	r0, [r7, #16]
 8003c40:	e008      	b.n	8003c54 <HAL_RCC_OscConfig+0x2f0>
 8003c42:	f7fe fa0b 	bl	800205c <HAL_GetTick>
 8003c46:	4602      	mov	r2, r0
 8003c48:	693b      	ldr	r3, [r7, #16]
 8003c4a:	1ad3      	subs	r3, r2, r3
 8003c4c:	2b64      	cmp	r3, #100	; 0x64
 8003c4e:	d901      	bls.n	8003c54 <HAL_RCC_OscConfig+0x2f0>
 8003c50:	2303      	movs	r3, #3
 8003c52:	e103      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003c54:	4b75      	ldr	r3, [pc, #468]	; (8003e2c <HAL_RCC_OscConfig+0x4c8>)
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003c5c:	2b00      	cmp	r3, #0
 8003c5e:	d0f0      	beq.n	8003c42 <HAL_RCC_OscConfig+0x2de>
 8003c60:	687b      	ldr	r3, [r7, #4]
 8003c62:	68db      	ldr	r3, [r3, #12]
 8003c64:	2b01      	cmp	r3, #1
 8003c66:	d106      	bne.n	8003c76 <HAL_RCC_OscConfig+0x312>
 8003c68:	4b6f      	ldr	r3, [pc, #444]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003c6a:	6a1b      	ldr	r3, [r3, #32]
 8003c6c:	4a6e      	ldr	r2, [pc, #440]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003c6e:	f043 0301 	orr.w	r3, r3, #1
 8003c72:	6213      	str	r3, [r2, #32]
 8003c74:	e02d      	b.n	8003cd2 <HAL_RCC_OscConfig+0x36e>
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	68db      	ldr	r3, [r3, #12]
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d10c      	bne.n	8003c98 <HAL_RCC_OscConfig+0x334>
 8003c7e:	4b6a      	ldr	r3, [pc, #424]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003c80:	6a1b      	ldr	r3, [r3, #32]
 8003c82:	4a69      	ldr	r2, [pc, #420]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003c84:	f023 0301 	bic.w	r3, r3, #1
 8003c88:	6213      	str	r3, [r2, #32]
 8003c8a:	4b67      	ldr	r3, [pc, #412]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003c8c:	6a1b      	ldr	r3, [r3, #32]
 8003c8e:	4a66      	ldr	r2, [pc, #408]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003c90:	f023 0304 	bic.w	r3, r3, #4
 8003c94:	6213      	str	r3, [r2, #32]
 8003c96:	e01c      	b.n	8003cd2 <HAL_RCC_OscConfig+0x36e>
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	68db      	ldr	r3, [r3, #12]
 8003c9c:	2b05      	cmp	r3, #5
 8003c9e:	d10c      	bne.n	8003cba <HAL_RCC_OscConfig+0x356>
 8003ca0:	4b61      	ldr	r3, [pc, #388]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003ca2:	6a1b      	ldr	r3, [r3, #32]
 8003ca4:	4a60      	ldr	r2, [pc, #384]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003ca6:	f043 0304 	orr.w	r3, r3, #4
 8003caa:	6213      	str	r3, [r2, #32]
 8003cac:	4b5e      	ldr	r3, [pc, #376]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003cae:	6a1b      	ldr	r3, [r3, #32]
 8003cb0:	4a5d      	ldr	r2, [pc, #372]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003cb2:	f043 0301 	orr.w	r3, r3, #1
 8003cb6:	6213      	str	r3, [r2, #32]
 8003cb8:	e00b      	b.n	8003cd2 <HAL_RCC_OscConfig+0x36e>
 8003cba:	4b5b      	ldr	r3, [pc, #364]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003cbc:	6a1b      	ldr	r3, [r3, #32]
 8003cbe:	4a5a      	ldr	r2, [pc, #360]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003cc0:	f023 0301 	bic.w	r3, r3, #1
 8003cc4:	6213      	str	r3, [r2, #32]
 8003cc6:	4b58      	ldr	r3, [pc, #352]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003cc8:	6a1b      	ldr	r3, [r3, #32]
 8003cca:	4a57      	ldr	r2, [pc, #348]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003ccc:	f023 0304 	bic.w	r3, r3, #4
 8003cd0:	6213      	str	r3, [r2, #32]
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	68db      	ldr	r3, [r3, #12]
 8003cd6:	2b00      	cmp	r3, #0
 8003cd8:	d015      	beq.n	8003d06 <HAL_RCC_OscConfig+0x3a2>
 8003cda:	f7fe f9bf 	bl	800205c <HAL_GetTick>
 8003cde:	6138      	str	r0, [r7, #16]
 8003ce0:	e00a      	b.n	8003cf8 <HAL_RCC_OscConfig+0x394>
 8003ce2:	f7fe f9bb 	bl	800205c <HAL_GetTick>
 8003ce6:	4602      	mov	r2, r0
 8003ce8:	693b      	ldr	r3, [r7, #16]
 8003cea:	1ad3      	subs	r3, r2, r3
 8003cec:	f241 3288 	movw	r2, #5000	; 0x1388
 8003cf0:	4293      	cmp	r3, r2
 8003cf2:	d901      	bls.n	8003cf8 <HAL_RCC_OscConfig+0x394>
 8003cf4:	2303      	movs	r3, #3
 8003cf6:	e0b1      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003cf8:	4b4b      	ldr	r3, [pc, #300]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003cfa:	6a1b      	ldr	r3, [r3, #32]
 8003cfc:	f003 0302 	and.w	r3, r3, #2
 8003d00:	2b00      	cmp	r3, #0
 8003d02:	d0ee      	beq.n	8003ce2 <HAL_RCC_OscConfig+0x37e>
 8003d04:	e014      	b.n	8003d30 <HAL_RCC_OscConfig+0x3cc>
 8003d06:	f7fe f9a9 	bl	800205c <HAL_GetTick>
 8003d0a:	6138      	str	r0, [r7, #16]
 8003d0c:	e00a      	b.n	8003d24 <HAL_RCC_OscConfig+0x3c0>
 8003d0e:	f7fe f9a5 	bl	800205c <HAL_GetTick>
 8003d12:	4602      	mov	r2, r0
 8003d14:	693b      	ldr	r3, [r7, #16]
 8003d16:	1ad3      	subs	r3, r2, r3
 8003d18:	f241 3288 	movw	r2, #5000	; 0x1388
 8003d1c:	4293      	cmp	r3, r2
 8003d1e:	d901      	bls.n	8003d24 <HAL_RCC_OscConfig+0x3c0>
 8003d20:	2303      	movs	r3, #3
 8003d22:	e09b      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003d24:	4b40      	ldr	r3, [pc, #256]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003d26:	6a1b      	ldr	r3, [r3, #32]
 8003d28:	f003 0302 	and.w	r3, r3, #2
 8003d2c:	2b00      	cmp	r3, #0
 8003d2e:	d1ee      	bne.n	8003d0e <HAL_RCC_OscConfig+0x3aa>
 8003d30:	7dfb      	ldrb	r3, [r7, #23]
 8003d32:	2b01      	cmp	r3, #1
 8003d34:	d105      	bne.n	8003d42 <HAL_RCC_OscConfig+0x3de>
 8003d36:	4b3c      	ldr	r3, [pc, #240]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003d38:	69db      	ldr	r3, [r3, #28]
 8003d3a:	4a3b      	ldr	r2, [pc, #236]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003d3c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003d40:	61d3      	str	r3, [r2, #28]
 8003d42:	687b      	ldr	r3, [r7, #4]
 8003d44:	69db      	ldr	r3, [r3, #28]
 8003d46:	2b00      	cmp	r3, #0
 8003d48:	f000 8087 	beq.w	8003e5a <HAL_RCC_OscConfig+0x4f6>
 8003d4c:	4b36      	ldr	r3, [pc, #216]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003d4e:	685b      	ldr	r3, [r3, #4]
 8003d50:	f003 030c 	and.w	r3, r3, #12
 8003d54:	2b08      	cmp	r3, #8
 8003d56:	d061      	beq.n	8003e1c <HAL_RCC_OscConfig+0x4b8>
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	69db      	ldr	r3, [r3, #28]
 8003d5c:	2b02      	cmp	r3, #2
 8003d5e:	d146      	bne.n	8003dee <HAL_RCC_OscConfig+0x48a>
 8003d60:	4b33      	ldr	r3, [pc, #204]	; (8003e30 <HAL_RCC_OscConfig+0x4cc>)
 8003d62:	2200      	movs	r2, #0
 8003d64:	601a      	str	r2, [r3, #0]
 8003d66:	f7fe f979 	bl	800205c <HAL_GetTick>
 8003d6a:	6138      	str	r0, [r7, #16]
 8003d6c:	e008      	b.n	8003d80 <HAL_RCC_OscConfig+0x41c>
 8003d6e:	f7fe f975 	bl	800205c <HAL_GetTick>
 8003d72:	4602      	mov	r2, r0
 8003d74:	693b      	ldr	r3, [r7, #16]
 8003d76:	1ad3      	subs	r3, r2, r3
 8003d78:	2b02      	cmp	r3, #2
 8003d7a:	d901      	bls.n	8003d80 <HAL_RCC_OscConfig+0x41c>
 8003d7c:	2303      	movs	r3, #3
 8003d7e:	e06d      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003d80:	4b29      	ldr	r3, [pc, #164]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003d82:	681b      	ldr	r3, [r3, #0]
 8003d84:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003d88:	2b00      	cmp	r3, #0
 8003d8a:	d1f0      	bne.n	8003d6e <HAL_RCC_OscConfig+0x40a>
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	6a1b      	ldr	r3, [r3, #32]
 8003d90:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003d94:	d108      	bne.n	8003da8 <HAL_RCC_OscConfig+0x444>
 8003d96:	4b24      	ldr	r3, [pc, #144]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003d98:	685b      	ldr	r3, [r3, #4]
 8003d9a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	689b      	ldr	r3, [r3, #8]
 8003da2:	4921      	ldr	r1, [pc, #132]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003da4:	4313      	orrs	r3, r2
 8003da6:	604b      	str	r3, [r1, #4]
 8003da8:	4b1f      	ldr	r3, [pc, #124]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003daa:	685b      	ldr	r3, [r3, #4]
 8003dac:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8003db0:	687b      	ldr	r3, [r7, #4]
 8003db2:	6a19      	ldr	r1, [r3, #32]
 8003db4:	687b      	ldr	r3, [r7, #4]
 8003db6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003db8:	430b      	orrs	r3, r1
 8003dba:	491b      	ldr	r1, [pc, #108]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003dbc:	4313      	orrs	r3, r2
 8003dbe:	604b      	str	r3, [r1, #4]
 8003dc0:	4b1b      	ldr	r3, [pc, #108]	; (8003e30 <HAL_RCC_OscConfig+0x4cc>)
 8003dc2:	2201      	movs	r2, #1
 8003dc4:	601a      	str	r2, [r3, #0]
 8003dc6:	f7fe f949 	bl	800205c <HAL_GetTick>
 8003dca:	6138      	str	r0, [r7, #16]
 8003dcc:	e008      	b.n	8003de0 <HAL_RCC_OscConfig+0x47c>
 8003dce:	f7fe f945 	bl	800205c <HAL_GetTick>
 8003dd2:	4602      	mov	r2, r0
 8003dd4:	693b      	ldr	r3, [r7, #16]
 8003dd6:	1ad3      	subs	r3, r2, r3
 8003dd8:	2b02      	cmp	r3, #2
 8003dda:	d901      	bls.n	8003de0 <HAL_RCC_OscConfig+0x47c>
 8003ddc:	2303      	movs	r3, #3
 8003dde:	e03d      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003de0:	4b11      	ldr	r3, [pc, #68]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003de8:	2b00      	cmp	r3, #0
 8003dea:	d0f0      	beq.n	8003dce <HAL_RCC_OscConfig+0x46a>
 8003dec:	e035      	b.n	8003e5a <HAL_RCC_OscConfig+0x4f6>
 8003dee:	4b10      	ldr	r3, [pc, #64]	; (8003e30 <HAL_RCC_OscConfig+0x4cc>)
 8003df0:	2200      	movs	r2, #0
 8003df2:	601a      	str	r2, [r3, #0]
 8003df4:	f7fe f932 	bl	800205c <HAL_GetTick>
 8003df8:	6138      	str	r0, [r7, #16]
 8003dfa:	e008      	b.n	8003e0e <HAL_RCC_OscConfig+0x4aa>
 8003dfc:	f7fe f92e 	bl	800205c <HAL_GetTick>
 8003e00:	4602      	mov	r2, r0
 8003e02:	693b      	ldr	r3, [r7, #16]
 8003e04:	1ad3      	subs	r3, r2, r3
 8003e06:	2b02      	cmp	r3, #2
 8003e08:	d901      	bls.n	8003e0e <HAL_RCC_OscConfig+0x4aa>
 8003e0a:	2303      	movs	r3, #3
 8003e0c:	e026      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003e0e:	4b06      	ldr	r3, [pc, #24]	; (8003e28 <HAL_RCC_OscConfig+0x4c4>)
 8003e10:	681b      	ldr	r3, [r3, #0]
 8003e12:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003e16:	2b00      	cmp	r3, #0
 8003e18:	d1f0      	bne.n	8003dfc <HAL_RCC_OscConfig+0x498>
 8003e1a:	e01e      	b.n	8003e5a <HAL_RCC_OscConfig+0x4f6>
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	69db      	ldr	r3, [r3, #28]
 8003e20:	2b01      	cmp	r3, #1
 8003e22:	d107      	bne.n	8003e34 <HAL_RCC_OscConfig+0x4d0>
 8003e24:	2301      	movs	r3, #1
 8003e26:	e019      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003e28:	40021000 	.word	0x40021000
 8003e2c:	40007000 	.word	0x40007000
 8003e30:	42420060 	.word	0x42420060
 8003e34:	4b0b      	ldr	r3, [pc, #44]	; (8003e64 <HAL_RCC_OscConfig+0x500>)
 8003e36:	685b      	ldr	r3, [r3, #4]
 8003e38:	60fb      	str	r3, [r7, #12]
 8003e3a:	68fb      	ldr	r3, [r7, #12]
 8003e3c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003e40:	687b      	ldr	r3, [r7, #4]
 8003e42:	6a1b      	ldr	r3, [r3, #32]
 8003e44:	429a      	cmp	r2, r3
 8003e46:	d106      	bne.n	8003e56 <HAL_RCC_OscConfig+0x4f2>
 8003e48:	68fb      	ldr	r3, [r7, #12]
 8003e4a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e52:	429a      	cmp	r2, r3
 8003e54:	d001      	beq.n	8003e5a <HAL_RCC_OscConfig+0x4f6>
 8003e56:	2301      	movs	r3, #1
 8003e58:	e000      	b.n	8003e5c <HAL_RCC_OscConfig+0x4f8>
 8003e5a:	2300      	movs	r3, #0
 8003e5c:	4618      	mov	r0, r3
 8003e5e:	3718      	adds	r7, #24
 8003e60:	46bd      	mov	sp, r7
 8003e62:	bd80      	pop	{r7, pc}
 8003e64:	40021000 	.word	0x40021000

08003e68 <HAL_RCC_ClockConfig>:
 8003e68:	b580      	push	{r7, lr}
 8003e6a:	b084      	sub	sp, #16
 8003e6c:	af00      	add	r7, sp, #0
 8003e6e:	6078      	str	r0, [r7, #4]
 8003e70:	6039      	str	r1, [r7, #0]
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	2b00      	cmp	r3, #0
 8003e76:	d101      	bne.n	8003e7c <HAL_RCC_ClockConfig+0x14>
 8003e78:	2301      	movs	r3, #1
 8003e7a:	e0d0      	b.n	800401e <HAL_RCC_ClockConfig+0x1b6>
 8003e7c:	4b6a      	ldr	r3, [pc, #424]	; (8004028 <HAL_RCC_ClockConfig+0x1c0>)
 8003e7e:	681b      	ldr	r3, [r3, #0]
 8003e80:	f003 0307 	and.w	r3, r3, #7
 8003e84:	683a      	ldr	r2, [r7, #0]
 8003e86:	429a      	cmp	r2, r3
 8003e88:	d910      	bls.n	8003eac <HAL_RCC_ClockConfig+0x44>
 8003e8a:	4b67      	ldr	r3, [pc, #412]	; (8004028 <HAL_RCC_ClockConfig+0x1c0>)
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	f023 0207 	bic.w	r2, r3, #7
 8003e92:	4965      	ldr	r1, [pc, #404]	; (8004028 <HAL_RCC_ClockConfig+0x1c0>)
 8003e94:	683b      	ldr	r3, [r7, #0]
 8003e96:	4313      	orrs	r3, r2
 8003e98:	600b      	str	r3, [r1, #0]
 8003e9a:	4b63      	ldr	r3, [pc, #396]	; (8004028 <HAL_RCC_ClockConfig+0x1c0>)
 8003e9c:	681b      	ldr	r3, [r3, #0]
 8003e9e:	f003 0307 	and.w	r3, r3, #7
 8003ea2:	683a      	ldr	r2, [r7, #0]
 8003ea4:	429a      	cmp	r2, r3
 8003ea6:	d001      	beq.n	8003eac <HAL_RCC_ClockConfig+0x44>
 8003ea8:	2301      	movs	r3, #1
 8003eaa:	e0b8      	b.n	800401e <HAL_RCC_ClockConfig+0x1b6>
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	681b      	ldr	r3, [r3, #0]
 8003eb0:	f003 0302 	and.w	r3, r3, #2
 8003eb4:	2b00      	cmp	r3, #0
 8003eb6:	d020      	beq.n	8003efa <HAL_RCC_ClockConfig+0x92>
 8003eb8:	687b      	ldr	r3, [r7, #4]
 8003eba:	681b      	ldr	r3, [r3, #0]
 8003ebc:	f003 0304 	and.w	r3, r3, #4
 8003ec0:	2b00      	cmp	r3, #0
 8003ec2:	d005      	beq.n	8003ed0 <HAL_RCC_ClockConfig+0x68>
 8003ec4:	4b59      	ldr	r3, [pc, #356]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003ec6:	685b      	ldr	r3, [r3, #4]
 8003ec8:	4a58      	ldr	r2, [pc, #352]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003eca:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8003ece:	6053      	str	r3, [r2, #4]
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	f003 0308 	and.w	r3, r3, #8
 8003ed8:	2b00      	cmp	r3, #0
 8003eda:	d005      	beq.n	8003ee8 <HAL_RCC_ClockConfig+0x80>
 8003edc:	4b53      	ldr	r3, [pc, #332]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003ede:	685b      	ldr	r3, [r3, #4]
 8003ee0:	4a52      	ldr	r2, [pc, #328]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003ee2:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8003ee6:	6053      	str	r3, [r2, #4]
 8003ee8:	4b50      	ldr	r3, [pc, #320]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003eea:	685b      	ldr	r3, [r3, #4]
 8003eec:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003ef0:	687b      	ldr	r3, [r7, #4]
 8003ef2:	689b      	ldr	r3, [r3, #8]
 8003ef4:	494d      	ldr	r1, [pc, #308]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003ef6:	4313      	orrs	r3, r2
 8003ef8:	604b      	str	r3, [r1, #4]
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	f003 0301 	and.w	r3, r3, #1
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	d040      	beq.n	8003f88 <HAL_RCC_ClockConfig+0x120>
 8003f06:	687b      	ldr	r3, [r7, #4]
 8003f08:	685b      	ldr	r3, [r3, #4]
 8003f0a:	2b01      	cmp	r3, #1
 8003f0c:	d107      	bne.n	8003f1e <HAL_RCC_ClockConfig+0xb6>
 8003f0e:	4b47      	ldr	r3, [pc, #284]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003f10:	681b      	ldr	r3, [r3, #0]
 8003f12:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003f16:	2b00      	cmp	r3, #0
 8003f18:	d115      	bne.n	8003f46 <HAL_RCC_ClockConfig+0xde>
 8003f1a:	2301      	movs	r3, #1
 8003f1c:	e07f      	b.n	800401e <HAL_RCC_ClockConfig+0x1b6>
 8003f1e:	687b      	ldr	r3, [r7, #4]
 8003f20:	685b      	ldr	r3, [r3, #4]
 8003f22:	2b02      	cmp	r3, #2
 8003f24:	d107      	bne.n	8003f36 <HAL_RCC_ClockConfig+0xce>
 8003f26:	4b41      	ldr	r3, [pc, #260]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003f28:	681b      	ldr	r3, [r3, #0]
 8003f2a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003f2e:	2b00      	cmp	r3, #0
 8003f30:	d109      	bne.n	8003f46 <HAL_RCC_ClockConfig+0xde>
 8003f32:	2301      	movs	r3, #1
 8003f34:	e073      	b.n	800401e <HAL_RCC_ClockConfig+0x1b6>
 8003f36:	4b3d      	ldr	r3, [pc, #244]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003f38:	681b      	ldr	r3, [r3, #0]
 8003f3a:	f003 0302 	and.w	r3, r3, #2
 8003f3e:	2b00      	cmp	r3, #0
 8003f40:	d101      	bne.n	8003f46 <HAL_RCC_ClockConfig+0xde>
 8003f42:	2301      	movs	r3, #1
 8003f44:	e06b      	b.n	800401e <HAL_RCC_ClockConfig+0x1b6>
 8003f46:	4b39      	ldr	r3, [pc, #228]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003f48:	685b      	ldr	r3, [r3, #4]
 8003f4a:	f023 0203 	bic.w	r2, r3, #3
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	685b      	ldr	r3, [r3, #4]
 8003f52:	4936      	ldr	r1, [pc, #216]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003f54:	4313      	orrs	r3, r2
 8003f56:	604b      	str	r3, [r1, #4]
 8003f58:	f7fe f880 	bl	800205c <HAL_GetTick>
 8003f5c:	60f8      	str	r0, [r7, #12]
 8003f5e:	e00a      	b.n	8003f76 <HAL_RCC_ClockConfig+0x10e>
 8003f60:	f7fe f87c 	bl	800205c <HAL_GetTick>
 8003f64:	4602      	mov	r2, r0
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	1ad3      	subs	r3, r2, r3
 8003f6a:	f241 3288 	movw	r2, #5000	; 0x1388
 8003f6e:	4293      	cmp	r3, r2
 8003f70:	d901      	bls.n	8003f76 <HAL_RCC_ClockConfig+0x10e>
 8003f72:	2303      	movs	r3, #3
 8003f74:	e053      	b.n	800401e <HAL_RCC_ClockConfig+0x1b6>
 8003f76:	4b2d      	ldr	r3, [pc, #180]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003f78:	685b      	ldr	r3, [r3, #4]
 8003f7a:	f003 020c 	and.w	r2, r3, #12
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	685b      	ldr	r3, [r3, #4]
 8003f82:	009b      	lsls	r3, r3, #2
 8003f84:	429a      	cmp	r2, r3
 8003f86:	d1eb      	bne.n	8003f60 <HAL_RCC_ClockConfig+0xf8>
 8003f88:	4b27      	ldr	r3, [pc, #156]	; (8004028 <HAL_RCC_ClockConfig+0x1c0>)
 8003f8a:	681b      	ldr	r3, [r3, #0]
 8003f8c:	f003 0307 	and.w	r3, r3, #7
 8003f90:	683a      	ldr	r2, [r7, #0]
 8003f92:	429a      	cmp	r2, r3
 8003f94:	d210      	bcs.n	8003fb8 <HAL_RCC_ClockConfig+0x150>
 8003f96:	4b24      	ldr	r3, [pc, #144]	; (8004028 <HAL_RCC_ClockConfig+0x1c0>)
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	f023 0207 	bic.w	r2, r3, #7
 8003f9e:	4922      	ldr	r1, [pc, #136]	; (8004028 <HAL_RCC_ClockConfig+0x1c0>)
 8003fa0:	683b      	ldr	r3, [r7, #0]
 8003fa2:	4313      	orrs	r3, r2
 8003fa4:	600b      	str	r3, [r1, #0]
 8003fa6:	4b20      	ldr	r3, [pc, #128]	; (8004028 <HAL_RCC_ClockConfig+0x1c0>)
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	f003 0307 	and.w	r3, r3, #7
 8003fae:	683a      	ldr	r2, [r7, #0]
 8003fb0:	429a      	cmp	r2, r3
 8003fb2:	d001      	beq.n	8003fb8 <HAL_RCC_ClockConfig+0x150>
 8003fb4:	2301      	movs	r3, #1
 8003fb6:	e032      	b.n	800401e <HAL_RCC_ClockConfig+0x1b6>
 8003fb8:	687b      	ldr	r3, [r7, #4]
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	f003 0304 	and.w	r3, r3, #4
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	d008      	beq.n	8003fd6 <HAL_RCC_ClockConfig+0x16e>
 8003fc4:	4b19      	ldr	r3, [pc, #100]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003fc6:	685b      	ldr	r3, [r3, #4]
 8003fc8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8003fcc:	687b      	ldr	r3, [r7, #4]
 8003fce:	68db      	ldr	r3, [r3, #12]
 8003fd0:	4916      	ldr	r1, [pc, #88]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003fd2:	4313      	orrs	r3, r2
 8003fd4:	604b      	str	r3, [r1, #4]
 8003fd6:	687b      	ldr	r3, [r7, #4]
 8003fd8:	681b      	ldr	r3, [r3, #0]
 8003fda:	f003 0308 	and.w	r3, r3, #8
 8003fde:	2b00      	cmp	r3, #0
 8003fe0:	d009      	beq.n	8003ff6 <HAL_RCC_ClockConfig+0x18e>
 8003fe2:	4b12      	ldr	r3, [pc, #72]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003fe4:	685b      	ldr	r3, [r3, #4]
 8003fe6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	691b      	ldr	r3, [r3, #16]
 8003fee:	00db      	lsls	r3, r3, #3
 8003ff0:	490e      	ldr	r1, [pc, #56]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003ff2:	4313      	orrs	r3, r2
 8003ff4:	604b      	str	r3, [r1, #4]
 8003ff6:	f000 f821 	bl	800403c <HAL_RCC_GetSysClockFreq>
 8003ffa:	4602      	mov	r2, r0
 8003ffc:	4b0b      	ldr	r3, [pc, #44]	; (800402c <HAL_RCC_ClockConfig+0x1c4>)
 8003ffe:	685b      	ldr	r3, [r3, #4]
 8004000:	091b      	lsrs	r3, r3, #4
 8004002:	f003 030f 	and.w	r3, r3, #15
 8004006:	490a      	ldr	r1, [pc, #40]	; (8004030 <HAL_RCC_ClockConfig+0x1c8>)
 8004008:	5ccb      	ldrb	r3, [r1, r3]
 800400a:	fa22 f303 	lsr.w	r3, r2, r3
 800400e:	4a09      	ldr	r2, [pc, #36]	; (8004034 <HAL_RCC_ClockConfig+0x1cc>)
 8004010:	6013      	str	r3, [r2, #0]
 8004012:	4b09      	ldr	r3, [pc, #36]	; (8004038 <HAL_RCC_ClockConfig+0x1d0>)
 8004014:	681b      	ldr	r3, [r3, #0]
 8004016:	4618      	mov	r0, r3
 8004018:	f7fd ffde 	bl	8001fd8 <HAL_InitTick>
 800401c:	2300      	movs	r3, #0
 800401e:	4618      	mov	r0, r3
 8004020:	3710      	adds	r7, #16
 8004022:	46bd      	mov	sp, r7
 8004024:	bd80      	pop	{r7, pc}
 8004026:	bf00      	nop
 8004028:	40022000 	.word	0x40022000
 800402c:	40021000 	.word	0x40021000
 8004030:	08008610 	.word	0x08008610
 8004034:	20000000 	.word	0x20000000
 8004038:	2000000c 	.word	0x2000000c

0800403c <HAL_RCC_GetSysClockFreq>:
 800403c:	b490      	push	{r4, r7}
 800403e:	b08a      	sub	sp, #40	; 0x28
 8004040:	af00      	add	r7, sp, #0
 8004042:	4b29      	ldr	r3, [pc, #164]	; (80040e8 <HAL_RCC_GetSysClockFreq+0xac>)
 8004044:	1d3c      	adds	r4, r7, #4
 8004046:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8004048:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800404c:	f240 2301 	movw	r3, #513	; 0x201
 8004050:	803b      	strh	r3, [r7, #0]
 8004052:	2300      	movs	r3, #0
 8004054:	61fb      	str	r3, [r7, #28]
 8004056:	2300      	movs	r3, #0
 8004058:	61bb      	str	r3, [r7, #24]
 800405a:	2300      	movs	r3, #0
 800405c:	627b      	str	r3, [r7, #36]	; 0x24
 800405e:	2300      	movs	r3, #0
 8004060:	617b      	str	r3, [r7, #20]
 8004062:	2300      	movs	r3, #0
 8004064:	623b      	str	r3, [r7, #32]
 8004066:	4b21      	ldr	r3, [pc, #132]	; (80040ec <HAL_RCC_GetSysClockFreq+0xb0>)
 8004068:	685b      	ldr	r3, [r3, #4]
 800406a:	61fb      	str	r3, [r7, #28]
 800406c:	69fb      	ldr	r3, [r7, #28]
 800406e:	f003 030c 	and.w	r3, r3, #12
 8004072:	2b04      	cmp	r3, #4
 8004074:	d002      	beq.n	800407c <HAL_RCC_GetSysClockFreq+0x40>
 8004076:	2b08      	cmp	r3, #8
 8004078:	d003      	beq.n	8004082 <HAL_RCC_GetSysClockFreq+0x46>
 800407a:	e02b      	b.n	80040d4 <HAL_RCC_GetSysClockFreq+0x98>
 800407c:	4b1c      	ldr	r3, [pc, #112]	; (80040f0 <HAL_RCC_GetSysClockFreq+0xb4>)
 800407e:	623b      	str	r3, [r7, #32]
 8004080:	e02b      	b.n	80040da <HAL_RCC_GetSysClockFreq+0x9e>
 8004082:	69fb      	ldr	r3, [r7, #28]
 8004084:	0c9b      	lsrs	r3, r3, #18
 8004086:	f003 030f 	and.w	r3, r3, #15
 800408a:	3328      	adds	r3, #40	; 0x28
 800408c:	443b      	add	r3, r7
 800408e:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8004092:	617b      	str	r3, [r7, #20]
 8004094:	69fb      	ldr	r3, [r7, #28]
 8004096:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800409a:	2b00      	cmp	r3, #0
 800409c:	d012      	beq.n	80040c4 <HAL_RCC_GetSysClockFreq+0x88>
 800409e:	4b13      	ldr	r3, [pc, #76]	; (80040ec <HAL_RCC_GetSysClockFreq+0xb0>)
 80040a0:	685b      	ldr	r3, [r3, #4]
 80040a2:	0c5b      	lsrs	r3, r3, #17
 80040a4:	f003 0301 	and.w	r3, r3, #1
 80040a8:	3328      	adds	r3, #40	; 0x28
 80040aa:	443b      	add	r3, r7
 80040ac:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80040b0:	61bb      	str	r3, [r7, #24]
 80040b2:	697b      	ldr	r3, [r7, #20]
 80040b4:	4a0e      	ldr	r2, [pc, #56]	; (80040f0 <HAL_RCC_GetSysClockFreq+0xb4>)
 80040b6:	fb03 f202 	mul.w	r2, r3, r2
 80040ba:	69bb      	ldr	r3, [r7, #24]
 80040bc:	fbb2 f3f3 	udiv	r3, r2, r3
 80040c0:	627b      	str	r3, [r7, #36]	; 0x24
 80040c2:	e004      	b.n	80040ce <HAL_RCC_GetSysClockFreq+0x92>
 80040c4:	697b      	ldr	r3, [r7, #20]
 80040c6:	4a0b      	ldr	r2, [pc, #44]	; (80040f4 <HAL_RCC_GetSysClockFreq+0xb8>)
 80040c8:	fb02 f303 	mul.w	r3, r2, r3
 80040cc:	627b      	str	r3, [r7, #36]	; 0x24
 80040ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80040d0:	623b      	str	r3, [r7, #32]
 80040d2:	e002      	b.n	80040da <HAL_RCC_GetSysClockFreq+0x9e>
 80040d4:	4b06      	ldr	r3, [pc, #24]	; (80040f0 <HAL_RCC_GetSysClockFreq+0xb4>)
 80040d6:	623b      	str	r3, [r7, #32]
 80040d8:	bf00      	nop
 80040da:	6a3b      	ldr	r3, [r7, #32]
 80040dc:	4618      	mov	r0, r3
 80040de:	3728      	adds	r7, #40	; 0x28
 80040e0:	46bd      	mov	sp, r7
 80040e2:	bc90      	pop	{r4, r7}
 80040e4:	4770      	bx	lr
 80040e6:	bf00      	nop
 80040e8:	08008600 	.word	0x08008600
 80040ec:	40021000 	.word	0x40021000
 80040f0:	007a1200 	.word	0x007a1200
 80040f4:	003d0900 	.word	0x003d0900

080040f8 <HAL_RCC_GetHCLKFreq>:
 80040f8:	b480      	push	{r7}
 80040fa:	af00      	add	r7, sp, #0
 80040fc:	4b02      	ldr	r3, [pc, #8]	; (8004108 <HAL_RCC_GetHCLKFreq+0x10>)
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	4618      	mov	r0, r3
 8004102:	46bd      	mov	sp, r7
 8004104:	bc80      	pop	{r7}
 8004106:	4770      	bx	lr
 8004108:	20000000 	.word	0x20000000

0800410c <HAL_RCC_GetPCLK1Freq>:
 800410c:	b580      	push	{r7, lr}
 800410e:	af00      	add	r7, sp, #0
 8004110:	f7ff fff2 	bl	80040f8 <HAL_RCC_GetHCLKFreq>
 8004114:	4602      	mov	r2, r0
 8004116:	4b05      	ldr	r3, [pc, #20]	; (800412c <HAL_RCC_GetPCLK1Freq+0x20>)
 8004118:	685b      	ldr	r3, [r3, #4]
 800411a:	0a1b      	lsrs	r3, r3, #8
 800411c:	f003 0307 	and.w	r3, r3, #7
 8004120:	4903      	ldr	r1, [pc, #12]	; (8004130 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004122:	5ccb      	ldrb	r3, [r1, r3]
 8004124:	fa22 f303 	lsr.w	r3, r2, r3
 8004128:	4618      	mov	r0, r3
 800412a:	bd80      	pop	{r7, pc}
 800412c:	40021000 	.word	0x40021000
 8004130:	08008620 	.word	0x08008620

08004134 <HAL_RCC_GetPCLK2Freq>:
 8004134:	b580      	push	{r7, lr}
 8004136:	af00      	add	r7, sp, #0
 8004138:	f7ff ffde 	bl	80040f8 <HAL_RCC_GetHCLKFreq>
 800413c:	4602      	mov	r2, r0
 800413e:	4b05      	ldr	r3, [pc, #20]	; (8004154 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004140:	685b      	ldr	r3, [r3, #4]
 8004142:	0adb      	lsrs	r3, r3, #11
 8004144:	f003 0307 	and.w	r3, r3, #7
 8004148:	4903      	ldr	r1, [pc, #12]	; (8004158 <HAL_RCC_GetPCLK2Freq+0x24>)
 800414a:	5ccb      	ldrb	r3, [r1, r3]
 800414c:	fa22 f303 	lsr.w	r3, r2, r3
 8004150:	4618      	mov	r0, r3
 8004152:	bd80      	pop	{r7, pc}
 8004154:	40021000 	.word	0x40021000
 8004158:	08008620 	.word	0x08008620

0800415c <RCC_Delay>:
 800415c:	b480      	push	{r7}
 800415e:	b085      	sub	sp, #20
 8004160:	af00      	add	r7, sp, #0
 8004162:	6078      	str	r0, [r7, #4]
 8004164:	4b0a      	ldr	r3, [pc, #40]	; (8004190 <RCC_Delay+0x34>)
 8004166:	681b      	ldr	r3, [r3, #0]
 8004168:	4a0a      	ldr	r2, [pc, #40]	; (8004194 <RCC_Delay+0x38>)
 800416a:	fba2 2303 	umull	r2, r3, r2, r3
 800416e:	0a5b      	lsrs	r3, r3, #9
 8004170:	687a      	ldr	r2, [r7, #4]
 8004172:	fb02 f303 	mul.w	r3, r2, r3
 8004176:	60fb      	str	r3, [r7, #12]
 8004178:	bf00      	nop
 800417a:	68fb      	ldr	r3, [r7, #12]
 800417c:	1e5a      	subs	r2, r3, #1
 800417e:	60fa      	str	r2, [r7, #12]
 8004180:	2b00      	cmp	r3, #0
 8004182:	d1f9      	bne.n	8004178 <RCC_Delay+0x1c>
 8004184:	bf00      	nop
 8004186:	bf00      	nop
 8004188:	3714      	adds	r7, #20
 800418a:	46bd      	mov	sp, r7
 800418c:	bc80      	pop	{r7}
 800418e:	4770      	bx	lr
 8004190:	20000000 	.word	0x20000000
 8004194:	10624dd3 	.word	0x10624dd3

08004198 <HAL_TIM_Base_Init>:
 8004198:	b580      	push	{r7, lr}
 800419a:	b082      	sub	sp, #8
 800419c:	af00      	add	r7, sp, #0
 800419e:	6078      	str	r0, [r7, #4]
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	2b00      	cmp	r3, #0
 80041a4:	d101      	bne.n	80041aa <HAL_TIM_Base_Init+0x12>
 80041a6:	2301      	movs	r3, #1
 80041a8:	e041      	b.n	800422e <HAL_TIM_Base_Init+0x96>
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80041b0:	b2db      	uxtb	r3, r3
 80041b2:	2b00      	cmp	r3, #0
 80041b4:	d106      	bne.n	80041c4 <HAL_TIM_Base_Init+0x2c>
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	2200      	movs	r2, #0
 80041ba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80041be:	6878      	ldr	r0, [r7, #4]
 80041c0:	f7fd fae0 	bl	8001784 <HAL_TIM_Base_MspInit>
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	2202      	movs	r2, #2
 80041c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80041cc:	687b      	ldr	r3, [r7, #4]
 80041ce:	681a      	ldr	r2, [r3, #0]
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	3304      	adds	r3, #4
 80041d4:	4619      	mov	r1, r3
 80041d6:	4610      	mov	r0, r2
 80041d8:	f000 fa70 	bl	80046bc <TIM_Base_SetConfig>
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	2201      	movs	r2, #1
 80041e0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	2201      	movs	r2, #1
 80041e8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80041ec:	687b      	ldr	r3, [r7, #4]
 80041ee:	2201      	movs	r2, #1
 80041f0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	2201      	movs	r2, #1
 80041f8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	2201      	movs	r2, #1
 8004200:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004204:	687b      	ldr	r3, [r7, #4]
 8004206:	2201      	movs	r2, #1
 8004208:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800420c:	687b      	ldr	r3, [r7, #4]
 800420e:	2201      	movs	r2, #1
 8004210:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	2201      	movs	r2, #1
 8004218:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800421c:	687b      	ldr	r3, [r7, #4]
 800421e:	2201      	movs	r2, #1
 8004220:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004224:	687b      	ldr	r3, [r7, #4]
 8004226:	2201      	movs	r2, #1
 8004228:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800422c:	2300      	movs	r3, #0
 800422e:	4618      	mov	r0, r3
 8004230:	3708      	adds	r7, #8
 8004232:	46bd      	mov	sp, r7
 8004234:	bd80      	pop	{r7, pc}
	...

08004238 <HAL_TIM_Base_Start_IT>:
 8004238:	b480      	push	{r7}
 800423a:	b085      	sub	sp, #20
 800423c:	af00      	add	r7, sp, #0
 800423e:	6078      	str	r0, [r7, #4]
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004246:	b2db      	uxtb	r3, r3
 8004248:	2b01      	cmp	r3, #1
 800424a:	d001      	beq.n	8004250 <HAL_TIM_Base_Start_IT+0x18>
 800424c:	2301      	movs	r3, #1
 800424e:	e03a      	b.n	80042c6 <HAL_TIM_Base_Start_IT+0x8e>
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	2202      	movs	r2, #2
 8004254:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	681b      	ldr	r3, [r3, #0]
 800425c:	68da      	ldr	r2, [r3, #12]
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	681b      	ldr	r3, [r3, #0]
 8004262:	f042 0201 	orr.w	r2, r2, #1
 8004266:	60da      	str	r2, [r3, #12]
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	681b      	ldr	r3, [r3, #0]
 800426c:	4a18      	ldr	r2, [pc, #96]	; (80042d0 <HAL_TIM_Base_Start_IT+0x98>)
 800426e:	4293      	cmp	r3, r2
 8004270:	d00e      	beq.n	8004290 <HAL_TIM_Base_Start_IT+0x58>
 8004272:	687b      	ldr	r3, [r7, #4]
 8004274:	681b      	ldr	r3, [r3, #0]
 8004276:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800427a:	d009      	beq.n	8004290 <HAL_TIM_Base_Start_IT+0x58>
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	681b      	ldr	r3, [r3, #0]
 8004280:	4a14      	ldr	r2, [pc, #80]	; (80042d4 <HAL_TIM_Base_Start_IT+0x9c>)
 8004282:	4293      	cmp	r3, r2
 8004284:	d004      	beq.n	8004290 <HAL_TIM_Base_Start_IT+0x58>
 8004286:	687b      	ldr	r3, [r7, #4]
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	4a13      	ldr	r2, [pc, #76]	; (80042d8 <HAL_TIM_Base_Start_IT+0xa0>)
 800428c:	4293      	cmp	r3, r2
 800428e:	d111      	bne.n	80042b4 <HAL_TIM_Base_Start_IT+0x7c>
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	689b      	ldr	r3, [r3, #8]
 8004296:	f003 0307 	and.w	r3, r3, #7
 800429a:	60fb      	str	r3, [r7, #12]
 800429c:	68fb      	ldr	r3, [r7, #12]
 800429e:	2b06      	cmp	r3, #6
 80042a0:	d010      	beq.n	80042c4 <HAL_TIM_Base_Start_IT+0x8c>
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	681b      	ldr	r3, [r3, #0]
 80042a6:	681a      	ldr	r2, [r3, #0]
 80042a8:	687b      	ldr	r3, [r7, #4]
 80042aa:	681b      	ldr	r3, [r3, #0]
 80042ac:	f042 0201 	orr.w	r2, r2, #1
 80042b0:	601a      	str	r2, [r3, #0]
 80042b2:	e007      	b.n	80042c4 <HAL_TIM_Base_Start_IT+0x8c>
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	681b      	ldr	r3, [r3, #0]
 80042b8:	681a      	ldr	r2, [r3, #0]
 80042ba:	687b      	ldr	r3, [r7, #4]
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	f042 0201 	orr.w	r2, r2, #1
 80042c2:	601a      	str	r2, [r3, #0]
 80042c4:	2300      	movs	r3, #0
 80042c6:	4618      	mov	r0, r3
 80042c8:	3714      	adds	r7, #20
 80042ca:	46bd      	mov	sp, r7
 80042cc:	bc80      	pop	{r7}
 80042ce:	4770      	bx	lr
 80042d0:	40012c00 	.word	0x40012c00
 80042d4:	40000400 	.word	0x40000400
 80042d8:	40000800 	.word	0x40000800

080042dc <HAL_TIM_IRQHandler>:
 80042dc:	b580      	push	{r7, lr}
 80042de:	b082      	sub	sp, #8
 80042e0:	af00      	add	r7, sp, #0
 80042e2:	6078      	str	r0, [r7, #4]
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	681b      	ldr	r3, [r3, #0]
 80042e8:	691b      	ldr	r3, [r3, #16]
 80042ea:	f003 0302 	and.w	r3, r3, #2
 80042ee:	2b02      	cmp	r3, #2
 80042f0:	d122      	bne.n	8004338 <HAL_TIM_IRQHandler+0x5c>
 80042f2:	687b      	ldr	r3, [r7, #4]
 80042f4:	681b      	ldr	r3, [r3, #0]
 80042f6:	68db      	ldr	r3, [r3, #12]
 80042f8:	f003 0302 	and.w	r3, r3, #2
 80042fc:	2b02      	cmp	r3, #2
 80042fe:	d11b      	bne.n	8004338 <HAL_TIM_IRQHandler+0x5c>
 8004300:	687b      	ldr	r3, [r7, #4]
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	f06f 0202 	mvn.w	r2, #2
 8004308:	611a      	str	r2, [r3, #16]
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	2201      	movs	r2, #1
 800430e:	771a      	strb	r2, [r3, #28]
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	681b      	ldr	r3, [r3, #0]
 8004314:	699b      	ldr	r3, [r3, #24]
 8004316:	f003 0303 	and.w	r3, r3, #3
 800431a:	2b00      	cmp	r3, #0
 800431c:	d003      	beq.n	8004326 <HAL_TIM_IRQHandler+0x4a>
 800431e:	6878      	ldr	r0, [r7, #4]
 8004320:	f000 f9b1 	bl	8004686 <HAL_TIM_IC_CaptureCallback>
 8004324:	e005      	b.n	8004332 <HAL_TIM_IRQHandler+0x56>
 8004326:	6878      	ldr	r0, [r7, #4]
 8004328:	f000 f9a4 	bl	8004674 <HAL_TIM_OC_DelayElapsedCallback>
 800432c:	6878      	ldr	r0, [r7, #4]
 800432e:	f000 f9b3 	bl	8004698 <HAL_TIM_PWM_PulseFinishedCallback>
 8004332:	687b      	ldr	r3, [r7, #4]
 8004334:	2200      	movs	r2, #0
 8004336:	771a      	strb	r2, [r3, #28]
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	691b      	ldr	r3, [r3, #16]
 800433e:	f003 0304 	and.w	r3, r3, #4
 8004342:	2b04      	cmp	r3, #4
 8004344:	d122      	bne.n	800438c <HAL_TIM_IRQHandler+0xb0>
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	681b      	ldr	r3, [r3, #0]
 800434a:	68db      	ldr	r3, [r3, #12]
 800434c:	f003 0304 	and.w	r3, r3, #4
 8004350:	2b04      	cmp	r3, #4
 8004352:	d11b      	bne.n	800438c <HAL_TIM_IRQHandler+0xb0>
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	f06f 0204 	mvn.w	r2, #4
 800435c:	611a      	str	r2, [r3, #16]
 800435e:	687b      	ldr	r3, [r7, #4]
 8004360:	2202      	movs	r2, #2
 8004362:	771a      	strb	r2, [r3, #28]
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	699b      	ldr	r3, [r3, #24]
 800436a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800436e:	2b00      	cmp	r3, #0
 8004370:	d003      	beq.n	800437a <HAL_TIM_IRQHandler+0x9e>
 8004372:	6878      	ldr	r0, [r7, #4]
 8004374:	f000 f987 	bl	8004686 <HAL_TIM_IC_CaptureCallback>
 8004378:	e005      	b.n	8004386 <HAL_TIM_IRQHandler+0xaa>
 800437a:	6878      	ldr	r0, [r7, #4]
 800437c:	f000 f97a 	bl	8004674 <HAL_TIM_OC_DelayElapsedCallback>
 8004380:	6878      	ldr	r0, [r7, #4]
 8004382:	f000 f989 	bl	8004698 <HAL_TIM_PWM_PulseFinishedCallback>
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	2200      	movs	r2, #0
 800438a:	771a      	strb	r2, [r3, #28]
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	681b      	ldr	r3, [r3, #0]
 8004390:	691b      	ldr	r3, [r3, #16]
 8004392:	f003 0308 	and.w	r3, r3, #8
 8004396:	2b08      	cmp	r3, #8
 8004398:	d122      	bne.n	80043e0 <HAL_TIM_IRQHandler+0x104>
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	68db      	ldr	r3, [r3, #12]
 80043a0:	f003 0308 	and.w	r3, r3, #8
 80043a4:	2b08      	cmp	r3, #8
 80043a6:	d11b      	bne.n	80043e0 <HAL_TIM_IRQHandler+0x104>
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	681b      	ldr	r3, [r3, #0]
 80043ac:	f06f 0208 	mvn.w	r2, #8
 80043b0:	611a      	str	r2, [r3, #16]
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	2204      	movs	r2, #4
 80043b6:	771a      	strb	r2, [r3, #28]
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	681b      	ldr	r3, [r3, #0]
 80043bc:	69db      	ldr	r3, [r3, #28]
 80043be:	f003 0303 	and.w	r3, r3, #3
 80043c2:	2b00      	cmp	r3, #0
 80043c4:	d003      	beq.n	80043ce <HAL_TIM_IRQHandler+0xf2>
 80043c6:	6878      	ldr	r0, [r7, #4]
 80043c8:	f000 f95d 	bl	8004686 <HAL_TIM_IC_CaptureCallback>
 80043cc:	e005      	b.n	80043da <HAL_TIM_IRQHandler+0xfe>
 80043ce:	6878      	ldr	r0, [r7, #4]
 80043d0:	f000 f950 	bl	8004674 <HAL_TIM_OC_DelayElapsedCallback>
 80043d4:	6878      	ldr	r0, [r7, #4]
 80043d6:	f000 f95f 	bl	8004698 <HAL_TIM_PWM_PulseFinishedCallback>
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	2200      	movs	r2, #0
 80043de:	771a      	strb	r2, [r3, #28]
 80043e0:	687b      	ldr	r3, [r7, #4]
 80043e2:	681b      	ldr	r3, [r3, #0]
 80043e4:	691b      	ldr	r3, [r3, #16]
 80043e6:	f003 0310 	and.w	r3, r3, #16
 80043ea:	2b10      	cmp	r3, #16
 80043ec:	d122      	bne.n	8004434 <HAL_TIM_IRQHandler+0x158>
 80043ee:	687b      	ldr	r3, [r7, #4]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	68db      	ldr	r3, [r3, #12]
 80043f4:	f003 0310 	and.w	r3, r3, #16
 80043f8:	2b10      	cmp	r3, #16
 80043fa:	d11b      	bne.n	8004434 <HAL_TIM_IRQHandler+0x158>
 80043fc:	687b      	ldr	r3, [r7, #4]
 80043fe:	681b      	ldr	r3, [r3, #0]
 8004400:	f06f 0210 	mvn.w	r2, #16
 8004404:	611a      	str	r2, [r3, #16]
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	2208      	movs	r2, #8
 800440a:	771a      	strb	r2, [r3, #28]
 800440c:	687b      	ldr	r3, [r7, #4]
 800440e:	681b      	ldr	r3, [r3, #0]
 8004410:	69db      	ldr	r3, [r3, #28]
 8004412:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004416:	2b00      	cmp	r3, #0
 8004418:	d003      	beq.n	8004422 <HAL_TIM_IRQHandler+0x146>
 800441a:	6878      	ldr	r0, [r7, #4]
 800441c:	f000 f933 	bl	8004686 <HAL_TIM_IC_CaptureCallback>
 8004420:	e005      	b.n	800442e <HAL_TIM_IRQHandler+0x152>
 8004422:	6878      	ldr	r0, [r7, #4]
 8004424:	f000 f926 	bl	8004674 <HAL_TIM_OC_DelayElapsedCallback>
 8004428:	6878      	ldr	r0, [r7, #4]
 800442a:	f000 f935 	bl	8004698 <HAL_TIM_PWM_PulseFinishedCallback>
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	2200      	movs	r2, #0
 8004432:	771a      	strb	r2, [r3, #28]
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	681b      	ldr	r3, [r3, #0]
 8004438:	691b      	ldr	r3, [r3, #16]
 800443a:	f003 0301 	and.w	r3, r3, #1
 800443e:	2b01      	cmp	r3, #1
 8004440:	d10e      	bne.n	8004460 <HAL_TIM_IRQHandler+0x184>
 8004442:	687b      	ldr	r3, [r7, #4]
 8004444:	681b      	ldr	r3, [r3, #0]
 8004446:	68db      	ldr	r3, [r3, #12]
 8004448:	f003 0301 	and.w	r3, r3, #1
 800444c:	2b01      	cmp	r3, #1
 800444e:	d107      	bne.n	8004460 <HAL_TIM_IRQHandler+0x184>
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	f06f 0201 	mvn.w	r2, #1
 8004458:	611a      	str	r2, [r3, #16]
 800445a:	6878      	ldr	r0, [r7, #4]
 800445c:	f7fc ffdc 	bl	8001418 <HAL_TIM_PeriodElapsedCallback>
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	681b      	ldr	r3, [r3, #0]
 8004464:	691b      	ldr	r3, [r3, #16]
 8004466:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800446a:	2b80      	cmp	r3, #128	; 0x80
 800446c:	d10e      	bne.n	800448c <HAL_TIM_IRQHandler+0x1b0>
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	681b      	ldr	r3, [r3, #0]
 8004472:	68db      	ldr	r3, [r3, #12]
 8004474:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004478:	2b80      	cmp	r3, #128	; 0x80
 800447a:	d107      	bne.n	800448c <HAL_TIM_IRQHandler+0x1b0>
 800447c:	687b      	ldr	r3, [r7, #4]
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8004484:	611a      	str	r2, [r3, #16]
 8004486:	6878      	ldr	r0, [r7, #4]
 8004488:	f000 fa77 	bl	800497a <HAL_TIMEx_BreakCallback>
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	681b      	ldr	r3, [r3, #0]
 8004490:	691b      	ldr	r3, [r3, #16]
 8004492:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004496:	2b40      	cmp	r3, #64	; 0x40
 8004498:	d10e      	bne.n	80044b8 <HAL_TIM_IRQHandler+0x1dc>
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	68db      	ldr	r3, [r3, #12]
 80044a0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80044a4:	2b40      	cmp	r3, #64	; 0x40
 80044a6:	d107      	bne.n	80044b8 <HAL_TIM_IRQHandler+0x1dc>
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80044b0:	611a      	str	r2, [r3, #16]
 80044b2:	6878      	ldr	r0, [r7, #4]
 80044b4:	f000 f8f9 	bl	80046aa <HAL_TIM_TriggerCallback>
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	691b      	ldr	r3, [r3, #16]
 80044be:	f003 0320 	and.w	r3, r3, #32
 80044c2:	2b20      	cmp	r3, #32
 80044c4:	d10e      	bne.n	80044e4 <HAL_TIM_IRQHandler+0x208>
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	681b      	ldr	r3, [r3, #0]
 80044ca:	68db      	ldr	r3, [r3, #12]
 80044cc:	f003 0320 	and.w	r3, r3, #32
 80044d0:	2b20      	cmp	r3, #32
 80044d2:	d107      	bne.n	80044e4 <HAL_TIM_IRQHandler+0x208>
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	681b      	ldr	r3, [r3, #0]
 80044d8:	f06f 0220 	mvn.w	r2, #32
 80044dc:	611a      	str	r2, [r3, #16]
 80044de:	6878      	ldr	r0, [r7, #4]
 80044e0:	f000 fa42 	bl	8004968 <HAL_TIMEx_CommutCallback>
 80044e4:	bf00      	nop
 80044e6:	3708      	adds	r7, #8
 80044e8:	46bd      	mov	sp, r7
 80044ea:	bd80      	pop	{r7, pc}

080044ec <HAL_TIM_ConfigClockSource>:
 80044ec:	b580      	push	{r7, lr}
 80044ee:	b084      	sub	sp, #16
 80044f0:	af00      	add	r7, sp, #0
 80044f2:	6078      	str	r0, [r7, #4]
 80044f4:	6039      	str	r1, [r7, #0]
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80044fc:	2b01      	cmp	r3, #1
 80044fe:	d101      	bne.n	8004504 <HAL_TIM_ConfigClockSource+0x18>
 8004500:	2302      	movs	r3, #2
 8004502:	e0b3      	b.n	800466c <HAL_TIM_ConfigClockSource+0x180>
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	2201      	movs	r2, #1
 8004508:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800450c:	687b      	ldr	r3, [r7, #4]
 800450e:	2202      	movs	r2, #2
 8004510:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	681b      	ldr	r3, [r3, #0]
 8004518:	689b      	ldr	r3, [r3, #8]
 800451a:	60fb      	str	r3, [r7, #12]
 800451c:	68fb      	ldr	r3, [r7, #12]
 800451e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8004522:	60fb      	str	r3, [r7, #12]
 8004524:	68fb      	ldr	r3, [r7, #12]
 8004526:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800452a:	60fb      	str	r3, [r7, #12]
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	681b      	ldr	r3, [r3, #0]
 8004530:	68fa      	ldr	r2, [r7, #12]
 8004532:	609a      	str	r2, [r3, #8]
 8004534:	683b      	ldr	r3, [r7, #0]
 8004536:	681b      	ldr	r3, [r3, #0]
 8004538:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800453c:	d03e      	beq.n	80045bc <HAL_TIM_ConfigClockSource+0xd0>
 800453e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004542:	f200 8087 	bhi.w	8004654 <HAL_TIM_ConfigClockSource+0x168>
 8004546:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800454a:	f000 8085 	beq.w	8004658 <HAL_TIM_ConfigClockSource+0x16c>
 800454e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004552:	d87f      	bhi.n	8004654 <HAL_TIM_ConfigClockSource+0x168>
 8004554:	2b70      	cmp	r3, #112	; 0x70
 8004556:	d01a      	beq.n	800458e <HAL_TIM_ConfigClockSource+0xa2>
 8004558:	2b70      	cmp	r3, #112	; 0x70
 800455a:	d87b      	bhi.n	8004654 <HAL_TIM_ConfigClockSource+0x168>
 800455c:	2b60      	cmp	r3, #96	; 0x60
 800455e:	d050      	beq.n	8004602 <HAL_TIM_ConfigClockSource+0x116>
 8004560:	2b60      	cmp	r3, #96	; 0x60
 8004562:	d877      	bhi.n	8004654 <HAL_TIM_ConfigClockSource+0x168>
 8004564:	2b50      	cmp	r3, #80	; 0x50
 8004566:	d03c      	beq.n	80045e2 <HAL_TIM_ConfigClockSource+0xf6>
 8004568:	2b50      	cmp	r3, #80	; 0x50
 800456a:	d873      	bhi.n	8004654 <HAL_TIM_ConfigClockSource+0x168>
 800456c:	2b40      	cmp	r3, #64	; 0x40
 800456e:	d058      	beq.n	8004622 <HAL_TIM_ConfigClockSource+0x136>
 8004570:	2b40      	cmp	r3, #64	; 0x40
 8004572:	d86f      	bhi.n	8004654 <HAL_TIM_ConfigClockSource+0x168>
 8004574:	2b30      	cmp	r3, #48	; 0x30
 8004576:	d064      	beq.n	8004642 <HAL_TIM_ConfigClockSource+0x156>
 8004578:	2b30      	cmp	r3, #48	; 0x30
 800457a:	d86b      	bhi.n	8004654 <HAL_TIM_ConfigClockSource+0x168>
 800457c:	2b20      	cmp	r3, #32
 800457e:	d060      	beq.n	8004642 <HAL_TIM_ConfigClockSource+0x156>
 8004580:	2b20      	cmp	r3, #32
 8004582:	d867      	bhi.n	8004654 <HAL_TIM_ConfigClockSource+0x168>
 8004584:	2b00      	cmp	r3, #0
 8004586:	d05c      	beq.n	8004642 <HAL_TIM_ConfigClockSource+0x156>
 8004588:	2b10      	cmp	r3, #16
 800458a:	d05a      	beq.n	8004642 <HAL_TIM_ConfigClockSource+0x156>
 800458c:	e062      	b.n	8004654 <HAL_TIM_ConfigClockSource+0x168>
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	6818      	ldr	r0, [r3, #0]
 8004592:	683b      	ldr	r3, [r7, #0]
 8004594:	6899      	ldr	r1, [r3, #8]
 8004596:	683b      	ldr	r3, [r7, #0]
 8004598:	685a      	ldr	r2, [r3, #4]
 800459a:	683b      	ldr	r3, [r7, #0]
 800459c:	68db      	ldr	r3, [r3, #12]
 800459e:	f000 f966 	bl	800486e <TIM_ETR_SetConfig>
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	689b      	ldr	r3, [r3, #8]
 80045a8:	60fb      	str	r3, [r7, #12]
 80045aa:	68fb      	ldr	r3, [r7, #12]
 80045ac:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80045b0:	60fb      	str	r3, [r7, #12]
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	681b      	ldr	r3, [r3, #0]
 80045b6:	68fa      	ldr	r2, [r7, #12]
 80045b8:	609a      	str	r2, [r3, #8]
 80045ba:	e04e      	b.n	800465a <HAL_TIM_ConfigClockSource+0x16e>
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	6818      	ldr	r0, [r3, #0]
 80045c0:	683b      	ldr	r3, [r7, #0]
 80045c2:	6899      	ldr	r1, [r3, #8]
 80045c4:	683b      	ldr	r3, [r7, #0]
 80045c6:	685a      	ldr	r2, [r3, #4]
 80045c8:	683b      	ldr	r3, [r7, #0]
 80045ca:	68db      	ldr	r3, [r3, #12]
 80045cc:	f000 f94f 	bl	800486e <TIM_ETR_SetConfig>
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	689a      	ldr	r2, [r3, #8]
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80045de:	609a      	str	r2, [r3, #8]
 80045e0:	e03b      	b.n	800465a <HAL_TIM_ConfigClockSource+0x16e>
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	6818      	ldr	r0, [r3, #0]
 80045e6:	683b      	ldr	r3, [r7, #0]
 80045e8:	6859      	ldr	r1, [r3, #4]
 80045ea:	683b      	ldr	r3, [r7, #0]
 80045ec:	68db      	ldr	r3, [r3, #12]
 80045ee:	461a      	mov	r2, r3
 80045f0:	f000 f8c6 	bl	8004780 <TIM_TI1_ConfigInputStage>
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	2150      	movs	r1, #80	; 0x50
 80045fa:	4618      	mov	r0, r3
 80045fc:	f000 f91d 	bl	800483a <TIM_ITRx_SetConfig>
 8004600:	e02b      	b.n	800465a <HAL_TIM_ConfigClockSource+0x16e>
 8004602:	687b      	ldr	r3, [r7, #4]
 8004604:	6818      	ldr	r0, [r3, #0]
 8004606:	683b      	ldr	r3, [r7, #0]
 8004608:	6859      	ldr	r1, [r3, #4]
 800460a:	683b      	ldr	r3, [r7, #0]
 800460c:	68db      	ldr	r3, [r3, #12]
 800460e:	461a      	mov	r2, r3
 8004610:	f000 f8e4 	bl	80047dc <TIM_TI2_ConfigInputStage>
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	681b      	ldr	r3, [r3, #0]
 8004618:	2160      	movs	r1, #96	; 0x60
 800461a:	4618      	mov	r0, r3
 800461c:	f000 f90d 	bl	800483a <TIM_ITRx_SetConfig>
 8004620:	e01b      	b.n	800465a <HAL_TIM_ConfigClockSource+0x16e>
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	6818      	ldr	r0, [r3, #0]
 8004626:	683b      	ldr	r3, [r7, #0]
 8004628:	6859      	ldr	r1, [r3, #4]
 800462a:	683b      	ldr	r3, [r7, #0]
 800462c:	68db      	ldr	r3, [r3, #12]
 800462e:	461a      	mov	r2, r3
 8004630:	f000 f8a6 	bl	8004780 <TIM_TI1_ConfigInputStage>
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	681b      	ldr	r3, [r3, #0]
 8004638:	2140      	movs	r1, #64	; 0x40
 800463a:	4618      	mov	r0, r3
 800463c:	f000 f8fd 	bl	800483a <TIM_ITRx_SetConfig>
 8004640:	e00b      	b.n	800465a <HAL_TIM_ConfigClockSource+0x16e>
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	681a      	ldr	r2, [r3, #0]
 8004646:	683b      	ldr	r3, [r7, #0]
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	4619      	mov	r1, r3
 800464c:	4610      	mov	r0, r2
 800464e:	f000 f8f4 	bl	800483a <TIM_ITRx_SetConfig>
 8004652:	e002      	b.n	800465a <HAL_TIM_ConfigClockSource+0x16e>
 8004654:	bf00      	nop
 8004656:	e000      	b.n	800465a <HAL_TIM_ConfigClockSource+0x16e>
 8004658:	bf00      	nop
 800465a:	687b      	ldr	r3, [r7, #4]
 800465c:	2201      	movs	r2, #1
 800465e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	2200      	movs	r2, #0
 8004666:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800466a:	2300      	movs	r3, #0
 800466c:	4618      	mov	r0, r3
 800466e:	3710      	adds	r7, #16
 8004670:	46bd      	mov	sp, r7
 8004672:	bd80      	pop	{r7, pc}

08004674 <HAL_TIM_OC_DelayElapsedCallback>:
 8004674:	b480      	push	{r7}
 8004676:	b083      	sub	sp, #12
 8004678:	af00      	add	r7, sp, #0
 800467a:	6078      	str	r0, [r7, #4]
 800467c:	bf00      	nop
 800467e:	370c      	adds	r7, #12
 8004680:	46bd      	mov	sp, r7
 8004682:	bc80      	pop	{r7}
 8004684:	4770      	bx	lr

08004686 <HAL_TIM_IC_CaptureCallback>:
 8004686:	b480      	push	{r7}
 8004688:	b083      	sub	sp, #12
 800468a:	af00      	add	r7, sp, #0
 800468c:	6078      	str	r0, [r7, #4]
 800468e:	bf00      	nop
 8004690:	370c      	adds	r7, #12
 8004692:	46bd      	mov	sp, r7
 8004694:	bc80      	pop	{r7}
 8004696:	4770      	bx	lr

08004698 <HAL_TIM_PWM_PulseFinishedCallback>:
 8004698:	b480      	push	{r7}
 800469a:	b083      	sub	sp, #12
 800469c:	af00      	add	r7, sp, #0
 800469e:	6078      	str	r0, [r7, #4]
 80046a0:	bf00      	nop
 80046a2:	370c      	adds	r7, #12
 80046a4:	46bd      	mov	sp, r7
 80046a6:	bc80      	pop	{r7}
 80046a8:	4770      	bx	lr

080046aa <HAL_TIM_TriggerCallback>:
 80046aa:	b480      	push	{r7}
 80046ac:	b083      	sub	sp, #12
 80046ae:	af00      	add	r7, sp, #0
 80046b0:	6078      	str	r0, [r7, #4]
 80046b2:	bf00      	nop
 80046b4:	370c      	adds	r7, #12
 80046b6:	46bd      	mov	sp, r7
 80046b8:	bc80      	pop	{r7}
 80046ba:	4770      	bx	lr

080046bc <TIM_Base_SetConfig>:
 80046bc:	b480      	push	{r7}
 80046be:	b085      	sub	sp, #20
 80046c0:	af00      	add	r7, sp, #0
 80046c2:	6078      	str	r0, [r7, #4]
 80046c4:	6039      	str	r1, [r7, #0]
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	681b      	ldr	r3, [r3, #0]
 80046ca:	60fb      	str	r3, [r7, #12]
 80046cc:	687b      	ldr	r3, [r7, #4]
 80046ce:	4a29      	ldr	r2, [pc, #164]	; (8004774 <TIM_Base_SetConfig+0xb8>)
 80046d0:	4293      	cmp	r3, r2
 80046d2:	d00b      	beq.n	80046ec <TIM_Base_SetConfig+0x30>
 80046d4:	687b      	ldr	r3, [r7, #4]
 80046d6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80046da:	d007      	beq.n	80046ec <TIM_Base_SetConfig+0x30>
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	4a26      	ldr	r2, [pc, #152]	; (8004778 <TIM_Base_SetConfig+0xbc>)
 80046e0:	4293      	cmp	r3, r2
 80046e2:	d003      	beq.n	80046ec <TIM_Base_SetConfig+0x30>
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	4a25      	ldr	r2, [pc, #148]	; (800477c <TIM_Base_SetConfig+0xc0>)
 80046e8:	4293      	cmp	r3, r2
 80046ea:	d108      	bne.n	80046fe <TIM_Base_SetConfig+0x42>
 80046ec:	68fb      	ldr	r3, [r7, #12]
 80046ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80046f2:	60fb      	str	r3, [r7, #12]
 80046f4:	683b      	ldr	r3, [r7, #0]
 80046f6:	685b      	ldr	r3, [r3, #4]
 80046f8:	68fa      	ldr	r2, [r7, #12]
 80046fa:	4313      	orrs	r3, r2
 80046fc:	60fb      	str	r3, [r7, #12]
 80046fe:	687b      	ldr	r3, [r7, #4]
 8004700:	4a1c      	ldr	r2, [pc, #112]	; (8004774 <TIM_Base_SetConfig+0xb8>)
 8004702:	4293      	cmp	r3, r2
 8004704:	d00b      	beq.n	800471e <TIM_Base_SetConfig+0x62>
 8004706:	687b      	ldr	r3, [r7, #4]
 8004708:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800470c:	d007      	beq.n	800471e <TIM_Base_SetConfig+0x62>
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	4a19      	ldr	r2, [pc, #100]	; (8004778 <TIM_Base_SetConfig+0xbc>)
 8004712:	4293      	cmp	r3, r2
 8004714:	d003      	beq.n	800471e <TIM_Base_SetConfig+0x62>
 8004716:	687b      	ldr	r3, [r7, #4]
 8004718:	4a18      	ldr	r2, [pc, #96]	; (800477c <TIM_Base_SetConfig+0xc0>)
 800471a:	4293      	cmp	r3, r2
 800471c:	d108      	bne.n	8004730 <TIM_Base_SetConfig+0x74>
 800471e:	68fb      	ldr	r3, [r7, #12]
 8004720:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004724:	60fb      	str	r3, [r7, #12]
 8004726:	683b      	ldr	r3, [r7, #0]
 8004728:	68db      	ldr	r3, [r3, #12]
 800472a:	68fa      	ldr	r2, [r7, #12]
 800472c:	4313      	orrs	r3, r2
 800472e:	60fb      	str	r3, [r7, #12]
 8004730:	68fb      	ldr	r3, [r7, #12]
 8004732:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8004736:	683b      	ldr	r3, [r7, #0]
 8004738:	695b      	ldr	r3, [r3, #20]
 800473a:	4313      	orrs	r3, r2
 800473c:	60fb      	str	r3, [r7, #12]
 800473e:	687b      	ldr	r3, [r7, #4]
 8004740:	68fa      	ldr	r2, [r7, #12]
 8004742:	601a      	str	r2, [r3, #0]
 8004744:	683b      	ldr	r3, [r7, #0]
 8004746:	689a      	ldr	r2, [r3, #8]
 8004748:	687b      	ldr	r3, [r7, #4]
 800474a:	62da      	str	r2, [r3, #44]	; 0x2c
 800474c:	683b      	ldr	r3, [r7, #0]
 800474e:	681a      	ldr	r2, [r3, #0]
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	629a      	str	r2, [r3, #40]	; 0x28
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	4a07      	ldr	r2, [pc, #28]	; (8004774 <TIM_Base_SetConfig+0xb8>)
 8004758:	4293      	cmp	r3, r2
 800475a:	d103      	bne.n	8004764 <TIM_Base_SetConfig+0xa8>
 800475c:	683b      	ldr	r3, [r7, #0]
 800475e:	691a      	ldr	r2, [r3, #16]
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	631a      	str	r2, [r3, #48]	; 0x30
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	2201      	movs	r2, #1
 8004768:	615a      	str	r2, [r3, #20]
 800476a:	bf00      	nop
 800476c:	3714      	adds	r7, #20
 800476e:	46bd      	mov	sp, r7
 8004770:	bc80      	pop	{r7}
 8004772:	4770      	bx	lr
 8004774:	40012c00 	.word	0x40012c00
 8004778:	40000400 	.word	0x40000400
 800477c:	40000800 	.word	0x40000800

08004780 <TIM_TI1_ConfigInputStage>:
 8004780:	b480      	push	{r7}
 8004782:	b087      	sub	sp, #28
 8004784:	af00      	add	r7, sp, #0
 8004786:	60f8      	str	r0, [r7, #12]
 8004788:	60b9      	str	r1, [r7, #8]
 800478a:	607a      	str	r2, [r7, #4]
 800478c:	68fb      	ldr	r3, [r7, #12]
 800478e:	6a1b      	ldr	r3, [r3, #32]
 8004790:	617b      	str	r3, [r7, #20]
 8004792:	68fb      	ldr	r3, [r7, #12]
 8004794:	6a1b      	ldr	r3, [r3, #32]
 8004796:	f023 0201 	bic.w	r2, r3, #1
 800479a:	68fb      	ldr	r3, [r7, #12]
 800479c:	621a      	str	r2, [r3, #32]
 800479e:	68fb      	ldr	r3, [r7, #12]
 80047a0:	699b      	ldr	r3, [r3, #24]
 80047a2:	613b      	str	r3, [r7, #16]
 80047a4:	693b      	ldr	r3, [r7, #16]
 80047a6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80047aa:	613b      	str	r3, [r7, #16]
 80047ac:	687b      	ldr	r3, [r7, #4]
 80047ae:	011b      	lsls	r3, r3, #4
 80047b0:	693a      	ldr	r2, [r7, #16]
 80047b2:	4313      	orrs	r3, r2
 80047b4:	613b      	str	r3, [r7, #16]
 80047b6:	697b      	ldr	r3, [r7, #20]
 80047b8:	f023 030a 	bic.w	r3, r3, #10
 80047bc:	617b      	str	r3, [r7, #20]
 80047be:	697a      	ldr	r2, [r7, #20]
 80047c0:	68bb      	ldr	r3, [r7, #8]
 80047c2:	4313      	orrs	r3, r2
 80047c4:	617b      	str	r3, [r7, #20]
 80047c6:	68fb      	ldr	r3, [r7, #12]
 80047c8:	693a      	ldr	r2, [r7, #16]
 80047ca:	619a      	str	r2, [r3, #24]
 80047cc:	68fb      	ldr	r3, [r7, #12]
 80047ce:	697a      	ldr	r2, [r7, #20]
 80047d0:	621a      	str	r2, [r3, #32]
 80047d2:	bf00      	nop
 80047d4:	371c      	adds	r7, #28
 80047d6:	46bd      	mov	sp, r7
 80047d8:	bc80      	pop	{r7}
 80047da:	4770      	bx	lr

080047dc <TIM_TI2_ConfigInputStage>:
 80047dc:	b480      	push	{r7}
 80047de:	b087      	sub	sp, #28
 80047e0:	af00      	add	r7, sp, #0
 80047e2:	60f8      	str	r0, [r7, #12]
 80047e4:	60b9      	str	r1, [r7, #8]
 80047e6:	607a      	str	r2, [r7, #4]
 80047e8:	68fb      	ldr	r3, [r7, #12]
 80047ea:	6a1b      	ldr	r3, [r3, #32]
 80047ec:	f023 0210 	bic.w	r2, r3, #16
 80047f0:	68fb      	ldr	r3, [r7, #12]
 80047f2:	621a      	str	r2, [r3, #32]
 80047f4:	68fb      	ldr	r3, [r7, #12]
 80047f6:	699b      	ldr	r3, [r3, #24]
 80047f8:	617b      	str	r3, [r7, #20]
 80047fa:	68fb      	ldr	r3, [r7, #12]
 80047fc:	6a1b      	ldr	r3, [r3, #32]
 80047fe:	613b      	str	r3, [r7, #16]
 8004800:	697b      	ldr	r3, [r7, #20]
 8004802:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8004806:	617b      	str	r3, [r7, #20]
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	031b      	lsls	r3, r3, #12
 800480c:	697a      	ldr	r2, [r7, #20]
 800480e:	4313      	orrs	r3, r2
 8004810:	617b      	str	r3, [r7, #20]
 8004812:	693b      	ldr	r3, [r7, #16]
 8004814:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004818:	613b      	str	r3, [r7, #16]
 800481a:	68bb      	ldr	r3, [r7, #8]
 800481c:	011b      	lsls	r3, r3, #4
 800481e:	693a      	ldr	r2, [r7, #16]
 8004820:	4313      	orrs	r3, r2
 8004822:	613b      	str	r3, [r7, #16]
 8004824:	68fb      	ldr	r3, [r7, #12]
 8004826:	697a      	ldr	r2, [r7, #20]
 8004828:	619a      	str	r2, [r3, #24]
 800482a:	68fb      	ldr	r3, [r7, #12]
 800482c:	693a      	ldr	r2, [r7, #16]
 800482e:	621a      	str	r2, [r3, #32]
 8004830:	bf00      	nop
 8004832:	371c      	adds	r7, #28
 8004834:	46bd      	mov	sp, r7
 8004836:	bc80      	pop	{r7}
 8004838:	4770      	bx	lr

0800483a <TIM_ITRx_SetConfig>:
 800483a:	b480      	push	{r7}
 800483c:	b085      	sub	sp, #20
 800483e:	af00      	add	r7, sp, #0
 8004840:	6078      	str	r0, [r7, #4]
 8004842:	6039      	str	r1, [r7, #0]
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	689b      	ldr	r3, [r3, #8]
 8004848:	60fb      	str	r3, [r7, #12]
 800484a:	68fb      	ldr	r3, [r7, #12]
 800484c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004850:	60fb      	str	r3, [r7, #12]
 8004852:	683a      	ldr	r2, [r7, #0]
 8004854:	68fb      	ldr	r3, [r7, #12]
 8004856:	4313      	orrs	r3, r2
 8004858:	f043 0307 	orr.w	r3, r3, #7
 800485c:	60fb      	str	r3, [r7, #12]
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	68fa      	ldr	r2, [r7, #12]
 8004862:	609a      	str	r2, [r3, #8]
 8004864:	bf00      	nop
 8004866:	3714      	adds	r7, #20
 8004868:	46bd      	mov	sp, r7
 800486a:	bc80      	pop	{r7}
 800486c:	4770      	bx	lr

0800486e <TIM_ETR_SetConfig>:
 800486e:	b480      	push	{r7}
 8004870:	b087      	sub	sp, #28
 8004872:	af00      	add	r7, sp, #0
 8004874:	60f8      	str	r0, [r7, #12]
 8004876:	60b9      	str	r1, [r7, #8]
 8004878:	607a      	str	r2, [r7, #4]
 800487a:	603b      	str	r3, [r7, #0]
 800487c:	68fb      	ldr	r3, [r7, #12]
 800487e:	689b      	ldr	r3, [r3, #8]
 8004880:	617b      	str	r3, [r7, #20]
 8004882:	697b      	ldr	r3, [r7, #20]
 8004884:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004888:	617b      	str	r3, [r7, #20]
 800488a:	683b      	ldr	r3, [r7, #0]
 800488c:	021a      	lsls	r2, r3, #8
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	431a      	orrs	r2, r3
 8004892:	68bb      	ldr	r3, [r7, #8]
 8004894:	4313      	orrs	r3, r2
 8004896:	697a      	ldr	r2, [r7, #20]
 8004898:	4313      	orrs	r3, r2
 800489a:	617b      	str	r3, [r7, #20]
 800489c:	68fb      	ldr	r3, [r7, #12]
 800489e:	697a      	ldr	r2, [r7, #20]
 80048a0:	609a      	str	r2, [r3, #8]
 80048a2:	bf00      	nop
 80048a4:	371c      	adds	r7, #28
 80048a6:	46bd      	mov	sp, r7
 80048a8:	bc80      	pop	{r7}
 80048aa:	4770      	bx	lr

080048ac <HAL_TIMEx_MasterConfigSynchronization>:
 80048ac:	b480      	push	{r7}
 80048ae:	b085      	sub	sp, #20
 80048b0:	af00      	add	r7, sp, #0
 80048b2:	6078      	str	r0, [r7, #4]
 80048b4:	6039      	str	r1, [r7, #0]
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80048bc:	2b01      	cmp	r3, #1
 80048be:	d101      	bne.n	80048c4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80048c0:	2302      	movs	r3, #2
 80048c2:	e046      	b.n	8004952 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	2201      	movs	r2, #1
 80048c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	2202      	movs	r2, #2
 80048d0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80048d4:	687b      	ldr	r3, [r7, #4]
 80048d6:	681b      	ldr	r3, [r3, #0]
 80048d8:	685b      	ldr	r3, [r3, #4]
 80048da:	60fb      	str	r3, [r7, #12]
 80048dc:	687b      	ldr	r3, [r7, #4]
 80048de:	681b      	ldr	r3, [r3, #0]
 80048e0:	689b      	ldr	r3, [r3, #8]
 80048e2:	60bb      	str	r3, [r7, #8]
 80048e4:	68fb      	ldr	r3, [r7, #12]
 80048e6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80048ea:	60fb      	str	r3, [r7, #12]
 80048ec:	683b      	ldr	r3, [r7, #0]
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	68fa      	ldr	r2, [r7, #12]
 80048f2:	4313      	orrs	r3, r2
 80048f4:	60fb      	str	r3, [r7, #12]
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	681b      	ldr	r3, [r3, #0]
 80048fa:	68fa      	ldr	r2, [r7, #12]
 80048fc:	605a      	str	r2, [r3, #4]
 80048fe:	687b      	ldr	r3, [r7, #4]
 8004900:	681b      	ldr	r3, [r3, #0]
 8004902:	4a16      	ldr	r2, [pc, #88]	; (800495c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8004904:	4293      	cmp	r3, r2
 8004906:	d00e      	beq.n	8004926 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	681b      	ldr	r3, [r3, #0]
 800490c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004910:	d009      	beq.n	8004926 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004912:	687b      	ldr	r3, [r7, #4]
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	4a12      	ldr	r2, [pc, #72]	; (8004960 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8004918:	4293      	cmp	r3, r2
 800491a:	d004      	beq.n	8004926 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	681b      	ldr	r3, [r3, #0]
 8004920:	4a10      	ldr	r2, [pc, #64]	; (8004964 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8004922:	4293      	cmp	r3, r2
 8004924:	d10c      	bne.n	8004940 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8004926:	68bb      	ldr	r3, [r7, #8]
 8004928:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800492c:	60bb      	str	r3, [r7, #8]
 800492e:	683b      	ldr	r3, [r7, #0]
 8004930:	685b      	ldr	r3, [r3, #4]
 8004932:	68ba      	ldr	r2, [r7, #8]
 8004934:	4313      	orrs	r3, r2
 8004936:	60bb      	str	r3, [r7, #8]
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	681b      	ldr	r3, [r3, #0]
 800493c:	68ba      	ldr	r2, [r7, #8]
 800493e:	609a      	str	r2, [r3, #8]
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	2201      	movs	r2, #1
 8004944:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004948:	687b      	ldr	r3, [r7, #4]
 800494a:	2200      	movs	r2, #0
 800494c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004950:	2300      	movs	r3, #0
 8004952:	4618      	mov	r0, r3
 8004954:	3714      	adds	r7, #20
 8004956:	46bd      	mov	sp, r7
 8004958:	bc80      	pop	{r7}
 800495a:	4770      	bx	lr
 800495c:	40012c00 	.word	0x40012c00
 8004960:	40000400 	.word	0x40000400
 8004964:	40000800 	.word	0x40000800

08004968 <HAL_TIMEx_CommutCallback>:
 8004968:	b480      	push	{r7}
 800496a:	b083      	sub	sp, #12
 800496c:	af00      	add	r7, sp, #0
 800496e:	6078      	str	r0, [r7, #4]
 8004970:	bf00      	nop
 8004972:	370c      	adds	r7, #12
 8004974:	46bd      	mov	sp, r7
 8004976:	bc80      	pop	{r7}
 8004978:	4770      	bx	lr

0800497a <HAL_TIMEx_BreakCallback>:
 800497a:	b480      	push	{r7}
 800497c:	b083      	sub	sp, #12
 800497e:	af00      	add	r7, sp, #0
 8004980:	6078      	str	r0, [r7, #4]
 8004982:	bf00      	nop
 8004984:	370c      	adds	r7, #12
 8004986:	46bd      	mov	sp, r7
 8004988:	bc80      	pop	{r7}
 800498a:	4770      	bx	lr

0800498c <HAL_UART_Init>:
 800498c:	b580      	push	{r7, lr}
 800498e:	b082      	sub	sp, #8
 8004990:	af00      	add	r7, sp, #0
 8004992:	6078      	str	r0, [r7, #4]
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	2b00      	cmp	r3, #0
 8004998:	d101      	bne.n	800499e <HAL_UART_Init+0x12>
 800499a:	2301      	movs	r3, #1
 800499c:	e03f      	b.n	8004a1e <HAL_UART_Init+0x92>
 800499e:	687b      	ldr	r3, [r7, #4]
 80049a0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80049a4:	b2db      	uxtb	r3, r3
 80049a6:	2b00      	cmp	r3, #0
 80049a8:	d106      	bne.n	80049b8 <HAL_UART_Init+0x2c>
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	2200      	movs	r2, #0
 80049ae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80049b2:	6878      	ldr	r0, [r7, #4]
 80049b4:	f7fc ff0a 	bl	80017cc <HAL_UART_MspInit>
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	2224      	movs	r2, #36	; 0x24
 80049bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	68da      	ldr	r2, [r3, #12]
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	681b      	ldr	r3, [r3, #0]
 80049ca:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80049ce:	60da      	str	r2, [r3, #12]
 80049d0:	6878      	ldr	r0, [r7, #4]
 80049d2:	f000 fc85 	bl	80052e0 <UART_SetConfig>
 80049d6:	687b      	ldr	r3, [r7, #4]
 80049d8:	681b      	ldr	r3, [r3, #0]
 80049da:	691a      	ldr	r2, [r3, #16]
 80049dc:	687b      	ldr	r3, [r7, #4]
 80049de:	681b      	ldr	r3, [r3, #0]
 80049e0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80049e4:	611a      	str	r2, [r3, #16]
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	681b      	ldr	r3, [r3, #0]
 80049ea:	695a      	ldr	r2, [r3, #20]
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	681b      	ldr	r3, [r3, #0]
 80049f0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80049f4:	615a      	str	r2, [r3, #20]
 80049f6:	687b      	ldr	r3, [r7, #4]
 80049f8:	681b      	ldr	r3, [r3, #0]
 80049fa:	68da      	ldr	r2, [r3, #12]
 80049fc:	687b      	ldr	r3, [r7, #4]
 80049fe:	681b      	ldr	r3, [r3, #0]
 8004a00:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004a04:	60da      	str	r2, [r3, #12]
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	2200      	movs	r2, #0
 8004a0a:	641a      	str	r2, [r3, #64]	; 0x40
 8004a0c:	687b      	ldr	r3, [r7, #4]
 8004a0e:	2220      	movs	r2, #32
 8004a10:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	2220      	movs	r2, #32
 8004a18:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004a1c:	2300      	movs	r3, #0
 8004a1e:	4618      	mov	r0, r3
 8004a20:	3708      	adds	r7, #8
 8004a22:	46bd      	mov	sp, r7
 8004a24:	bd80      	pop	{r7, pc}

08004a26 <HAL_UART_Transmit>:
 8004a26:	b580      	push	{r7, lr}
 8004a28:	b08a      	sub	sp, #40	; 0x28
 8004a2a:	af02      	add	r7, sp, #8
 8004a2c:	60f8      	str	r0, [r7, #12]
 8004a2e:	60b9      	str	r1, [r7, #8]
 8004a30:	603b      	str	r3, [r7, #0]
 8004a32:	4613      	mov	r3, r2
 8004a34:	80fb      	strh	r3, [r7, #6]
 8004a36:	2300      	movs	r3, #0
 8004a38:	617b      	str	r3, [r7, #20]
 8004a3a:	68fb      	ldr	r3, [r7, #12]
 8004a3c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004a40:	b2db      	uxtb	r3, r3
 8004a42:	2b20      	cmp	r3, #32
 8004a44:	d17c      	bne.n	8004b40 <HAL_UART_Transmit+0x11a>
 8004a46:	68bb      	ldr	r3, [r7, #8]
 8004a48:	2b00      	cmp	r3, #0
 8004a4a:	d002      	beq.n	8004a52 <HAL_UART_Transmit+0x2c>
 8004a4c:	88fb      	ldrh	r3, [r7, #6]
 8004a4e:	2b00      	cmp	r3, #0
 8004a50:	d101      	bne.n	8004a56 <HAL_UART_Transmit+0x30>
 8004a52:	2301      	movs	r3, #1
 8004a54:	e075      	b.n	8004b42 <HAL_UART_Transmit+0x11c>
 8004a56:	68fb      	ldr	r3, [r7, #12]
 8004a58:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004a5c:	2b01      	cmp	r3, #1
 8004a5e:	d101      	bne.n	8004a64 <HAL_UART_Transmit+0x3e>
 8004a60:	2302      	movs	r3, #2
 8004a62:	e06e      	b.n	8004b42 <HAL_UART_Transmit+0x11c>
 8004a64:	68fb      	ldr	r3, [r7, #12]
 8004a66:	2201      	movs	r2, #1
 8004a68:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004a6c:	68fb      	ldr	r3, [r7, #12]
 8004a6e:	2200      	movs	r2, #0
 8004a70:	641a      	str	r2, [r3, #64]	; 0x40
 8004a72:	68fb      	ldr	r3, [r7, #12]
 8004a74:	2221      	movs	r2, #33	; 0x21
 8004a76:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004a7a:	f7fd faef 	bl	800205c <HAL_GetTick>
 8004a7e:	6178      	str	r0, [r7, #20]
 8004a80:	68fb      	ldr	r3, [r7, #12]
 8004a82:	88fa      	ldrh	r2, [r7, #6]
 8004a84:	849a      	strh	r2, [r3, #36]	; 0x24
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	88fa      	ldrh	r2, [r7, #6]
 8004a8a:	84da      	strh	r2, [r3, #38]	; 0x26
 8004a8c:	68fb      	ldr	r3, [r7, #12]
 8004a8e:	689b      	ldr	r3, [r3, #8]
 8004a90:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004a94:	d108      	bne.n	8004aa8 <HAL_UART_Transmit+0x82>
 8004a96:	68fb      	ldr	r3, [r7, #12]
 8004a98:	691b      	ldr	r3, [r3, #16]
 8004a9a:	2b00      	cmp	r3, #0
 8004a9c:	d104      	bne.n	8004aa8 <HAL_UART_Transmit+0x82>
 8004a9e:	2300      	movs	r3, #0
 8004aa0:	61fb      	str	r3, [r7, #28]
 8004aa2:	68bb      	ldr	r3, [r7, #8]
 8004aa4:	61bb      	str	r3, [r7, #24]
 8004aa6:	e003      	b.n	8004ab0 <HAL_UART_Transmit+0x8a>
 8004aa8:	68bb      	ldr	r3, [r7, #8]
 8004aaa:	61fb      	str	r3, [r7, #28]
 8004aac:	2300      	movs	r3, #0
 8004aae:	61bb      	str	r3, [r7, #24]
 8004ab0:	68fb      	ldr	r3, [r7, #12]
 8004ab2:	2200      	movs	r2, #0
 8004ab4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004ab8:	e02a      	b.n	8004b10 <HAL_UART_Transmit+0xea>
 8004aba:	683b      	ldr	r3, [r7, #0]
 8004abc:	9300      	str	r3, [sp, #0]
 8004abe:	697b      	ldr	r3, [r7, #20]
 8004ac0:	2200      	movs	r2, #0
 8004ac2:	2180      	movs	r1, #128	; 0x80
 8004ac4:	68f8      	ldr	r0, [r7, #12]
 8004ac6:	f000 fa38 	bl	8004f3a <UART_WaitOnFlagUntilTimeout>
 8004aca:	4603      	mov	r3, r0
 8004acc:	2b00      	cmp	r3, #0
 8004ace:	d001      	beq.n	8004ad4 <HAL_UART_Transmit+0xae>
 8004ad0:	2303      	movs	r3, #3
 8004ad2:	e036      	b.n	8004b42 <HAL_UART_Transmit+0x11c>
 8004ad4:	69fb      	ldr	r3, [r7, #28]
 8004ad6:	2b00      	cmp	r3, #0
 8004ad8:	d10b      	bne.n	8004af2 <HAL_UART_Transmit+0xcc>
 8004ada:	69bb      	ldr	r3, [r7, #24]
 8004adc:	881b      	ldrh	r3, [r3, #0]
 8004ade:	461a      	mov	r2, r3
 8004ae0:	68fb      	ldr	r3, [r7, #12]
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004ae8:	605a      	str	r2, [r3, #4]
 8004aea:	69bb      	ldr	r3, [r7, #24]
 8004aec:	3302      	adds	r3, #2
 8004aee:	61bb      	str	r3, [r7, #24]
 8004af0:	e007      	b.n	8004b02 <HAL_UART_Transmit+0xdc>
 8004af2:	69fb      	ldr	r3, [r7, #28]
 8004af4:	781a      	ldrb	r2, [r3, #0]
 8004af6:	68fb      	ldr	r3, [r7, #12]
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	605a      	str	r2, [r3, #4]
 8004afc:	69fb      	ldr	r3, [r7, #28]
 8004afe:	3301      	adds	r3, #1
 8004b00:	61fb      	str	r3, [r7, #28]
 8004b02:	68fb      	ldr	r3, [r7, #12]
 8004b04:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004b06:	b29b      	uxth	r3, r3
 8004b08:	3b01      	subs	r3, #1
 8004b0a:	b29a      	uxth	r2, r3
 8004b0c:	68fb      	ldr	r3, [r7, #12]
 8004b0e:	84da      	strh	r2, [r3, #38]	; 0x26
 8004b10:	68fb      	ldr	r3, [r7, #12]
 8004b12:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004b14:	b29b      	uxth	r3, r3
 8004b16:	2b00      	cmp	r3, #0
 8004b18:	d1cf      	bne.n	8004aba <HAL_UART_Transmit+0x94>
 8004b1a:	683b      	ldr	r3, [r7, #0]
 8004b1c:	9300      	str	r3, [sp, #0]
 8004b1e:	697b      	ldr	r3, [r7, #20]
 8004b20:	2200      	movs	r2, #0
 8004b22:	2140      	movs	r1, #64	; 0x40
 8004b24:	68f8      	ldr	r0, [r7, #12]
 8004b26:	f000 fa08 	bl	8004f3a <UART_WaitOnFlagUntilTimeout>
 8004b2a:	4603      	mov	r3, r0
 8004b2c:	2b00      	cmp	r3, #0
 8004b2e:	d001      	beq.n	8004b34 <HAL_UART_Transmit+0x10e>
 8004b30:	2303      	movs	r3, #3
 8004b32:	e006      	b.n	8004b42 <HAL_UART_Transmit+0x11c>
 8004b34:	68fb      	ldr	r3, [r7, #12]
 8004b36:	2220      	movs	r2, #32
 8004b38:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004b3c:	2300      	movs	r3, #0
 8004b3e:	e000      	b.n	8004b42 <HAL_UART_Transmit+0x11c>
 8004b40:	2302      	movs	r3, #2
 8004b42:	4618      	mov	r0, r3
 8004b44:	3720      	adds	r7, #32
 8004b46:	46bd      	mov	sp, r7
 8004b48:	bd80      	pop	{r7, pc}

08004b4a <HAL_UART_Receive_IT>:
 8004b4a:	b580      	push	{r7, lr}
 8004b4c:	b084      	sub	sp, #16
 8004b4e:	af00      	add	r7, sp, #0
 8004b50:	60f8      	str	r0, [r7, #12]
 8004b52:	60b9      	str	r1, [r7, #8]
 8004b54:	4613      	mov	r3, r2
 8004b56:	80fb      	strh	r3, [r7, #6]
 8004b58:	68fb      	ldr	r3, [r7, #12]
 8004b5a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004b5e:	b2db      	uxtb	r3, r3
 8004b60:	2b20      	cmp	r3, #32
 8004b62:	d11d      	bne.n	8004ba0 <HAL_UART_Receive_IT+0x56>
 8004b64:	68bb      	ldr	r3, [r7, #8]
 8004b66:	2b00      	cmp	r3, #0
 8004b68:	d002      	beq.n	8004b70 <HAL_UART_Receive_IT+0x26>
 8004b6a:	88fb      	ldrh	r3, [r7, #6]
 8004b6c:	2b00      	cmp	r3, #0
 8004b6e:	d101      	bne.n	8004b74 <HAL_UART_Receive_IT+0x2a>
 8004b70:	2301      	movs	r3, #1
 8004b72:	e016      	b.n	8004ba2 <HAL_UART_Receive_IT+0x58>
 8004b74:	68fb      	ldr	r3, [r7, #12]
 8004b76:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004b7a:	2b01      	cmp	r3, #1
 8004b7c:	d101      	bne.n	8004b82 <HAL_UART_Receive_IT+0x38>
 8004b7e:	2302      	movs	r3, #2
 8004b80:	e00f      	b.n	8004ba2 <HAL_UART_Receive_IT+0x58>
 8004b82:	68fb      	ldr	r3, [r7, #12]
 8004b84:	2201      	movs	r2, #1
 8004b86:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	2200      	movs	r2, #0
 8004b8e:	631a      	str	r2, [r3, #48]	; 0x30
 8004b90:	88fb      	ldrh	r3, [r7, #6]
 8004b92:	461a      	mov	r2, r3
 8004b94:	68b9      	ldr	r1, [r7, #8]
 8004b96:	68f8      	ldr	r0, [r7, #12]
 8004b98:	f000 fa19 	bl	8004fce <UART_Start_Receive_IT>
 8004b9c:	4603      	mov	r3, r0
 8004b9e:	e000      	b.n	8004ba2 <HAL_UART_Receive_IT+0x58>
 8004ba0:	2302      	movs	r3, #2
 8004ba2:	4618      	mov	r0, r3
 8004ba4:	3710      	adds	r7, #16
 8004ba6:	46bd      	mov	sp, r7
 8004ba8:	bd80      	pop	{r7, pc}
	...

08004bac <HAL_UART_IRQHandler>:
 8004bac:	b580      	push	{r7, lr}
 8004bae:	b08a      	sub	sp, #40	; 0x28
 8004bb0:	af00      	add	r7, sp, #0
 8004bb2:	6078      	str	r0, [r7, #4]
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	681b      	ldr	r3, [r3, #0]
 8004bb8:	681b      	ldr	r3, [r3, #0]
 8004bba:	627b      	str	r3, [r7, #36]	; 0x24
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	681b      	ldr	r3, [r3, #0]
 8004bc0:	68db      	ldr	r3, [r3, #12]
 8004bc2:	623b      	str	r3, [r7, #32]
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	681b      	ldr	r3, [r3, #0]
 8004bc8:	695b      	ldr	r3, [r3, #20]
 8004bca:	61fb      	str	r3, [r7, #28]
 8004bcc:	2300      	movs	r3, #0
 8004bce:	61bb      	str	r3, [r7, #24]
 8004bd0:	2300      	movs	r3, #0
 8004bd2:	617b      	str	r3, [r7, #20]
 8004bd4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004bd6:	f003 030f 	and.w	r3, r3, #15
 8004bda:	61bb      	str	r3, [r7, #24]
 8004bdc:	69bb      	ldr	r3, [r7, #24]
 8004bde:	2b00      	cmp	r3, #0
 8004be0:	d10d      	bne.n	8004bfe <HAL_UART_IRQHandler+0x52>
 8004be2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004be4:	f003 0320 	and.w	r3, r3, #32
 8004be8:	2b00      	cmp	r3, #0
 8004bea:	d008      	beq.n	8004bfe <HAL_UART_IRQHandler+0x52>
 8004bec:	6a3b      	ldr	r3, [r7, #32]
 8004bee:	f003 0320 	and.w	r3, r3, #32
 8004bf2:	2b00      	cmp	r3, #0
 8004bf4:	d003      	beq.n	8004bfe <HAL_UART_IRQHandler+0x52>
 8004bf6:	6878      	ldr	r0, [r7, #4]
 8004bf8:	f000 fac9 	bl	800518e <UART_Receive_IT>
 8004bfc:	e17b      	b.n	8004ef6 <HAL_UART_IRQHandler+0x34a>
 8004bfe:	69bb      	ldr	r3, [r7, #24]
 8004c00:	2b00      	cmp	r3, #0
 8004c02:	f000 80b1 	beq.w	8004d68 <HAL_UART_IRQHandler+0x1bc>
 8004c06:	69fb      	ldr	r3, [r7, #28]
 8004c08:	f003 0301 	and.w	r3, r3, #1
 8004c0c:	2b00      	cmp	r3, #0
 8004c0e:	d105      	bne.n	8004c1c <HAL_UART_IRQHandler+0x70>
 8004c10:	6a3b      	ldr	r3, [r7, #32]
 8004c12:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8004c16:	2b00      	cmp	r3, #0
 8004c18:	f000 80a6 	beq.w	8004d68 <HAL_UART_IRQHandler+0x1bc>
 8004c1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c1e:	f003 0301 	and.w	r3, r3, #1
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	d00a      	beq.n	8004c3c <HAL_UART_IRQHandler+0x90>
 8004c26:	6a3b      	ldr	r3, [r7, #32]
 8004c28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004c2c:	2b00      	cmp	r3, #0
 8004c2e:	d005      	beq.n	8004c3c <HAL_UART_IRQHandler+0x90>
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c34:	f043 0201 	orr.w	r2, r3, #1
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	641a      	str	r2, [r3, #64]	; 0x40
 8004c3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c3e:	f003 0304 	and.w	r3, r3, #4
 8004c42:	2b00      	cmp	r3, #0
 8004c44:	d00a      	beq.n	8004c5c <HAL_UART_IRQHandler+0xb0>
 8004c46:	69fb      	ldr	r3, [r7, #28]
 8004c48:	f003 0301 	and.w	r3, r3, #1
 8004c4c:	2b00      	cmp	r3, #0
 8004c4e:	d005      	beq.n	8004c5c <HAL_UART_IRQHandler+0xb0>
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c54:	f043 0202 	orr.w	r2, r3, #2
 8004c58:	687b      	ldr	r3, [r7, #4]
 8004c5a:	641a      	str	r2, [r3, #64]	; 0x40
 8004c5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c5e:	f003 0302 	and.w	r3, r3, #2
 8004c62:	2b00      	cmp	r3, #0
 8004c64:	d00a      	beq.n	8004c7c <HAL_UART_IRQHandler+0xd0>
 8004c66:	69fb      	ldr	r3, [r7, #28]
 8004c68:	f003 0301 	and.w	r3, r3, #1
 8004c6c:	2b00      	cmp	r3, #0
 8004c6e:	d005      	beq.n	8004c7c <HAL_UART_IRQHandler+0xd0>
 8004c70:	687b      	ldr	r3, [r7, #4]
 8004c72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c74:	f043 0204 	orr.w	r2, r3, #4
 8004c78:	687b      	ldr	r3, [r7, #4]
 8004c7a:	641a      	str	r2, [r3, #64]	; 0x40
 8004c7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c7e:	f003 0308 	and.w	r3, r3, #8
 8004c82:	2b00      	cmp	r3, #0
 8004c84:	d00f      	beq.n	8004ca6 <HAL_UART_IRQHandler+0xfa>
 8004c86:	6a3b      	ldr	r3, [r7, #32]
 8004c88:	f003 0320 	and.w	r3, r3, #32
 8004c8c:	2b00      	cmp	r3, #0
 8004c8e:	d104      	bne.n	8004c9a <HAL_UART_IRQHandler+0xee>
 8004c90:	69fb      	ldr	r3, [r7, #28]
 8004c92:	f003 0301 	and.w	r3, r3, #1
 8004c96:	2b00      	cmp	r3, #0
 8004c98:	d005      	beq.n	8004ca6 <HAL_UART_IRQHandler+0xfa>
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004c9e:	f043 0208 	orr.w	r2, r3, #8
 8004ca2:	687b      	ldr	r3, [r7, #4]
 8004ca4:	641a      	str	r2, [r3, #64]	; 0x40
 8004ca6:	687b      	ldr	r3, [r7, #4]
 8004ca8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004caa:	2b00      	cmp	r3, #0
 8004cac:	f000 811e 	beq.w	8004eec <HAL_UART_IRQHandler+0x340>
 8004cb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004cb2:	f003 0320 	and.w	r3, r3, #32
 8004cb6:	2b00      	cmp	r3, #0
 8004cb8:	d007      	beq.n	8004cca <HAL_UART_IRQHandler+0x11e>
 8004cba:	6a3b      	ldr	r3, [r7, #32]
 8004cbc:	f003 0320 	and.w	r3, r3, #32
 8004cc0:	2b00      	cmp	r3, #0
 8004cc2:	d002      	beq.n	8004cca <HAL_UART_IRQHandler+0x11e>
 8004cc4:	6878      	ldr	r0, [r7, #4]
 8004cc6:	f000 fa62 	bl	800518e <UART_Receive_IT>
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	695b      	ldr	r3, [r3, #20]
 8004cd0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004cd4:	2b00      	cmp	r3, #0
 8004cd6:	bf14      	ite	ne
 8004cd8:	2301      	movne	r3, #1
 8004cda:	2300      	moveq	r3, #0
 8004cdc:	b2db      	uxtb	r3, r3
 8004cde:	617b      	str	r3, [r7, #20]
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ce4:	f003 0308 	and.w	r3, r3, #8
 8004ce8:	2b00      	cmp	r3, #0
 8004cea:	d102      	bne.n	8004cf2 <HAL_UART_IRQHandler+0x146>
 8004cec:	697b      	ldr	r3, [r7, #20]
 8004cee:	2b00      	cmp	r3, #0
 8004cf0:	d031      	beq.n	8004d56 <HAL_UART_IRQHandler+0x1aa>
 8004cf2:	6878      	ldr	r0, [r7, #4]
 8004cf4:	f000 f9a4 	bl	8005040 <UART_EndRxTransfer>
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	695b      	ldr	r3, [r3, #20]
 8004cfe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004d02:	2b00      	cmp	r3, #0
 8004d04:	d023      	beq.n	8004d4e <HAL_UART_IRQHandler+0x1a2>
 8004d06:	687b      	ldr	r3, [r7, #4]
 8004d08:	681b      	ldr	r3, [r3, #0]
 8004d0a:	695a      	ldr	r2, [r3, #20]
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004d14:	615a      	str	r2, [r3, #20]
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004d1a:	2b00      	cmp	r3, #0
 8004d1c:	d013      	beq.n	8004d46 <HAL_UART_IRQHandler+0x19a>
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004d22:	4a76      	ldr	r2, [pc, #472]	; (8004efc <HAL_UART_IRQHandler+0x350>)
 8004d24:	635a      	str	r2, [r3, #52]	; 0x34
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004d2a:	4618      	mov	r0, r3
 8004d2c:	f7fd fb0c 	bl	8002348 <HAL_DMA_Abort_IT>
 8004d30:	4603      	mov	r3, r0
 8004d32:	2b00      	cmp	r3, #0
 8004d34:	d016      	beq.n	8004d64 <HAL_UART_IRQHandler+0x1b8>
 8004d36:	687b      	ldr	r3, [r7, #4]
 8004d38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004d3a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004d3c:	687a      	ldr	r2, [r7, #4]
 8004d3e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004d40:	4610      	mov	r0, r2
 8004d42:	4798      	blx	r3
 8004d44:	e00e      	b.n	8004d64 <HAL_UART_IRQHandler+0x1b8>
 8004d46:	6878      	ldr	r0, [r7, #4]
 8004d48:	f000 f8e3 	bl	8004f12 <HAL_UART_ErrorCallback>
 8004d4c:	e00a      	b.n	8004d64 <HAL_UART_IRQHandler+0x1b8>
 8004d4e:	6878      	ldr	r0, [r7, #4]
 8004d50:	f000 f8df 	bl	8004f12 <HAL_UART_ErrorCallback>
 8004d54:	e006      	b.n	8004d64 <HAL_UART_IRQHandler+0x1b8>
 8004d56:	6878      	ldr	r0, [r7, #4]
 8004d58:	f000 f8db 	bl	8004f12 <HAL_UART_ErrorCallback>
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	2200      	movs	r2, #0
 8004d60:	641a      	str	r2, [r3, #64]	; 0x40
 8004d62:	e0c3      	b.n	8004eec <HAL_UART_IRQHandler+0x340>
 8004d64:	bf00      	nop
 8004d66:	e0c1      	b.n	8004eec <HAL_UART_IRQHandler+0x340>
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004d6c:	2b01      	cmp	r3, #1
 8004d6e:	f040 80a1 	bne.w	8004eb4 <HAL_UART_IRQHandler+0x308>
 8004d72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004d74:	f003 0310 	and.w	r3, r3, #16
 8004d78:	2b00      	cmp	r3, #0
 8004d7a:	f000 809b 	beq.w	8004eb4 <HAL_UART_IRQHandler+0x308>
 8004d7e:	6a3b      	ldr	r3, [r7, #32]
 8004d80:	f003 0310 	and.w	r3, r3, #16
 8004d84:	2b00      	cmp	r3, #0
 8004d86:	f000 8095 	beq.w	8004eb4 <HAL_UART_IRQHandler+0x308>
 8004d8a:	2300      	movs	r3, #0
 8004d8c:	60fb      	str	r3, [r7, #12]
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	681b      	ldr	r3, [r3, #0]
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	60fb      	str	r3, [r7, #12]
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	681b      	ldr	r3, [r3, #0]
 8004d9a:	685b      	ldr	r3, [r3, #4]
 8004d9c:	60fb      	str	r3, [r7, #12]
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	681b      	ldr	r3, [r3, #0]
 8004da4:	695b      	ldr	r3, [r3, #20]
 8004da6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004daa:	2b00      	cmp	r3, #0
 8004dac:	d04e      	beq.n	8004e4c <HAL_UART_IRQHandler+0x2a0>
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004db2:	681b      	ldr	r3, [r3, #0]
 8004db4:	685b      	ldr	r3, [r3, #4]
 8004db6:	823b      	strh	r3, [r7, #16]
 8004db8:	8a3b      	ldrh	r3, [r7, #16]
 8004dba:	2b00      	cmp	r3, #0
 8004dbc:	f000 8098 	beq.w	8004ef0 <HAL_UART_IRQHandler+0x344>
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004dc4:	8a3a      	ldrh	r2, [r7, #16]
 8004dc6:	429a      	cmp	r2, r3
 8004dc8:	f080 8092 	bcs.w	8004ef0 <HAL_UART_IRQHandler+0x344>
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	8a3a      	ldrh	r2, [r7, #16]
 8004dd0:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004dd6:	699b      	ldr	r3, [r3, #24]
 8004dd8:	2b20      	cmp	r3, #32
 8004dda:	d02b      	beq.n	8004e34 <HAL_UART_IRQHandler+0x288>
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	681b      	ldr	r3, [r3, #0]
 8004de0:	68da      	ldr	r2, [r3, #12]
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	681b      	ldr	r3, [r3, #0]
 8004de6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004dea:	60da      	str	r2, [r3, #12]
 8004dec:	687b      	ldr	r3, [r7, #4]
 8004dee:	681b      	ldr	r3, [r3, #0]
 8004df0:	695a      	ldr	r2, [r3, #20]
 8004df2:	687b      	ldr	r3, [r7, #4]
 8004df4:	681b      	ldr	r3, [r3, #0]
 8004df6:	f022 0201 	bic.w	r2, r2, #1
 8004dfa:	615a      	str	r2, [r3, #20]
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	695a      	ldr	r2, [r3, #20]
 8004e02:	687b      	ldr	r3, [r7, #4]
 8004e04:	681b      	ldr	r3, [r3, #0]
 8004e06:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004e0a:	615a      	str	r2, [r3, #20]
 8004e0c:	687b      	ldr	r3, [r7, #4]
 8004e0e:	2220      	movs	r2, #32
 8004e10:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	2200      	movs	r2, #0
 8004e18:	631a      	str	r2, [r3, #48]	; 0x30
 8004e1a:	687b      	ldr	r3, [r7, #4]
 8004e1c:	681b      	ldr	r3, [r3, #0]
 8004e1e:	68da      	ldr	r2, [r3, #12]
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	681b      	ldr	r3, [r3, #0]
 8004e24:	f022 0210 	bic.w	r2, r2, #16
 8004e28:	60da      	str	r2, [r3, #12]
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004e2e:	4618      	mov	r0, r3
 8004e30:	f7fd fa4f 	bl	80022d2 <HAL_DMA_Abort>
 8004e34:	687b      	ldr	r3, [r7, #4]
 8004e36:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004e3c:	b29b      	uxth	r3, r3
 8004e3e:	1ad3      	subs	r3, r2, r3
 8004e40:	b29b      	uxth	r3, r3
 8004e42:	4619      	mov	r1, r3
 8004e44:	6878      	ldr	r0, [r7, #4]
 8004e46:	f000 f86d 	bl	8004f24 <HAL_UARTEx_RxEventCallback>
 8004e4a:	e051      	b.n	8004ef0 <HAL_UART_IRQHandler+0x344>
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004e54:	b29b      	uxth	r3, r3
 8004e56:	1ad3      	subs	r3, r2, r3
 8004e58:	827b      	strh	r3, [r7, #18]
 8004e5a:	687b      	ldr	r3, [r7, #4]
 8004e5c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004e5e:	b29b      	uxth	r3, r3
 8004e60:	2b00      	cmp	r3, #0
 8004e62:	d047      	beq.n	8004ef4 <HAL_UART_IRQHandler+0x348>
 8004e64:	8a7b      	ldrh	r3, [r7, #18]
 8004e66:	2b00      	cmp	r3, #0
 8004e68:	d044      	beq.n	8004ef4 <HAL_UART_IRQHandler+0x348>
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	68da      	ldr	r2, [r3, #12]
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	681b      	ldr	r3, [r3, #0]
 8004e74:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8004e78:	60da      	str	r2, [r3, #12]
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	695a      	ldr	r2, [r3, #20]
 8004e80:	687b      	ldr	r3, [r7, #4]
 8004e82:	681b      	ldr	r3, [r3, #0]
 8004e84:	f022 0201 	bic.w	r2, r2, #1
 8004e88:	615a      	str	r2, [r3, #20]
 8004e8a:	687b      	ldr	r3, [r7, #4]
 8004e8c:	2220      	movs	r2, #32
 8004e8e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	2200      	movs	r2, #0
 8004e96:	631a      	str	r2, [r3, #48]	; 0x30
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	68da      	ldr	r2, [r3, #12]
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	f022 0210 	bic.w	r2, r2, #16
 8004ea6:	60da      	str	r2, [r3, #12]
 8004ea8:	8a7b      	ldrh	r3, [r7, #18]
 8004eaa:	4619      	mov	r1, r3
 8004eac:	6878      	ldr	r0, [r7, #4]
 8004eae:	f000 f839 	bl	8004f24 <HAL_UARTEx_RxEventCallback>
 8004eb2:	e01f      	b.n	8004ef4 <HAL_UART_IRQHandler+0x348>
 8004eb4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004eb6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004eba:	2b00      	cmp	r3, #0
 8004ebc:	d008      	beq.n	8004ed0 <HAL_UART_IRQHandler+0x324>
 8004ebe:	6a3b      	ldr	r3, [r7, #32]
 8004ec0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004ec4:	2b00      	cmp	r3, #0
 8004ec6:	d003      	beq.n	8004ed0 <HAL_UART_IRQHandler+0x324>
 8004ec8:	6878      	ldr	r0, [r7, #4]
 8004eca:	f000 f8f9 	bl	80050c0 <UART_Transmit_IT>
 8004ece:	e012      	b.n	8004ef6 <HAL_UART_IRQHandler+0x34a>
 8004ed0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ed2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004ed6:	2b00      	cmp	r3, #0
 8004ed8:	d00d      	beq.n	8004ef6 <HAL_UART_IRQHandler+0x34a>
 8004eda:	6a3b      	ldr	r3, [r7, #32]
 8004edc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004ee0:	2b00      	cmp	r3, #0
 8004ee2:	d008      	beq.n	8004ef6 <HAL_UART_IRQHandler+0x34a>
 8004ee4:	6878      	ldr	r0, [r7, #4]
 8004ee6:	f000 f93a 	bl	800515e <UART_EndTransmit_IT>
 8004eea:	e004      	b.n	8004ef6 <HAL_UART_IRQHandler+0x34a>
 8004eec:	bf00      	nop
 8004eee:	e002      	b.n	8004ef6 <HAL_UART_IRQHandler+0x34a>
 8004ef0:	bf00      	nop
 8004ef2:	e000      	b.n	8004ef6 <HAL_UART_IRQHandler+0x34a>
 8004ef4:	bf00      	nop
 8004ef6:	3728      	adds	r7, #40	; 0x28
 8004ef8:	46bd      	mov	sp, r7
 8004efa:	bd80      	pop	{r7, pc}
 8004efc:	08005099 	.word	0x08005099

08004f00 <HAL_UART_TxCpltCallback>:
 8004f00:	b480      	push	{r7}
 8004f02:	b083      	sub	sp, #12
 8004f04:	af00      	add	r7, sp, #0
 8004f06:	6078      	str	r0, [r7, #4]
 8004f08:	bf00      	nop
 8004f0a:	370c      	adds	r7, #12
 8004f0c:	46bd      	mov	sp, r7
 8004f0e:	bc80      	pop	{r7}
 8004f10:	4770      	bx	lr

08004f12 <HAL_UART_ErrorCallback>:
 8004f12:	b480      	push	{r7}
 8004f14:	b083      	sub	sp, #12
 8004f16:	af00      	add	r7, sp, #0
 8004f18:	6078      	str	r0, [r7, #4]
 8004f1a:	bf00      	nop
 8004f1c:	370c      	adds	r7, #12
 8004f1e:	46bd      	mov	sp, r7
 8004f20:	bc80      	pop	{r7}
 8004f22:	4770      	bx	lr

08004f24 <HAL_UARTEx_RxEventCallback>:
 8004f24:	b480      	push	{r7}
 8004f26:	b083      	sub	sp, #12
 8004f28:	af00      	add	r7, sp, #0
 8004f2a:	6078      	str	r0, [r7, #4]
 8004f2c:	460b      	mov	r3, r1
 8004f2e:	807b      	strh	r3, [r7, #2]
 8004f30:	bf00      	nop
 8004f32:	370c      	adds	r7, #12
 8004f34:	46bd      	mov	sp, r7
 8004f36:	bc80      	pop	{r7}
 8004f38:	4770      	bx	lr

08004f3a <UART_WaitOnFlagUntilTimeout>:
 8004f3a:	b580      	push	{r7, lr}
 8004f3c:	b084      	sub	sp, #16
 8004f3e:	af00      	add	r7, sp, #0
 8004f40:	60f8      	str	r0, [r7, #12]
 8004f42:	60b9      	str	r1, [r7, #8]
 8004f44:	603b      	str	r3, [r7, #0]
 8004f46:	4613      	mov	r3, r2
 8004f48:	71fb      	strb	r3, [r7, #7]
 8004f4a:	e02c      	b.n	8004fa6 <UART_WaitOnFlagUntilTimeout+0x6c>
 8004f4c:	69bb      	ldr	r3, [r7, #24]
 8004f4e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f52:	d028      	beq.n	8004fa6 <UART_WaitOnFlagUntilTimeout+0x6c>
 8004f54:	69bb      	ldr	r3, [r7, #24]
 8004f56:	2b00      	cmp	r3, #0
 8004f58:	d007      	beq.n	8004f6a <UART_WaitOnFlagUntilTimeout+0x30>
 8004f5a:	f7fd f87f 	bl	800205c <HAL_GetTick>
 8004f5e:	4602      	mov	r2, r0
 8004f60:	683b      	ldr	r3, [r7, #0]
 8004f62:	1ad3      	subs	r3, r2, r3
 8004f64:	69ba      	ldr	r2, [r7, #24]
 8004f66:	429a      	cmp	r2, r3
 8004f68:	d21d      	bcs.n	8004fa6 <UART_WaitOnFlagUntilTimeout+0x6c>
 8004f6a:	68fb      	ldr	r3, [r7, #12]
 8004f6c:	681b      	ldr	r3, [r3, #0]
 8004f6e:	68da      	ldr	r2, [r3, #12]
 8004f70:	68fb      	ldr	r3, [r7, #12]
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8004f78:	60da      	str	r2, [r3, #12]
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	695a      	ldr	r2, [r3, #20]
 8004f80:	68fb      	ldr	r3, [r7, #12]
 8004f82:	681b      	ldr	r3, [r3, #0]
 8004f84:	f022 0201 	bic.w	r2, r2, #1
 8004f88:	615a      	str	r2, [r3, #20]
 8004f8a:	68fb      	ldr	r3, [r7, #12]
 8004f8c:	2220      	movs	r2, #32
 8004f8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004f92:	68fb      	ldr	r3, [r7, #12]
 8004f94:	2220      	movs	r2, #32
 8004f96:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004f9a:	68fb      	ldr	r3, [r7, #12]
 8004f9c:	2200      	movs	r2, #0
 8004f9e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004fa2:	2303      	movs	r3, #3
 8004fa4:	e00f      	b.n	8004fc6 <UART_WaitOnFlagUntilTimeout+0x8c>
 8004fa6:	68fb      	ldr	r3, [r7, #12]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	681a      	ldr	r2, [r3, #0]
 8004fac:	68bb      	ldr	r3, [r7, #8]
 8004fae:	4013      	ands	r3, r2
 8004fb0:	68ba      	ldr	r2, [r7, #8]
 8004fb2:	429a      	cmp	r2, r3
 8004fb4:	bf0c      	ite	eq
 8004fb6:	2301      	moveq	r3, #1
 8004fb8:	2300      	movne	r3, #0
 8004fba:	b2db      	uxtb	r3, r3
 8004fbc:	461a      	mov	r2, r3
 8004fbe:	79fb      	ldrb	r3, [r7, #7]
 8004fc0:	429a      	cmp	r2, r3
 8004fc2:	d0c3      	beq.n	8004f4c <UART_WaitOnFlagUntilTimeout+0x12>
 8004fc4:	2300      	movs	r3, #0
 8004fc6:	4618      	mov	r0, r3
 8004fc8:	3710      	adds	r7, #16
 8004fca:	46bd      	mov	sp, r7
 8004fcc:	bd80      	pop	{r7, pc}

08004fce <UART_Start_Receive_IT>:
 8004fce:	b480      	push	{r7}
 8004fd0:	b085      	sub	sp, #20
 8004fd2:	af00      	add	r7, sp, #0
 8004fd4:	60f8      	str	r0, [r7, #12]
 8004fd6:	60b9      	str	r1, [r7, #8]
 8004fd8:	4613      	mov	r3, r2
 8004fda:	80fb      	strh	r3, [r7, #6]
 8004fdc:	68fb      	ldr	r3, [r7, #12]
 8004fde:	68ba      	ldr	r2, [r7, #8]
 8004fe0:	629a      	str	r2, [r3, #40]	; 0x28
 8004fe2:	68fb      	ldr	r3, [r7, #12]
 8004fe4:	88fa      	ldrh	r2, [r7, #6]
 8004fe6:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004fe8:	68fb      	ldr	r3, [r7, #12]
 8004fea:	88fa      	ldrh	r2, [r7, #6]
 8004fec:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004fee:	68fb      	ldr	r3, [r7, #12]
 8004ff0:	2200      	movs	r2, #0
 8004ff2:	641a      	str	r2, [r3, #64]	; 0x40
 8004ff4:	68fb      	ldr	r3, [r7, #12]
 8004ff6:	2222      	movs	r2, #34	; 0x22
 8004ff8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004ffc:	68fb      	ldr	r3, [r7, #12]
 8004ffe:	2200      	movs	r2, #0
 8005000:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005004:	68fb      	ldr	r3, [r7, #12]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	68da      	ldr	r2, [r3, #12]
 800500a:	68fb      	ldr	r3, [r7, #12]
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005012:	60da      	str	r2, [r3, #12]
 8005014:	68fb      	ldr	r3, [r7, #12]
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	695a      	ldr	r2, [r3, #20]
 800501a:	68fb      	ldr	r3, [r7, #12]
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	f042 0201 	orr.w	r2, r2, #1
 8005022:	615a      	str	r2, [r3, #20]
 8005024:	68fb      	ldr	r3, [r7, #12]
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	68da      	ldr	r2, [r3, #12]
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	681b      	ldr	r3, [r3, #0]
 800502e:	f042 0220 	orr.w	r2, r2, #32
 8005032:	60da      	str	r2, [r3, #12]
 8005034:	2300      	movs	r3, #0
 8005036:	4618      	mov	r0, r3
 8005038:	3714      	adds	r7, #20
 800503a:	46bd      	mov	sp, r7
 800503c:	bc80      	pop	{r7}
 800503e:	4770      	bx	lr

08005040 <UART_EndRxTransfer>:
 8005040:	b480      	push	{r7}
 8005042:	b083      	sub	sp, #12
 8005044:	af00      	add	r7, sp, #0
 8005046:	6078      	str	r0, [r7, #4]
 8005048:	687b      	ldr	r3, [r7, #4]
 800504a:	681b      	ldr	r3, [r3, #0]
 800504c:	68da      	ldr	r2, [r3, #12]
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8005056:	60da      	str	r2, [r3, #12]
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	695a      	ldr	r2, [r3, #20]
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	f022 0201 	bic.w	r2, r2, #1
 8005066:	615a      	str	r2, [r3, #20]
 8005068:	687b      	ldr	r3, [r7, #4]
 800506a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800506c:	2b01      	cmp	r3, #1
 800506e:	d107      	bne.n	8005080 <UART_EndRxTransfer+0x40>
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	68da      	ldr	r2, [r3, #12]
 8005076:	687b      	ldr	r3, [r7, #4]
 8005078:	681b      	ldr	r3, [r3, #0]
 800507a:	f022 0210 	bic.w	r2, r2, #16
 800507e:	60da      	str	r2, [r3, #12]
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	2220      	movs	r2, #32
 8005084:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	2200      	movs	r2, #0
 800508c:	631a      	str	r2, [r3, #48]	; 0x30
 800508e:	bf00      	nop
 8005090:	370c      	adds	r7, #12
 8005092:	46bd      	mov	sp, r7
 8005094:	bc80      	pop	{r7}
 8005096:	4770      	bx	lr

08005098 <UART_DMAAbortOnError>:
 8005098:	b580      	push	{r7, lr}
 800509a:	b084      	sub	sp, #16
 800509c:	af00      	add	r7, sp, #0
 800509e:	6078      	str	r0, [r7, #4]
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050a4:	60fb      	str	r3, [r7, #12]
 80050a6:	68fb      	ldr	r3, [r7, #12]
 80050a8:	2200      	movs	r2, #0
 80050aa:	85da      	strh	r2, [r3, #46]	; 0x2e
 80050ac:	68fb      	ldr	r3, [r7, #12]
 80050ae:	2200      	movs	r2, #0
 80050b0:	84da      	strh	r2, [r3, #38]	; 0x26
 80050b2:	68f8      	ldr	r0, [r7, #12]
 80050b4:	f7ff ff2d 	bl	8004f12 <HAL_UART_ErrorCallback>
 80050b8:	bf00      	nop
 80050ba:	3710      	adds	r7, #16
 80050bc:	46bd      	mov	sp, r7
 80050be:	bd80      	pop	{r7, pc}

080050c0 <UART_Transmit_IT>:
 80050c0:	b480      	push	{r7}
 80050c2:	b085      	sub	sp, #20
 80050c4:	af00      	add	r7, sp, #0
 80050c6:	6078      	str	r0, [r7, #4]
 80050c8:	687b      	ldr	r3, [r7, #4]
 80050ca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80050ce:	b2db      	uxtb	r3, r3
 80050d0:	2b21      	cmp	r3, #33	; 0x21
 80050d2:	d13e      	bne.n	8005152 <UART_Transmit_IT+0x92>
 80050d4:	687b      	ldr	r3, [r7, #4]
 80050d6:	689b      	ldr	r3, [r3, #8]
 80050d8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80050dc:	d114      	bne.n	8005108 <UART_Transmit_IT+0x48>
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	691b      	ldr	r3, [r3, #16]
 80050e2:	2b00      	cmp	r3, #0
 80050e4:	d110      	bne.n	8005108 <UART_Transmit_IT+0x48>
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	6a1b      	ldr	r3, [r3, #32]
 80050ea:	60fb      	str	r3, [r7, #12]
 80050ec:	68fb      	ldr	r3, [r7, #12]
 80050ee:	881b      	ldrh	r3, [r3, #0]
 80050f0:	461a      	mov	r2, r3
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80050fa:	605a      	str	r2, [r3, #4]
 80050fc:	687b      	ldr	r3, [r7, #4]
 80050fe:	6a1b      	ldr	r3, [r3, #32]
 8005100:	1c9a      	adds	r2, r3, #2
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	621a      	str	r2, [r3, #32]
 8005106:	e008      	b.n	800511a <UART_Transmit_IT+0x5a>
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	6a1b      	ldr	r3, [r3, #32]
 800510c:	1c59      	adds	r1, r3, #1
 800510e:	687a      	ldr	r2, [r7, #4]
 8005110:	6211      	str	r1, [r2, #32]
 8005112:	781a      	ldrb	r2, [r3, #0]
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	681b      	ldr	r3, [r3, #0]
 8005118:	605a      	str	r2, [r3, #4]
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800511e:	b29b      	uxth	r3, r3
 8005120:	3b01      	subs	r3, #1
 8005122:	b29b      	uxth	r3, r3
 8005124:	687a      	ldr	r2, [r7, #4]
 8005126:	4619      	mov	r1, r3
 8005128:	84d1      	strh	r1, [r2, #38]	; 0x26
 800512a:	2b00      	cmp	r3, #0
 800512c:	d10f      	bne.n	800514e <UART_Transmit_IT+0x8e>
 800512e:	687b      	ldr	r3, [r7, #4]
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	68da      	ldr	r2, [r3, #12]
 8005134:	687b      	ldr	r3, [r7, #4]
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800513c:	60da      	str	r2, [r3, #12]
 800513e:	687b      	ldr	r3, [r7, #4]
 8005140:	681b      	ldr	r3, [r3, #0]
 8005142:	68da      	ldr	r2, [r3, #12]
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	681b      	ldr	r3, [r3, #0]
 8005148:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800514c:	60da      	str	r2, [r3, #12]
 800514e:	2300      	movs	r3, #0
 8005150:	e000      	b.n	8005154 <UART_Transmit_IT+0x94>
 8005152:	2302      	movs	r3, #2
 8005154:	4618      	mov	r0, r3
 8005156:	3714      	adds	r7, #20
 8005158:	46bd      	mov	sp, r7
 800515a:	bc80      	pop	{r7}
 800515c:	4770      	bx	lr

0800515e <UART_EndTransmit_IT>:
 800515e:	b580      	push	{r7, lr}
 8005160:	b082      	sub	sp, #8
 8005162:	af00      	add	r7, sp, #0
 8005164:	6078      	str	r0, [r7, #4]
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	681b      	ldr	r3, [r3, #0]
 800516a:	68da      	ldr	r2, [r3, #12]
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	681b      	ldr	r3, [r3, #0]
 8005170:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005174:	60da      	str	r2, [r3, #12]
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	2220      	movs	r2, #32
 800517a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800517e:	6878      	ldr	r0, [r7, #4]
 8005180:	f7ff febe 	bl	8004f00 <HAL_UART_TxCpltCallback>
 8005184:	2300      	movs	r3, #0
 8005186:	4618      	mov	r0, r3
 8005188:	3708      	adds	r7, #8
 800518a:	46bd      	mov	sp, r7
 800518c:	bd80      	pop	{r7, pc}

0800518e <UART_Receive_IT>:
 800518e:	b580      	push	{r7, lr}
 8005190:	b086      	sub	sp, #24
 8005192:	af00      	add	r7, sp, #0
 8005194:	6078      	str	r0, [r7, #4]
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800519c:	b2db      	uxtb	r3, r3
 800519e:	2b22      	cmp	r3, #34	; 0x22
 80051a0:	f040 8099 	bne.w	80052d6 <UART_Receive_IT+0x148>
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	689b      	ldr	r3, [r3, #8]
 80051a8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80051ac:	d117      	bne.n	80051de <UART_Receive_IT+0x50>
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	691b      	ldr	r3, [r3, #16]
 80051b2:	2b00      	cmp	r3, #0
 80051b4:	d113      	bne.n	80051de <UART_Receive_IT+0x50>
 80051b6:	2300      	movs	r3, #0
 80051b8:	617b      	str	r3, [r7, #20]
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80051be:	613b      	str	r3, [r7, #16]
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	681b      	ldr	r3, [r3, #0]
 80051c4:	685b      	ldr	r3, [r3, #4]
 80051c6:	b29b      	uxth	r3, r3
 80051c8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80051cc:	b29a      	uxth	r2, r3
 80051ce:	693b      	ldr	r3, [r7, #16]
 80051d0:	801a      	strh	r2, [r3, #0]
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80051d6:	1c9a      	adds	r2, r3, #2
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	629a      	str	r2, [r3, #40]	; 0x28
 80051dc:	e026      	b.n	800522c <UART_Receive_IT+0x9e>
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80051e2:	617b      	str	r3, [r7, #20]
 80051e4:	2300      	movs	r3, #0
 80051e6:	613b      	str	r3, [r7, #16]
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	689b      	ldr	r3, [r3, #8]
 80051ec:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80051f0:	d007      	beq.n	8005202 <UART_Receive_IT+0x74>
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	689b      	ldr	r3, [r3, #8]
 80051f6:	2b00      	cmp	r3, #0
 80051f8:	d10a      	bne.n	8005210 <UART_Receive_IT+0x82>
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	691b      	ldr	r3, [r3, #16]
 80051fe:	2b00      	cmp	r3, #0
 8005200:	d106      	bne.n	8005210 <UART_Receive_IT+0x82>
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	681b      	ldr	r3, [r3, #0]
 8005206:	685b      	ldr	r3, [r3, #4]
 8005208:	b2da      	uxtb	r2, r3
 800520a:	697b      	ldr	r3, [r7, #20]
 800520c:	701a      	strb	r2, [r3, #0]
 800520e:	e008      	b.n	8005222 <UART_Receive_IT+0x94>
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	685b      	ldr	r3, [r3, #4]
 8005216:	b2db      	uxtb	r3, r3
 8005218:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800521c:	b2da      	uxtb	r2, r3
 800521e:	697b      	ldr	r3, [r7, #20]
 8005220:	701a      	strb	r2, [r3, #0]
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005226:	1c5a      	adds	r2, r3, #1
 8005228:	687b      	ldr	r3, [r7, #4]
 800522a:	629a      	str	r2, [r3, #40]	; 0x28
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005230:	b29b      	uxth	r3, r3
 8005232:	3b01      	subs	r3, #1
 8005234:	b29b      	uxth	r3, r3
 8005236:	687a      	ldr	r2, [r7, #4]
 8005238:	4619      	mov	r1, r3
 800523a:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800523c:	2b00      	cmp	r3, #0
 800523e:	d148      	bne.n	80052d2 <UART_Receive_IT+0x144>
 8005240:	687b      	ldr	r3, [r7, #4]
 8005242:	681b      	ldr	r3, [r3, #0]
 8005244:	68da      	ldr	r2, [r3, #12]
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	f022 0220 	bic.w	r2, r2, #32
 800524e:	60da      	str	r2, [r3, #12]
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	681b      	ldr	r3, [r3, #0]
 8005254:	68da      	ldr	r2, [r3, #12]
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800525e:	60da      	str	r2, [r3, #12]
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	695a      	ldr	r2, [r3, #20]
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	681b      	ldr	r3, [r3, #0]
 800526a:	f022 0201 	bic.w	r2, r2, #1
 800526e:	615a      	str	r2, [r3, #20]
 8005270:	687b      	ldr	r3, [r7, #4]
 8005272:	2220      	movs	r2, #32
 8005274:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005278:	687b      	ldr	r3, [r7, #4]
 800527a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800527c:	2b01      	cmp	r3, #1
 800527e:	d123      	bne.n	80052c8 <UART_Receive_IT+0x13a>
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	2200      	movs	r2, #0
 8005284:	631a      	str	r2, [r3, #48]	; 0x30
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	68da      	ldr	r2, [r3, #12]
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	f022 0210 	bic.w	r2, r2, #16
 8005294:	60da      	str	r2, [r3, #12]
 8005296:	687b      	ldr	r3, [r7, #4]
 8005298:	681b      	ldr	r3, [r3, #0]
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	f003 0310 	and.w	r3, r3, #16
 80052a0:	2b10      	cmp	r3, #16
 80052a2:	d10a      	bne.n	80052ba <UART_Receive_IT+0x12c>
 80052a4:	2300      	movs	r3, #0
 80052a6:	60fb      	str	r3, [r7, #12]
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	681b      	ldr	r3, [r3, #0]
 80052ac:	681b      	ldr	r3, [r3, #0]
 80052ae:	60fb      	str	r3, [r7, #12]
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	681b      	ldr	r3, [r3, #0]
 80052b4:	685b      	ldr	r3, [r3, #4]
 80052b6:	60fb      	str	r3, [r7, #12]
 80052b8:	68fb      	ldr	r3, [r7, #12]
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80052be:	4619      	mov	r1, r3
 80052c0:	6878      	ldr	r0, [r7, #4]
 80052c2:	f7ff fe2f 	bl	8004f24 <HAL_UARTEx_RxEventCallback>
 80052c6:	e002      	b.n	80052ce <UART_Receive_IT+0x140>
 80052c8:	6878      	ldr	r0, [r7, #4]
 80052ca:	f7fb fef5 	bl	80010b8 <HAL_UART_RxCpltCallback>
 80052ce:	2300      	movs	r3, #0
 80052d0:	e002      	b.n	80052d8 <UART_Receive_IT+0x14a>
 80052d2:	2300      	movs	r3, #0
 80052d4:	e000      	b.n	80052d8 <UART_Receive_IT+0x14a>
 80052d6:	2302      	movs	r3, #2
 80052d8:	4618      	mov	r0, r3
 80052da:	3718      	adds	r7, #24
 80052dc:	46bd      	mov	sp, r7
 80052de:	bd80      	pop	{r7, pc}

080052e0 <UART_SetConfig>:
 80052e0:	b580      	push	{r7, lr}
 80052e2:	b084      	sub	sp, #16
 80052e4:	af00      	add	r7, sp, #0
 80052e6:	6078      	str	r0, [r7, #4]
 80052e8:	687b      	ldr	r3, [r7, #4]
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	691b      	ldr	r3, [r3, #16]
 80052ee:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80052f2:	687b      	ldr	r3, [r7, #4]
 80052f4:	68da      	ldr	r2, [r3, #12]
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	681b      	ldr	r3, [r3, #0]
 80052fa:	430a      	orrs	r2, r1
 80052fc:	611a      	str	r2, [r3, #16]
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	689a      	ldr	r2, [r3, #8]
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	691b      	ldr	r3, [r3, #16]
 8005306:	431a      	orrs	r2, r3
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	695b      	ldr	r3, [r3, #20]
 800530c:	4313      	orrs	r3, r2
 800530e:	60bb      	str	r3, [r7, #8]
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	68db      	ldr	r3, [r3, #12]
 8005316:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800531a:	f023 030c 	bic.w	r3, r3, #12
 800531e:	687a      	ldr	r2, [r7, #4]
 8005320:	6812      	ldr	r2, [r2, #0]
 8005322:	68b9      	ldr	r1, [r7, #8]
 8005324:	430b      	orrs	r3, r1
 8005326:	60d3      	str	r3, [r2, #12]
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	695b      	ldr	r3, [r3, #20]
 800532e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	699a      	ldr	r2, [r3, #24]
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	681b      	ldr	r3, [r3, #0]
 800533a:	430a      	orrs	r2, r1
 800533c:	615a      	str	r2, [r3, #20]
 800533e:	687b      	ldr	r3, [r7, #4]
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	4a2c      	ldr	r2, [pc, #176]	; (80053f4 <UART_SetConfig+0x114>)
 8005344:	4293      	cmp	r3, r2
 8005346:	d103      	bne.n	8005350 <UART_SetConfig+0x70>
 8005348:	f7fe fef4 	bl	8004134 <HAL_RCC_GetPCLK2Freq>
 800534c:	60f8      	str	r0, [r7, #12]
 800534e:	e002      	b.n	8005356 <UART_SetConfig+0x76>
 8005350:	f7fe fedc 	bl	800410c <HAL_RCC_GetPCLK1Freq>
 8005354:	60f8      	str	r0, [r7, #12]
 8005356:	68fa      	ldr	r2, [r7, #12]
 8005358:	4613      	mov	r3, r2
 800535a:	009b      	lsls	r3, r3, #2
 800535c:	4413      	add	r3, r2
 800535e:	009a      	lsls	r2, r3, #2
 8005360:	441a      	add	r2, r3
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	685b      	ldr	r3, [r3, #4]
 8005366:	009b      	lsls	r3, r3, #2
 8005368:	fbb2 f3f3 	udiv	r3, r2, r3
 800536c:	4a22      	ldr	r2, [pc, #136]	; (80053f8 <UART_SetConfig+0x118>)
 800536e:	fba2 2303 	umull	r2, r3, r2, r3
 8005372:	095b      	lsrs	r3, r3, #5
 8005374:	0119      	lsls	r1, r3, #4
 8005376:	68fa      	ldr	r2, [r7, #12]
 8005378:	4613      	mov	r3, r2
 800537a:	009b      	lsls	r3, r3, #2
 800537c:	4413      	add	r3, r2
 800537e:	009a      	lsls	r2, r3, #2
 8005380:	441a      	add	r2, r3
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	685b      	ldr	r3, [r3, #4]
 8005386:	009b      	lsls	r3, r3, #2
 8005388:	fbb2 f2f3 	udiv	r2, r2, r3
 800538c:	4b1a      	ldr	r3, [pc, #104]	; (80053f8 <UART_SetConfig+0x118>)
 800538e:	fba3 0302 	umull	r0, r3, r3, r2
 8005392:	095b      	lsrs	r3, r3, #5
 8005394:	2064      	movs	r0, #100	; 0x64
 8005396:	fb00 f303 	mul.w	r3, r0, r3
 800539a:	1ad3      	subs	r3, r2, r3
 800539c:	011b      	lsls	r3, r3, #4
 800539e:	3332      	adds	r3, #50	; 0x32
 80053a0:	4a15      	ldr	r2, [pc, #84]	; (80053f8 <UART_SetConfig+0x118>)
 80053a2:	fba2 2303 	umull	r2, r3, r2, r3
 80053a6:	095b      	lsrs	r3, r3, #5
 80053a8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80053ac:	4419      	add	r1, r3
 80053ae:	68fa      	ldr	r2, [r7, #12]
 80053b0:	4613      	mov	r3, r2
 80053b2:	009b      	lsls	r3, r3, #2
 80053b4:	4413      	add	r3, r2
 80053b6:	009a      	lsls	r2, r3, #2
 80053b8:	441a      	add	r2, r3
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	685b      	ldr	r3, [r3, #4]
 80053be:	009b      	lsls	r3, r3, #2
 80053c0:	fbb2 f2f3 	udiv	r2, r2, r3
 80053c4:	4b0c      	ldr	r3, [pc, #48]	; (80053f8 <UART_SetConfig+0x118>)
 80053c6:	fba3 0302 	umull	r0, r3, r3, r2
 80053ca:	095b      	lsrs	r3, r3, #5
 80053cc:	2064      	movs	r0, #100	; 0x64
 80053ce:	fb00 f303 	mul.w	r3, r0, r3
 80053d2:	1ad3      	subs	r3, r2, r3
 80053d4:	011b      	lsls	r3, r3, #4
 80053d6:	3332      	adds	r3, #50	; 0x32
 80053d8:	4a07      	ldr	r2, [pc, #28]	; (80053f8 <UART_SetConfig+0x118>)
 80053da:	fba2 2303 	umull	r2, r3, r2, r3
 80053de:	095b      	lsrs	r3, r3, #5
 80053e0:	f003 020f 	and.w	r2, r3, #15
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	681b      	ldr	r3, [r3, #0]
 80053e8:	440a      	add	r2, r1
 80053ea:	609a      	str	r2, [r3, #8]
 80053ec:	bf00      	nop
 80053ee:	3710      	adds	r7, #16
 80053f0:	46bd      	mov	sp, r7
 80053f2:	bd80      	pop	{r7, pc}
 80053f4:	40013800 	.word	0x40013800
 80053f8:	51eb851f 	.word	0x51eb851f

080053fc <atoi>:
 80053fc:	220a      	movs	r2, #10
 80053fe:	2100      	movs	r1, #0
 8005400:	f000 bdbe 	b.w	8005f80 <strtol>

08005404 <__errno>:
 8005404:	4b01      	ldr	r3, [pc, #4]	; (800540c <__errno+0x8>)
 8005406:	6818      	ldr	r0, [r3, #0]
 8005408:	4770      	bx	lr
 800540a:	bf00      	nop
 800540c:	20000014 	.word	0x20000014

08005410 <__libc_init_array>:
 8005410:	b570      	push	{r4, r5, r6, lr}
 8005412:	2600      	movs	r6, #0
 8005414:	4d0c      	ldr	r5, [pc, #48]	; (8005448 <__libc_init_array+0x38>)
 8005416:	4c0d      	ldr	r4, [pc, #52]	; (800544c <__libc_init_array+0x3c>)
 8005418:	1b64      	subs	r4, r4, r5
 800541a:	10a4      	asrs	r4, r4, #2
 800541c:	42a6      	cmp	r6, r4
 800541e:	d109      	bne.n	8005434 <__libc_init_array+0x24>
 8005420:	f003 f810 	bl	8008444 <_init>
 8005424:	2600      	movs	r6, #0
 8005426:	4d0a      	ldr	r5, [pc, #40]	; (8005450 <__libc_init_array+0x40>)
 8005428:	4c0a      	ldr	r4, [pc, #40]	; (8005454 <__libc_init_array+0x44>)
 800542a:	1b64      	subs	r4, r4, r5
 800542c:	10a4      	asrs	r4, r4, #2
 800542e:	42a6      	cmp	r6, r4
 8005430:	d105      	bne.n	800543e <__libc_init_array+0x2e>
 8005432:	bd70      	pop	{r4, r5, r6, pc}
 8005434:	f855 3b04 	ldr.w	r3, [r5], #4
 8005438:	4798      	blx	r3
 800543a:	3601      	adds	r6, #1
 800543c:	e7ee      	b.n	800541c <__libc_init_array+0xc>
 800543e:	f855 3b04 	ldr.w	r3, [r5], #4
 8005442:	4798      	blx	r3
 8005444:	3601      	adds	r6, #1
 8005446:	e7f2      	b.n	800542e <__libc_init_array+0x1e>
 8005448:	08008a64 	.word	0x08008a64
 800544c:	08008a64 	.word	0x08008a64
 8005450:	08008a64 	.word	0x08008a64
 8005454:	08008a68 	.word	0x08008a68

08005458 <memset>:
 8005458:	4603      	mov	r3, r0
 800545a:	4402      	add	r2, r0
 800545c:	4293      	cmp	r3, r2
 800545e:	d100      	bne.n	8005462 <memset+0xa>
 8005460:	4770      	bx	lr
 8005462:	f803 1b01 	strb.w	r1, [r3], #1
 8005466:	e7f9      	b.n	800545c <memset+0x4>

08005468 <__cvt>:
 8005468:	2b00      	cmp	r3, #0
 800546a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800546e:	461f      	mov	r7, r3
 8005470:	bfbb      	ittet	lt
 8005472:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8005476:	461f      	movlt	r7, r3
 8005478:	2300      	movge	r3, #0
 800547a:	232d      	movlt	r3, #45	; 0x2d
 800547c:	b088      	sub	sp, #32
 800547e:	4614      	mov	r4, r2
 8005480:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005482:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8005484:	7013      	strb	r3, [r2, #0]
 8005486:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005488:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 800548c:	f023 0820 	bic.w	r8, r3, #32
 8005490:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8005494:	d005      	beq.n	80054a2 <__cvt+0x3a>
 8005496:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800549a:	d100      	bne.n	800549e <__cvt+0x36>
 800549c:	3501      	adds	r5, #1
 800549e:	2302      	movs	r3, #2
 80054a0:	e000      	b.n	80054a4 <__cvt+0x3c>
 80054a2:	2303      	movs	r3, #3
 80054a4:	aa07      	add	r2, sp, #28
 80054a6:	9204      	str	r2, [sp, #16]
 80054a8:	aa06      	add	r2, sp, #24
 80054aa:	e9cd a202 	strd	sl, r2, [sp, #8]
 80054ae:	e9cd 3500 	strd	r3, r5, [sp]
 80054b2:	4622      	mov	r2, r4
 80054b4:	463b      	mov	r3, r7
 80054b6:	f000 fe17 	bl	80060e8 <_dtoa_r>
 80054ba:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80054be:	4606      	mov	r6, r0
 80054c0:	d102      	bne.n	80054c8 <__cvt+0x60>
 80054c2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80054c4:	07db      	lsls	r3, r3, #31
 80054c6:	d522      	bpl.n	800550e <__cvt+0xa6>
 80054c8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80054cc:	eb06 0905 	add.w	r9, r6, r5
 80054d0:	d110      	bne.n	80054f4 <__cvt+0x8c>
 80054d2:	7833      	ldrb	r3, [r6, #0]
 80054d4:	2b30      	cmp	r3, #48	; 0x30
 80054d6:	d10a      	bne.n	80054ee <__cvt+0x86>
 80054d8:	2200      	movs	r2, #0
 80054da:	2300      	movs	r3, #0
 80054dc:	4620      	mov	r0, r4
 80054de:	4639      	mov	r1, r7
 80054e0:	f7fb fa62 	bl	80009a8 <__aeabi_dcmpeq>
 80054e4:	b918      	cbnz	r0, 80054ee <__cvt+0x86>
 80054e6:	f1c5 0501 	rsb	r5, r5, #1
 80054ea:	f8ca 5000 	str.w	r5, [sl]
 80054ee:	f8da 3000 	ldr.w	r3, [sl]
 80054f2:	4499      	add	r9, r3
 80054f4:	2200      	movs	r2, #0
 80054f6:	2300      	movs	r3, #0
 80054f8:	4620      	mov	r0, r4
 80054fa:	4639      	mov	r1, r7
 80054fc:	f7fb fa54 	bl	80009a8 <__aeabi_dcmpeq>
 8005500:	b108      	cbz	r0, 8005506 <__cvt+0x9e>
 8005502:	f8cd 901c 	str.w	r9, [sp, #28]
 8005506:	2230      	movs	r2, #48	; 0x30
 8005508:	9b07      	ldr	r3, [sp, #28]
 800550a:	454b      	cmp	r3, r9
 800550c:	d307      	bcc.n	800551e <__cvt+0xb6>
 800550e:	4630      	mov	r0, r6
 8005510:	9b07      	ldr	r3, [sp, #28]
 8005512:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005514:	1b9b      	subs	r3, r3, r6
 8005516:	6013      	str	r3, [r2, #0]
 8005518:	b008      	add	sp, #32
 800551a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800551e:	1c59      	adds	r1, r3, #1
 8005520:	9107      	str	r1, [sp, #28]
 8005522:	701a      	strb	r2, [r3, #0]
 8005524:	e7f0      	b.n	8005508 <__cvt+0xa0>

08005526 <__exponent>:
 8005526:	4603      	mov	r3, r0
 8005528:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800552a:	2900      	cmp	r1, #0
 800552c:	f803 2b02 	strb.w	r2, [r3], #2
 8005530:	bfb6      	itet	lt
 8005532:	222d      	movlt	r2, #45	; 0x2d
 8005534:	222b      	movge	r2, #43	; 0x2b
 8005536:	4249      	neglt	r1, r1
 8005538:	2909      	cmp	r1, #9
 800553a:	7042      	strb	r2, [r0, #1]
 800553c:	dd2b      	ble.n	8005596 <__exponent+0x70>
 800553e:	f10d 0407 	add.w	r4, sp, #7
 8005542:	46a4      	mov	ip, r4
 8005544:	270a      	movs	r7, #10
 8005546:	fb91 f6f7 	sdiv	r6, r1, r7
 800554a:	460a      	mov	r2, r1
 800554c:	46a6      	mov	lr, r4
 800554e:	fb07 1516 	mls	r5, r7, r6, r1
 8005552:	2a63      	cmp	r2, #99	; 0x63
 8005554:	f105 0530 	add.w	r5, r5, #48	; 0x30
 8005558:	4631      	mov	r1, r6
 800555a:	f104 34ff 	add.w	r4, r4, #4294967295
 800555e:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8005562:	dcf0      	bgt.n	8005546 <__exponent+0x20>
 8005564:	3130      	adds	r1, #48	; 0x30
 8005566:	f1ae 0502 	sub.w	r5, lr, #2
 800556a:	f804 1c01 	strb.w	r1, [r4, #-1]
 800556e:	4629      	mov	r1, r5
 8005570:	1c44      	adds	r4, r0, #1
 8005572:	4561      	cmp	r1, ip
 8005574:	d30a      	bcc.n	800558c <__exponent+0x66>
 8005576:	f10d 0209 	add.w	r2, sp, #9
 800557a:	eba2 020e 	sub.w	r2, r2, lr
 800557e:	4565      	cmp	r5, ip
 8005580:	bf88      	it	hi
 8005582:	2200      	movhi	r2, #0
 8005584:	4413      	add	r3, r2
 8005586:	1a18      	subs	r0, r3, r0
 8005588:	b003      	add	sp, #12
 800558a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800558c:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005590:	f804 2f01 	strb.w	r2, [r4, #1]!
 8005594:	e7ed      	b.n	8005572 <__exponent+0x4c>
 8005596:	2330      	movs	r3, #48	; 0x30
 8005598:	3130      	adds	r1, #48	; 0x30
 800559a:	7083      	strb	r3, [r0, #2]
 800559c:	70c1      	strb	r1, [r0, #3]
 800559e:	1d03      	adds	r3, r0, #4
 80055a0:	e7f1      	b.n	8005586 <__exponent+0x60>
	...

080055a4 <_printf_float>:
 80055a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055a8:	b091      	sub	sp, #68	; 0x44
 80055aa:	460c      	mov	r4, r1
 80055ac:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80055b0:	4616      	mov	r6, r2
 80055b2:	461f      	mov	r7, r3
 80055b4:	4605      	mov	r5, r0
 80055b6:	f001 fb97 	bl	8006ce8 <_localeconv_r>
 80055ba:	6803      	ldr	r3, [r0, #0]
 80055bc:	4618      	mov	r0, r3
 80055be:	9309      	str	r3, [sp, #36]	; 0x24
 80055c0:	f7fa fdc6 	bl	8000150 <strlen>
 80055c4:	2300      	movs	r3, #0
 80055c6:	930e      	str	r3, [sp, #56]	; 0x38
 80055c8:	f8d8 3000 	ldr.w	r3, [r8]
 80055cc:	900a      	str	r0, [sp, #40]	; 0x28
 80055ce:	3307      	adds	r3, #7
 80055d0:	f023 0307 	bic.w	r3, r3, #7
 80055d4:	f103 0208 	add.w	r2, r3, #8
 80055d8:	f894 9018 	ldrb.w	r9, [r4, #24]
 80055dc:	f8d4 b000 	ldr.w	fp, [r4]
 80055e0:	f8c8 2000 	str.w	r2, [r8]
 80055e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80055e8:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80055ec:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 80055f0:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80055f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80055f6:	f04f 32ff 	mov.w	r2, #4294967295
 80055fa:	4640      	mov	r0, r8
 80055fc:	4b9c      	ldr	r3, [pc, #624]	; (8005870 <_printf_float+0x2cc>)
 80055fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005600:	f7fb fa04 	bl	8000a0c <__aeabi_dcmpun>
 8005604:	bb70      	cbnz	r0, 8005664 <_printf_float+0xc0>
 8005606:	f04f 32ff 	mov.w	r2, #4294967295
 800560a:	4640      	mov	r0, r8
 800560c:	4b98      	ldr	r3, [pc, #608]	; (8005870 <_printf_float+0x2cc>)
 800560e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005610:	f7fb f9de 	bl	80009d0 <__aeabi_dcmple>
 8005614:	bb30      	cbnz	r0, 8005664 <_printf_float+0xc0>
 8005616:	2200      	movs	r2, #0
 8005618:	2300      	movs	r3, #0
 800561a:	4640      	mov	r0, r8
 800561c:	4651      	mov	r1, sl
 800561e:	f7fb f9cd 	bl	80009bc <__aeabi_dcmplt>
 8005622:	b110      	cbz	r0, 800562a <_printf_float+0x86>
 8005624:	232d      	movs	r3, #45	; 0x2d
 8005626:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800562a:	4b92      	ldr	r3, [pc, #584]	; (8005874 <_printf_float+0x2d0>)
 800562c:	4892      	ldr	r0, [pc, #584]	; (8005878 <_printf_float+0x2d4>)
 800562e:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8005632:	bf94      	ite	ls
 8005634:	4698      	movls	r8, r3
 8005636:	4680      	movhi	r8, r0
 8005638:	2303      	movs	r3, #3
 800563a:	f04f 0a00 	mov.w	sl, #0
 800563e:	6123      	str	r3, [r4, #16]
 8005640:	f02b 0304 	bic.w	r3, fp, #4
 8005644:	6023      	str	r3, [r4, #0]
 8005646:	4633      	mov	r3, r6
 8005648:	4621      	mov	r1, r4
 800564a:	4628      	mov	r0, r5
 800564c:	9700      	str	r7, [sp, #0]
 800564e:	aa0f      	add	r2, sp, #60	; 0x3c
 8005650:	f000 f9d4 	bl	80059fc <_printf_common>
 8005654:	3001      	adds	r0, #1
 8005656:	f040 8090 	bne.w	800577a <_printf_float+0x1d6>
 800565a:	f04f 30ff 	mov.w	r0, #4294967295
 800565e:	b011      	add	sp, #68	; 0x44
 8005660:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005664:	4642      	mov	r2, r8
 8005666:	4653      	mov	r3, sl
 8005668:	4640      	mov	r0, r8
 800566a:	4651      	mov	r1, sl
 800566c:	f7fb f9ce 	bl	8000a0c <__aeabi_dcmpun>
 8005670:	b148      	cbz	r0, 8005686 <_printf_float+0xe2>
 8005672:	f1ba 0f00 	cmp.w	sl, #0
 8005676:	bfb8      	it	lt
 8005678:	232d      	movlt	r3, #45	; 0x2d
 800567a:	4880      	ldr	r0, [pc, #512]	; (800587c <_printf_float+0x2d8>)
 800567c:	bfb8      	it	lt
 800567e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8005682:	4b7f      	ldr	r3, [pc, #508]	; (8005880 <_printf_float+0x2dc>)
 8005684:	e7d3      	b.n	800562e <_printf_float+0x8a>
 8005686:	6863      	ldr	r3, [r4, #4]
 8005688:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 800568c:	1c5a      	adds	r2, r3, #1
 800568e:	d142      	bne.n	8005716 <_printf_float+0x172>
 8005690:	2306      	movs	r3, #6
 8005692:	6063      	str	r3, [r4, #4]
 8005694:	2200      	movs	r2, #0
 8005696:	9206      	str	r2, [sp, #24]
 8005698:	aa0e      	add	r2, sp, #56	; 0x38
 800569a:	e9cd 9204 	strd	r9, r2, [sp, #16]
 800569e:	aa0d      	add	r2, sp, #52	; 0x34
 80056a0:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 80056a4:	9203      	str	r2, [sp, #12]
 80056a6:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 80056aa:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80056ae:	6023      	str	r3, [r4, #0]
 80056b0:	6863      	ldr	r3, [r4, #4]
 80056b2:	4642      	mov	r2, r8
 80056b4:	9300      	str	r3, [sp, #0]
 80056b6:	4628      	mov	r0, r5
 80056b8:	4653      	mov	r3, sl
 80056ba:	910b      	str	r1, [sp, #44]	; 0x2c
 80056bc:	f7ff fed4 	bl	8005468 <__cvt>
 80056c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80056c2:	4680      	mov	r8, r0
 80056c4:	2947      	cmp	r1, #71	; 0x47
 80056c6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80056c8:	d108      	bne.n	80056dc <_printf_float+0x138>
 80056ca:	1cc8      	adds	r0, r1, #3
 80056cc:	db02      	blt.n	80056d4 <_printf_float+0x130>
 80056ce:	6863      	ldr	r3, [r4, #4]
 80056d0:	4299      	cmp	r1, r3
 80056d2:	dd40      	ble.n	8005756 <_printf_float+0x1b2>
 80056d4:	f1a9 0902 	sub.w	r9, r9, #2
 80056d8:	fa5f f989 	uxtb.w	r9, r9
 80056dc:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80056e0:	d81f      	bhi.n	8005722 <_printf_float+0x17e>
 80056e2:	464a      	mov	r2, r9
 80056e4:	3901      	subs	r1, #1
 80056e6:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80056ea:	910d      	str	r1, [sp, #52]	; 0x34
 80056ec:	f7ff ff1b 	bl	8005526 <__exponent>
 80056f0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80056f2:	4682      	mov	sl, r0
 80056f4:	1813      	adds	r3, r2, r0
 80056f6:	2a01      	cmp	r2, #1
 80056f8:	6123      	str	r3, [r4, #16]
 80056fa:	dc02      	bgt.n	8005702 <_printf_float+0x15e>
 80056fc:	6822      	ldr	r2, [r4, #0]
 80056fe:	07d2      	lsls	r2, r2, #31
 8005700:	d501      	bpl.n	8005706 <_printf_float+0x162>
 8005702:	3301      	adds	r3, #1
 8005704:	6123      	str	r3, [r4, #16]
 8005706:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800570a:	2b00      	cmp	r3, #0
 800570c:	d09b      	beq.n	8005646 <_printf_float+0xa2>
 800570e:	232d      	movs	r3, #45	; 0x2d
 8005710:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005714:	e797      	b.n	8005646 <_printf_float+0xa2>
 8005716:	2947      	cmp	r1, #71	; 0x47
 8005718:	d1bc      	bne.n	8005694 <_printf_float+0xf0>
 800571a:	2b00      	cmp	r3, #0
 800571c:	d1ba      	bne.n	8005694 <_printf_float+0xf0>
 800571e:	2301      	movs	r3, #1
 8005720:	e7b7      	b.n	8005692 <_printf_float+0xee>
 8005722:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8005726:	d118      	bne.n	800575a <_printf_float+0x1b6>
 8005728:	2900      	cmp	r1, #0
 800572a:	6863      	ldr	r3, [r4, #4]
 800572c:	dd0b      	ble.n	8005746 <_printf_float+0x1a2>
 800572e:	6121      	str	r1, [r4, #16]
 8005730:	b913      	cbnz	r3, 8005738 <_printf_float+0x194>
 8005732:	6822      	ldr	r2, [r4, #0]
 8005734:	07d0      	lsls	r0, r2, #31
 8005736:	d502      	bpl.n	800573e <_printf_float+0x19a>
 8005738:	3301      	adds	r3, #1
 800573a:	440b      	add	r3, r1
 800573c:	6123      	str	r3, [r4, #16]
 800573e:	f04f 0a00 	mov.w	sl, #0
 8005742:	65a1      	str	r1, [r4, #88]	; 0x58
 8005744:	e7df      	b.n	8005706 <_printf_float+0x162>
 8005746:	b913      	cbnz	r3, 800574e <_printf_float+0x1aa>
 8005748:	6822      	ldr	r2, [r4, #0]
 800574a:	07d2      	lsls	r2, r2, #31
 800574c:	d501      	bpl.n	8005752 <_printf_float+0x1ae>
 800574e:	3302      	adds	r3, #2
 8005750:	e7f4      	b.n	800573c <_printf_float+0x198>
 8005752:	2301      	movs	r3, #1
 8005754:	e7f2      	b.n	800573c <_printf_float+0x198>
 8005756:	f04f 0967 	mov.w	r9, #103	; 0x67
 800575a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800575c:	4299      	cmp	r1, r3
 800575e:	db05      	blt.n	800576c <_printf_float+0x1c8>
 8005760:	6823      	ldr	r3, [r4, #0]
 8005762:	6121      	str	r1, [r4, #16]
 8005764:	07d8      	lsls	r0, r3, #31
 8005766:	d5ea      	bpl.n	800573e <_printf_float+0x19a>
 8005768:	1c4b      	adds	r3, r1, #1
 800576a:	e7e7      	b.n	800573c <_printf_float+0x198>
 800576c:	2900      	cmp	r1, #0
 800576e:	bfcc      	ite	gt
 8005770:	2201      	movgt	r2, #1
 8005772:	f1c1 0202 	rsble	r2, r1, #2
 8005776:	4413      	add	r3, r2
 8005778:	e7e0      	b.n	800573c <_printf_float+0x198>
 800577a:	6823      	ldr	r3, [r4, #0]
 800577c:	055a      	lsls	r2, r3, #21
 800577e:	d407      	bmi.n	8005790 <_printf_float+0x1ec>
 8005780:	6923      	ldr	r3, [r4, #16]
 8005782:	4642      	mov	r2, r8
 8005784:	4631      	mov	r1, r6
 8005786:	4628      	mov	r0, r5
 8005788:	47b8      	blx	r7
 800578a:	3001      	adds	r0, #1
 800578c:	d12b      	bne.n	80057e6 <_printf_float+0x242>
 800578e:	e764      	b.n	800565a <_printf_float+0xb6>
 8005790:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8005794:	f240 80dd 	bls.w	8005952 <_printf_float+0x3ae>
 8005798:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800579c:	2200      	movs	r2, #0
 800579e:	2300      	movs	r3, #0
 80057a0:	f7fb f902 	bl	80009a8 <__aeabi_dcmpeq>
 80057a4:	2800      	cmp	r0, #0
 80057a6:	d033      	beq.n	8005810 <_printf_float+0x26c>
 80057a8:	2301      	movs	r3, #1
 80057aa:	4631      	mov	r1, r6
 80057ac:	4628      	mov	r0, r5
 80057ae:	4a35      	ldr	r2, [pc, #212]	; (8005884 <_printf_float+0x2e0>)
 80057b0:	47b8      	blx	r7
 80057b2:	3001      	adds	r0, #1
 80057b4:	f43f af51 	beq.w	800565a <_printf_float+0xb6>
 80057b8:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80057bc:	429a      	cmp	r2, r3
 80057be:	db02      	blt.n	80057c6 <_printf_float+0x222>
 80057c0:	6823      	ldr	r3, [r4, #0]
 80057c2:	07d8      	lsls	r0, r3, #31
 80057c4:	d50f      	bpl.n	80057e6 <_printf_float+0x242>
 80057c6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80057ca:	4631      	mov	r1, r6
 80057cc:	4628      	mov	r0, r5
 80057ce:	47b8      	blx	r7
 80057d0:	3001      	adds	r0, #1
 80057d2:	f43f af42 	beq.w	800565a <_printf_float+0xb6>
 80057d6:	f04f 0800 	mov.w	r8, #0
 80057da:	f104 091a 	add.w	r9, r4, #26
 80057de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80057e0:	3b01      	subs	r3, #1
 80057e2:	4543      	cmp	r3, r8
 80057e4:	dc09      	bgt.n	80057fa <_printf_float+0x256>
 80057e6:	6823      	ldr	r3, [r4, #0]
 80057e8:	079b      	lsls	r3, r3, #30
 80057ea:	f100 8102 	bmi.w	80059f2 <_printf_float+0x44e>
 80057ee:	68e0      	ldr	r0, [r4, #12]
 80057f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80057f2:	4298      	cmp	r0, r3
 80057f4:	bfb8      	it	lt
 80057f6:	4618      	movlt	r0, r3
 80057f8:	e731      	b.n	800565e <_printf_float+0xba>
 80057fa:	2301      	movs	r3, #1
 80057fc:	464a      	mov	r2, r9
 80057fe:	4631      	mov	r1, r6
 8005800:	4628      	mov	r0, r5
 8005802:	47b8      	blx	r7
 8005804:	3001      	adds	r0, #1
 8005806:	f43f af28 	beq.w	800565a <_printf_float+0xb6>
 800580a:	f108 0801 	add.w	r8, r8, #1
 800580e:	e7e6      	b.n	80057de <_printf_float+0x23a>
 8005810:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005812:	2b00      	cmp	r3, #0
 8005814:	dc38      	bgt.n	8005888 <_printf_float+0x2e4>
 8005816:	2301      	movs	r3, #1
 8005818:	4631      	mov	r1, r6
 800581a:	4628      	mov	r0, r5
 800581c:	4a19      	ldr	r2, [pc, #100]	; (8005884 <_printf_float+0x2e0>)
 800581e:	47b8      	blx	r7
 8005820:	3001      	adds	r0, #1
 8005822:	f43f af1a 	beq.w	800565a <_printf_float+0xb6>
 8005826:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800582a:	4313      	orrs	r3, r2
 800582c:	d102      	bne.n	8005834 <_printf_float+0x290>
 800582e:	6823      	ldr	r3, [r4, #0]
 8005830:	07d9      	lsls	r1, r3, #31
 8005832:	d5d8      	bpl.n	80057e6 <_printf_float+0x242>
 8005834:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8005838:	4631      	mov	r1, r6
 800583a:	4628      	mov	r0, r5
 800583c:	47b8      	blx	r7
 800583e:	3001      	adds	r0, #1
 8005840:	f43f af0b 	beq.w	800565a <_printf_float+0xb6>
 8005844:	f04f 0900 	mov.w	r9, #0
 8005848:	f104 0a1a 	add.w	sl, r4, #26
 800584c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800584e:	425b      	negs	r3, r3
 8005850:	454b      	cmp	r3, r9
 8005852:	dc01      	bgt.n	8005858 <_printf_float+0x2b4>
 8005854:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005856:	e794      	b.n	8005782 <_printf_float+0x1de>
 8005858:	2301      	movs	r3, #1
 800585a:	4652      	mov	r2, sl
 800585c:	4631      	mov	r1, r6
 800585e:	4628      	mov	r0, r5
 8005860:	47b8      	blx	r7
 8005862:	3001      	adds	r0, #1
 8005864:	f43f aef9 	beq.w	800565a <_printf_float+0xb6>
 8005868:	f109 0901 	add.w	r9, r9, #1
 800586c:	e7ee      	b.n	800584c <_printf_float+0x2a8>
 800586e:	bf00      	nop
 8005870:	7fefffff 	.word	0x7fefffff
 8005874:	0800862c 	.word	0x0800862c
 8005878:	08008630 	.word	0x08008630
 800587c:	08008638 	.word	0x08008638
 8005880:	08008634 	.word	0x08008634
 8005884:	0800863c 	.word	0x0800863c
 8005888:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800588a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800588c:	429a      	cmp	r2, r3
 800588e:	bfa8      	it	ge
 8005890:	461a      	movge	r2, r3
 8005892:	2a00      	cmp	r2, #0
 8005894:	4691      	mov	r9, r2
 8005896:	dc37      	bgt.n	8005908 <_printf_float+0x364>
 8005898:	f04f 0b00 	mov.w	fp, #0
 800589c:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80058a0:	f104 021a 	add.w	r2, r4, #26
 80058a4:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 80058a8:	ebaa 0309 	sub.w	r3, sl, r9
 80058ac:	455b      	cmp	r3, fp
 80058ae:	dc33      	bgt.n	8005918 <_printf_float+0x374>
 80058b0:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80058b4:	429a      	cmp	r2, r3
 80058b6:	db3b      	blt.n	8005930 <_printf_float+0x38c>
 80058b8:	6823      	ldr	r3, [r4, #0]
 80058ba:	07da      	lsls	r2, r3, #31
 80058bc:	d438      	bmi.n	8005930 <_printf_float+0x38c>
 80058be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80058c0:	990d      	ldr	r1, [sp, #52]	; 0x34
 80058c2:	eba3 020a 	sub.w	r2, r3, sl
 80058c6:	eba3 0901 	sub.w	r9, r3, r1
 80058ca:	4591      	cmp	r9, r2
 80058cc:	bfa8      	it	ge
 80058ce:	4691      	movge	r9, r2
 80058d0:	f1b9 0f00 	cmp.w	r9, #0
 80058d4:	dc34      	bgt.n	8005940 <_printf_float+0x39c>
 80058d6:	f04f 0800 	mov.w	r8, #0
 80058da:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80058de:	f104 0a1a 	add.w	sl, r4, #26
 80058e2:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80058e6:	1a9b      	subs	r3, r3, r2
 80058e8:	eba3 0309 	sub.w	r3, r3, r9
 80058ec:	4543      	cmp	r3, r8
 80058ee:	f77f af7a 	ble.w	80057e6 <_printf_float+0x242>
 80058f2:	2301      	movs	r3, #1
 80058f4:	4652      	mov	r2, sl
 80058f6:	4631      	mov	r1, r6
 80058f8:	4628      	mov	r0, r5
 80058fa:	47b8      	blx	r7
 80058fc:	3001      	adds	r0, #1
 80058fe:	f43f aeac 	beq.w	800565a <_printf_float+0xb6>
 8005902:	f108 0801 	add.w	r8, r8, #1
 8005906:	e7ec      	b.n	80058e2 <_printf_float+0x33e>
 8005908:	4613      	mov	r3, r2
 800590a:	4631      	mov	r1, r6
 800590c:	4642      	mov	r2, r8
 800590e:	4628      	mov	r0, r5
 8005910:	47b8      	blx	r7
 8005912:	3001      	adds	r0, #1
 8005914:	d1c0      	bne.n	8005898 <_printf_float+0x2f4>
 8005916:	e6a0      	b.n	800565a <_printf_float+0xb6>
 8005918:	2301      	movs	r3, #1
 800591a:	4631      	mov	r1, r6
 800591c:	4628      	mov	r0, r5
 800591e:	920b      	str	r2, [sp, #44]	; 0x2c
 8005920:	47b8      	blx	r7
 8005922:	3001      	adds	r0, #1
 8005924:	f43f ae99 	beq.w	800565a <_printf_float+0xb6>
 8005928:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800592a:	f10b 0b01 	add.w	fp, fp, #1
 800592e:	e7b9      	b.n	80058a4 <_printf_float+0x300>
 8005930:	4631      	mov	r1, r6
 8005932:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8005936:	4628      	mov	r0, r5
 8005938:	47b8      	blx	r7
 800593a:	3001      	adds	r0, #1
 800593c:	d1bf      	bne.n	80058be <_printf_float+0x31a>
 800593e:	e68c      	b.n	800565a <_printf_float+0xb6>
 8005940:	464b      	mov	r3, r9
 8005942:	4631      	mov	r1, r6
 8005944:	4628      	mov	r0, r5
 8005946:	eb08 020a 	add.w	r2, r8, sl
 800594a:	47b8      	blx	r7
 800594c:	3001      	adds	r0, #1
 800594e:	d1c2      	bne.n	80058d6 <_printf_float+0x332>
 8005950:	e683      	b.n	800565a <_printf_float+0xb6>
 8005952:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005954:	2a01      	cmp	r2, #1
 8005956:	dc01      	bgt.n	800595c <_printf_float+0x3b8>
 8005958:	07db      	lsls	r3, r3, #31
 800595a:	d537      	bpl.n	80059cc <_printf_float+0x428>
 800595c:	2301      	movs	r3, #1
 800595e:	4642      	mov	r2, r8
 8005960:	4631      	mov	r1, r6
 8005962:	4628      	mov	r0, r5
 8005964:	47b8      	blx	r7
 8005966:	3001      	adds	r0, #1
 8005968:	f43f ae77 	beq.w	800565a <_printf_float+0xb6>
 800596c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8005970:	4631      	mov	r1, r6
 8005972:	4628      	mov	r0, r5
 8005974:	47b8      	blx	r7
 8005976:	3001      	adds	r0, #1
 8005978:	f43f ae6f 	beq.w	800565a <_printf_float+0xb6>
 800597c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8005980:	2200      	movs	r2, #0
 8005982:	2300      	movs	r3, #0
 8005984:	f7fb f810 	bl	80009a8 <__aeabi_dcmpeq>
 8005988:	b9d8      	cbnz	r0, 80059c2 <_printf_float+0x41e>
 800598a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800598c:	f108 0201 	add.w	r2, r8, #1
 8005990:	3b01      	subs	r3, #1
 8005992:	4631      	mov	r1, r6
 8005994:	4628      	mov	r0, r5
 8005996:	47b8      	blx	r7
 8005998:	3001      	adds	r0, #1
 800599a:	d10e      	bne.n	80059ba <_printf_float+0x416>
 800599c:	e65d      	b.n	800565a <_printf_float+0xb6>
 800599e:	2301      	movs	r3, #1
 80059a0:	464a      	mov	r2, r9
 80059a2:	4631      	mov	r1, r6
 80059a4:	4628      	mov	r0, r5
 80059a6:	47b8      	blx	r7
 80059a8:	3001      	adds	r0, #1
 80059aa:	f43f ae56 	beq.w	800565a <_printf_float+0xb6>
 80059ae:	f108 0801 	add.w	r8, r8, #1
 80059b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80059b4:	3b01      	subs	r3, #1
 80059b6:	4543      	cmp	r3, r8
 80059b8:	dcf1      	bgt.n	800599e <_printf_float+0x3fa>
 80059ba:	4653      	mov	r3, sl
 80059bc:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80059c0:	e6e0      	b.n	8005784 <_printf_float+0x1e0>
 80059c2:	f04f 0800 	mov.w	r8, #0
 80059c6:	f104 091a 	add.w	r9, r4, #26
 80059ca:	e7f2      	b.n	80059b2 <_printf_float+0x40e>
 80059cc:	2301      	movs	r3, #1
 80059ce:	4642      	mov	r2, r8
 80059d0:	e7df      	b.n	8005992 <_printf_float+0x3ee>
 80059d2:	2301      	movs	r3, #1
 80059d4:	464a      	mov	r2, r9
 80059d6:	4631      	mov	r1, r6
 80059d8:	4628      	mov	r0, r5
 80059da:	47b8      	blx	r7
 80059dc:	3001      	adds	r0, #1
 80059de:	f43f ae3c 	beq.w	800565a <_printf_float+0xb6>
 80059e2:	f108 0801 	add.w	r8, r8, #1
 80059e6:	68e3      	ldr	r3, [r4, #12]
 80059e8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80059ea:	1a5b      	subs	r3, r3, r1
 80059ec:	4543      	cmp	r3, r8
 80059ee:	dcf0      	bgt.n	80059d2 <_printf_float+0x42e>
 80059f0:	e6fd      	b.n	80057ee <_printf_float+0x24a>
 80059f2:	f04f 0800 	mov.w	r8, #0
 80059f6:	f104 0919 	add.w	r9, r4, #25
 80059fa:	e7f4      	b.n	80059e6 <_printf_float+0x442>

080059fc <_printf_common>:
 80059fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a00:	4616      	mov	r6, r2
 8005a02:	4699      	mov	r9, r3
 8005a04:	688a      	ldr	r2, [r1, #8]
 8005a06:	690b      	ldr	r3, [r1, #16]
 8005a08:	4607      	mov	r7, r0
 8005a0a:	4293      	cmp	r3, r2
 8005a0c:	bfb8      	it	lt
 8005a0e:	4613      	movlt	r3, r2
 8005a10:	6033      	str	r3, [r6, #0]
 8005a12:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8005a16:	460c      	mov	r4, r1
 8005a18:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005a1c:	b10a      	cbz	r2, 8005a22 <_printf_common+0x26>
 8005a1e:	3301      	adds	r3, #1
 8005a20:	6033      	str	r3, [r6, #0]
 8005a22:	6823      	ldr	r3, [r4, #0]
 8005a24:	0699      	lsls	r1, r3, #26
 8005a26:	bf42      	ittt	mi
 8005a28:	6833      	ldrmi	r3, [r6, #0]
 8005a2a:	3302      	addmi	r3, #2
 8005a2c:	6033      	strmi	r3, [r6, #0]
 8005a2e:	6825      	ldr	r5, [r4, #0]
 8005a30:	f015 0506 	ands.w	r5, r5, #6
 8005a34:	d106      	bne.n	8005a44 <_printf_common+0x48>
 8005a36:	f104 0a19 	add.w	sl, r4, #25
 8005a3a:	68e3      	ldr	r3, [r4, #12]
 8005a3c:	6832      	ldr	r2, [r6, #0]
 8005a3e:	1a9b      	subs	r3, r3, r2
 8005a40:	42ab      	cmp	r3, r5
 8005a42:	dc28      	bgt.n	8005a96 <_printf_common+0x9a>
 8005a44:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8005a48:	1e13      	subs	r3, r2, #0
 8005a4a:	6822      	ldr	r2, [r4, #0]
 8005a4c:	bf18      	it	ne
 8005a4e:	2301      	movne	r3, #1
 8005a50:	0692      	lsls	r2, r2, #26
 8005a52:	d42d      	bmi.n	8005ab0 <_printf_common+0xb4>
 8005a54:	4649      	mov	r1, r9
 8005a56:	4638      	mov	r0, r7
 8005a58:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005a5c:	47c0      	blx	r8
 8005a5e:	3001      	adds	r0, #1
 8005a60:	d020      	beq.n	8005aa4 <_printf_common+0xa8>
 8005a62:	6823      	ldr	r3, [r4, #0]
 8005a64:	68e5      	ldr	r5, [r4, #12]
 8005a66:	f003 0306 	and.w	r3, r3, #6
 8005a6a:	2b04      	cmp	r3, #4
 8005a6c:	bf18      	it	ne
 8005a6e:	2500      	movne	r5, #0
 8005a70:	6832      	ldr	r2, [r6, #0]
 8005a72:	f04f 0600 	mov.w	r6, #0
 8005a76:	68a3      	ldr	r3, [r4, #8]
 8005a78:	bf08      	it	eq
 8005a7a:	1aad      	subeq	r5, r5, r2
 8005a7c:	6922      	ldr	r2, [r4, #16]
 8005a7e:	bf08      	it	eq
 8005a80:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005a84:	4293      	cmp	r3, r2
 8005a86:	bfc4      	itt	gt
 8005a88:	1a9b      	subgt	r3, r3, r2
 8005a8a:	18ed      	addgt	r5, r5, r3
 8005a8c:	341a      	adds	r4, #26
 8005a8e:	42b5      	cmp	r5, r6
 8005a90:	d11a      	bne.n	8005ac8 <_printf_common+0xcc>
 8005a92:	2000      	movs	r0, #0
 8005a94:	e008      	b.n	8005aa8 <_printf_common+0xac>
 8005a96:	2301      	movs	r3, #1
 8005a98:	4652      	mov	r2, sl
 8005a9a:	4649      	mov	r1, r9
 8005a9c:	4638      	mov	r0, r7
 8005a9e:	47c0      	blx	r8
 8005aa0:	3001      	adds	r0, #1
 8005aa2:	d103      	bne.n	8005aac <_printf_common+0xb0>
 8005aa4:	f04f 30ff 	mov.w	r0, #4294967295
 8005aa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005aac:	3501      	adds	r5, #1
 8005aae:	e7c4      	b.n	8005a3a <_printf_common+0x3e>
 8005ab0:	2030      	movs	r0, #48	; 0x30
 8005ab2:	18e1      	adds	r1, r4, r3
 8005ab4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005ab8:	1c5a      	adds	r2, r3, #1
 8005aba:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005abe:	4422      	add	r2, r4
 8005ac0:	3302      	adds	r3, #2
 8005ac2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005ac6:	e7c5      	b.n	8005a54 <_printf_common+0x58>
 8005ac8:	2301      	movs	r3, #1
 8005aca:	4622      	mov	r2, r4
 8005acc:	4649      	mov	r1, r9
 8005ace:	4638      	mov	r0, r7
 8005ad0:	47c0      	blx	r8
 8005ad2:	3001      	adds	r0, #1
 8005ad4:	d0e6      	beq.n	8005aa4 <_printf_common+0xa8>
 8005ad6:	3601      	adds	r6, #1
 8005ad8:	e7d9      	b.n	8005a8e <_printf_common+0x92>
	...

08005adc <_printf_i>:
 8005adc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005ae0:	7e0f      	ldrb	r7, [r1, #24]
 8005ae2:	4691      	mov	r9, r2
 8005ae4:	2f78      	cmp	r7, #120	; 0x78
 8005ae6:	4680      	mov	r8, r0
 8005ae8:	460c      	mov	r4, r1
 8005aea:	469a      	mov	sl, r3
 8005aec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005aee:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8005af2:	d807      	bhi.n	8005b04 <_printf_i+0x28>
 8005af4:	2f62      	cmp	r7, #98	; 0x62
 8005af6:	d80a      	bhi.n	8005b0e <_printf_i+0x32>
 8005af8:	2f00      	cmp	r7, #0
 8005afa:	f000 80d9 	beq.w	8005cb0 <_printf_i+0x1d4>
 8005afe:	2f58      	cmp	r7, #88	; 0x58
 8005b00:	f000 80a4 	beq.w	8005c4c <_printf_i+0x170>
 8005b04:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005b08:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005b0c:	e03a      	b.n	8005b84 <_printf_i+0xa8>
 8005b0e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8005b12:	2b15      	cmp	r3, #21
 8005b14:	d8f6      	bhi.n	8005b04 <_printf_i+0x28>
 8005b16:	a101      	add	r1, pc, #4	; (adr r1, 8005b1c <_printf_i+0x40>)
 8005b18:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005b1c:	08005b75 	.word	0x08005b75
 8005b20:	08005b89 	.word	0x08005b89
 8005b24:	08005b05 	.word	0x08005b05
 8005b28:	08005b05 	.word	0x08005b05
 8005b2c:	08005b05 	.word	0x08005b05
 8005b30:	08005b05 	.word	0x08005b05
 8005b34:	08005b89 	.word	0x08005b89
 8005b38:	08005b05 	.word	0x08005b05
 8005b3c:	08005b05 	.word	0x08005b05
 8005b40:	08005b05 	.word	0x08005b05
 8005b44:	08005b05 	.word	0x08005b05
 8005b48:	08005c97 	.word	0x08005c97
 8005b4c:	08005bb9 	.word	0x08005bb9
 8005b50:	08005c79 	.word	0x08005c79
 8005b54:	08005b05 	.word	0x08005b05
 8005b58:	08005b05 	.word	0x08005b05
 8005b5c:	08005cb9 	.word	0x08005cb9
 8005b60:	08005b05 	.word	0x08005b05
 8005b64:	08005bb9 	.word	0x08005bb9
 8005b68:	08005b05 	.word	0x08005b05
 8005b6c:	08005b05 	.word	0x08005b05
 8005b70:	08005c81 	.word	0x08005c81
 8005b74:	682b      	ldr	r3, [r5, #0]
 8005b76:	1d1a      	adds	r2, r3, #4
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	602a      	str	r2, [r5, #0]
 8005b7c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005b80:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005b84:	2301      	movs	r3, #1
 8005b86:	e0a4      	b.n	8005cd2 <_printf_i+0x1f6>
 8005b88:	6820      	ldr	r0, [r4, #0]
 8005b8a:	6829      	ldr	r1, [r5, #0]
 8005b8c:	0606      	lsls	r6, r0, #24
 8005b8e:	f101 0304 	add.w	r3, r1, #4
 8005b92:	d50a      	bpl.n	8005baa <_printf_i+0xce>
 8005b94:	680e      	ldr	r6, [r1, #0]
 8005b96:	602b      	str	r3, [r5, #0]
 8005b98:	2e00      	cmp	r6, #0
 8005b9a:	da03      	bge.n	8005ba4 <_printf_i+0xc8>
 8005b9c:	232d      	movs	r3, #45	; 0x2d
 8005b9e:	4276      	negs	r6, r6
 8005ba0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005ba4:	230a      	movs	r3, #10
 8005ba6:	485e      	ldr	r0, [pc, #376]	; (8005d20 <_printf_i+0x244>)
 8005ba8:	e019      	b.n	8005bde <_printf_i+0x102>
 8005baa:	680e      	ldr	r6, [r1, #0]
 8005bac:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005bb0:	602b      	str	r3, [r5, #0]
 8005bb2:	bf18      	it	ne
 8005bb4:	b236      	sxthne	r6, r6
 8005bb6:	e7ef      	b.n	8005b98 <_printf_i+0xbc>
 8005bb8:	682b      	ldr	r3, [r5, #0]
 8005bba:	6820      	ldr	r0, [r4, #0]
 8005bbc:	1d19      	adds	r1, r3, #4
 8005bbe:	6029      	str	r1, [r5, #0]
 8005bc0:	0601      	lsls	r1, r0, #24
 8005bc2:	d501      	bpl.n	8005bc8 <_printf_i+0xec>
 8005bc4:	681e      	ldr	r6, [r3, #0]
 8005bc6:	e002      	b.n	8005bce <_printf_i+0xf2>
 8005bc8:	0646      	lsls	r6, r0, #25
 8005bca:	d5fb      	bpl.n	8005bc4 <_printf_i+0xe8>
 8005bcc:	881e      	ldrh	r6, [r3, #0]
 8005bce:	2f6f      	cmp	r7, #111	; 0x6f
 8005bd0:	bf0c      	ite	eq
 8005bd2:	2308      	moveq	r3, #8
 8005bd4:	230a      	movne	r3, #10
 8005bd6:	4852      	ldr	r0, [pc, #328]	; (8005d20 <_printf_i+0x244>)
 8005bd8:	2100      	movs	r1, #0
 8005bda:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8005bde:	6865      	ldr	r5, [r4, #4]
 8005be0:	2d00      	cmp	r5, #0
 8005be2:	bfa8      	it	ge
 8005be4:	6821      	ldrge	r1, [r4, #0]
 8005be6:	60a5      	str	r5, [r4, #8]
 8005be8:	bfa4      	itt	ge
 8005bea:	f021 0104 	bicge.w	r1, r1, #4
 8005bee:	6021      	strge	r1, [r4, #0]
 8005bf0:	b90e      	cbnz	r6, 8005bf6 <_printf_i+0x11a>
 8005bf2:	2d00      	cmp	r5, #0
 8005bf4:	d04d      	beq.n	8005c92 <_printf_i+0x1b6>
 8005bf6:	4615      	mov	r5, r2
 8005bf8:	fbb6 f1f3 	udiv	r1, r6, r3
 8005bfc:	fb03 6711 	mls	r7, r3, r1, r6
 8005c00:	5dc7      	ldrb	r7, [r0, r7]
 8005c02:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8005c06:	4637      	mov	r7, r6
 8005c08:	42bb      	cmp	r3, r7
 8005c0a:	460e      	mov	r6, r1
 8005c0c:	d9f4      	bls.n	8005bf8 <_printf_i+0x11c>
 8005c0e:	2b08      	cmp	r3, #8
 8005c10:	d10b      	bne.n	8005c2a <_printf_i+0x14e>
 8005c12:	6823      	ldr	r3, [r4, #0]
 8005c14:	07de      	lsls	r6, r3, #31
 8005c16:	d508      	bpl.n	8005c2a <_printf_i+0x14e>
 8005c18:	6923      	ldr	r3, [r4, #16]
 8005c1a:	6861      	ldr	r1, [r4, #4]
 8005c1c:	4299      	cmp	r1, r3
 8005c1e:	bfde      	ittt	le
 8005c20:	2330      	movle	r3, #48	; 0x30
 8005c22:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005c26:	f105 35ff 	addle.w	r5, r5, #4294967295
 8005c2a:	1b52      	subs	r2, r2, r5
 8005c2c:	6122      	str	r2, [r4, #16]
 8005c2e:	464b      	mov	r3, r9
 8005c30:	4621      	mov	r1, r4
 8005c32:	4640      	mov	r0, r8
 8005c34:	f8cd a000 	str.w	sl, [sp]
 8005c38:	aa03      	add	r2, sp, #12
 8005c3a:	f7ff fedf 	bl	80059fc <_printf_common>
 8005c3e:	3001      	adds	r0, #1
 8005c40:	d14c      	bne.n	8005cdc <_printf_i+0x200>
 8005c42:	f04f 30ff 	mov.w	r0, #4294967295
 8005c46:	b004      	add	sp, #16
 8005c48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c4c:	4834      	ldr	r0, [pc, #208]	; (8005d20 <_printf_i+0x244>)
 8005c4e:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8005c52:	6829      	ldr	r1, [r5, #0]
 8005c54:	6823      	ldr	r3, [r4, #0]
 8005c56:	f851 6b04 	ldr.w	r6, [r1], #4
 8005c5a:	6029      	str	r1, [r5, #0]
 8005c5c:	061d      	lsls	r5, r3, #24
 8005c5e:	d514      	bpl.n	8005c8a <_printf_i+0x1ae>
 8005c60:	07df      	lsls	r7, r3, #31
 8005c62:	bf44      	itt	mi
 8005c64:	f043 0320 	orrmi.w	r3, r3, #32
 8005c68:	6023      	strmi	r3, [r4, #0]
 8005c6a:	b91e      	cbnz	r6, 8005c74 <_printf_i+0x198>
 8005c6c:	6823      	ldr	r3, [r4, #0]
 8005c6e:	f023 0320 	bic.w	r3, r3, #32
 8005c72:	6023      	str	r3, [r4, #0]
 8005c74:	2310      	movs	r3, #16
 8005c76:	e7af      	b.n	8005bd8 <_printf_i+0xfc>
 8005c78:	6823      	ldr	r3, [r4, #0]
 8005c7a:	f043 0320 	orr.w	r3, r3, #32
 8005c7e:	6023      	str	r3, [r4, #0]
 8005c80:	2378      	movs	r3, #120	; 0x78
 8005c82:	4828      	ldr	r0, [pc, #160]	; (8005d24 <_printf_i+0x248>)
 8005c84:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8005c88:	e7e3      	b.n	8005c52 <_printf_i+0x176>
 8005c8a:	0659      	lsls	r1, r3, #25
 8005c8c:	bf48      	it	mi
 8005c8e:	b2b6      	uxthmi	r6, r6
 8005c90:	e7e6      	b.n	8005c60 <_printf_i+0x184>
 8005c92:	4615      	mov	r5, r2
 8005c94:	e7bb      	b.n	8005c0e <_printf_i+0x132>
 8005c96:	682b      	ldr	r3, [r5, #0]
 8005c98:	6826      	ldr	r6, [r4, #0]
 8005c9a:	1d18      	adds	r0, r3, #4
 8005c9c:	6961      	ldr	r1, [r4, #20]
 8005c9e:	6028      	str	r0, [r5, #0]
 8005ca0:	0635      	lsls	r5, r6, #24
 8005ca2:	681b      	ldr	r3, [r3, #0]
 8005ca4:	d501      	bpl.n	8005caa <_printf_i+0x1ce>
 8005ca6:	6019      	str	r1, [r3, #0]
 8005ca8:	e002      	b.n	8005cb0 <_printf_i+0x1d4>
 8005caa:	0670      	lsls	r0, r6, #25
 8005cac:	d5fb      	bpl.n	8005ca6 <_printf_i+0x1ca>
 8005cae:	8019      	strh	r1, [r3, #0]
 8005cb0:	2300      	movs	r3, #0
 8005cb2:	4615      	mov	r5, r2
 8005cb4:	6123      	str	r3, [r4, #16]
 8005cb6:	e7ba      	b.n	8005c2e <_printf_i+0x152>
 8005cb8:	682b      	ldr	r3, [r5, #0]
 8005cba:	2100      	movs	r1, #0
 8005cbc:	1d1a      	adds	r2, r3, #4
 8005cbe:	602a      	str	r2, [r5, #0]
 8005cc0:	681d      	ldr	r5, [r3, #0]
 8005cc2:	6862      	ldr	r2, [r4, #4]
 8005cc4:	4628      	mov	r0, r5
 8005cc6:	f001 f81b 	bl	8006d00 <memchr>
 8005cca:	b108      	cbz	r0, 8005cd0 <_printf_i+0x1f4>
 8005ccc:	1b40      	subs	r0, r0, r5
 8005cce:	6060      	str	r0, [r4, #4]
 8005cd0:	6863      	ldr	r3, [r4, #4]
 8005cd2:	6123      	str	r3, [r4, #16]
 8005cd4:	2300      	movs	r3, #0
 8005cd6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005cda:	e7a8      	b.n	8005c2e <_printf_i+0x152>
 8005cdc:	462a      	mov	r2, r5
 8005cde:	4649      	mov	r1, r9
 8005ce0:	4640      	mov	r0, r8
 8005ce2:	6923      	ldr	r3, [r4, #16]
 8005ce4:	47d0      	blx	sl
 8005ce6:	3001      	adds	r0, #1
 8005ce8:	d0ab      	beq.n	8005c42 <_printf_i+0x166>
 8005cea:	6823      	ldr	r3, [r4, #0]
 8005cec:	079b      	lsls	r3, r3, #30
 8005cee:	d413      	bmi.n	8005d18 <_printf_i+0x23c>
 8005cf0:	68e0      	ldr	r0, [r4, #12]
 8005cf2:	9b03      	ldr	r3, [sp, #12]
 8005cf4:	4298      	cmp	r0, r3
 8005cf6:	bfb8      	it	lt
 8005cf8:	4618      	movlt	r0, r3
 8005cfa:	e7a4      	b.n	8005c46 <_printf_i+0x16a>
 8005cfc:	2301      	movs	r3, #1
 8005cfe:	4632      	mov	r2, r6
 8005d00:	4649      	mov	r1, r9
 8005d02:	4640      	mov	r0, r8
 8005d04:	47d0      	blx	sl
 8005d06:	3001      	adds	r0, #1
 8005d08:	d09b      	beq.n	8005c42 <_printf_i+0x166>
 8005d0a:	3501      	adds	r5, #1
 8005d0c:	68e3      	ldr	r3, [r4, #12]
 8005d0e:	9903      	ldr	r1, [sp, #12]
 8005d10:	1a5b      	subs	r3, r3, r1
 8005d12:	42ab      	cmp	r3, r5
 8005d14:	dcf2      	bgt.n	8005cfc <_printf_i+0x220>
 8005d16:	e7eb      	b.n	8005cf0 <_printf_i+0x214>
 8005d18:	2500      	movs	r5, #0
 8005d1a:	f104 0619 	add.w	r6, r4, #25
 8005d1e:	e7f5      	b.n	8005d0c <_printf_i+0x230>
 8005d20:	0800863e 	.word	0x0800863e
 8005d24:	0800864f 	.word	0x0800864f

08005d28 <sniprintf>:
 8005d28:	b40c      	push	{r2, r3}
 8005d2a:	b530      	push	{r4, r5, lr}
 8005d2c:	4b17      	ldr	r3, [pc, #92]	; (8005d8c <sniprintf+0x64>)
 8005d2e:	1e0c      	subs	r4, r1, #0
 8005d30:	681d      	ldr	r5, [r3, #0]
 8005d32:	b09d      	sub	sp, #116	; 0x74
 8005d34:	da08      	bge.n	8005d48 <sniprintf+0x20>
 8005d36:	238b      	movs	r3, #139	; 0x8b
 8005d38:	f04f 30ff 	mov.w	r0, #4294967295
 8005d3c:	602b      	str	r3, [r5, #0]
 8005d3e:	b01d      	add	sp, #116	; 0x74
 8005d40:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005d44:	b002      	add	sp, #8
 8005d46:	4770      	bx	lr
 8005d48:	f44f 7302 	mov.w	r3, #520	; 0x208
 8005d4c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8005d50:	bf0c      	ite	eq
 8005d52:	4623      	moveq	r3, r4
 8005d54:	f104 33ff 	addne.w	r3, r4, #4294967295
 8005d58:	9304      	str	r3, [sp, #16]
 8005d5a:	9307      	str	r3, [sp, #28]
 8005d5c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005d60:	9002      	str	r0, [sp, #8]
 8005d62:	9006      	str	r0, [sp, #24]
 8005d64:	f8ad 3016 	strh.w	r3, [sp, #22]
 8005d68:	4628      	mov	r0, r5
 8005d6a:	ab21      	add	r3, sp, #132	; 0x84
 8005d6c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8005d6e:	a902      	add	r1, sp, #8
 8005d70:	9301      	str	r3, [sp, #4]
 8005d72:	f001 fcaf 	bl	80076d4 <_svfiprintf_r>
 8005d76:	1c43      	adds	r3, r0, #1
 8005d78:	bfbc      	itt	lt
 8005d7a:	238b      	movlt	r3, #139	; 0x8b
 8005d7c:	602b      	strlt	r3, [r5, #0]
 8005d7e:	2c00      	cmp	r4, #0
 8005d80:	d0dd      	beq.n	8005d3e <sniprintf+0x16>
 8005d82:	2200      	movs	r2, #0
 8005d84:	9b02      	ldr	r3, [sp, #8]
 8005d86:	701a      	strb	r2, [r3, #0]
 8005d88:	e7d9      	b.n	8005d3e <sniprintf+0x16>
 8005d8a:	bf00      	nop
 8005d8c:	20000014 	.word	0x20000014

08005d90 <siprintf>:
 8005d90:	b40e      	push	{r1, r2, r3}
 8005d92:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8005d96:	b500      	push	{lr}
 8005d98:	b09c      	sub	sp, #112	; 0x70
 8005d9a:	ab1d      	add	r3, sp, #116	; 0x74
 8005d9c:	9002      	str	r0, [sp, #8]
 8005d9e:	9006      	str	r0, [sp, #24]
 8005da0:	9107      	str	r1, [sp, #28]
 8005da2:	9104      	str	r1, [sp, #16]
 8005da4:	4808      	ldr	r0, [pc, #32]	; (8005dc8 <siprintf+0x38>)
 8005da6:	4909      	ldr	r1, [pc, #36]	; (8005dcc <siprintf+0x3c>)
 8005da8:	f853 2b04 	ldr.w	r2, [r3], #4
 8005dac:	9105      	str	r1, [sp, #20]
 8005dae:	6800      	ldr	r0, [r0, #0]
 8005db0:	a902      	add	r1, sp, #8
 8005db2:	9301      	str	r3, [sp, #4]
 8005db4:	f001 fc8e 	bl	80076d4 <_svfiprintf_r>
 8005db8:	2200      	movs	r2, #0
 8005dba:	9b02      	ldr	r3, [sp, #8]
 8005dbc:	701a      	strb	r2, [r3, #0]
 8005dbe:	b01c      	add	sp, #112	; 0x70
 8005dc0:	f85d eb04 	ldr.w	lr, [sp], #4
 8005dc4:	b003      	add	sp, #12
 8005dc6:	4770      	bx	lr
 8005dc8:	20000014 	.word	0x20000014
 8005dcc:	ffff0208 	.word	0xffff0208

08005dd0 <strtok>:
 8005dd0:	4b16      	ldr	r3, [pc, #88]	; (8005e2c <strtok+0x5c>)
 8005dd2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005dd6:	681f      	ldr	r7, [r3, #0]
 8005dd8:	4605      	mov	r5, r0
 8005dda:	6dbc      	ldr	r4, [r7, #88]	; 0x58
 8005ddc:	460e      	mov	r6, r1
 8005dde:	b9ec      	cbnz	r4, 8005e1c <strtok+0x4c>
 8005de0:	2050      	movs	r0, #80	; 0x50
 8005de2:	f000 ff85 	bl	8006cf0 <malloc>
 8005de6:	4602      	mov	r2, r0
 8005de8:	65b8      	str	r0, [r7, #88]	; 0x58
 8005dea:	b920      	cbnz	r0, 8005df6 <strtok+0x26>
 8005dec:	2157      	movs	r1, #87	; 0x57
 8005dee:	4b10      	ldr	r3, [pc, #64]	; (8005e30 <strtok+0x60>)
 8005df0:	4810      	ldr	r0, [pc, #64]	; (8005e34 <strtok+0x64>)
 8005df2:	f000 f8cf 	bl	8005f94 <__assert_func>
 8005df6:	e9c0 4400 	strd	r4, r4, [r0]
 8005dfa:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8005dfe:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8005e02:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8005e06:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 8005e0a:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 8005e0e:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8005e12:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8005e16:	6184      	str	r4, [r0, #24]
 8005e18:	7704      	strb	r4, [r0, #28]
 8005e1a:	6244      	str	r4, [r0, #36]	; 0x24
 8005e1c:	4631      	mov	r1, r6
 8005e1e:	4628      	mov	r0, r5
 8005e20:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8005e22:	2301      	movs	r3, #1
 8005e24:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005e28:	f000 b806 	b.w	8005e38 <__strtok_r>
 8005e2c:	20000014 	.word	0x20000014
 8005e30:	08008660 	.word	0x08008660
 8005e34:	08008677 	.word	0x08008677

08005e38 <__strtok_r>:
 8005e38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e3a:	b908      	cbnz	r0, 8005e40 <__strtok_r+0x8>
 8005e3c:	6810      	ldr	r0, [r2, #0]
 8005e3e:	b188      	cbz	r0, 8005e64 <__strtok_r+0x2c>
 8005e40:	4604      	mov	r4, r0
 8005e42:	460f      	mov	r7, r1
 8005e44:	4620      	mov	r0, r4
 8005e46:	f814 5b01 	ldrb.w	r5, [r4], #1
 8005e4a:	f817 6b01 	ldrb.w	r6, [r7], #1
 8005e4e:	b91e      	cbnz	r6, 8005e58 <__strtok_r+0x20>
 8005e50:	b965      	cbnz	r5, 8005e6c <__strtok_r+0x34>
 8005e52:	4628      	mov	r0, r5
 8005e54:	6015      	str	r5, [r2, #0]
 8005e56:	e005      	b.n	8005e64 <__strtok_r+0x2c>
 8005e58:	42b5      	cmp	r5, r6
 8005e5a:	d1f6      	bne.n	8005e4a <__strtok_r+0x12>
 8005e5c:	2b00      	cmp	r3, #0
 8005e5e:	d1f0      	bne.n	8005e42 <__strtok_r+0xa>
 8005e60:	6014      	str	r4, [r2, #0]
 8005e62:	7003      	strb	r3, [r0, #0]
 8005e64:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005e66:	461c      	mov	r4, r3
 8005e68:	e00c      	b.n	8005e84 <__strtok_r+0x4c>
 8005e6a:	b915      	cbnz	r5, 8005e72 <__strtok_r+0x3a>
 8005e6c:	460e      	mov	r6, r1
 8005e6e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005e72:	f816 5b01 	ldrb.w	r5, [r6], #1
 8005e76:	42ab      	cmp	r3, r5
 8005e78:	d1f7      	bne.n	8005e6a <__strtok_r+0x32>
 8005e7a:	2b00      	cmp	r3, #0
 8005e7c:	d0f3      	beq.n	8005e66 <__strtok_r+0x2e>
 8005e7e:	2300      	movs	r3, #0
 8005e80:	f804 3c01 	strb.w	r3, [r4, #-1]
 8005e84:	6014      	str	r4, [r2, #0]
 8005e86:	e7ed      	b.n	8005e64 <__strtok_r+0x2c>

08005e88 <_strtol_l.constprop.0>:
 8005e88:	2b01      	cmp	r3, #1
 8005e8a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e8e:	4680      	mov	r8, r0
 8005e90:	d001      	beq.n	8005e96 <_strtol_l.constprop.0+0xe>
 8005e92:	2b24      	cmp	r3, #36	; 0x24
 8005e94:	d906      	bls.n	8005ea4 <_strtol_l.constprop.0+0x1c>
 8005e96:	f7ff fab5 	bl	8005404 <__errno>
 8005e9a:	2316      	movs	r3, #22
 8005e9c:	6003      	str	r3, [r0, #0]
 8005e9e:	2000      	movs	r0, #0
 8005ea0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005ea4:	460d      	mov	r5, r1
 8005ea6:	4f35      	ldr	r7, [pc, #212]	; (8005f7c <_strtol_l.constprop.0+0xf4>)
 8005ea8:	4628      	mov	r0, r5
 8005eaa:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005eae:	5de6      	ldrb	r6, [r4, r7]
 8005eb0:	f016 0608 	ands.w	r6, r6, #8
 8005eb4:	d1f8      	bne.n	8005ea8 <_strtol_l.constprop.0+0x20>
 8005eb6:	2c2d      	cmp	r4, #45	; 0x2d
 8005eb8:	d12f      	bne.n	8005f1a <_strtol_l.constprop.0+0x92>
 8005eba:	2601      	movs	r6, #1
 8005ebc:	782c      	ldrb	r4, [r5, #0]
 8005ebe:	1c85      	adds	r5, r0, #2
 8005ec0:	2b00      	cmp	r3, #0
 8005ec2:	d057      	beq.n	8005f74 <_strtol_l.constprop.0+0xec>
 8005ec4:	2b10      	cmp	r3, #16
 8005ec6:	d109      	bne.n	8005edc <_strtol_l.constprop.0+0x54>
 8005ec8:	2c30      	cmp	r4, #48	; 0x30
 8005eca:	d107      	bne.n	8005edc <_strtol_l.constprop.0+0x54>
 8005ecc:	7828      	ldrb	r0, [r5, #0]
 8005ece:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8005ed2:	2858      	cmp	r0, #88	; 0x58
 8005ed4:	d149      	bne.n	8005f6a <_strtol_l.constprop.0+0xe2>
 8005ed6:	2310      	movs	r3, #16
 8005ed8:	786c      	ldrb	r4, [r5, #1]
 8005eda:	3502      	adds	r5, #2
 8005edc:	2700      	movs	r7, #0
 8005ede:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 8005ee2:	f10e 3eff 	add.w	lr, lr, #4294967295
 8005ee6:	fbbe f9f3 	udiv	r9, lr, r3
 8005eea:	4638      	mov	r0, r7
 8005eec:	fb03 ea19 	mls	sl, r3, r9, lr
 8005ef0:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8005ef4:	f1bc 0f09 	cmp.w	ip, #9
 8005ef8:	d814      	bhi.n	8005f24 <_strtol_l.constprop.0+0x9c>
 8005efa:	4664      	mov	r4, ip
 8005efc:	42a3      	cmp	r3, r4
 8005efe:	dd22      	ble.n	8005f46 <_strtol_l.constprop.0+0xbe>
 8005f00:	2f00      	cmp	r7, #0
 8005f02:	db1d      	blt.n	8005f40 <_strtol_l.constprop.0+0xb8>
 8005f04:	4581      	cmp	r9, r0
 8005f06:	d31b      	bcc.n	8005f40 <_strtol_l.constprop.0+0xb8>
 8005f08:	d101      	bne.n	8005f0e <_strtol_l.constprop.0+0x86>
 8005f0a:	45a2      	cmp	sl, r4
 8005f0c:	db18      	blt.n	8005f40 <_strtol_l.constprop.0+0xb8>
 8005f0e:	2701      	movs	r7, #1
 8005f10:	fb00 4003 	mla	r0, r0, r3, r4
 8005f14:	f815 4b01 	ldrb.w	r4, [r5], #1
 8005f18:	e7ea      	b.n	8005ef0 <_strtol_l.constprop.0+0x68>
 8005f1a:	2c2b      	cmp	r4, #43	; 0x2b
 8005f1c:	bf04      	itt	eq
 8005f1e:	782c      	ldrbeq	r4, [r5, #0]
 8005f20:	1c85      	addeq	r5, r0, #2
 8005f22:	e7cd      	b.n	8005ec0 <_strtol_l.constprop.0+0x38>
 8005f24:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8005f28:	f1bc 0f19 	cmp.w	ip, #25
 8005f2c:	d801      	bhi.n	8005f32 <_strtol_l.constprop.0+0xaa>
 8005f2e:	3c37      	subs	r4, #55	; 0x37
 8005f30:	e7e4      	b.n	8005efc <_strtol_l.constprop.0+0x74>
 8005f32:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 8005f36:	f1bc 0f19 	cmp.w	ip, #25
 8005f3a:	d804      	bhi.n	8005f46 <_strtol_l.constprop.0+0xbe>
 8005f3c:	3c57      	subs	r4, #87	; 0x57
 8005f3e:	e7dd      	b.n	8005efc <_strtol_l.constprop.0+0x74>
 8005f40:	f04f 37ff 	mov.w	r7, #4294967295
 8005f44:	e7e6      	b.n	8005f14 <_strtol_l.constprop.0+0x8c>
 8005f46:	2f00      	cmp	r7, #0
 8005f48:	da07      	bge.n	8005f5a <_strtol_l.constprop.0+0xd2>
 8005f4a:	2322      	movs	r3, #34	; 0x22
 8005f4c:	4670      	mov	r0, lr
 8005f4e:	f8c8 3000 	str.w	r3, [r8]
 8005f52:	2a00      	cmp	r2, #0
 8005f54:	d0a4      	beq.n	8005ea0 <_strtol_l.constprop.0+0x18>
 8005f56:	1e69      	subs	r1, r5, #1
 8005f58:	e005      	b.n	8005f66 <_strtol_l.constprop.0+0xde>
 8005f5a:	b106      	cbz	r6, 8005f5e <_strtol_l.constprop.0+0xd6>
 8005f5c:	4240      	negs	r0, r0
 8005f5e:	2a00      	cmp	r2, #0
 8005f60:	d09e      	beq.n	8005ea0 <_strtol_l.constprop.0+0x18>
 8005f62:	2f00      	cmp	r7, #0
 8005f64:	d1f7      	bne.n	8005f56 <_strtol_l.constprop.0+0xce>
 8005f66:	6011      	str	r1, [r2, #0]
 8005f68:	e79a      	b.n	8005ea0 <_strtol_l.constprop.0+0x18>
 8005f6a:	2430      	movs	r4, #48	; 0x30
 8005f6c:	2b00      	cmp	r3, #0
 8005f6e:	d1b5      	bne.n	8005edc <_strtol_l.constprop.0+0x54>
 8005f70:	2308      	movs	r3, #8
 8005f72:	e7b3      	b.n	8005edc <_strtol_l.constprop.0+0x54>
 8005f74:	2c30      	cmp	r4, #48	; 0x30
 8005f76:	d0a9      	beq.n	8005ecc <_strtol_l.constprop.0+0x44>
 8005f78:	230a      	movs	r3, #10
 8005f7a:	e7af      	b.n	8005edc <_strtol_l.constprop.0+0x54>
 8005f7c:	08008711 	.word	0x08008711

08005f80 <strtol>:
 8005f80:	4613      	mov	r3, r2
 8005f82:	460a      	mov	r2, r1
 8005f84:	4601      	mov	r1, r0
 8005f86:	4802      	ldr	r0, [pc, #8]	; (8005f90 <strtol+0x10>)
 8005f88:	6800      	ldr	r0, [r0, #0]
 8005f8a:	f7ff bf7d 	b.w	8005e88 <_strtol_l.constprop.0>
 8005f8e:	bf00      	nop
 8005f90:	20000014 	.word	0x20000014

08005f94 <__assert_func>:
 8005f94:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005f96:	4614      	mov	r4, r2
 8005f98:	461a      	mov	r2, r3
 8005f9a:	4b09      	ldr	r3, [pc, #36]	; (8005fc0 <__assert_func+0x2c>)
 8005f9c:	4605      	mov	r5, r0
 8005f9e:	681b      	ldr	r3, [r3, #0]
 8005fa0:	68d8      	ldr	r0, [r3, #12]
 8005fa2:	b14c      	cbz	r4, 8005fb8 <__assert_func+0x24>
 8005fa4:	4b07      	ldr	r3, [pc, #28]	; (8005fc4 <__assert_func+0x30>)
 8005fa6:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005faa:	9100      	str	r1, [sp, #0]
 8005fac:	462b      	mov	r3, r5
 8005fae:	4906      	ldr	r1, [pc, #24]	; (8005fc8 <__assert_func+0x34>)
 8005fb0:	f000 fe88 	bl	8006cc4 <fiprintf>
 8005fb4:	f001 feb6 	bl	8007d24 <abort>
 8005fb8:	4b04      	ldr	r3, [pc, #16]	; (8005fcc <__assert_func+0x38>)
 8005fba:	461c      	mov	r4, r3
 8005fbc:	e7f3      	b.n	8005fa6 <__assert_func+0x12>
 8005fbe:	bf00      	nop
 8005fc0:	20000014 	.word	0x20000014
 8005fc4:	080086d4 	.word	0x080086d4
 8005fc8:	080086e1 	.word	0x080086e1
 8005fcc:	0800870f 	.word	0x0800870f

08005fd0 <quorem>:
 8005fd0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005fd4:	6903      	ldr	r3, [r0, #16]
 8005fd6:	690c      	ldr	r4, [r1, #16]
 8005fd8:	4607      	mov	r7, r0
 8005fda:	42a3      	cmp	r3, r4
 8005fdc:	f2c0 8082 	blt.w	80060e4 <quorem+0x114>
 8005fe0:	3c01      	subs	r4, #1
 8005fe2:	f100 0514 	add.w	r5, r0, #20
 8005fe6:	f101 0814 	add.w	r8, r1, #20
 8005fea:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8005fee:	9301      	str	r3, [sp, #4]
 8005ff0:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8005ff4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8005ff8:	3301      	adds	r3, #1
 8005ffa:	429a      	cmp	r2, r3
 8005ffc:	fbb2 f6f3 	udiv	r6, r2, r3
 8006000:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8006004:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8006008:	d331      	bcc.n	800606e <quorem+0x9e>
 800600a:	f04f 0e00 	mov.w	lr, #0
 800600e:	4640      	mov	r0, r8
 8006010:	46ac      	mov	ip, r5
 8006012:	46f2      	mov	sl, lr
 8006014:	f850 2b04 	ldr.w	r2, [r0], #4
 8006018:	b293      	uxth	r3, r2
 800601a:	fb06 e303 	mla	r3, r6, r3, lr
 800601e:	0c12      	lsrs	r2, r2, #16
 8006020:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8006024:	b29b      	uxth	r3, r3
 8006026:	fb06 e202 	mla	r2, r6, r2, lr
 800602a:	ebaa 0303 	sub.w	r3, sl, r3
 800602e:	f8dc a000 	ldr.w	sl, [ip]
 8006032:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8006036:	fa1f fa8a 	uxth.w	sl, sl
 800603a:	4453      	add	r3, sl
 800603c:	f8dc a000 	ldr.w	sl, [ip]
 8006040:	b292      	uxth	r2, r2
 8006042:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8006046:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800604a:	b29b      	uxth	r3, r3
 800604c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006050:	4581      	cmp	r9, r0
 8006052:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8006056:	f84c 3b04 	str.w	r3, [ip], #4
 800605a:	d2db      	bcs.n	8006014 <quorem+0x44>
 800605c:	f855 300b 	ldr.w	r3, [r5, fp]
 8006060:	b92b      	cbnz	r3, 800606e <quorem+0x9e>
 8006062:	9b01      	ldr	r3, [sp, #4]
 8006064:	3b04      	subs	r3, #4
 8006066:	429d      	cmp	r5, r3
 8006068:	461a      	mov	r2, r3
 800606a:	d32f      	bcc.n	80060cc <quorem+0xfc>
 800606c:	613c      	str	r4, [r7, #16]
 800606e:	4638      	mov	r0, r7
 8006070:	f001 f8e0 	bl	8007234 <__mcmp>
 8006074:	2800      	cmp	r0, #0
 8006076:	db25      	blt.n	80060c4 <quorem+0xf4>
 8006078:	4628      	mov	r0, r5
 800607a:	f04f 0c00 	mov.w	ip, #0
 800607e:	3601      	adds	r6, #1
 8006080:	f858 1b04 	ldr.w	r1, [r8], #4
 8006084:	f8d0 e000 	ldr.w	lr, [r0]
 8006088:	b28b      	uxth	r3, r1
 800608a:	ebac 0303 	sub.w	r3, ip, r3
 800608e:	fa1f f28e 	uxth.w	r2, lr
 8006092:	4413      	add	r3, r2
 8006094:	0c0a      	lsrs	r2, r1, #16
 8006096:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 800609a:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800609e:	b29b      	uxth	r3, r3
 80060a0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80060a4:	45c1      	cmp	r9, r8
 80060a6:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80060aa:	f840 3b04 	str.w	r3, [r0], #4
 80060ae:	d2e7      	bcs.n	8006080 <quorem+0xb0>
 80060b0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80060b4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80060b8:	b922      	cbnz	r2, 80060c4 <quorem+0xf4>
 80060ba:	3b04      	subs	r3, #4
 80060bc:	429d      	cmp	r5, r3
 80060be:	461a      	mov	r2, r3
 80060c0:	d30a      	bcc.n	80060d8 <quorem+0x108>
 80060c2:	613c      	str	r4, [r7, #16]
 80060c4:	4630      	mov	r0, r6
 80060c6:	b003      	add	sp, #12
 80060c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80060cc:	6812      	ldr	r2, [r2, #0]
 80060ce:	3b04      	subs	r3, #4
 80060d0:	2a00      	cmp	r2, #0
 80060d2:	d1cb      	bne.n	800606c <quorem+0x9c>
 80060d4:	3c01      	subs	r4, #1
 80060d6:	e7c6      	b.n	8006066 <quorem+0x96>
 80060d8:	6812      	ldr	r2, [r2, #0]
 80060da:	3b04      	subs	r3, #4
 80060dc:	2a00      	cmp	r2, #0
 80060de:	d1f0      	bne.n	80060c2 <quorem+0xf2>
 80060e0:	3c01      	subs	r4, #1
 80060e2:	e7eb      	b.n	80060bc <quorem+0xec>
 80060e4:	2000      	movs	r0, #0
 80060e6:	e7ee      	b.n	80060c6 <quorem+0xf6>

080060e8 <_dtoa_r>:
 80060e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060ec:	4616      	mov	r6, r2
 80060ee:	461f      	mov	r7, r3
 80060f0:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80060f2:	b099      	sub	sp, #100	; 0x64
 80060f4:	4605      	mov	r5, r0
 80060f6:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80060fa:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 80060fe:	b974      	cbnz	r4, 800611e <_dtoa_r+0x36>
 8006100:	2010      	movs	r0, #16
 8006102:	f000 fdf5 	bl	8006cf0 <malloc>
 8006106:	4602      	mov	r2, r0
 8006108:	6268      	str	r0, [r5, #36]	; 0x24
 800610a:	b920      	cbnz	r0, 8006116 <_dtoa_r+0x2e>
 800610c:	21ea      	movs	r1, #234	; 0xea
 800610e:	4ba8      	ldr	r3, [pc, #672]	; (80063b0 <_dtoa_r+0x2c8>)
 8006110:	48a8      	ldr	r0, [pc, #672]	; (80063b4 <_dtoa_r+0x2cc>)
 8006112:	f7ff ff3f 	bl	8005f94 <__assert_func>
 8006116:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800611a:	6004      	str	r4, [r0, #0]
 800611c:	60c4      	str	r4, [r0, #12]
 800611e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006120:	6819      	ldr	r1, [r3, #0]
 8006122:	b151      	cbz	r1, 800613a <_dtoa_r+0x52>
 8006124:	685a      	ldr	r2, [r3, #4]
 8006126:	2301      	movs	r3, #1
 8006128:	4093      	lsls	r3, r2
 800612a:	604a      	str	r2, [r1, #4]
 800612c:	608b      	str	r3, [r1, #8]
 800612e:	4628      	mov	r0, r5
 8006130:	f000 fe42 	bl	8006db8 <_Bfree>
 8006134:	2200      	movs	r2, #0
 8006136:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006138:	601a      	str	r2, [r3, #0]
 800613a:	1e3b      	subs	r3, r7, #0
 800613c:	bfaf      	iteee	ge
 800613e:	2300      	movge	r3, #0
 8006140:	2201      	movlt	r2, #1
 8006142:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8006146:	9305      	strlt	r3, [sp, #20]
 8006148:	bfa8      	it	ge
 800614a:	f8c8 3000 	strge.w	r3, [r8]
 800614e:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8006152:	4b99      	ldr	r3, [pc, #612]	; (80063b8 <_dtoa_r+0x2d0>)
 8006154:	bfb8      	it	lt
 8006156:	f8c8 2000 	strlt.w	r2, [r8]
 800615a:	ea33 0309 	bics.w	r3, r3, r9
 800615e:	d119      	bne.n	8006194 <_dtoa_r+0xac>
 8006160:	f242 730f 	movw	r3, #9999	; 0x270f
 8006164:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8006166:	6013      	str	r3, [r2, #0]
 8006168:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800616c:	4333      	orrs	r3, r6
 800616e:	f000 857f 	beq.w	8006c70 <_dtoa_r+0xb88>
 8006172:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006174:	b953      	cbnz	r3, 800618c <_dtoa_r+0xa4>
 8006176:	4b91      	ldr	r3, [pc, #580]	; (80063bc <_dtoa_r+0x2d4>)
 8006178:	e022      	b.n	80061c0 <_dtoa_r+0xd8>
 800617a:	4b91      	ldr	r3, [pc, #580]	; (80063c0 <_dtoa_r+0x2d8>)
 800617c:	9303      	str	r3, [sp, #12]
 800617e:	3308      	adds	r3, #8
 8006180:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8006182:	6013      	str	r3, [r2, #0]
 8006184:	9803      	ldr	r0, [sp, #12]
 8006186:	b019      	add	sp, #100	; 0x64
 8006188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800618c:	4b8b      	ldr	r3, [pc, #556]	; (80063bc <_dtoa_r+0x2d4>)
 800618e:	9303      	str	r3, [sp, #12]
 8006190:	3303      	adds	r3, #3
 8006192:	e7f5      	b.n	8006180 <_dtoa_r+0x98>
 8006194:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8006198:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 800619c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80061a0:	2200      	movs	r2, #0
 80061a2:	2300      	movs	r3, #0
 80061a4:	f7fa fc00 	bl	80009a8 <__aeabi_dcmpeq>
 80061a8:	4680      	mov	r8, r0
 80061aa:	b158      	cbz	r0, 80061c4 <_dtoa_r+0xdc>
 80061ac:	2301      	movs	r3, #1
 80061ae:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80061b0:	6013      	str	r3, [r2, #0]
 80061b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80061b4:	2b00      	cmp	r3, #0
 80061b6:	f000 8558 	beq.w	8006c6a <_dtoa_r+0xb82>
 80061ba:	4882      	ldr	r0, [pc, #520]	; (80063c4 <_dtoa_r+0x2dc>)
 80061bc:	6018      	str	r0, [r3, #0]
 80061be:	1e43      	subs	r3, r0, #1
 80061c0:	9303      	str	r3, [sp, #12]
 80061c2:	e7df      	b.n	8006184 <_dtoa_r+0x9c>
 80061c4:	ab16      	add	r3, sp, #88	; 0x58
 80061c6:	9301      	str	r3, [sp, #4]
 80061c8:	ab17      	add	r3, sp, #92	; 0x5c
 80061ca:	9300      	str	r3, [sp, #0]
 80061cc:	4628      	mov	r0, r5
 80061ce:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80061d2:	f001 f8d7 	bl	8007384 <__d2b>
 80061d6:	f3c9 540a 	ubfx	r4, r9, #20, #11
 80061da:	4683      	mov	fp, r0
 80061dc:	2c00      	cmp	r4, #0
 80061de:	d07f      	beq.n	80062e0 <_dtoa_r+0x1f8>
 80061e0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80061e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80061e6:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 80061ea:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80061ee:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 80061f2:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 80061f6:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 80061fa:	2200      	movs	r2, #0
 80061fc:	4b72      	ldr	r3, [pc, #456]	; (80063c8 <_dtoa_r+0x2e0>)
 80061fe:	f7f9 ffb3 	bl	8000168 <__aeabi_dsub>
 8006202:	a365      	add	r3, pc, #404	; (adr r3, 8006398 <_dtoa_r+0x2b0>)
 8006204:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006208:	f7fa f966 	bl	80004d8 <__aeabi_dmul>
 800620c:	a364      	add	r3, pc, #400	; (adr r3, 80063a0 <_dtoa_r+0x2b8>)
 800620e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006212:	f7f9 ffab 	bl	800016c <__adddf3>
 8006216:	4606      	mov	r6, r0
 8006218:	4620      	mov	r0, r4
 800621a:	460f      	mov	r7, r1
 800621c:	f7fa f8f2 	bl	8000404 <__aeabi_i2d>
 8006220:	a361      	add	r3, pc, #388	; (adr r3, 80063a8 <_dtoa_r+0x2c0>)
 8006222:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006226:	f7fa f957 	bl	80004d8 <__aeabi_dmul>
 800622a:	4602      	mov	r2, r0
 800622c:	460b      	mov	r3, r1
 800622e:	4630      	mov	r0, r6
 8006230:	4639      	mov	r1, r7
 8006232:	f7f9 ff9b 	bl	800016c <__adddf3>
 8006236:	4606      	mov	r6, r0
 8006238:	460f      	mov	r7, r1
 800623a:	f7fa fbfd 	bl	8000a38 <__aeabi_d2iz>
 800623e:	2200      	movs	r2, #0
 8006240:	4682      	mov	sl, r0
 8006242:	2300      	movs	r3, #0
 8006244:	4630      	mov	r0, r6
 8006246:	4639      	mov	r1, r7
 8006248:	f7fa fbb8 	bl	80009bc <__aeabi_dcmplt>
 800624c:	b148      	cbz	r0, 8006262 <_dtoa_r+0x17a>
 800624e:	4650      	mov	r0, sl
 8006250:	f7fa f8d8 	bl	8000404 <__aeabi_i2d>
 8006254:	4632      	mov	r2, r6
 8006256:	463b      	mov	r3, r7
 8006258:	f7fa fba6 	bl	80009a8 <__aeabi_dcmpeq>
 800625c:	b908      	cbnz	r0, 8006262 <_dtoa_r+0x17a>
 800625e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8006262:	f1ba 0f16 	cmp.w	sl, #22
 8006266:	d858      	bhi.n	800631a <_dtoa_r+0x232>
 8006268:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800626c:	4b57      	ldr	r3, [pc, #348]	; (80063cc <_dtoa_r+0x2e4>)
 800626e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8006272:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006276:	f7fa fba1 	bl	80009bc <__aeabi_dcmplt>
 800627a:	2800      	cmp	r0, #0
 800627c:	d04f      	beq.n	800631e <_dtoa_r+0x236>
 800627e:	2300      	movs	r3, #0
 8006280:	f10a 3aff 	add.w	sl, sl, #4294967295
 8006284:	930f      	str	r3, [sp, #60]	; 0x3c
 8006286:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006288:	1b1c      	subs	r4, r3, r4
 800628a:	1e63      	subs	r3, r4, #1
 800628c:	9309      	str	r3, [sp, #36]	; 0x24
 800628e:	bf49      	itett	mi
 8006290:	f1c4 0301 	rsbmi	r3, r4, #1
 8006294:	2300      	movpl	r3, #0
 8006296:	9306      	strmi	r3, [sp, #24]
 8006298:	2300      	movmi	r3, #0
 800629a:	bf54      	ite	pl
 800629c:	9306      	strpl	r3, [sp, #24]
 800629e:	9309      	strmi	r3, [sp, #36]	; 0x24
 80062a0:	f1ba 0f00 	cmp.w	sl, #0
 80062a4:	db3d      	blt.n	8006322 <_dtoa_r+0x23a>
 80062a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80062a8:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 80062ac:	4453      	add	r3, sl
 80062ae:	9309      	str	r3, [sp, #36]	; 0x24
 80062b0:	2300      	movs	r3, #0
 80062b2:	930a      	str	r3, [sp, #40]	; 0x28
 80062b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80062b6:	2b09      	cmp	r3, #9
 80062b8:	f200 808c 	bhi.w	80063d4 <_dtoa_r+0x2ec>
 80062bc:	2b05      	cmp	r3, #5
 80062be:	bfc4      	itt	gt
 80062c0:	3b04      	subgt	r3, #4
 80062c2:	9322      	strgt	r3, [sp, #136]	; 0x88
 80062c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80062c6:	bfc8      	it	gt
 80062c8:	2400      	movgt	r4, #0
 80062ca:	f1a3 0302 	sub.w	r3, r3, #2
 80062ce:	bfd8      	it	le
 80062d0:	2401      	movle	r4, #1
 80062d2:	2b03      	cmp	r3, #3
 80062d4:	f200 808a 	bhi.w	80063ec <_dtoa_r+0x304>
 80062d8:	e8df f003 	tbb	[pc, r3]
 80062dc:	5b4d4f2d 	.word	0x5b4d4f2d
 80062e0:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 80062e4:	441c      	add	r4, r3
 80062e6:	f204 4332 	addw	r3, r4, #1074	; 0x432
 80062ea:	2b20      	cmp	r3, #32
 80062ec:	bfc3      	ittte	gt
 80062ee:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 80062f2:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 80062f6:	fa09 f303 	lslgt.w	r3, r9, r3
 80062fa:	f1c3 0320 	rsble	r3, r3, #32
 80062fe:	bfc6      	itte	gt
 8006300:	fa26 f000 	lsrgt.w	r0, r6, r0
 8006304:	4318      	orrgt	r0, r3
 8006306:	fa06 f003 	lslle.w	r0, r6, r3
 800630a:	f7fa f86b 	bl	80003e4 <__aeabi_ui2d>
 800630e:	2301      	movs	r3, #1
 8006310:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8006314:	3c01      	subs	r4, #1
 8006316:	9313      	str	r3, [sp, #76]	; 0x4c
 8006318:	e76f      	b.n	80061fa <_dtoa_r+0x112>
 800631a:	2301      	movs	r3, #1
 800631c:	e7b2      	b.n	8006284 <_dtoa_r+0x19c>
 800631e:	900f      	str	r0, [sp, #60]	; 0x3c
 8006320:	e7b1      	b.n	8006286 <_dtoa_r+0x19e>
 8006322:	9b06      	ldr	r3, [sp, #24]
 8006324:	eba3 030a 	sub.w	r3, r3, sl
 8006328:	9306      	str	r3, [sp, #24]
 800632a:	f1ca 0300 	rsb	r3, sl, #0
 800632e:	930a      	str	r3, [sp, #40]	; 0x28
 8006330:	2300      	movs	r3, #0
 8006332:	930e      	str	r3, [sp, #56]	; 0x38
 8006334:	e7be      	b.n	80062b4 <_dtoa_r+0x1cc>
 8006336:	2300      	movs	r3, #0
 8006338:	930b      	str	r3, [sp, #44]	; 0x2c
 800633a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800633c:	2b00      	cmp	r3, #0
 800633e:	dc58      	bgt.n	80063f2 <_dtoa_r+0x30a>
 8006340:	f04f 0901 	mov.w	r9, #1
 8006344:	464b      	mov	r3, r9
 8006346:	f8cd 9020 	str.w	r9, [sp, #32]
 800634a:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 800634e:	2200      	movs	r2, #0
 8006350:	6a68      	ldr	r0, [r5, #36]	; 0x24
 8006352:	6042      	str	r2, [r0, #4]
 8006354:	2204      	movs	r2, #4
 8006356:	f102 0614 	add.w	r6, r2, #20
 800635a:	429e      	cmp	r6, r3
 800635c:	6841      	ldr	r1, [r0, #4]
 800635e:	d94e      	bls.n	80063fe <_dtoa_r+0x316>
 8006360:	4628      	mov	r0, r5
 8006362:	f000 fce9 	bl	8006d38 <_Balloc>
 8006366:	9003      	str	r0, [sp, #12]
 8006368:	2800      	cmp	r0, #0
 800636a:	d14c      	bne.n	8006406 <_dtoa_r+0x31e>
 800636c:	4602      	mov	r2, r0
 800636e:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8006372:	4b17      	ldr	r3, [pc, #92]	; (80063d0 <_dtoa_r+0x2e8>)
 8006374:	e6cc      	b.n	8006110 <_dtoa_r+0x28>
 8006376:	2301      	movs	r3, #1
 8006378:	e7de      	b.n	8006338 <_dtoa_r+0x250>
 800637a:	2300      	movs	r3, #0
 800637c:	930b      	str	r3, [sp, #44]	; 0x2c
 800637e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006380:	eb0a 0903 	add.w	r9, sl, r3
 8006384:	f109 0301 	add.w	r3, r9, #1
 8006388:	2b01      	cmp	r3, #1
 800638a:	9308      	str	r3, [sp, #32]
 800638c:	bfb8      	it	lt
 800638e:	2301      	movlt	r3, #1
 8006390:	e7dd      	b.n	800634e <_dtoa_r+0x266>
 8006392:	2301      	movs	r3, #1
 8006394:	e7f2      	b.n	800637c <_dtoa_r+0x294>
 8006396:	bf00      	nop
 8006398:	636f4361 	.word	0x636f4361
 800639c:	3fd287a7 	.word	0x3fd287a7
 80063a0:	8b60c8b3 	.word	0x8b60c8b3
 80063a4:	3fc68a28 	.word	0x3fc68a28
 80063a8:	509f79fb 	.word	0x509f79fb
 80063ac:	3fd34413 	.word	0x3fd34413
 80063b0:	08008660 	.word	0x08008660
 80063b4:	0800881e 	.word	0x0800881e
 80063b8:	7ff00000 	.word	0x7ff00000
 80063bc:	0800881a 	.word	0x0800881a
 80063c0:	08008811 	.word	0x08008811
 80063c4:	0800863d 	.word	0x0800863d
 80063c8:	3ff80000 	.word	0x3ff80000
 80063cc:	08008910 	.word	0x08008910
 80063d0:	08008879 	.word	0x08008879
 80063d4:	2401      	movs	r4, #1
 80063d6:	2300      	movs	r3, #0
 80063d8:	940b      	str	r4, [sp, #44]	; 0x2c
 80063da:	9322      	str	r3, [sp, #136]	; 0x88
 80063dc:	f04f 39ff 	mov.w	r9, #4294967295
 80063e0:	2200      	movs	r2, #0
 80063e2:	2312      	movs	r3, #18
 80063e4:	f8cd 9020 	str.w	r9, [sp, #32]
 80063e8:	9223      	str	r2, [sp, #140]	; 0x8c
 80063ea:	e7b0      	b.n	800634e <_dtoa_r+0x266>
 80063ec:	2301      	movs	r3, #1
 80063ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80063f0:	e7f4      	b.n	80063dc <_dtoa_r+0x2f4>
 80063f2:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 80063f6:	464b      	mov	r3, r9
 80063f8:	f8cd 9020 	str.w	r9, [sp, #32]
 80063fc:	e7a7      	b.n	800634e <_dtoa_r+0x266>
 80063fe:	3101      	adds	r1, #1
 8006400:	6041      	str	r1, [r0, #4]
 8006402:	0052      	lsls	r2, r2, #1
 8006404:	e7a7      	b.n	8006356 <_dtoa_r+0x26e>
 8006406:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006408:	9a03      	ldr	r2, [sp, #12]
 800640a:	601a      	str	r2, [r3, #0]
 800640c:	9b08      	ldr	r3, [sp, #32]
 800640e:	2b0e      	cmp	r3, #14
 8006410:	f200 80a8 	bhi.w	8006564 <_dtoa_r+0x47c>
 8006414:	2c00      	cmp	r4, #0
 8006416:	f000 80a5 	beq.w	8006564 <_dtoa_r+0x47c>
 800641a:	f1ba 0f00 	cmp.w	sl, #0
 800641e:	dd34      	ble.n	800648a <_dtoa_r+0x3a2>
 8006420:	4a9a      	ldr	r2, [pc, #616]	; (800668c <_dtoa_r+0x5a4>)
 8006422:	f00a 030f 	and.w	r3, sl, #15
 8006426:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800642a:	f41a 7f80 	tst.w	sl, #256	; 0x100
 800642e:	e9d3 3400 	ldrd	r3, r4, [r3]
 8006432:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8006436:	ea4f 142a 	mov.w	r4, sl, asr #4
 800643a:	d016      	beq.n	800646a <_dtoa_r+0x382>
 800643c:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8006440:	4b93      	ldr	r3, [pc, #588]	; (8006690 <_dtoa_r+0x5a8>)
 8006442:	2703      	movs	r7, #3
 8006444:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8006448:	f7fa f970 	bl	800072c <__aeabi_ddiv>
 800644c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006450:	f004 040f 	and.w	r4, r4, #15
 8006454:	4e8e      	ldr	r6, [pc, #568]	; (8006690 <_dtoa_r+0x5a8>)
 8006456:	b954      	cbnz	r4, 800646e <_dtoa_r+0x386>
 8006458:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800645c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006460:	f7fa f964 	bl	800072c <__aeabi_ddiv>
 8006464:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006468:	e029      	b.n	80064be <_dtoa_r+0x3d6>
 800646a:	2702      	movs	r7, #2
 800646c:	e7f2      	b.n	8006454 <_dtoa_r+0x36c>
 800646e:	07e1      	lsls	r1, r4, #31
 8006470:	d508      	bpl.n	8006484 <_dtoa_r+0x39c>
 8006472:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8006476:	e9d6 2300 	ldrd	r2, r3, [r6]
 800647a:	f7fa f82d 	bl	80004d8 <__aeabi_dmul>
 800647e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8006482:	3701      	adds	r7, #1
 8006484:	1064      	asrs	r4, r4, #1
 8006486:	3608      	adds	r6, #8
 8006488:	e7e5      	b.n	8006456 <_dtoa_r+0x36e>
 800648a:	f000 80a5 	beq.w	80065d8 <_dtoa_r+0x4f0>
 800648e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8006492:	f1ca 0400 	rsb	r4, sl, #0
 8006496:	4b7d      	ldr	r3, [pc, #500]	; (800668c <_dtoa_r+0x5a4>)
 8006498:	f004 020f 	and.w	r2, r4, #15
 800649c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80064a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80064a4:	f7fa f818 	bl	80004d8 <__aeabi_dmul>
 80064a8:	2702      	movs	r7, #2
 80064aa:	2300      	movs	r3, #0
 80064ac:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80064b0:	4e77      	ldr	r6, [pc, #476]	; (8006690 <_dtoa_r+0x5a8>)
 80064b2:	1124      	asrs	r4, r4, #4
 80064b4:	2c00      	cmp	r4, #0
 80064b6:	f040 8084 	bne.w	80065c2 <_dtoa_r+0x4da>
 80064ba:	2b00      	cmp	r3, #0
 80064bc:	d1d2      	bne.n	8006464 <_dtoa_r+0x37c>
 80064be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80064c0:	2b00      	cmp	r3, #0
 80064c2:	f000 808b 	beq.w	80065dc <_dtoa_r+0x4f4>
 80064c6:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80064ca:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80064ce:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80064d2:	2200      	movs	r2, #0
 80064d4:	4b6f      	ldr	r3, [pc, #444]	; (8006694 <_dtoa_r+0x5ac>)
 80064d6:	f7fa fa71 	bl	80009bc <__aeabi_dcmplt>
 80064da:	2800      	cmp	r0, #0
 80064dc:	d07e      	beq.n	80065dc <_dtoa_r+0x4f4>
 80064de:	9b08      	ldr	r3, [sp, #32]
 80064e0:	2b00      	cmp	r3, #0
 80064e2:	d07b      	beq.n	80065dc <_dtoa_r+0x4f4>
 80064e4:	f1b9 0f00 	cmp.w	r9, #0
 80064e8:	dd38      	ble.n	800655c <_dtoa_r+0x474>
 80064ea:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80064ee:	2200      	movs	r2, #0
 80064f0:	4b69      	ldr	r3, [pc, #420]	; (8006698 <_dtoa_r+0x5b0>)
 80064f2:	f7f9 fff1 	bl	80004d8 <__aeabi_dmul>
 80064f6:	464c      	mov	r4, r9
 80064f8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80064fc:	f10a 38ff 	add.w	r8, sl, #4294967295
 8006500:	3701      	adds	r7, #1
 8006502:	4638      	mov	r0, r7
 8006504:	f7f9 ff7e 	bl	8000404 <__aeabi_i2d>
 8006508:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800650c:	f7f9 ffe4 	bl	80004d8 <__aeabi_dmul>
 8006510:	2200      	movs	r2, #0
 8006512:	4b62      	ldr	r3, [pc, #392]	; (800669c <_dtoa_r+0x5b4>)
 8006514:	f7f9 fe2a 	bl	800016c <__adddf3>
 8006518:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 800651c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8006520:	9611      	str	r6, [sp, #68]	; 0x44
 8006522:	2c00      	cmp	r4, #0
 8006524:	d15d      	bne.n	80065e2 <_dtoa_r+0x4fa>
 8006526:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800652a:	2200      	movs	r2, #0
 800652c:	4b5c      	ldr	r3, [pc, #368]	; (80066a0 <_dtoa_r+0x5b8>)
 800652e:	f7f9 fe1b 	bl	8000168 <__aeabi_dsub>
 8006532:	4602      	mov	r2, r0
 8006534:	460b      	mov	r3, r1
 8006536:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800653a:	4633      	mov	r3, r6
 800653c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800653e:	f7fa fa5b 	bl	80009f8 <__aeabi_dcmpgt>
 8006542:	2800      	cmp	r0, #0
 8006544:	f040 829c 	bne.w	8006a80 <_dtoa_r+0x998>
 8006548:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800654c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800654e:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8006552:	f7fa fa33 	bl	80009bc <__aeabi_dcmplt>
 8006556:	2800      	cmp	r0, #0
 8006558:	f040 8290 	bne.w	8006a7c <_dtoa_r+0x994>
 800655c:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8006560:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8006564:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8006566:	2b00      	cmp	r3, #0
 8006568:	f2c0 8152 	blt.w	8006810 <_dtoa_r+0x728>
 800656c:	f1ba 0f0e 	cmp.w	sl, #14
 8006570:	f300 814e 	bgt.w	8006810 <_dtoa_r+0x728>
 8006574:	4b45      	ldr	r3, [pc, #276]	; (800668c <_dtoa_r+0x5a4>)
 8006576:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800657a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800657e:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8006582:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006584:	2b00      	cmp	r3, #0
 8006586:	f280 80db 	bge.w	8006740 <_dtoa_r+0x658>
 800658a:	9b08      	ldr	r3, [sp, #32]
 800658c:	2b00      	cmp	r3, #0
 800658e:	f300 80d7 	bgt.w	8006740 <_dtoa_r+0x658>
 8006592:	f040 8272 	bne.w	8006a7a <_dtoa_r+0x992>
 8006596:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800659a:	2200      	movs	r2, #0
 800659c:	4b40      	ldr	r3, [pc, #256]	; (80066a0 <_dtoa_r+0x5b8>)
 800659e:	f7f9 ff9b 	bl	80004d8 <__aeabi_dmul>
 80065a2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80065a6:	f7fa fa1d 	bl	80009e4 <__aeabi_dcmpge>
 80065aa:	9c08      	ldr	r4, [sp, #32]
 80065ac:	4626      	mov	r6, r4
 80065ae:	2800      	cmp	r0, #0
 80065b0:	f040 8248 	bne.w	8006a44 <_dtoa_r+0x95c>
 80065b4:	2331      	movs	r3, #49	; 0x31
 80065b6:	9f03      	ldr	r7, [sp, #12]
 80065b8:	f10a 0a01 	add.w	sl, sl, #1
 80065bc:	f807 3b01 	strb.w	r3, [r7], #1
 80065c0:	e244      	b.n	8006a4c <_dtoa_r+0x964>
 80065c2:	07e2      	lsls	r2, r4, #31
 80065c4:	d505      	bpl.n	80065d2 <_dtoa_r+0x4ea>
 80065c6:	e9d6 2300 	ldrd	r2, r3, [r6]
 80065ca:	f7f9 ff85 	bl	80004d8 <__aeabi_dmul>
 80065ce:	2301      	movs	r3, #1
 80065d0:	3701      	adds	r7, #1
 80065d2:	1064      	asrs	r4, r4, #1
 80065d4:	3608      	adds	r6, #8
 80065d6:	e76d      	b.n	80064b4 <_dtoa_r+0x3cc>
 80065d8:	2702      	movs	r7, #2
 80065da:	e770      	b.n	80064be <_dtoa_r+0x3d6>
 80065dc:	46d0      	mov	r8, sl
 80065de:	9c08      	ldr	r4, [sp, #32]
 80065e0:	e78f      	b.n	8006502 <_dtoa_r+0x41a>
 80065e2:	9903      	ldr	r1, [sp, #12]
 80065e4:	4b29      	ldr	r3, [pc, #164]	; (800668c <_dtoa_r+0x5a4>)
 80065e6:	4421      	add	r1, r4
 80065e8:	9112      	str	r1, [sp, #72]	; 0x48
 80065ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80065ec:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80065f0:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 80065f4:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80065f8:	2900      	cmp	r1, #0
 80065fa:	d055      	beq.n	80066a8 <_dtoa_r+0x5c0>
 80065fc:	2000      	movs	r0, #0
 80065fe:	4929      	ldr	r1, [pc, #164]	; (80066a4 <_dtoa_r+0x5bc>)
 8006600:	f7fa f894 	bl	800072c <__aeabi_ddiv>
 8006604:	463b      	mov	r3, r7
 8006606:	4632      	mov	r2, r6
 8006608:	f7f9 fdae 	bl	8000168 <__aeabi_dsub>
 800660c:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8006610:	9f03      	ldr	r7, [sp, #12]
 8006612:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006616:	f7fa fa0f 	bl	8000a38 <__aeabi_d2iz>
 800661a:	4604      	mov	r4, r0
 800661c:	f7f9 fef2 	bl	8000404 <__aeabi_i2d>
 8006620:	4602      	mov	r2, r0
 8006622:	460b      	mov	r3, r1
 8006624:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006628:	f7f9 fd9e 	bl	8000168 <__aeabi_dsub>
 800662c:	4602      	mov	r2, r0
 800662e:	460b      	mov	r3, r1
 8006630:	3430      	adds	r4, #48	; 0x30
 8006632:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8006636:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800663a:	f807 4b01 	strb.w	r4, [r7], #1
 800663e:	f7fa f9bd 	bl	80009bc <__aeabi_dcmplt>
 8006642:	2800      	cmp	r0, #0
 8006644:	d174      	bne.n	8006730 <_dtoa_r+0x648>
 8006646:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800664a:	2000      	movs	r0, #0
 800664c:	4911      	ldr	r1, [pc, #68]	; (8006694 <_dtoa_r+0x5ac>)
 800664e:	f7f9 fd8b 	bl	8000168 <__aeabi_dsub>
 8006652:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8006656:	f7fa f9b1 	bl	80009bc <__aeabi_dcmplt>
 800665a:	2800      	cmp	r0, #0
 800665c:	f040 80b7 	bne.w	80067ce <_dtoa_r+0x6e6>
 8006660:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006662:	429f      	cmp	r7, r3
 8006664:	f43f af7a 	beq.w	800655c <_dtoa_r+0x474>
 8006668:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800666c:	2200      	movs	r2, #0
 800666e:	4b0a      	ldr	r3, [pc, #40]	; (8006698 <_dtoa_r+0x5b0>)
 8006670:	f7f9 ff32 	bl	80004d8 <__aeabi_dmul>
 8006674:	2200      	movs	r2, #0
 8006676:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800667a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800667e:	4b06      	ldr	r3, [pc, #24]	; (8006698 <_dtoa_r+0x5b0>)
 8006680:	f7f9 ff2a 	bl	80004d8 <__aeabi_dmul>
 8006684:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006688:	e7c3      	b.n	8006612 <_dtoa_r+0x52a>
 800668a:	bf00      	nop
 800668c:	08008910 	.word	0x08008910
 8006690:	080088e8 	.word	0x080088e8
 8006694:	3ff00000 	.word	0x3ff00000
 8006698:	40240000 	.word	0x40240000
 800669c:	401c0000 	.word	0x401c0000
 80066a0:	40140000 	.word	0x40140000
 80066a4:	3fe00000 	.word	0x3fe00000
 80066a8:	4630      	mov	r0, r6
 80066aa:	4639      	mov	r1, r7
 80066ac:	f7f9 ff14 	bl	80004d8 <__aeabi_dmul>
 80066b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80066b2:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80066b6:	9c03      	ldr	r4, [sp, #12]
 80066b8:	9314      	str	r3, [sp, #80]	; 0x50
 80066ba:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80066be:	f7fa f9bb 	bl	8000a38 <__aeabi_d2iz>
 80066c2:	9015      	str	r0, [sp, #84]	; 0x54
 80066c4:	f7f9 fe9e 	bl	8000404 <__aeabi_i2d>
 80066c8:	4602      	mov	r2, r0
 80066ca:	460b      	mov	r3, r1
 80066cc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80066d0:	f7f9 fd4a 	bl	8000168 <__aeabi_dsub>
 80066d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80066d6:	4606      	mov	r6, r0
 80066d8:	3330      	adds	r3, #48	; 0x30
 80066da:	f804 3b01 	strb.w	r3, [r4], #1
 80066de:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80066e0:	460f      	mov	r7, r1
 80066e2:	429c      	cmp	r4, r3
 80066e4:	f04f 0200 	mov.w	r2, #0
 80066e8:	d124      	bne.n	8006734 <_dtoa_r+0x64c>
 80066ea:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80066ee:	4bb0      	ldr	r3, [pc, #704]	; (80069b0 <_dtoa_r+0x8c8>)
 80066f0:	f7f9 fd3c 	bl	800016c <__adddf3>
 80066f4:	4602      	mov	r2, r0
 80066f6:	460b      	mov	r3, r1
 80066f8:	4630      	mov	r0, r6
 80066fa:	4639      	mov	r1, r7
 80066fc:	f7fa f97c 	bl	80009f8 <__aeabi_dcmpgt>
 8006700:	2800      	cmp	r0, #0
 8006702:	d163      	bne.n	80067cc <_dtoa_r+0x6e4>
 8006704:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8006708:	2000      	movs	r0, #0
 800670a:	49a9      	ldr	r1, [pc, #676]	; (80069b0 <_dtoa_r+0x8c8>)
 800670c:	f7f9 fd2c 	bl	8000168 <__aeabi_dsub>
 8006710:	4602      	mov	r2, r0
 8006712:	460b      	mov	r3, r1
 8006714:	4630      	mov	r0, r6
 8006716:	4639      	mov	r1, r7
 8006718:	f7fa f950 	bl	80009bc <__aeabi_dcmplt>
 800671c:	2800      	cmp	r0, #0
 800671e:	f43f af1d 	beq.w	800655c <_dtoa_r+0x474>
 8006722:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8006724:	1e7b      	subs	r3, r7, #1
 8006726:	9314      	str	r3, [sp, #80]	; 0x50
 8006728:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 800672c:	2b30      	cmp	r3, #48	; 0x30
 800672e:	d0f8      	beq.n	8006722 <_dtoa_r+0x63a>
 8006730:	46c2      	mov	sl, r8
 8006732:	e03b      	b.n	80067ac <_dtoa_r+0x6c4>
 8006734:	4b9f      	ldr	r3, [pc, #636]	; (80069b4 <_dtoa_r+0x8cc>)
 8006736:	f7f9 fecf 	bl	80004d8 <__aeabi_dmul>
 800673a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800673e:	e7bc      	b.n	80066ba <_dtoa_r+0x5d2>
 8006740:	9f03      	ldr	r7, [sp, #12]
 8006742:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8006746:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800674a:	4640      	mov	r0, r8
 800674c:	4649      	mov	r1, r9
 800674e:	f7f9 ffed 	bl	800072c <__aeabi_ddiv>
 8006752:	f7fa f971 	bl	8000a38 <__aeabi_d2iz>
 8006756:	4604      	mov	r4, r0
 8006758:	f7f9 fe54 	bl	8000404 <__aeabi_i2d>
 800675c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8006760:	f7f9 feba 	bl	80004d8 <__aeabi_dmul>
 8006764:	4602      	mov	r2, r0
 8006766:	460b      	mov	r3, r1
 8006768:	4640      	mov	r0, r8
 800676a:	4649      	mov	r1, r9
 800676c:	f7f9 fcfc 	bl	8000168 <__aeabi_dsub>
 8006770:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8006774:	f807 6b01 	strb.w	r6, [r7], #1
 8006778:	9e03      	ldr	r6, [sp, #12]
 800677a:	f8dd c020 	ldr.w	ip, [sp, #32]
 800677e:	1bbe      	subs	r6, r7, r6
 8006780:	45b4      	cmp	ip, r6
 8006782:	4602      	mov	r2, r0
 8006784:	460b      	mov	r3, r1
 8006786:	d136      	bne.n	80067f6 <_dtoa_r+0x70e>
 8006788:	f7f9 fcf0 	bl	800016c <__adddf3>
 800678c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8006790:	4680      	mov	r8, r0
 8006792:	4689      	mov	r9, r1
 8006794:	f7fa f930 	bl	80009f8 <__aeabi_dcmpgt>
 8006798:	bb58      	cbnz	r0, 80067f2 <_dtoa_r+0x70a>
 800679a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800679e:	4640      	mov	r0, r8
 80067a0:	4649      	mov	r1, r9
 80067a2:	f7fa f901 	bl	80009a8 <__aeabi_dcmpeq>
 80067a6:	b108      	cbz	r0, 80067ac <_dtoa_r+0x6c4>
 80067a8:	07e1      	lsls	r1, r4, #31
 80067aa:	d422      	bmi.n	80067f2 <_dtoa_r+0x70a>
 80067ac:	4628      	mov	r0, r5
 80067ae:	4659      	mov	r1, fp
 80067b0:	f000 fb02 	bl	8006db8 <_Bfree>
 80067b4:	2300      	movs	r3, #0
 80067b6:	703b      	strb	r3, [r7, #0]
 80067b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80067ba:	f10a 0001 	add.w	r0, sl, #1
 80067be:	6018      	str	r0, [r3, #0]
 80067c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80067c2:	2b00      	cmp	r3, #0
 80067c4:	f43f acde 	beq.w	8006184 <_dtoa_r+0x9c>
 80067c8:	601f      	str	r7, [r3, #0]
 80067ca:	e4db      	b.n	8006184 <_dtoa_r+0x9c>
 80067cc:	4627      	mov	r7, r4
 80067ce:	463b      	mov	r3, r7
 80067d0:	461f      	mov	r7, r3
 80067d2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80067d6:	2a39      	cmp	r2, #57	; 0x39
 80067d8:	d107      	bne.n	80067ea <_dtoa_r+0x702>
 80067da:	9a03      	ldr	r2, [sp, #12]
 80067dc:	429a      	cmp	r2, r3
 80067de:	d1f7      	bne.n	80067d0 <_dtoa_r+0x6e8>
 80067e0:	2230      	movs	r2, #48	; 0x30
 80067e2:	9903      	ldr	r1, [sp, #12]
 80067e4:	f108 0801 	add.w	r8, r8, #1
 80067e8:	700a      	strb	r2, [r1, #0]
 80067ea:	781a      	ldrb	r2, [r3, #0]
 80067ec:	3201      	adds	r2, #1
 80067ee:	701a      	strb	r2, [r3, #0]
 80067f0:	e79e      	b.n	8006730 <_dtoa_r+0x648>
 80067f2:	46d0      	mov	r8, sl
 80067f4:	e7eb      	b.n	80067ce <_dtoa_r+0x6e6>
 80067f6:	2200      	movs	r2, #0
 80067f8:	4b6e      	ldr	r3, [pc, #440]	; (80069b4 <_dtoa_r+0x8cc>)
 80067fa:	f7f9 fe6d 	bl	80004d8 <__aeabi_dmul>
 80067fe:	2200      	movs	r2, #0
 8006800:	2300      	movs	r3, #0
 8006802:	4680      	mov	r8, r0
 8006804:	4689      	mov	r9, r1
 8006806:	f7fa f8cf 	bl	80009a8 <__aeabi_dcmpeq>
 800680a:	2800      	cmp	r0, #0
 800680c:	d09b      	beq.n	8006746 <_dtoa_r+0x65e>
 800680e:	e7cd      	b.n	80067ac <_dtoa_r+0x6c4>
 8006810:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8006812:	2a00      	cmp	r2, #0
 8006814:	f000 80d0 	beq.w	80069b8 <_dtoa_r+0x8d0>
 8006818:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800681a:	2a01      	cmp	r2, #1
 800681c:	f300 80ae 	bgt.w	800697c <_dtoa_r+0x894>
 8006820:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8006822:	2a00      	cmp	r2, #0
 8006824:	f000 80a6 	beq.w	8006974 <_dtoa_r+0x88c>
 8006828:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800682c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800682e:	9f06      	ldr	r7, [sp, #24]
 8006830:	9a06      	ldr	r2, [sp, #24]
 8006832:	2101      	movs	r1, #1
 8006834:	441a      	add	r2, r3
 8006836:	9206      	str	r2, [sp, #24]
 8006838:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800683a:	4628      	mov	r0, r5
 800683c:	441a      	add	r2, r3
 800683e:	9209      	str	r2, [sp, #36]	; 0x24
 8006840:	f000 fb70 	bl	8006f24 <__i2b>
 8006844:	4606      	mov	r6, r0
 8006846:	2f00      	cmp	r7, #0
 8006848:	dd0c      	ble.n	8006864 <_dtoa_r+0x77c>
 800684a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800684c:	2b00      	cmp	r3, #0
 800684e:	dd09      	ble.n	8006864 <_dtoa_r+0x77c>
 8006850:	42bb      	cmp	r3, r7
 8006852:	bfa8      	it	ge
 8006854:	463b      	movge	r3, r7
 8006856:	9a06      	ldr	r2, [sp, #24]
 8006858:	1aff      	subs	r7, r7, r3
 800685a:	1ad2      	subs	r2, r2, r3
 800685c:	9206      	str	r2, [sp, #24]
 800685e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006860:	1ad3      	subs	r3, r2, r3
 8006862:	9309      	str	r3, [sp, #36]	; 0x24
 8006864:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006866:	b1f3      	cbz	r3, 80068a6 <_dtoa_r+0x7be>
 8006868:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800686a:	2b00      	cmp	r3, #0
 800686c:	f000 80a8 	beq.w	80069c0 <_dtoa_r+0x8d8>
 8006870:	2c00      	cmp	r4, #0
 8006872:	dd10      	ble.n	8006896 <_dtoa_r+0x7ae>
 8006874:	4631      	mov	r1, r6
 8006876:	4622      	mov	r2, r4
 8006878:	4628      	mov	r0, r5
 800687a:	f000 fc11 	bl	80070a0 <__pow5mult>
 800687e:	465a      	mov	r2, fp
 8006880:	4601      	mov	r1, r0
 8006882:	4606      	mov	r6, r0
 8006884:	4628      	mov	r0, r5
 8006886:	f000 fb63 	bl	8006f50 <__multiply>
 800688a:	4680      	mov	r8, r0
 800688c:	4659      	mov	r1, fp
 800688e:	4628      	mov	r0, r5
 8006890:	f000 fa92 	bl	8006db8 <_Bfree>
 8006894:	46c3      	mov	fp, r8
 8006896:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006898:	1b1a      	subs	r2, r3, r4
 800689a:	d004      	beq.n	80068a6 <_dtoa_r+0x7be>
 800689c:	4659      	mov	r1, fp
 800689e:	4628      	mov	r0, r5
 80068a0:	f000 fbfe 	bl	80070a0 <__pow5mult>
 80068a4:	4683      	mov	fp, r0
 80068a6:	2101      	movs	r1, #1
 80068a8:	4628      	mov	r0, r5
 80068aa:	f000 fb3b 	bl	8006f24 <__i2b>
 80068ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80068b0:	4604      	mov	r4, r0
 80068b2:	2b00      	cmp	r3, #0
 80068b4:	f340 8086 	ble.w	80069c4 <_dtoa_r+0x8dc>
 80068b8:	461a      	mov	r2, r3
 80068ba:	4601      	mov	r1, r0
 80068bc:	4628      	mov	r0, r5
 80068be:	f000 fbef 	bl	80070a0 <__pow5mult>
 80068c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80068c4:	4604      	mov	r4, r0
 80068c6:	2b01      	cmp	r3, #1
 80068c8:	dd7f      	ble.n	80069ca <_dtoa_r+0x8e2>
 80068ca:	f04f 0800 	mov.w	r8, #0
 80068ce:	6923      	ldr	r3, [r4, #16]
 80068d0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80068d4:	6918      	ldr	r0, [r3, #16]
 80068d6:	f000 fad7 	bl	8006e88 <__hi0bits>
 80068da:	f1c0 0020 	rsb	r0, r0, #32
 80068de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80068e0:	4418      	add	r0, r3
 80068e2:	f010 001f 	ands.w	r0, r0, #31
 80068e6:	f000 8092 	beq.w	8006a0e <_dtoa_r+0x926>
 80068ea:	f1c0 0320 	rsb	r3, r0, #32
 80068ee:	2b04      	cmp	r3, #4
 80068f0:	f340 808a 	ble.w	8006a08 <_dtoa_r+0x920>
 80068f4:	f1c0 001c 	rsb	r0, r0, #28
 80068f8:	9b06      	ldr	r3, [sp, #24]
 80068fa:	4407      	add	r7, r0
 80068fc:	4403      	add	r3, r0
 80068fe:	9306      	str	r3, [sp, #24]
 8006900:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006902:	4403      	add	r3, r0
 8006904:	9309      	str	r3, [sp, #36]	; 0x24
 8006906:	9b06      	ldr	r3, [sp, #24]
 8006908:	2b00      	cmp	r3, #0
 800690a:	dd05      	ble.n	8006918 <_dtoa_r+0x830>
 800690c:	4659      	mov	r1, fp
 800690e:	461a      	mov	r2, r3
 8006910:	4628      	mov	r0, r5
 8006912:	f000 fc1f 	bl	8007154 <__lshift>
 8006916:	4683      	mov	fp, r0
 8006918:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800691a:	2b00      	cmp	r3, #0
 800691c:	dd05      	ble.n	800692a <_dtoa_r+0x842>
 800691e:	4621      	mov	r1, r4
 8006920:	461a      	mov	r2, r3
 8006922:	4628      	mov	r0, r5
 8006924:	f000 fc16 	bl	8007154 <__lshift>
 8006928:	4604      	mov	r4, r0
 800692a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800692c:	2b00      	cmp	r3, #0
 800692e:	d070      	beq.n	8006a12 <_dtoa_r+0x92a>
 8006930:	4621      	mov	r1, r4
 8006932:	4658      	mov	r0, fp
 8006934:	f000 fc7e 	bl	8007234 <__mcmp>
 8006938:	2800      	cmp	r0, #0
 800693a:	da6a      	bge.n	8006a12 <_dtoa_r+0x92a>
 800693c:	2300      	movs	r3, #0
 800693e:	4659      	mov	r1, fp
 8006940:	220a      	movs	r2, #10
 8006942:	4628      	mov	r0, r5
 8006944:	f000 fa5a 	bl	8006dfc <__multadd>
 8006948:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800694a:	4683      	mov	fp, r0
 800694c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8006950:	2b00      	cmp	r3, #0
 8006952:	f000 8194 	beq.w	8006c7e <_dtoa_r+0xb96>
 8006956:	4631      	mov	r1, r6
 8006958:	2300      	movs	r3, #0
 800695a:	220a      	movs	r2, #10
 800695c:	4628      	mov	r0, r5
 800695e:	f000 fa4d 	bl	8006dfc <__multadd>
 8006962:	f1b9 0f00 	cmp.w	r9, #0
 8006966:	4606      	mov	r6, r0
 8006968:	f300 8093 	bgt.w	8006a92 <_dtoa_r+0x9aa>
 800696c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800696e:	2b02      	cmp	r3, #2
 8006970:	dc57      	bgt.n	8006a22 <_dtoa_r+0x93a>
 8006972:	e08e      	b.n	8006a92 <_dtoa_r+0x9aa>
 8006974:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006976:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800697a:	e757      	b.n	800682c <_dtoa_r+0x744>
 800697c:	9b08      	ldr	r3, [sp, #32]
 800697e:	1e5c      	subs	r4, r3, #1
 8006980:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006982:	42a3      	cmp	r3, r4
 8006984:	bfb7      	itett	lt
 8006986:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8006988:	1b1c      	subge	r4, r3, r4
 800698a:	1ae2      	sublt	r2, r4, r3
 800698c:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 800698e:	bfbe      	ittt	lt
 8006990:	940a      	strlt	r4, [sp, #40]	; 0x28
 8006992:	189b      	addlt	r3, r3, r2
 8006994:	930e      	strlt	r3, [sp, #56]	; 0x38
 8006996:	9b08      	ldr	r3, [sp, #32]
 8006998:	bfb8      	it	lt
 800699a:	2400      	movlt	r4, #0
 800699c:	2b00      	cmp	r3, #0
 800699e:	bfbb      	ittet	lt
 80069a0:	9b06      	ldrlt	r3, [sp, #24]
 80069a2:	9a08      	ldrlt	r2, [sp, #32]
 80069a4:	9f06      	ldrge	r7, [sp, #24]
 80069a6:	1a9f      	sublt	r7, r3, r2
 80069a8:	bfac      	ite	ge
 80069aa:	9b08      	ldrge	r3, [sp, #32]
 80069ac:	2300      	movlt	r3, #0
 80069ae:	e73f      	b.n	8006830 <_dtoa_r+0x748>
 80069b0:	3fe00000 	.word	0x3fe00000
 80069b4:	40240000 	.word	0x40240000
 80069b8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80069ba:	9f06      	ldr	r7, [sp, #24]
 80069bc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80069be:	e742      	b.n	8006846 <_dtoa_r+0x75e>
 80069c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80069c2:	e76b      	b.n	800689c <_dtoa_r+0x7b4>
 80069c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80069c6:	2b01      	cmp	r3, #1
 80069c8:	dc19      	bgt.n	80069fe <_dtoa_r+0x916>
 80069ca:	9b04      	ldr	r3, [sp, #16]
 80069cc:	b9bb      	cbnz	r3, 80069fe <_dtoa_r+0x916>
 80069ce:	9b05      	ldr	r3, [sp, #20]
 80069d0:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80069d4:	b99b      	cbnz	r3, 80069fe <_dtoa_r+0x916>
 80069d6:	9b05      	ldr	r3, [sp, #20]
 80069d8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80069dc:	0d1b      	lsrs	r3, r3, #20
 80069de:	051b      	lsls	r3, r3, #20
 80069e0:	b183      	cbz	r3, 8006a04 <_dtoa_r+0x91c>
 80069e2:	f04f 0801 	mov.w	r8, #1
 80069e6:	9b06      	ldr	r3, [sp, #24]
 80069e8:	3301      	adds	r3, #1
 80069ea:	9306      	str	r3, [sp, #24]
 80069ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80069ee:	3301      	adds	r3, #1
 80069f0:	9309      	str	r3, [sp, #36]	; 0x24
 80069f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80069f4:	2b00      	cmp	r3, #0
 80069f6:	f47f af6a 	bne.w	80068ce <_dtoa_r+0x7e6>
 80069fa:	2001      	movs	r0, #1
 80069fc:	e76f      	b.n	80068de <_dtoa_r+0x7f6>
 80069fe:	f04f 0800 	mov.w	r8, #0
 8006a02:	e7f6      	b.n	80069f2 <_dtoa_r+0x90a>
 8006a04:	4698      	mov	r8, r3
 8006a06:	e7f4      	b.n	80069f2 <_dtoa_r+0x90a>
 8006a08:	f43f af7d 	beq.w	8006906 <_dtoa_r+0x81e>
 8006a0c:	4618      	mov	r0, r3
 8006a0e:	301c      	adds	r0, #28
 8006a10:	e772      	b.n	80068f8 <_dtoa_r+0x810>
 8006a12:	9b08      	ldr	r3, [sp, #32]
 8006a14:	2b00      	cmp	r3, #0
 8006a16:	dc36      	bgt.n	8006a86 <_dtoa_r+0x99e>
 8006a18:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006a1a:	2b02      	cmp	r3, #2
 8006a1c:	dd33      	ble.n	8006a86 <_dtoa_r+0x99e>
 8006a1e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006a22:	f1b9 0f00 	cmp.w	r9, #0
 8006a26:	d10d      	bne.n	8006a44 <_dtoa_r+0x95c>
 8006a28:	4621      	mov	r1, r4
 8006a2a:	464b      	mov	r3, r9
 8006a2c:	2205      	movs	r2, #5
 8006a2e:	4628      	mov	r0, r5
 8006a30:	f000 f9e4 	bl	8006dfc <__multadd>
 8006a34:	4601      	mov	r1, r0
 8006a36:	4604      	mov	r4, r0
 8006a38:	4658      	mov	r0, fp
 8006a3a:	f000 fbfb 	bl	8007234 <__mcmp>
 8006a3e:	2800      	cmp	r0, #0
 8006a40:	f73f adb8 	bgt.w	80065b4 <_dtoa_r+0x4cc>
 8006a44:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006a46:	9f03      	ldr	r7, [sp, #12]
 8006a48:	ea6f 0a03 	mvn.w	sl, r3
 8006a4c:	f04f 0800 	mov.w	r8, #0
 8006a50:	4621      	mov	r1, r4
 8006a52:	4628      	mov	r0, r5
 8006a54:	f000 f9b0 	bl	8006db8 <_Bfree>
 8006a58:	2e00      	cmp	r6, #0
 8006a5a:	f43f aea7 	beq.w	80067ac <_dtoa_r+0x6c4>
 8006a5e:	f1b8 0f00 	cmp.w	r8, #0
 8006a62:	d005      	beq.n	8006a70 <_dtoa_r+0x988>
 8006a64:	45b0      	cmp	r8, r6
 8006a66:	d003      	beq.n	8006a70 <_dtoa_r+0x988>
 8006a68:	4641      	mov	r1, r8
 8006a6a:	4628      	mov	r0, r5
 8006a6c:	f000 f9a4 	bl	8006db8 <_Bfree>
 8006a70:	4631      	mov	r1, r6
 8006a72:	4628      	mov	r0, r5
 8006a74:	f000 f9a0 	bl	8006db8 <_Bfree>
 8006a78:	e698      	b.n	80067ac <_dtoa_r+0x6c4>
 8006a7a:	2400      	movs	r4, #0
 8006a7c:	4626      	mov	r6, r4
 8006a7e:	e7e1      	b.n	8006a44 <_dtoa_r+0x95c>
 8006a80:	46c2      	mov	sl, r8
 8006a82:	4626      	mov	r6, r4
 8006a84:	e596      	b.n	80065b4 <_dtoa_r+0x4cc>
 8006a86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006a88:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	f000 80fd 	beq.w	8006c8c <_dtoa_r+0xba4>
 8006a92:	2f00      	cmp	r7, #0
 8006a94:	dd05      	ble.n	8006aa2 <_dtoa_r+0x9ba>
 8006a96:	4631      	mov	r1, r6
 8006a98:	463a      	mov	r2, r7
 8006a9a:	4628      	mov	r0, r5
 8006a9c:	f000 fb5a 	bl	8007154 <__lshift>
 8006aa0:	4606      	mov	r6, r0
 8006aa2:	f1b8 0f00 	cmp.w	r8, #0
 8006aa6:	d05c      	beq.n	8006b62 <_dtoa_r+0xa7a>
 8006aa8:	4628      	mov	r0, r5
 8006aaa:	6871      	ldr	r1, [r6, #4]
 8006aac:	f000 f944 	bl	8006d38 <_Balloc>
 8006ab0:	4607      	mov	r7, r0
 8006ab2:	b928      	cbnz	r0, 8006ac0 <_dtoa_r+0x9d8>
 8006ab4:	4602      	mov	r2, r0
 8006ab6:	f240 21ea 	movw	r1, #746	; 0x2ea
 8006aba:	4b7f      	ldr	r3, [pc, #508]	; (8006cb8 <_dtoa_r+0xbd0>)
 8006abc:	f7ff bb28 	b.w	8006110 <_dtoa_r+0x28>
 8006ac0:	6932      	ldr	r2, [r6, #16]
 8006ac2:	f106 010c 	add.w	r1, r6, #12
 8006ac6:	3202      	adds	r2, #2
 8006ac8:	0092      	lsls	r2, r2, #2
 8006aca:	300c      	adds	r0, #12
 8006acc:	f000 f926 	bl	8006d1c <memcpy>
 8006ad0:	2201      	movs	r2, #1
 8006ad2:	4639      	mov	r1, r7
 8006ad4:	4628      	mov	r0, r5
 8006ad6:	f000 fb3d 	bl	8007154 <__lshift>
 8006ada:	46b0      	mov	r8, r6
 8006adc:	4606      	mov	r6, r0
 8006ade:	9b03      	ldr	r3, [sp, #12]
 8006ae0:	3301      	adds	r3, #1
 8006ae2:	9308      	str	r3, [sp, #32]
 8006ae4:	9b03      	ldr	r3, [sp, #12]
 8006ae6:	444b      	add	r3, r9
 8006ae8:	930a      	str	r3, [sp, #40]	; 0x28
 8006aea:	9b04      	ldr	r3, [sp, #16]
 8006aec:	f003 0301 	and.w	r3, r3, #1
 8006af0:	9309      	str	r3, [sp, #36]	; 0x24
 8006af2:	9b08      	ldr	r3, [sp, #32]
 8006af4:	4621      	mov	r1, r4
 8006af6:	3b01      	subs	r3, #1
 8006af8:	4658      	mov	r0, fp
 8006afa:	9304      	str	r3, [sp, #16]
 8006afc:	f7ff fa68 	bl	8005fd0 <quorem>
 8006b00:	4603      	mov	r3, r0
 8006b02:	4641      	mov	r1, r8
 8006b04:	3330      	adds	r3, #48	; 0x30
 8006b06:	9006      	str	r0, [sp, #24]
 8006b08:	4658      	mov	r0, fp
 8006b0a:	930b      	str	r3, [sp, #44]	; 0x2c
 8006b0c:	f000 fb92 	bl	8007234 <__mcmp>
 8006b10:	4632      	mov	r2, r6
 8006b12:	4681      	mov	r9, r0
 8006b14:	4621      	mov	r1, r4
 8006b16:	4628      	mov	r0, r5
 8006b18:	f000 fba8 	bl	800726c <__mdiff>
 8006b1c:	68c2      	ldr	r2, [r0, #12]
 8006b1e:	4607      	mov	r7, r0
 8006b20:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006b22:	bb02      	cbnz	r2, 8006b66 <_dtoa_r+0xa7e>
 8006b24:	4601      	mov	r1, r0
 8006b26:	4658      	mov	r0, fp
 8006b28:	f000 fb84 	bl	8007234 <__mcmp>
 8006b2c:	4602      	mov	r2, r0
 8006b2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006b30:	4639      	mov	r1, r7
 8006b32:	4628      	mov	r0, r5
 8006b34:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 8006b38:	f000 f93e 	bl	8006db8 <_Bfree>
 8006b3c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006b3e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006b40:	9f08      	ldr	r7, [sp, #32]
 8006b42:	ea43 0102 	orr.w	r1, r3, r2
 8006b46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b48:	430b      	orrs	r3, r1
 8006b4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006b4c:	d10d      	bne.n	8006b6a <_dtoa_r+0xa82>
 8006b4e:	2b39      	cmp	r3, #57	; 0x39
 8006b50:	d029      	beq.n	8006ba6 <_dtoa_r+0xabe>
 8006b52:	f1b9 0f00 	cmp.w	r9, #0
 8006b56:	dd01      	ble.n	8006b5c <_dtoa_r+0xa74>
 8006b58:	9b06      	ldr	r3, [sp, #24]
 8006b5a:	3331      	adds	r3, #49	; 0x31
 8006b5c:	9a04      	ldr	r2, [sp, #16]
 8006b5e:	7013      	strb	r3, [r2, #0]
 8006b60:	e776      	b.n	8006a50 <_dtoa_r+0x968>
 8006b62:	4630      	mov	r0, r6
 8006b64:	e7b9      	b.n	8006ada <_dtoa_r+0x9f2>
 8006b66:	2201      	movs	r2, #1
 8006b68:	e7e2      	b.n	8006b30 <_dtoa_r+0xa48>
 8006b6a:	f1b9 0f00 	cmp.w	r9, #0
 8006b6e:	db06      	blt.n	8006b7e <_dtoa_r+0xa96>
 8006b70:	9922      	ldr	r1, [sp, #136]	; 0x88
 8006b72:	ea41 0909 	orr.w	r9, r1, r9
 8006b76:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006b78:	ea59 0101 	orrs.w	r1, r9, r1
 8006b7c:	d120      	bne.n	8006bc0 <_dtoa_r+0xad8>
 8006b7e:	2a00      	cmp	r2, #0
 8006b80:	ddec      	ble.n	8006b5c <_dtoa_r+0xa74>
 8006b82:	4659      	mov	r1, fp
 8006b84:	2201      	movs	r2, #1
 8006b86:	4628      	mov	r0, r5
 8006b88:	9308      	str	r3, [sp, #32]
 8006b8a:	f000 fae3 	bl	8007154 <__lshift>
 8006b8e:	4621      	mov	r1, r4
 8006b90:	4683      	mov	fp, r0
 8006b92:	f000 fb4f 	bl	8007234 <__mcmp>
 8006b96:	2800      	cmp	r0, #0
 8006b98:	9b08      	ldr	r3, [sp, #32]
 8006b9a:	dc02      	bgt.n	8006ba2 <_dtoa_r+0xaba>
 8006b9c:	d1de      	bne.n	8006b5c <_dtoa_r+0xa74>
 8006b9e:	07da      	lsls	r2, r3, #31
 8006ba0:	d5dc      	bpl.n	8006b5c <_dtoa_r+0xa74>
 8006ba2:	2b39      	cmp	r3, #57	; 0x39
 8006ba4:	d1d8      	bne.n	8006b58 <_dtoa_r+0xa70>
 8006ba6:	2339      	movs	r3, #57	; 0x39
 8006ba8:	9a04      	ldr	r2, [sp, #16]
 8006baa:	7013      	strb	r3, [r2, #0]
 8006bac:	463b      	mov	r3, r7
 8006bae:	461f      	mov	r7, r3
 8006bb0:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 8006bb4:	3b01      	subs	r3, #1
 8006bb6:	2a39      	cmp	r2, #57	; 0x39
 8006bb8:	d050      	beq.n	8006c5c <_dtoa_r+0xb74>
 8006bba:	3201      	adds	r2, #1
 8006bbc:	701a      	strb	r2, [r3, #0]
 8006bbe:	e747      	b.n	8006a50 <_dtoa_r+0x968>
 8006bc0:	2a00      	cmp	r2, #0
 8006bc2:	dd03      	ble.n	8006bcc <_dtoa_r+0xae4>
 8006bc4:	2b39      	cmp	r3, #57	; 0x39
 8006bc6:	d0ee      	beq.n	8006ba6 <_dtoa_r+0xabe>
 8006bc8:	3301      	adds	r3, #1
 8006bca:	e7c7      	b.n	8006b5c <_dtoa_r+0xa74>
 8006bcc:	9a08      	ldr	r2, [sp, #32]
 8006bce:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006bd0:	f802 3c01 	strb.w	r3, [r2, #-1]
 8006bd4:	428a      	cmp	r2, r1
 8006bd6:	d02a      	beq.n	8006c2e <_dtoa_r+0xb46>
 8006bd8:	4659      	mov	r1, fp
 8006bda:	2300      	movs	r3, #0
 8006bdc:	220a      	movs	r2, #10
 8006bde:	4628      	mov	r0, r5
 8006be0:	f000 f90c 	bl	8006dfc <__multadd>
 8006be4:	45b0      	cmp	r8, r6
 8006be6:	4683      	mov	fp, r0
 8006be8:	f04f 0300 	mov.w	r3, #0
 8006bec:	f04f 020a 	mov.w	r2, #10
 8006bf0:	4641      	mov	r1, r8
 8006bf2:	4628      	mov	r0, r5
 8006bf4:	d107      	bne.n	8006c06 <_dtoa_r+0xb1e>
 8006bf6:	f000 f901 	bl	8006dfc <__multadd>
 8006bfa:	4680      	mov	r8, r0
 8006bfc:	4606      	mov	r6, r0
 8006bfe:	9b08      	ldr	r3, [sp, #32]
 8006c00:	3301      	adds	r3, #1
 8006c02:	9308      	str	r3, [sp, #32]
 8006c04:	e775      	b.n	8006af2 <_dtoa_r+0xa0a>
 8006c06:	f000 f8f9 	bl	8006dfc <__multadd>
 8006c0a:	4631      	mov	r1, r6
 8006c0c:	4680      	mov	r8, r0
 8006c0e:	2300      	movs	r3, #0
 8006c10:	220a      	movs	r2, #10
 8006c12:	4628      	mov	r0, r5
 8006c14:	f000 f8f2 	bl	8006dfc <__multadd>
 8006c18:	4606      	mov	r6, r0
 8006c1a:	e7f0      	b.n	8006bfe <_dtoa_r+0xb16>
 8006c1c:	f1b9 0f00 	cmp.w	r9, #0
 8006c20:	bfcc      	ite	gt
 8006c22:	464f      	movgt	r7, r9
 8006c24:	2701      	movle	r7, #1
 8006c26:	f04f 0800 	mov.w	r8, #0
 8006c2a:	9a03      	ldr	r2, [sp, #12]
 8006c2c:	4417      	add	r7, r2
 8006c2e:	4659      	mov	r1, fp
 8006c30:	2201      	movs	r2, #1
 8006c32:	4628      	mov	r0, r5
 8006c34:	9308      	str	r3, [sp, #32]
 8006c36:	f000 fa8d 	bl	8007154 <__lshift>
 8006c3a:	4621      	mov	r1, r4
 8006c3c:	4683      	mov	fp, r0
 8006c3e:	f000 faf9 	bl	8007234 <__mcmp>
 8006c42:	2800      	cmp	r0, #0
 8006c44:	dcb2      	bgt.n	8006bac <_dtoa_r+0xac4>
 8006c46:	d102      	bne.n	8006c4e <_dtoa_r+0xb66>
 8006c48:	9b08      	ldr	r3, [sp, #32]
 8006c4a:	07db      	lsls	r3, r3, #31
 8006c4c:	d4ae      	bmi.n	8006bac <_dtoa_r+0xac4>
 8006c4e:	463b      	mov	r3, r7
 8006c50:	461f      	mov	r7, r3
 8006c52:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8006c56:	2a30      	cmp	r2, #48	; 0x30
 8006c58:	d0fa      	beq.n	8006c50 <_dtoa_r+0xb68>
 8006c5a:	e6f9      	b.n	8006a50 <_dtoa_r+0x968>
 8006c5c:	9a03      	ldr	r2, [sp, #12]
 8006c5e:	429a      	cmp	r2, r3
 8006c60:	d1a5      	bne.n	8006bae <_dtoa_r+0xac6>
 8006c62:	2331      	movs	r3, #49	; 0x31
 8006c64:	f10a 0a01 	add.w	sl, sl, #1
 8006c68:	e779      	b.n	8006b5e <_dtoa_r+0xa76>
 8006c6a:	4b14      	ldr	r3, [pc, #80]	; (8006cbc <_dtoa_r+0xbd4>)
 8006c6c:	f7ff baa8 	b.w	80061c0 <_dtoa_r+0xd8>
 8006c70:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006c72:	2b00      	cmp	r3, #0
 8006c74:	f47f aa81 	bne.w	800617a <_dtoa_r+0x92>
 8006c78:	4b11      	ldr	r3, [pc, #68]	; (8006cc0 <_dtoa_r+0xbd8>)
 8006c7a:	f7ff baa1 	b.w	80061c0 <_dtoa_r+0xd8>
 8006c7e:	f1b9 0f00 	cmp.w	r9, #0
 8006c82:	dc03      	bgt.n	8006c8c <_dtoa_r+0xba4>
 8006c84:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006c86:	2b02      	cmp	r3, #2
 8006c88:	f73f aecb 	bgt.w	8006a22 <_dtoa_r+0x93a>
 8006c8c:	9f03      	ldr	r7, [sp, #12]
 8006c8e:	4621      	mov	r1, r4
 8006c90:	4658      	mov	r0, fp
 8006c92:	f7ff f99d 	bl	8005fd0 <quorem>
 8006c96:	9a03      	ldr	r2, [sp, #12]
 8006c98:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8006c9c:	f807 3b01 	strb.w	r3, [r7], #1
 8006ca0:	1aba      	subs	r2, r7, r2
 8006ca2:	4591      	cmp	r9, r2
 8006ca4:	ddba      	ble.n	8006c1c <_dtoa_r+0xb34>
 8006ca6:	4659      	mov	r1, fp
 8006ca8:	2300      	movs	r3, #0
 8006caa:	220a      	movs	r2, #10
 8006cac:	4628      	mov	r0, r5
 8006cae:	f000 f8a5 	bl	8006dfc <__multadd>
 8006cb2:	4683      	mov	fp, r0
 8006cb4:	e7eb      	b.n	8006c8e <_dtoa_r+0xba6>
 8006cb6:	bf00      	nop
 8006cb8:	08008879 	.word	0x08008879
 8006cbc:	0800863c 	.word	0x0800863c
 8006cc0:	08008811 	.word	0x08008811

08006cc4 <fiprintf>:
 8006cc4:	b40e      	push	{r1, r2, r3}
 8006cc6:	b503      	push	{r0, r1, lr}
 8006cc8:	4601      	mov	r1, r0
 8006cca:	ab03      	add	r3, sp, #12
 8006ccc:	4805      	ldr	r0, [pc, #20]	; (8006ce4 <fiprintf+0x20>)
 8006cce:	f853 2b04 	ldr.w	r2, [r3], #4
 8006cd2:	6800      	ldr	r0, [r0, #0]
 8006cd4:	9301      	str	r3, [sp, #4]
 8006cd6:	f000 fe25 	bl	8007924 <_vfiprintf_r>
 8006cda:	b002      	add	sp, #8
 8006cdc:	f85d eb04 	ldr.w	lr, [sp], #4
 8006ce0:	b003      	add	sp, #12
 8006ce2:	4770      	bx	lr
 8006ce4:	20000014 	.word	0x20000014

08006ce8 <_localeconv_r>:
 8006ce8:	4800      	ldr	r0, [pc, #0]	; (8006cec <_localeconv_r+0x4>)
 8006cea:	4770      	bx	lr
 8006cec:	20000168 	.word	0x20000168

08006cf0 <malloc>:
 8006cf0:	4b02      	ldr	r3, [pc, #8]	; (8006cfc <malloc+0xc>)
 8006cf2:	4601      	mov	r1, r0
 8006cf4:	6818      	ldr	r0, [r3, #0]
 8006cf6:	f000 bc1d 	b.w	8007534 <_malloc_r>
 8006cfa:	bf00      	nop
 8006cfc:	20000014 	.word	0x20000014

08006d00 <memchr>:
 8006d00:	4603      	mov	r3, r0
 8006d02:	b510      	push	{r4, lr}
 8006d04:	b2c9      	uxtb	r1, r1
 8006d06:	4402      	add	r2, r0
 8006d08:	4293      	cmp	r3, r2
 8006d0a:	4618      	mov	r0, r3
 8006d0c:	d101      	bne.n	8006d12 <memchr+0x12>
 8006d0e:	2000      	movs	r0, #0
 8006d10:	e003      	b.n	8006d1a <memchr+0x1a>
 8006d12:	7804      	ldrb	r4, [r0, #0]
 8006d14:	3301      	adds	r3, #1
 8006d16:	428c      	cmp	r4, r1
 8006d18:	d1f6      	bne.n	8006d08 <memchr+0x8>
 8006d1a:	bd10      	pop	{r4, pc}

08006d1c <memcpy>:
 8006d1c:	440a      	add	r2, r1
 8006d1e:	4291      	cmp	r1, r2
 8006d20:	f100 33ff 	add.w	r3, r0, #4294967295
 8006d24:	d100      	bne.n	8006d28 <memcpy+0xc>
 8006d26:	4770      	bx	lr
 8006d28:	b510      	push	{r4, lr}
 8006d2a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006d2e:	4291      	cmp	r1, r2
 8006d30:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006d34:	d1f9      	bne.n	8006d2a <memcpy+0xe>
 8006d36:	bd10      	pop	{r4, pc}

08006d38 <_Balloc>:
 8006d38:	b570      	push	{r4, r5, r6, lr}
 8006d3a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006d3c:	4604      	mov	r4, r0
 8006d3e:	460d      	mov	r5, r1
 8006d40:	b976      	cbnz	r6, 8006d60 <_Balloc+0x28>
 8006d42:	2010      	movs	r0, #16
 8006d44:	f7ff ffd4 	bl	8006cf0 <malloc>
 8006d48:	4602      	mov	r2, r0
 8006d4a:	6260      	str	r0, [r4, #36]	; 0x24
 8006d4c:	b920      	cbnz	r0, 8006d58 <_Balloc+0x20>
 8006d4e:	2166      	movs	r1, #102	; 0x66
 8006d50:	4b17      	ldr	r3, [pc, #92]	; (8006db0 <_Balloc+0x78>)
 8006d52:	4818      	ldr	r0, [pc, #96]	; (8006db4 <_Balloc+0x7c>)
 8006d54:	f7ff f91e 	bl	8005f94 <__assert_func>
 8006d58:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006d5c:	6006      	str	r6, [r0, #0]
 8006d5e:	60c6      	str	r6, [r0, #12]
 8006d60:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8006d62:	68f3      	ldr	r3, [r6, #12]
 8006d64:	b183      	cbz	r3, 8006d88 <_Balloc+0x50>
 8006d66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d68:	68db      	ldr	r3, [r3, #12]
 8006d6a:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006d6e:	b9b8      	cbnz	r0, 8006da0 <_Balloc+0x68>
 8006d70:	2101      	movs	r1, #1
 8006d72:	fa01 f605 	lsl.w	r6, r1, r5
 8006d76:	1d72      	adds	r2, r6, #5
 8006d78:	4620      	mov	r0, r4
 8006d7a:	0092      	lsls	r2, r2, #2
 8006d7c:	f000 fb5e 	bl	800743c <_calloc_r>
 8006d80:	b160      	cbz	r0, 8006d9c <_Balloc+0x64>
 8006d82:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8006d86:	e00e      	b.n	8006da6 <_Balloc+0x6e>
 8006d88:	2221      	movs	r2, #33	; 0x21
 8006d8a:	2104      	movs	r1, #4
 8006d8c:	4620      	mov	r0, r4
 8006d8e:	f000 fb55 	bl	800743c <_calloc_r>
 8006d92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d94:	60f0      	str	r0, [r6, #12]
 8006d96:	68db      	ldr	r3, [r3, #12]
 8006d98:	2b00      	cmp	r3, #0
 8006d9a:	d1e4      	bne.n	8006d66 <_Balloc+0x2e>
 8006d9c:	2000      	movs	r0, #0
 8006d9e:	bd70      	pop	{r4, r5, r6, pc}
 8006da0:	6802      	ldr	r2, [r0, #0]
 8006da2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8006da6:	2300      	movs	r3, #0
 8006da8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006dac:	e7f7      	b.n	8006d9e <_Balloc+0x66>
 8006dae:	bf00      	nop
 8006db0:	08008660 	.word	0x08008660
 8006db4:	0800888a 	.word	0x0800888a

08006db8 <_Bfree>:
 8006db8:	b570      	push	{r4, r5, r6, lr}
 8006dba:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006dbc:	4605      	mov	r5, r0
 8006dbe:	460c      	mov	r4, r1
 8006dc0:	b976      	cbnz	r6, 8006de0 <_Bfree+0x28>
 8006dc2:	2010      	movs	r0, #16
 8006dc4:	f7ff ff94 	bl	8006cf0 <malloc>
 8006dc8:	4602      	mov	r2, r0
 8006dca:	6268      	str	r0, [r5, #36]	; 0x24
 8006dcc:	b920      	cbnz	r0, 8006dd8 <_Bfree+0x20>
 8006dce:	218a      	movs	r1, #138	; 0x8a
 8006dd0:	4b08      	ldr	r3, [pc, #32]	; (8006df4 <_Bfree+0x3c>)
 8006dd2:	4809      	ldr	r0, [pc, #36]	; (8006df8 <_Bfree+0x40>)
 8006dd4:	f7ff f8de 	bl	8005f94 <__assert_func>
 8006dd8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006ddc:	6006      	str	r6, [r0, #0]
 8006dde:	60c6      	str	r6, [r0, #12]
 8006de0:	b13c      	cbz	r4, 8006df2 <_Bfree+0x3a>
 8006de2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006de4:	6862      	ldr	r2, [r4, #4]
 8006de6:	68db      	ldr	r3, [r3, #12]
 8006de8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006dec:	6021      	str	r1, [r4, #0]
 8006dee:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8006df2:	bd70      	pop	{r4, r5, r6, pc}
 8006df4:	08008660 	.word	0x08008660
 8006df8:	0800888a 	.word	0x0800888a

08006dfc <__multadd>:
 8006dfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006e00:	4607      	mov	r7, r0
 8006e02:	460c      	mov	r4, r1
 8006e04:	461e      	mov	r6, r3
 8006e06:	2000      	movs	r0, #0
 8006e08:	690d      	ldr	r5, [r1, #16]
 8006e0a:	f101 0c14 	add.w	ip, r1, #20
 8006e0e:	f8dc 3000 	ldr.w	r3, [ip]
 8006e12:	3001      	adds	r0, #1
 8006e14:	b299      	uxth	r1, r3
 8006e16:	fb02 6101 	mla	r1, r2, r1, r6
 8006e1a:	0c1e      	lsrs	r6, r3, #16
 8006e1c:	0c0b      	lsrs	r3, r1, #16
 8006e1e:	fb02 3306 	mla	r3, r2, r6, r3
 8006e22:	b289      	uxth	r1, r1
 8006e24:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8006e28:	4285      	cmp	r5, r0
 8006e2a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8006e2e:	f84c 1b04 	str.w	r1, [ip], #4
 8006e32:	dcec      	bgt.n	8006e0e <__multadd+0x12>
 8006e34:	b30e      	cbz	r6, 8006e7a <__multadd+0x7e>
 8006e36:	68a3      	ldr	r3, [r4, #8]
 8006e38:	42ab      	cmp	r3, r5
 8006e3a:	dc19      	bgt.n	8006e70 <__multadd+0x74>
 8006e3c:	6861      	ldr	r1, [r4, #4]
 8006e3e:	4638      	mov	r0, r7
 8006e40:	3101      	adds	r1, #1
 8006e42:	f7ff ff79 	bl	8006d38 <_Balloc>
 8006e46:	4680      	mov	r8, r0
 8006e48:	b928      	cbnz	r0, 8006e56 <__multadd+0x5a>
 8006e4a:	4602      	mov	r2, r0
 8006e4c:	21b5      	movs	r1, #181	; 0xb5
 8006e4e:	4b0c      	ldr	r3, [pc, #48]	; (8006e80 <__multadd+0x84>)
 8006e50:	480c      	ldr	r0, [pc, #48]	; (8006e84 <__multadd+0x88>)
 8006e52:	f7ff f89f 	bl	8005f94 <__assert_func>
 8006e56:	6922      	ldr	r2, [r4, #16]
 8006e58:	f104 010c 	add.w	r1, r4, #12
 8006e5c:	3202      	adds	r2, #2
 8006e5e:	0092      	lsls	r2, r2, #2
 8006e60:	300c      	adds	r0, #12
 8006e62:	f7ff ff5b 	bl	8006d1c <memcpy>
 8006e66:	4621      	mov	r1, r4
 8006e68:	4638      	mov	r0, r7
 8006e6a:	f7ff ffa5 	bl	8006db8 <_Bfree>
 8006e6e:	4644      	mov	r4, r8
 8006e70:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006e74:	3501      	adds	r5, #1
 8006e76:	615e      	str	r6, [r3, #20]
 8006e78:	6125      	str	r5, [r4, #16]
 8006e7a:	4620      	mov	r0, r4
 8006e7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006e80:	08008879 	.word	0x08008879
 8006e84:	0800888a 	.word	0x0800888a

08006e88 <__hi0bits>:
 8006e88:	0c02      	lsrs	r2, r0, #16
 8006e8a:	0412      	lsls	r2, r2, #16
 8006e8c:	4603      	mov	r3, r0
 8006e8e:	b9ca      	cbnz	r2, 8006ec4 <__hi0bits+0x3c>
 8006e90:	0403      	lsls	r3, r0, #16
 8006e92:	2010      	movs	r0, #16
 8006e94:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8006e98:	bf04      	itt	eq
 8006e9a:	021b      	lsleq	r3, r3, #8
 8006e9c:	3008      	addeq	r0, #8
 8006e9e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8006ea2:	bf04      	itt	eq
 8006ea4:	011b      	lsleq	r3, r3, #4
 8006ea6:	3004      	addeq	r0, #4
 8006ea8:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8006eac:	bf04      	itt	eq
 8006eae:	009b      	lsleq	r3, r3, #2
 8006eb0:	3002      	addeq	r0, #2
 8006eb2:	2b00      	cmp	r3, #0
 8006eb4:	db05      	blt.n	8006ec2 <__hi0bits+0x3a>
 8006eb6:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8006eba:	f100 0001 	add.w	r0, r0, #1
 8006ebe:	bf08      	it	eq
 8006ec0:	2020      	moveq	r0, #32
 8006ec2:	4770      	bx	lr
 8006ec4:	2000      	movs	r0, #0
 8006ec6:	e7e5      	b.n	8006e94 <__hi0bits+0xc>

08006ec8 <__lo0bits>:
 8006ec8:	6803      	ldr	r3, [r0, #0]
 8006eca:	4602      	mov	r2, r0
 8006ecc:	f013 0007 	ands.w	r0, r3, #7
 8006ed0:	d00b      	beq.n	8006eea <__lo0bits+0x22>
 8006ed2:	07d9      	lsls	r1, r3, #31
 8006ed4:	d421      	bmi.n	8006f1a <__lo0bits+0x52>
 8006ed6:	0798      	lsls	r0, r3, #30
 8006ed8:	bf49      	itett	mi
 8006eda:	085b      	lsrmi	r3, r3, #1
 8006edc:	089b      	lsrpl	r3, r3, #2
 8006ede:	2001      	movmi	r0, #1
 8006ee0:	6013      	strmi	r3, [r2, #0]
 8006ee2:	bf5c      	itt	pl
 8006ee4:	2002      	movpl	r0, #2
 8006ee6:	6013      	strpl	r3, [r2, #0]
 8006ee8:	4770      	bx	lr
 8006eea:	b299      	uxth	r1, r3
 8006eec:	b909      	cbnz	r1, 8006ef2 <__lo0bits+0x2a>
 8006eee:	2010      	movs	r0, #16
 8006ef0:	0c1b      	lsrs	r3, r3, #16
 8006ef2:	b2d9      	uxtb	r1, r3
 8006ef4:	b909      	cbnz	r1, 8006efa <__lo0bits+0x32>
 8006ef6:	3008      	adds	r0, #8
 8006ef8:	0a1b      	lsrs	r3, r3, #8
 8006efa:	0719      	lsls	r1, r3, #28
 8006efc:	bf04      	itt	eq
 8006efe:	091b      	lsreq	r3, r3, #4
 8006f00:	3004      	addeq	r0, #4
 8006f02:	0799      	lsls	r1, r3, #30
 8006f04:	bf04      	itt	eq
 8006f06:	089b      	lsreq	r3, r3, #2
 8006f08:	3002      	addeq	r0, #2
 8006f0a:	07d9      	lsls	r1, r3, #31
 8006f0c:	d403      	bmi.n	8006f16 <__lo0bits+0x4e>
 8006f0e:	085b      	lsrs	r3, r3, #1
 8006f10:	f100 0001 	add.w	r0, r0, #1
 8006f14:	d003      	beq.n	8006f1e <__lo0bits+0x56>
 8006f16:	6013      	str	r3, [r2, #0]
 8006f18:	4770      	bx	lr
 8006f1a:	2000      	movs	r0, #0
 8006f1c:	4770      	bx	lr
 8006f1e:	2020      	movs	r0, #32
 8006f20:	4770      	bx	lr
	...

08006f24 <__i2b>:
 8006f24:	b510      	push	{r4, lr}
 8006f26:	460c      	mov	r4, r1
 8006f28:	2101      	movs	r1, #1
 8006f2a:	f7ff ff05 	bl	8006d38 <_Balloc>
 8006f2e:	4602      	mov	r2, r0
 8006f30:	b928      	cbnz	r0, 8006f3e <__i2b+0x1a>
 8006f32:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006f36:	4b04      	ldr	r3, [pc, #16]	; (8006f48 <__i2b+0x24>)
 8006f38:	4804      	ldr	r0, [pc, #16]	; (8006f4c <__i2b+0x28>)
 8006f3a:	f7ff f82b 	bl	8005f94 <__assert_func>
 8006f3e:	2301      	movs	r3, #1
 8006f40:	6144      	str	r4, [r0, #20]
 8006f42:	6103      	str	r3, [r0, #16]
 8006f44:	bd10      	pop	{r4, pc}
 8006f46:	bf00      	nop
 8006f48:	08008879 	.word	0x08008879
 8006f4c:	0800888a 	.word	0x0800888a

08006f50 <__multiply>:
 8006f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f54:	4691      	mov	r9, r2
 8006f56:	690a      	ldr	r2, [r1, #16]
 8006f58:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006f5c:	460c      	mov	r4, r1
 8006f5e:	429a      	cmp	r2, r3
 8006f60:	bfbe      	ittt	lt
 8006f62:	460b      	movlt	r3, r1
 8006f64:	464c      	movlt	r4, r9
 8006f66:	4699      	movlt	r9, r3
 8006f68:	6927      	ldr	r7, [r4, #16]
 8006f6a:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8006f6e:	68a3      	ldr	r3, [r4, #8]
 8006f70:	6861      	ldr	r1, [r4, #4]
 8006f72:	eb07 060a 	add.w	r6, r7, sl
 8006f76:	42b3      	cmp	r3, r6
 8006f78:	b085      	sub	sp, #20
 8006f7a:	bfb8      	it	lt
 8006f7c:	3101      	addlt	r1, #1
 8006f7e:	f7ff fedb 	bl	8006d38 <_Balloc>
 8006f82:	b930      	cbnz	r0, 8006f92 <__multiply+0x42>
 8006f84:	4602      	mov	r2, r0
 8006f86:	f240 115d 	movw	r1, #349	; 0x15d
 8006f8a:	4b43      	ldr	r3, [pc, #268]	; (8007098 <__multiply+0x148>)
 8006f8c:	4843      	ldr	r0, [pc, #268]	; (800709c <__multiply+0x14c>)
 8006f8e:	f7ff f801 	bl	8005f94 <__assert_func>
 8006f92:	f100 0514 	add.w	r5, r0, #20
 8006f96:	462b      	mov	r3, r5
 8006f98:	2200      	movs	r2, #0
 8006f9a:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8006f9e:	4543      	cmp	r3, r8
 8006fa0:	d321      	bcc.n	8006fe6 <__multiply+0x96>
 8006fa2:	f104 0314 	add.w	r3, r4, #20
 8006fa6:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8006faa:	f109 0314 	add.w	r3, r9, #20
 8006fae:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8006fb2:	9202      	str	r2, [sp, #8]
 8006fb4:	1b3a      	subs	r2, r7, r4
 8006fb6:	3a15      	subs	r2, #21
 8006fb8:	f022 0203 	bic.w	r2, r2, #3
 8006fbc:	3204      	adds	r2, #4
 8006fbe:	f104 0115 	add.w	r1, r4, #21
 8006fc2:	428f      	cmp	r7, r1
 8006fc4:	bf38      	it	cc
 8006fc6:	2204      	movcc	r2, #4
 8006fc8:	9201      	str	r2, [sp, #4]
 8006fca:	9a02      	ldr	r2, [sp, #8]
 8006fcc:	9303      	str	r3, [sp, #12]
 8006fce:	429a      	cmp	r2, r3
 8006fd0:	d80c      	bhi.n	8006fec <__multiply+0x9c>
 8006fd2:	2e00      	cmp	r6, #0
 8006fd4:	dd03      	ble.n	8006fde <__multiply+0x8e>
 8006fd6:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006fda:	2b00      	cmp	r3, #0
 8006fdc:	d059      	beq.n	8007092 <__multiply+0x142>
 8006fde:	6106      	str	r6, [r0, #16]
 8006fe0:	b005      	add	sp, #20
 8006fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006fe6:	f843 2b04 	str.w	r2, [r3], #4
 8006fea:	e7d8      	b.n	8006f9e <__multiply+0x4e>
 8006fec:	f8b3 a000 	ldrh.w	sl, [r3]
 8006ff0:	f1ba 0f00 	cmp.w	sl, #0
 8006ff4:	d023      	beq.n	800703e <__multiply+0xee>
 8006ff6:	46a9      	mov	r9, r5
 8006ff8:	f04f 0c00 	mov.w	ip, #0
 8006ffc:	f104 0e14 	add.w	lr, r4, #20
 8007000:	f85e 2b04 	ldr.w	r2, [lr], #4
 8007004:	f8d9 1000 	ldr.w	r1, [r9]
 8007008:	fa1f fb82 	uxth.w	fp, r2
 800700c:	b289      	uxth	r1, r1
 800700e:	fb0a 110b 	mla	r1, sl, fp, r1
 8007012:	4461      	add	r1, ip
 8007014:	f8d9 c000 	ldr.w	ip, [r9]
 8007018:	0c12      	lsrs	r2, r2, #16
 800701a:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800701e:	fb0a c202 	mla	r2, sl, r2, ip
 8007022:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8007026:	b289      	uxth	r1, r1
 8007028:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800702c:	4577      	cmp	r7, lr
 800702e:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8007032:	f849 1b04 	str.w	r1, [r9], #4
 8007036:	d8e3      	bhi.n	8007000 <__multiply+0xb0>
 8007038:	9a01      	ldr	r2, [sp, #4]
 800703a:	f845 c002 	str.w	ip, [r5, r2]
 800703e:	9a03      	ldr	r2, [sp, #12]
 8007040:	3304      	adds	r3, #4
 8007042:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8007046:	f1b9 0f00 	cmp.w	r9, #0
 800704a:	d020      	beq.n	800708e <__multiply+0x13e>
 800704c:	46ae      	mov	lr, r5
 800704e:	f04f 0a00 	mov.w	sl, #0
 8007052:	6829      	ldr	r1, [r5, #0]
 8007054:	f104 0c14 	add.w	ip, r4, #20
 8007058:	f8bc b000 	ldrh.w	fp, [ip]
 800705c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8007060:	b289      	uxth	r1, r1
 8007062:	fb09 220b 	mla	r2, r9, fp, r2
 8007066:	4492      	add	sl, r2
 8007068:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800706c:	f84e 1b04 	str.w	r1, [lr], #4
 8007070:	f85c 2b04 	ldr.w	r2, [ip], #4
 8007074:	f8be 1000 	ldrh.w	r1, [lr]
 8007078:	0c12      	lsrs	r2, r2, #16
 800707a:	fb09 1102 	mla	r1, r9, r2, r1
 800707e:	4567      	cmp	r7, ip
 8007080:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8007084:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8007088:	d8e6      	bhi.n	8007058 <__multiply+0x108>
 800708a:	9a01      	ldr	r2, [sp, #4]
 800708c:	50a9      	str	r1, [r5, r2]
 800708e:	3504      	adds	r5, #4
 8007090:	e79b      	b.n	8006fca <__multiply+0x7a>
 8007092:	3e01      	subs	r6, #1
 8007094:	e79d      	b.n	8006fd2 <__multiply+0x82>
 8007096:	bf00      	nop
 8007098:	08008879 	.word	0x08008879
 800709c:	0800888a 	.word	0x0800888a

080070a0 <__pow5mult>:
 80070a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80070a4:	4615      	mov	r5, r2
 80070a6:	f012 0203 	ands.w	r2, r2, #3
 80070aa:	4606      	mov	r6, r0
 80070ac:	460f      	mov	r7, r1
 80070ae:	d007      	beq.n	80070c0 <__pow5mult+0x20>
 80070b0:	4c25      	ldr	r4, [pc, #148]	; (8007148 <__pow5mult+0xa8>)
 80070b2:	3a01      	subs	r2, #1
 80070b4:	2300      	movs	r3, #0
 80070b6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80070ba:	f7ff fe9f 	bl	8006dfc <__multadd>
 80070be:	4607      	mov	r7, r0
 80070c0:	10ad      	asrs	r5, r5, #2
 80070c2:	d03d      	beq.n	8007140 <__pow5mult+0xa0>
 80070c4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 80070c6:	b97c      	cbnz	r4, 80070e8 <__pow5mult+0x48>
 80070c8:	2010      	movs	r0, #16
 80070ca:	f7ff fe11 	bl	8006cf0 <malloc>
 80070ce:	4602      	mov	r2, r0
 80070d0:	6270      	str	r0, [r6, #36]	; 0x24
 80070d2:	b928      	cbnz	r0, 80070e0 <__pow5mult+0x40>
 80070d4:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 80070d8:	4b1c      	ldr	r3, [pc, #112]	; (800714c <__pow5mult+0xac>)
 80070da:	481d      	ldr	r0, [pc, #116]	; (8007150 <__pow5mult+0xb0>)
 80070dc:	f7fe ff5a 	bl	8005f94 <__assert_func>
 80070e0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80070e4:	6004      	str	r4, [r0, #0]
 80070e6:	60c4      	str	r4, [r0, #12]
 80070e8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 80070ec:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80070f0:	b94c      	cbnz	r4, 8007106 <__pow5mult+0x66>
 80070f2:	f240 2171 	movw	r1, #625	; 0x271
 80070f6:	4630      	mov	r0, r6
 80070f8:	f7ff ff14 	bl	8006f24 <__i2b>
 80070fc:	2300      	movs	r3, #0
 80070fe:	4604      	mov	r4, r0
 8007100:	f8c8 0008 	str.w	r0, [r8, #8]
 8007104:	6003      	str	r3, [r0, #0]
 8007106:	f04f 0900 	mov.w	r9, #0
 800710a:	07eb      	lsls	r3, r5, #31
 800710c:	d50a      	bpl.n	8007124 <__pow5mult+0x84>
 800710e:	4639      	mov	r1, r7
 8007110:	4622      	mov	r2, r4
 8007112:	4630      	mov	r0, r6
 8007114:	f7ff ff1c 	bl	8006f50 <__multiply>
 8007118:	4680      	mov	r8, r0
 800711a:	4639      	mov	r1, r7
 800711c:	4630      	mov	r0, r6
 800711e:	f7ff fe4b 	bl	8006db8 <_Bfree>
 8007122:	4647      	mov	r7, r8
 8007124:	106d      	asrs	r5, r5, #1
 8007126:	d00b      	beq.n	8007140 <__pow5mult+0xa0>
 8007128:	6820      	ldr	r0, [r4, #0]
 800712a:	b938      	cbnz	r0, 800713c <__pow5mult+0x9c>
 800712c:	4622      	mov	r2, r4
 800712e:	4621      	mov	r1, r4
 8007130:	4630      	mov	r0, r6
 8007132:	f7ff ff0d 	bl	8006f50 <__multiply>
 8007136:	6020      	str	r0, [r4, #0]
 8007138:	f8c0 9000 	str.w	r9, [r0]
 800713c:	4604      	mov	r4, r0
 800713e:	e7e4      	b.n	800710a <__pow5mult+0x6a>
 8007140:	4638      	mov	r0, r7
 8007142:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007146:	bf00      	nop
 8007148:	080089d8 	.word	0x080089d8
 800714c:	08008660 	.word	0x08008660
 8007150:	0800888a 	.word	0x0800888a

08007154 <__lshift>:
 8007154:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007158:	460c      	mov	r4, r1
 800715a:	4607      	mov	r7, r0
 800715c:	4691      	mov	r9, r2
 800715e:	6923      	ldr	r3, [r4, #16]
 8007160:	6849      	ldr	r1, [r1, #4]
 8007162:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8007166:	68a3      	ldr	r3, [r4, #8]
 8007168:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800716c:	f108 0601 	add.w	r6, r8, #1
 8007170:	42b3      	cmp	r3, r6
 8007172:	db0b      	blt.n	800718c <__lshift+0x38>
 8007174:	4638      	mov	r0, r7
 8007176:	f7ff fddf 	bl	8006d38 <_Balloc>
 800717a:	4605      	mov	r5, r0
 800717c:	b948      	cbnz	r0, 8007192 <__lshift+0x3e>
 800717e:	4602      	mov	r2, r0
 8007180:	f240 11d9 	movw	r1, #473	; 0x1d9
 8007184:	4b29      	ldr	r3, [pc, #164]	; (800722c <__lshift+0xd8>)
 8007186:	482a      	ldr	r0, [pc, #168]	; (8007230 <__lshift+0xdc>)
 8007188:	f7fe ff04 	bl	8005f94 <__assert_func>
 800718c:	3101      	adds	r1, #1
 800718e:	005b      	lsls	r3, r3, #1
 8007190:	e7ee      	b.n	8007170 <__lshift+0x1c>
 8007192:	2300      	movs	r3, #0
 8007194:	f100 0114 	add.w	r1, r0, #20
 8007198:	f100 0210 	add.w	r2, r0, #16
 800719c:	4618      	mov	r0, r3
 800719e:	4553      	cmp	r3, sl
 80071a0:	db37      	blt.n	8007212 <__lshift+0xbe>
 80071a2:	6920      	ldr	r0, [r4, #16]
 80071a4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80071a8:	f104 0314 	add.w	r3, r4, #20
 80071ac:	f019 091f 	ands.w	r9, r9, #31
 80071b0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80071b4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 80071b8:	d02f      	beq.n	800721a <__lshift+0xc6>
 80071ba:	468a      	mov	sl, r1
 80071bc:	f04f 0c00 	mov.w	ip, #0
 80071c0:	f1c9 0e20 	rsb	lr, r9, #32
 80071c4:	681a      	ldr	r2, [r3, #0]
 80071c6:	fa02 f209 	lsl.w	r2, r2, r9
 80071ca:	ea42 020c 	orr.w	r2, r2, ip
 80071ce:	f84a 2b04 	str.w	r2, [sl], #4
 80071d2:	f853 2b04 	ldr.w	r2, [r3], #4
 80071d6:	4298      	cmp	r0, r3
 80071d8:	fa22 fc0e 	lsr.w	ip, r2, lr
 80071dc:	d8f2      	bhi.n	80071c4 <__lshift+0x70>
 80071de:	1b03      	subs	r3, r0, r4
 80071e0:	3b15      	subs	r3, #21
 80071e2:	f023 0303 	bic.w	r3, r3, #3
 80071e6:	3304      	adds	r3, #4
 80071e8:	f104 0215 	add.w	r2, r4, #21
 80071ec:	4290      	cmp	r0, r2
 80071ee:	bf38      	it	cc
 80071f0:	2304      	movcc	r3, #4
 80071f2:	f841 c003 	str.w	ip, [r1, r3]
 80071f6:	f1bc 0f00 	cmp.w	ip, #0
 80071fa:	d001      	beq.n	8007200 <__lshift+0xac>
 80071fc:	f108 0602 	add.w	r6, r8, #2
 8007200:	3e01      	subs	r6, #1
 8007202:	4638      	mov	r0, r7
 8007204:	4621      	mov	r1, r4
 8007206:	612e      	str	r6, [r5, #16]
 8007208:	f7ff fdd6 	bl	8006db8 <_Bfree>
 800720c:	4628      	mov	r0, r5
 800720e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007212:	f842 0f04 	str.w	r0, [r2, #4]!
 8007216:	3301      	adds	r3, #1
 8007218:	e7c1      	b.n	800719e <__lshift+0x4a>
 800721a:	3904      	subs	r1, #4
 800721c:	f853 2b04 	ldr.w	r2, [r3], #4
 8007220:	4298      	cmp	r0, r3
 8007222:	f841 2f04 	str.w	r2, [r1, #4]!
 8007226:	d8f9      	bhi.n	800721c <__lshift+0xc8>
 8007228:	e7ea      	b.n	8007200 <__lshift+0xac>
 800722a:	bf00      	nop
 800722c:	08008879 	.word	0x08008879
 8007230:	0800888a 	.word	0x0800888a

08007234 <__mcmp>:
 8007234:	4603      	mov	r3, r0
 8007236:	690a      	ldr	r2, [r1, #16]
 8007238:	6900      	ldr	r0, [r0, #16]
 800723a:	b530      	push	{r4, r5, lr}
 800723c:	1a80      	subs	r0, r0, r2
 800723e:	d10d      	bne.n	800725c <__mcmp+0x28>
 8007240:	3314      	adds	r3, #20
 8007242:	3114      	adds	r1, #20
 8007244:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8007248:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800724c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8007250:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8007254:	4295      	cmp	r5, r2
 8007256:	d002      	beq.n	800725e <__mcmp+0x2a>
 8007258:	d304      	bcc.n	8007264 <__mcmp+0x30>
 800725a:	2001      	movs	r0, #1
 800725c:	bd30      	pop	{r4, r5, pc}
 800725e:	42a3      	cmp	r3, r4
 8007260:	d3f4      	bcc.n	800724c <__mcmp+0x18>
 8007262:	e7fb      	b.n	800725c <__mcmp+0x28>
 8007264:	f04f 30ff 	mov.w	r0, #4294967295
 8007268:	e7f8      	b.n	800725c <__mcmp+0x28>
	...

0800726c <__mdiff>:
 800726c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007270:	460d      	mov	r5, r1
 8007272:	4607      	mov	r7, r0
 8007274:	4611      	mov	r1, r2
 8007276:	4628      	mov	r0, r5
 8007278:	4614      	mov	r4, r2
 800727a:	f7ff ffdb 	bl	8007234 <__mcmp>
 800727e:	1e06      	subs	r6, r0, #0
 8007280:	d111      	bne.n	80072a6 <__mdiff+0x3a>
 8007282:	4631      	mov	r1, r6
 8007284:	4638      	mov	r0, r7
 8007286:	f7ff fd57 	bl	8006d38 <_Balloc>
 800728a:	4602      	mov	r2, r0
 800728c:	b928      	cbnz	r0, 800729a <__mdiff+0x2e>
 800728e:	f240 2132 	movw	r1, #562	; 0x232
 8007292:	4b3a      	ldr	r3, [pc, #232]	; (800737c <__mdiff+0x110>)
 8007294:	483a      	ldr	r0, [pc, #232]	; (8007380 <__mdiff+0x114>)
 8007296:	f7fe fe7d 	bl	8005f94 <__assert_func>
 800729a:	2301      	movs	r3, #1
 800729c:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80072a0:	4610      	mov	r0, r2
 80072a2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80072a6:	bfa4      	itt	ge
 80072a8:	4623      	movge	r3, r4
 80072aa:	462c      	movge	r4, r5
 80072ac:	4638      	mov	r0, r7
 80072ae:	6861      	ldr	r1, [r4, #4]
 80072b0:	bfa6      	itte	ge
 80072b2:	461d      	movge	r5, r3
 80072b4:	2600      	movge	r6, #0
 80072b6:	2601      	movlt	r6, #1
 80072b8:	f7ff fd3e 	bl	8006d38 <_Balloc>
 80072bc:	4602      	mov	r2, r0
 80072be:	b918      	cbnz	r0, 80072c8 <__mdiff+0x5c>
 80072c0:	f44f 7110 	mov.w	r1, #576	; 0x240
 80072c4:	4b2d      	ldr	r3, [pc, #180]	; (800737c <__mdiff+0x110>)
 80072c6:	e7e5      	b.n	8007294 <__mdiff+0x28>
 80072c8:	f102 0814 	add.w	r8, r2, #20
 80072cc:	46c2      	mov	sl, r8
 80072ce:	f04f 0c00 	mov.w	ip, #0
 80072d2:	6927      	ldr	r7, [r4, #16]
 80072d4:	60c6      	str	r6, [r0, #12]
 80072d6:	692e      	ldr	r6, [r5, #16]
 80072d8:	f104 0014 	add.w	r0, r4, #20
 80072dc:	f105 0914 	add.w	r9, r5, #20
 80072e0:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 80072e4:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80072e8:	3410      	adds	r4, #16
 80072ea:	f854 bf04 	ldr.w	fp, [r4, #4]!
 80072ee:	f859 3b04 	ldr.w	r3, [r9], #4
 80072f2:	fa1f f18b 	uxth.w	r1, fp
 80072f6:	448c      	add	ip, r1
 80072f8:	b299      	uxth	r1, r3
 80072fa:	0c1b      	lsrs	r3, r3, #16
 80072fc:	ebac 0101 	sub.w	r1, ip, r1
 8007300:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8007304:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8007308:	b289      	uxth	r1, r1
 800730a:	ea4f 4c23 	mov.w	ip, r3, asr #16
 800730e:	454e      	cmp	r6, r9
 8007310:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8007314:	f84a 3b04 	str.w	r3, [sl], #4
 8007318:	d8e7      	bhi.n	80072ea <__mdiff+0x7e>
 800731a:	1b73      	subs	r3, r6, r5
 800731c:	3b15      	subs	r3, #21
 800731e:	f023 0303 	bic.w	r3, r3, #3
 8007322:	3515      	adds	r5, #21
 8007324:	3304      	adds	r3, #4
 8007326:	42ae      	cmp	r6, r5
 8007328:	bf38      	it	cc
 800732a:	2304      	movcc	r3, #4
 800732c:	4418      	add	r0, r3
 800732e:	4443      	add	r3, r8
 8007330:	461e      	mov	r6, r3
 8007332:	4605      	mov	r5, r0
 8007334:	4575      	cmp	r5, lr
 8007336:	d30e      	bcc.n	8007356 <__mdiff+0xea>
 8007338:	f10e 0103 	add.w	r1, lr, #3
 800733c:	1a09      	subs	r1, r1, r0
 800733e:	f021 0103 	bic.w	r1, r1, #3
 8007342:	3803      	subs	r0, #3
 8007344:	4586      	cmp	lr, r0
 8007346:	bf38      	it	cc
 8007348:	2100      	movcc	r1, #0
 800734a:	4419      	add	r1, r3
 800734c:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8007350:	b18b      	cbz	r3, 8007376 <__mdiff+0x10a>
 8007352:	6117      	str	r7, [r2, #16]
 8007354:	e7a4      	b.n	80072a0 <__mdiff+0x34>
 8007356:	f855 8b04 	ldr.w	r8, [r5], #4
 800735a:	fa1f f188 	uxth.w	r1, r8
 800735e:	4461      	add	r1, ip
 8007360:	140c      	asrs	r4, r1, #16
 8007362:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8007366:	b289      	uxth	r1, r1
 8007368:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 800736c:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8007370:	f846 1b04 	str.w	r1, [r6], #4
 8007374:	e7de      	b.n	8007334 <__mdiff+0xc8>
 8007376:	3f01      	subs	r7, #1
 8007378:	e7e8      	b.n	800734c <__mdiff+0xe0>
 800737a:	bf00      	nop
 800737c:	08008879 	.word	0x08008879
 8007380:	0800888a 	.word	0x0800888a

08007384 <__d2b>:
 8007384:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007388:	2101      	movs	r1, #1
 800738a:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800738e:	4690      	mov	r8, r2
 8007390:	461d      	mov	r5, r3
 8007392:	f7ff fcd1 	bl	8006d38 <_Balloc>
 8007396:	4604      	mov	r4, r0
 8007398:	b930      	cbnz	r0, 80073a8 <__d2b+0x24>
 800739a:	4602      	mov	r2, r0
 800739c:	f240 310a 	movw	r1, #778	; 0x30a
 80073a0:	4b24      	ldr	r3, [pc, #144]	; (8007434 <__d2b+0xb0>)
 80073a2:	4825      	ldr	r0, [pc, #148]	; (8007438 <__d2b+0xb4>)
 80073a4:	f7fe fdf6 	bl	8005f94 <__assert_func>
 80073a8:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80073ac:	f3c5 550a 	ubfx	r5, r5, #20, #11
 80073b0:	bb2d      	cbnz	r5, 80073fe <__d2b+0x7a>
 80073b2:	9301      	str	r3, [sp, #4]
 80073b4:	f1b8 0300 	subs.w	r3, r8, #0
 80073b8:	d026      	beq.n	8007408 <__d2b+0x84>
 80073ba:	4668      	mov	r0, sp
 80073bc:	9300      	str	r3, [sp, #0]
 80073be:	f7ff fd83 	bl	8006ec8 <__lo0bits>
 80073c2:	9900      	ldr	r1, [sp, #0]
 80073c4:	b1f0      	cbz	r0, 8007404 <__d2b+0x80>
 80073c6:	9a01      	ldr	r2, [sp, #4]
 80073c8:	f1c0 0320 	rsb	r3, r0, #32
 80073cc:	fa02 f303 	lsl.w	r3, r2, r3
 80073d0:	430b      	orrs	r3, r1
 80073d2:	40c2      	lsrs	r2, r0
 80073d4:	6163      	str	r3, [r4, #20]
 80073d6:	9201      	str	r2, [sp, #4]
 80073d8:	9b01      	ldr	r3, [sp, #4]
 80073da:	2b00      	cmp	r3, #0
 80073dc:	bf14      	ite	ne
 80073de:	2102      	movne	r1, #2
 80073e0:	2101      	moveq	r1, #1
 80073e2:	61a3      	str	r3, [r4, #24]
 80073e4:	6121      	str	r1, [r4, #16]
 80073e6:	b1c5      	cbz	r5, 800741a <__d2b+0x96>
 80073e8:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80073ec:	4405      	add	r5, r0
 80073ee:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80073f2:	603d      	str	r5, [r7, #0]
 80073f4:	6030      	str	r0, [r6, #0]
 80073f6:	4620      	mov	r0, r4
 80073f8:	b002      	add	sp, #8
 80073fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80073fe:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8007402:	e7d6      	b.n	80073b2 <__d2b+0x2e>
 8007404:	6161      	str	r1, [r4, #20]
 8007406:	e7e7      	b.n	80073d8 <__d2b+0x54>
 8007408:	a801      	add	r0, sp, #4
 800740a:	f7ff fd5d 	bl	8006ec8 <__lo0bits>
 800740e:	2101      	movs	r1, #1
 8007410:	9b01      	ldr	r3, [sp, #4]
 8007412:	6121      	str	r1, [r4, #16]
 8007414:	6163      	str	r3, [r4, #20]
 8007416:	3020      	adds	r0, #32
 8007418:	e7e5      	b.n	80073e6 <__d2b+0x62>
 800741a:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800741e:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8007422:	6038      	str	r0, [r7, #0]
 8007424:	6918      	ldr	r0, [r3, #16]
 8007426:	f7ff fd2f 	bl	8006e88 <__hi0bits>
 800742a:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 800742e:	6031      	str	r1, [r6, #0]
 8007430:	e7e1      	b.n	80073f6 <__d2b+0x72>
 8007432:	bf00      	nop
 8007434:	08008879 	.word	0x08008879
 8007438:	0800888a 	.word	0x0800888a

0800743c <_calloc_r>:
 800743c:	b570      	push	{r4, r5, r6, lr}
 800743e:	fba1 5402 	umull	r5, r4, r1, r2
 8007442:	b934      	cbnz	r4, 8007452 <_calloc_r+0x16>
 8007444:	4629      	mov	r1, r5
 8007446:	f000 f875 	bl	8007534 <_malloc_r>
 800744a:	4606      	mov	r6, r0
 800744c:	b928      	cbnz	r0, 800745a <_calloc_r+0x1e>
 800744e:	4630      	mov	r0, r6
 8007450:	bd70      	pop	{r4, r5, r6, pc}
 8007452:	220c      	movs	r2, #12
 8007454:	2600      	movs	r6, #0
 8007456:	6002      	str	r2, [r0, #0]
 8007458:	e7f9      	b.n	800744e <_calloc_r+0x12>
 800745a:	462a      	mov	r2, r5
 800745c:	4621      	mov	r1, r4
 800745e:	f7fd fffb 	bl	8005458 <memset>
 8007462:	e7f4      	b.n	800744e <_calloc_r+0x12>

08007464 <_free_r>:
 8007464:	b538      	push	{r3, r4, r5, lr}
 8007466:	4605      	mov	r5, r0
 8007468:	2900      	cmp	r1, #0
 800746a:	d040      	beq.n	80074ee <_free_r+0x8a>
 800746c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007470:	1f0c      	subs	r4, r1, #4
 8007472:	2b00      	cmp	r3, #0
 8007474:	bfb8      	it	lt
 8007476:	18e4      	addlt	r4, r4, r3
 8007478:	f000 fea4 	bl	80081c4 <__malloc_lock>
 800747c:	4a1c      	ldr	r2, [pc, #112]	; (80074f0 <_free_r+0x8c>)
 800747e:	6813      	ldr	r3, [r2, #0]
 8007480:	b933      	cbnz	r3, 8007490 <_free_r+0x2c>
 8007482:	6063      	str	r3, [r4, #4]
 8007484:	6014      	str	r4, [r2, #0]
 8007486:	4628      	mov	r0, r5
 8007488:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800748c:	f000 bea0 	b.w	80081d0 <__malloc_unlock>
 8007490:	42a3      	cmp	r3, r4
 8007492:	d908      	bls.n	80074a6 <_free_r+0x42>
 8007494:	6820      	ldr	r0, [r4, #0]
 8007496:	1821      	adds	r1, r4, r0
 8007498:	428b      	cmp	r3, r1
 800749a:	bf01      	itttt	eq
 800749c:	6819      	ldreq	r1, [r3, #0]
 800749e:	685b      	ldreq	r3, [r3, #4]
 80074a0:	1809      	addeq	r1, r1, r0
 80074a2:	6021      	streq	r1, [r4, #0]
 80074a4:	e7ed      	b.n	8007482 <_free_r+0x1e>
 80074a6:	461a      	mov	r2, r3
 80074a8:	685b      	ldr	r3, [r3, #4]
 80074aa:	b10b      	cbz	r3, 80074b0 <_free_r+0x4c>
 80074ac:	42a3      	cmp	r3, r4
 80074ae:	d9fa      	bls.n	80074a6 <_free_r+0x42>
 80074b0:	6811      	ldr	r1, [r2, #0]
 80074b2:	1850      	adds	r0, r2, r1
 80074b4:	42a0      	cmp	r0, r4
 80074b6:	d10b      	bne.n	80074d0 <_free_r+0x6c>
 80074b8:	6820      	ldr	r0, [r4, #0]
 80074ba:	4401      	add	r1, r0
 80074bc:	1850      	adds	r0, r2, r1
 80074be:	4283      	cmp	r3, r0
 80074c0:	6011      	str	r1, [r2, #0]
 80074c2:	d1e0      	bne.n	8007486 <_free_r+0x22>
 80074c4:	6818      	ldr	r0, [r3, #0]
 80074c6:	685b      	ldr	r3, [r3, #4]
 80074c8:	4401      	add	r1, r0
 80074ca:	6011      	str	r1, [r2, #0]
 80074cc:	6053      	str	r3, [r2, #4]
 80074ce:	e7da      	b.n	8007486 <_free_r+0x22>
 80074d0:	d902      	bls.n	80074d8 <_free_r+0x74>
 80074d2:	230c      	movs	r3, #12
 80074d4:	602b      	str	r3, [r5, #0]
 80074d6:	e7d6      	b.n	8007486 <_free_r+0x22>
 80074d8:	6820      	ldr	r0, [r4, #0]
 80074da:	1821      	adds	r1, r4, r0
 80074dc:	428b      	cmp	r3, r1
 80074de:	bf01      	itttt	eq
 80074e0:	6819      	ldreq	r1, [r3, #0]
 80074e2:	685b      	ldreq	r3, [r3, #4]
 80074e4:	1809      	addeq	r1, r1, r0
 80074e6:	6021      	streq	r1, [r4, #0]
 80074e8:	6063      	str	r3, [r4, #4]
 80074ea:	6054      	str	r4, [r2, #4]
 80074ec:	e7cb      	b.n	8007486 <_free_r+0x22>
 80074ee:	bd38      	pop	{r3, r4, r5, pc}
 80074f0:	200006b8 	.word	0x200006b8

080074f4 <sbrk_aligned>:
 80074f4:	b570      	push	{r4, r5, r6, lr}
 80074f6:	4e0e      	ldr	r6, [pc, #56]	; (8007530 <sbrk_aligned+0x3c>)
 80074f8:	460c      	mov	r4, r1
 80074fa:	6831      	ldr	r1, [r6, #0]
 80074fc:	4605      	mov	r5, r0
 80074fe:	b911      	cbnz	r1, 8007506 <sbrk_aligned+0x12>
 8007500:	f000 fb40 	bl	8007b84 <_sbrk_r>
 8007504:	6030      	str	r0, [r6, #0]
 8007506:	4621      	mov	r1, r4
 8007508:	4628      	mov	r0, r5
 800750a:	f000 fb3b 	bl	8007b84 <_sbrk_r>
 800750e:	1c43      	adds	r3, r0, #1
 8007510:	d00a      	beq.n	8007528 <sbrk_aligned+0x34>
 8007512:	1cc4      	adds	r4, r0, #3
 8007514:	f024 0403 	bic.w	r4, r4, #3
 8007518:	42a0      	cmp	r0, r4
 800751a:	d007      	beq.n	800752c <sbrk_aligned+0x38>
 800751c:	1a21      	subs	r1, r4, r0
 800751e:	4628      	mov	r0, r5
 8007520:	f000 fb30 	bl	8007b84 <_sbrk_r>
 8007524:	3001      	adds	r0, #1
 8007526:	d101      	bne.n	800752c <sbrk_aligned+0x38>
 8007528:	f04f 34ff 	mov.w	r4, #4294967295
 800752c:	4620      	mov	r0, r4
 800752e:	bd70      	pop	{r4, r5, r6, pc}
 8007530:	200006bc 	.word	0x200006bc

08007534 <_malloc_r>:
 8007534:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007538:	1ccd      	adds	r5, r1, #3
 800753a:	f025 0503 	bic.w	r5, r5, #3
 800753e:	3508      	adds	r5, #8
 8007540:	2d0c      	cmp	r5, #12
 8007542:	bf38      	it	cc
 8007544:	250c      	movcc	r5, #12
 8007546:	2d00      	cmp	r5, #0
 8007548:	4607      	mov	r7, r0
 800754a:	db01      	blt.n	8007550 <_malloc_r+0x1c>
 800754c:	42a9      	cmp	r1, r5
 800754e:	d905      	bls.n	800755c <_malloc_r+0x28>
 8007550:	230c      	movs	r3, #12
 8007552:	2600      	movs	r6, #0
 8007554:	603b      	str	r3, [r7, #0]
 8007556:	4630      	mov	r0, r6
 8007558:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800755c:	4e2e      	ldr	r6, [pc, #184]	; (8007618 <_malloc_r+0xe4>)
 800755e:	f000 fe31 	bl	80081c4 <__malloc_lock>
 8007562:	6833      	ldr	r3, [r6, #0]
 8007564:	461c      	mov	r4, r3
 8007566:	bb34      	cbnz	r4, 80075b6 <_malloc_r+0x82>
 8007568:	4629      	mov	r1, r5
 800756a:	4638      	mov	r0, r7
 800756c:	f7ff ffc2 	bl	80074f4 <sbrk_aligned>
 8007570:	1c43      	adds	r3, r0, #1
 8007572:	4604      	mov	r4, r0
 8007574:	d14d      	bne.n	8007612 <_malloc_r+0xde>
 8007576:	6834      	ldr	r4, [r6, #0]
 8007578:	4626      	mov	r6, r4
 800757a:	2e00      	cmp	r6, #0
 800757c:	d140      	bne.n	8007600 <_malloc_r+0xcc>
 800757e:	6823      	ldr	r3, [r4, #0]
 8007580:	4631      	mov	r1, r6
 8007582:	4638      	mov	r0, r7
 8007584:	eb04 0803 	add.w	r8, r4, r3
 8007588:	f000 fafc 	bl	8007b84 <_sbrk_r>
 800758c:	4580      	cmp	r8, r0
 800758e:	d13a      	bne.n	8007606 <_malloc_r+0xd2>
 8007590:	6821      	ldr	r1, [r4, #0]
 8007592:	3503      	adds	r5, #3
 8007594:	1a6d      	subs	r5, r5, r1
 8007596:	f025 0503 	bic.w	r5, r5, #3
 800759a:	3508      	adds	r5, #8
 800759c:	2d0c      	cmp	r5, #12
 800759e:	bf38      	it	cc
 80075a0:	250c      	movcc	r5, #12
 80075a2:	4638      	mov	r0, r7
 80075a4:	4629      	mov	r1, r5
 80075a6:	f7ff ffa5 	bl	80074f4 <sbrk_aligned>
 80075aa:	3001      	adds	r0, #1
 80075ac:	d02b      	beq.n	8007606 <_malloc_r+0xd2>
 80075ae:	6823      	ldr	r3, [r4, #0]
 80075b0:	442b      	add	r3, r5
 80075b2:	6023      	str	r3, [r4, #0]
 80075b4:	e00e      	b.n	80075d4 <_malloc_r+0xa0>
 80075b6:	6822      	ldr	r2, [r4, #0]
 80075b8:	1b52      	subs	r2, r2, r5
 80075ba:	d41e      	bmi.n	80075fa <_malloc_r+0xc6>
 80075bc:	2a0b      	cmp	r2, #11
 80075be:	d916      	bls.n	80075ee <_malloc_r+0xba>
 80075c0:	1961      	adds	r1, r4, r5
 80075c2:	42a3      	cmp	r3, r4
 80075c4:	6025      	str	r5, [r4, #0]
 80075c6:	bf18      	it	ne
 80075c8:	6059      	strne	r1, [r3, #4]
 80075ca:	6863      	ldr	r3, [r4, #4]
 80075cc:	bf08      	it	eq
 80075ce:	6031      	streq	r1, [r6, #0]
 80075d0:	5162      	str	r2, [r4, r5]
 80075d2:	604b      	str	r3, [r1, #4]
 80075d4:	4638      	mov	r0, r7
 80075d6:	f104 060b 	add.w	r6, r4, #11
 80075da:	f000 fdf9 	bl	80081d0 <__malloc_unlock>
 80075de:	f026 0607 	bic.w	r6, r6, #7
 80075e2:	1d23      	adds	r3, r4, #4
 80075e4:	1af2      	subs	r2, r6, r3
 80075e6:	d0b6      	beq.n	8007556 <_malloc_r+0x22>
 80075e8:	1b9b      	subs	r3, r3, r6
 80075ea:	50a3      	str	r3, [r4, r2]
 80075ec:	e7b3      	b.n	8007556 <_malloc_r+0x22>
 80075ee:	6862      	ldr	r2, [r4, #4]
 80075f0:	42a3      	cmp	r3, r4
 80075f2:	bf0c      	ite	eq
 80075f4:	6032      	streq	r2, [r6, #0]
 80075f6:	605a      	strne	r2, [r3, #4]
 80075f8:	e7ec      	b.n	80075d4 <_malloc_r+0xa0>
 80075fa:	4623      	mov	r3, r4
 80075fc:	6864      	ldr	r4, [r4, #4]
 80075fe:	e7b2      	b.n	8007566 <_malloc_r+0x32>
 8007600:	4634      	mov	r4, r6
 8007602:	6876      	ldr	r6, [r6, #4]
 8007604:	e7b9      	b.n	800757a <_malloc_r+0x46>
 8007606:	230c      	movs	r3, #12
 8007608:	4638      	mov	r0, r7
 800760a:	603b      	str	r3, [r7, #0]
 800760c:	f000 fde0 	bl	80081d0 <__malloc_unlock>
 8007610:	e7a1      	b.n	8007556 <_malloc_r+0x22>
 8007612:	6025      	str	r5, [r4, #0]
 8007614:	e7de      	b.n	80075d4 <_malloc_r+0xa0>
 8007616:	bf00      	nop
 8007618:	200006b8 	.word	0x200006b8

0800761c <__ssputs_r>:
 800761c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007620:	688e      	ldr	r6, [r1, #8]
 8007622:	4682      	mov	sl, r0
 8007624:	429e      	cmp	r6, r3
 8007626:	460c      	mov	r4, r1
 8007628:	4690      	mov	r8, r2
 800762a:	461f      	mov	r7, r3
 800762c:	d838      	bhi.n	80076a0 <__ssputs_r+0x84>
 800762e:	898a      	ldrh	r2, [r1, #12]
 8007630:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8007634:	d032      	beq.n	800769c <__ssputs_r+0x80>
 8007636:	6825      	ldr	r5, [r4, #0]
 8007638:	6909      	ldr	r1, [r1, #16]
 800763a:	3301      	adds	r3, #1
 800763c:	eba5 0901 	sub.w	r9, r5, r1
 8007640:	6965      	ldr	r5, [r4, #20]
 8007642:	444b      	add	r3, r9
 8007644:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8007648:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800764c:	106d      	asrs	r5, r5, #1
 800764e:	429d      	cmp	r5, r3
 8007650:	bf38      	it	cc
 8007652:	461d      	movcc	r5, r3
 8007654:	0553      	lsls	r3, r2, #21
 8007656:	d531      	bpl.n	80076bc <__ssputs_r+0xa0>
 8007658:	4629      	mov	r1, r5
 800765a:	f7ff ff6b 	bl	8007534 <_malloc_r>
 800765e:	4606      	mov	r6, r0
 8007660:	b950      	cbnz	r0, 8007678 <__ssputs_r+0x5c>
 8007662:	230c      	movs	r3, #12
 8007664:	f04f 30ff 	mov.w	r0, #4294967295
 8007668:	f8ca 3000 	str.w	r3, [sl]
 800766c:	89a3      	ldrh	r3, [r4, #12]
 800766e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007672:	81a3      	strh	r3, [r4, #12]
 8007674:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007678:	464a      	mov	r2, r9
 800767a:	6921      	ldr	r1, [r4, #16]
 800767c:	f7ff fb4e 	bl	8006d1c <memcpy>
 8007680:	89a3      	ldrh	r3, [r4, #12]
 8007682:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8007686:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800768a:	81a3      	strh	r3, [r4, #12]
 800768c:	6126      	str	r6, [r4, #16]
 800768e:	444e      	add	r6, r9
 8007690:	6026      	str	r6, [r4, #0]
 8007692:	463e      	mov	r6, r7
 8007694:	6165      	str	r5, [r4, #20]
 8007696:	eba5 0509 	sub.w	r5, r5, r9
 800769a:	60a5      	str	r5, [r4, #8]
 800769c:	42be      	cmp	r6, r7
 800769e:	d900      	bls.n	80076a2 <__ssputs_r+0x86>
 80076a0:	463e      	mov	r6, r7
 80076a2:	4632      	mov	r2, r6
 80076a4:	4641      	mov	r1, r8
 80076a6:	6820      	ldr	r0, [r4, #0]
 80076a8:	f000 fd72 	bl	8008190 <memmove>
 80076ac:	68a3      	ldr	r3, [r4, #8]
 80076ae:	2000      	movs	r0, #0
 80076b0:	1b9b      	subs	r3, r3, r6
 80076b2:	60a3      	str	r3, [r4, #8]
 80076b4:	6823      	ldr	r3, [r4, #0]
 80076b6:	4433      	add	r3, r6
 80076b8:	6023      	str	r3, [r4, #0]
 80076ba:	e7db      	b.n	8007674 <__ssputs_r+0x58>
 80076bc:	462a      	mov	r2, r5
 80076be:	f000 fd8d 	bl	80081dc <_realloc_r>
 80076c2:	4606      	mov	r6, r0
 80076c4:	2800      	cmp	r0, #0
 80076c6:	d1e1      	bne.n	800768c <__ssputs_r+0x70>
 80076c8:	4650      	mov	r0, sl
 80076ca:	6921      	ldr	r1, [r4, #16]
 80076cc:	f7ff feca 	bl	8007464 <_free_r>
 80076d0:	e7c7      	b.n	8007662 <__ssputs_r+0x46>
	...

080076d4 <_svfiprintf_r>:
 80076d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076d8:	4698      	mov	r8, r3
 80076da:	898b      	ldrh	r3, [r1, #12]
 80076dc:	4607      	mov	r7, r0
 80076de:	061b      	lsls	r3, r3, #24
 80076e0:	460d      	mov	r5, r1
 80076e2:	4614      	mov	r4, r2
 80076e4:	b09d      	sub	sp, #116	; 0x74
 80076e6:	d50e      	bpl.n	8007706 <_svfiprintf_r+0x32>
 80076e8:	690b      	ldr	r3, [r1, #16]
 80076ea:	b963      	cbnz	r3, 8007706 <_svfiprintf_r+0x32>
 80076ec:	2140      	movs	r1, #64	; 0x40
 80076ee:	f7ff ff21 	bl	8007534 <_malloc_r>
 80076f2:	6028      	str	r0, [r5, #0]
 80076f4:	6128      	str	r0, [r5, #16]
 80076f6:	b920      	cbnz	r0, 8007702 <_svfiprintf_r+0x2e>
 80076f8:	230c      	movs	r3, #12
 80076fa:	603b      	str	r3, [r7, #0]
 80076fc:	f04f 30ff 	mov.w	r0, #4294967295
 8007700:	e0d1      	b.n	80078a6 <_svfiprintf_r+0x1d2>
 8007702:	2340      	movs	r3, #64	; 0x40
 8007704:	616b      	str	r3, [r5, #20]
 8007706:	2300      	movs	r3, #0
 8007708:	9309      	str	r3, [sp, #36]	; 0x24
 800770a:	2320      	movs	r3, #32
 800770c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8007710:	2330      	movs	r3, #48	; 0x30
 8007712:	f04f 0901 	mov.w	r9, #1
 8007716:	f8cd 800c 	str.w	r8, [sp, #12]
 800771a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80078c0 <_svfiprintf_r+0x1ec>
 800771e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007722:	4623      	mov	r3, r4
 8007724:	469a      	mov	sl, r3
 8007726:	f813 2b01 	ldrb.w	r2, [r3], #1
 800772a:	b10a      	cbz	r2, 8007730 <_svfiprintf_r+0x5c>
 800772c:	2a25      	cmp	r2, #37	; 0x25
 800772e:	d1f9      	bne.n	8007724 <_svfiprintf_r+0x50>
 8007730:	ebba 0b04 	subs.w	fp, sl, r4
 8007734:	d00b      	beq.n	800774e <_svfiprintf_r+0x7a>
 8007736:	465b      	mov	r3, fp
 8007738:	4622      	mov	r2, r4
 800773a:	4629      	mov	r1, r5
 800773c:	4638      	mov	r0, r7
 800773e:	f7ff ff6d 	bl	800761c <__ssputs_r>
 8007742:	3001      	adds	r0, #1
 8007744:	f000 80aa 	beq.w	800789c <_svfiprintf_r+0x1c8>
 8007748:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800774a:	445a      	add	r2, fp
 800774c:	9209      	str	r2, [sp, #36]	; 0x24
 800774e:	f89a 3000 	ldrb.w	r3, [sl]
 8007752:	2b00      	cmp	r3, #0
 8007754:	f000 80a2 	beq.w	800789c <_svfiprintf_r+0x1c8>
 8007758:	2300      	movs	r3, #0
 800775a:	f04f 32ff 	mov.w	r2, #4294967295
 800775e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007762:	f10a 0a01 	add.w	sl, sl, #1
 8007766:	9304      	str	r3, [sp, #16]
 8007768:	9307      	str	r3, [sp, #28]
 800776a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800776e:	931a      	str	r3, [sp, #104]	; 0x68
 8007770:	4654      	mov	r4, sl
 8007772:	2205      	movs	r2, #5
 8007774:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007778:	4851      	ldr	r0, [pc, #324]	; (80078c0 <_svfiprintf_r+0x1ec>)
 800777a:	f7ff fac1 	bl	8006d00 <memchr>
 800777e:	9a04      	ldr	r2, [sp, #16]
 8007780:	b9d8      	cbnz	r0, 80077ba <_svfiprintf_r+0xe6>
 8007782:	06d0      	lsls	r0, r2, #27
 8007784:	bf44      	itt	mi
 8007786:	2320      	movmi	r3, #32
 8007788:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800778c:	0711      	lsls	r1, r2, #28
 800778e:	bf44      	itt	mi
 8007790:	232b      	movmi	r3, #43	; 0x2b
 8007792:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007796:	f89a 3000 	ldrb.w	r3, [sl]
 800779a:	2b2a      	cmp	r3, #42	; 0x2a
 800779c:	d015      	beq.n	80077ca <_svfiprintf_r+0xf6>
 800779e:	4654      	mov	r4, sl
 80077a0:	2000      	movs	r0, #0
 80077a2:	f04f 0c0a 	mov.w	ip, #10
 80077a6:	9a07      	ldr	r2, [sp, #28]
 80077a8:	4621      	mov	r1, r4
 80077aa:	f811 3b01 	ldrb.w	r3, [r1], #1
 80077ae:	3b30      	subs	r3, #48	; 0x30
 80077b0:	2b09      	cmp	r3, #9
 80077b2:	d94e      	bls.n	8007852 <_svfiprintf_r+0x17e>
 80077b4:	b1b0      	cbz	r0, 80077e4 <_svfiprintf_r+0x110>
 80077b6:	9207      	str	r2, [sp, #28]
 80077b8:	e014      	b.n	80077e4 <_svfiprintf_r+0x110>
 80077ba:	eba0 0308 	sub.w	r3, r0, r8
 80077be:	fa09 f303 	lsl.w	r3, r9, r3
 80077c2:	4313      	orrs	r3, r2
 80077c4:	46a2      	mov	sl, r4
 80077c6:	9304      	str	r3, [sp, #16]
 80077c8:	e7d2      	b.n	8007770 <_svfiprintf_r+0x9c>
 80077ca:	9b03      	ldr	r3, [sp, #12]
 80077cc:	1d19      	adds	r1, r3, #4
 80077ce:	681b      	ldr	r3, [r3, #0]
 80077d0:	9103      	str	r1, [sp, #12]
 80077d2:	2b00      	cmp	r3, #0
 80077d4:	bfbb      	ittet	lt
 80077d6:	425b      	neglt	r3, r3
 80077d8:	f042 0202 	orrlt.w	r2, r2, #2
 80077dc:	9307      	strge	r3, [sp, #28]
 80077de:	9307      	strlt	r3, [sp, #28]
 80077e0:	bfb8      	it	lt
 80077e2:	9204      	strlt	r2, [sp, #16]
 80077e4:	7823      	ldrb	r3, [r4, #0]
 80077e6:	2b2e      	cmp	r3, #46	; 0x2e
 80077e8:	d10c      	bne.n	8007804 <_svfiprintf_r+0x130>
 80077ea:	7863      	ldrb	r3, [r4, #1]
 80077ec:	2b2a      	cmp	r3, #42	; 0x2a
 80077ee:	d135      	bne.n	800785c <_svfiprintf_r+0x188>
 80077f0:	9b03      	ldr	r3, [sp, #12]
 80077f2:	3402      	adds	r4, #2
 80077f4:	1d1a      	adds	r2, r3, #4
 80077f6:	681b      	ldr	r3, [r3, #0]
 80077f8:	9203      	str	r2, [sp, #12]
 80077fa:	2b00      	cmp	r3, #0
 80077fc:	bfb8      	it	lt
 80077fe:	f04f 33ff 	movlt.w	r3, #4294967295
 8007802:	9305      	str	r3, [sp, #20]
 8007804:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 80078c4 <_svfiprintf_r+0x1f0>
 8007808:	2203      	movs	r2, #3
 800780a:	4650      	mov	r0, sl
 800780c:	7821      	ldrb	r1, [r4, #0]
 800780e:	f7ff fa77 	bl	8006d00 <memchr>
 8007812:	b140      	cbz	r0, 8007826 <_svfiprintf_r+0x152>
 8007814:	2340      	movs	r3, #64	; 0x40
 8007816:	eba0 000a 	sub.w	r0, r0, sl
 800781a:	fa03 f000 	lsl.w	r0, r3, r0
 800781e:	9b04      	ldr	r3, [sp, #16]
 8007820:	3401      	adds	r4, #1
 8007822:	4303      	orrs	r3, r0
 8007824:	9304      	str	r3, [sp, #16]
 8007826:	f814 1b01 	ldrb.w	r1, [r4], #1
 800782a:	2206      	movs	r2, #6
 800782c:	4826      	ldr	r0, [pc, #152]	; (80078c8 <_svfiprintf_r+0x1f4>)
 800782e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007832:	f7ff fa65 	bl	8006d00 <memchr>
 8007836:	2800      	cmp	r0, #0
 8007838:	d038      	beq.n	80078ac <_svfiprintf_r+0x1d8>
 800783a:	4b24      	ldr	r3, [pc, #144]	; (80078cc <_svfiprintf_r+0x1f8>)
 800783c:	bb1b      	cbnz	r3, 8007886 <_svfiprintf_r+0x1b2>
 800783e:	9b03      	ldr	r3, [sp, #12]
 8007840:	3307      	adds	r3, #7
 8007842:	f023 0307 	bic.w	r3, r3, #7
 8007846:	3308      	adds	r3, #8
 8007848:	9303      	str	r3, [sp, #12]
 800784a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800784c:	4433      	add	r3, r6
 800784e:	9309      	str	r3, [sp, #36]	; 0x24
 8007850:	e767      	b.n	8007722 <_svfiprintf_r+0x4e>
 8007852:	460c      	mov	r4, r1
 8007854:	2001      	movs	r0, #1
 8007856:	fb0c 3202 	mla	r2, ip, r2, r3
 800785a:	e7a5      	b.n	80077a8 <_svfiprintf_r+0xd4>
 800785c:	2300      	movs	r3, #0
 800785e:	f04f 0c0a 	mov.w	ip, #10
 8007862:	4619      	mov	r1, r3
 8007864:	3401      	adds	r4, #1
 8007866:	9305      	str	r3, [sp, #20]
 8007868:	4620      	mov	r0, r4
 800786a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800786e:	3a30      	subs	r2, #48	; 0x30
 8007870:	2a09      	cmp	r2, #9
 8007872:	d903      	bls.n	800787c <_svfiprintf_r+0x1a8>
 8007874:	2b00      	cmp	r3, #0
 8007876:	d0c5      	beq.n	8007804 <_svfiprintf_r+0x130>
 8007878:	9105      	str	r1, [sp, #20]
 800787a:	e7c3      	b.n	8007804 <_svfiprintf_r+0x130>
 800787c:	4604      	mov	r4, r0
 800787e:	2301      	movs	r3, #1
 8007880:	fb0c 2101 	mla	r1, ip, r1, r2
 8007884:	e7f0      	b.n	8007868 <_svfiprintf_r+0x194>
 8007886:	ab03      	add	r3, sp, #12
 8007888:	9300      	str	r3, [sp, #0]
 800788a:	462a      	mov	r2, r5
 800788c:	4638      	mov	r0, r7
 800788e:	4b10      	ldr	r3, [pc, #64]	; (80078d0 <_svfiprintf_r+0x1fc>)
 8007890:	a904      	add	r1, sp, #16
 8007892:	f7fd fe87 	bl	80055a4 <_printf_float>
 8007896:	1c42      	adds	r2, r0, #1
 8007898:	4606      	mov	r6, r0
 800789a:	d1d6      	bne.n	800784a <_svfiprintf_r+0x176>
 800789c:	89ab      	ldrh	r3, [r5, #12]
 800789e:	065b      	lsls	r3, r3, #25
 80078a0:	f53f af2c 	bmi.w	80076fc <_svfiprintf_r+0x28>
 80078a4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80078a6:	b01d      	add	sp, #116	; 0x74
 80078a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078ac:	ab03      	add	r3, sp, #12
 80078ae:	9300      	str	r3, [sp, #0]
 80078b0:	462a      	mov	r2, r5
 80078b2:	4638      	mov	r0, r7
 80078b4:	4b06      	ldr	r3, [pc, #24]	; (80078d0 <_svfiprintf_r+0x1fc>)
 80078b6:	a904      	add	r1, sp, #16
 80078b8:	f7fe f910 	bl	8005adc <_printf_i>
 80078bc:	e7eb      	b.n	8007896 <_svfiprintf_r+0x1c2>
 80078be:	bf00      	nop
 80078c0:	080089e4 	.word	0x080089e4
 80078c4:	080089ea 	.word	0x080089ea
 80078c8:	080089ee 	.word	0x080089ee
 80078cc:	080055a5 	.word	0x080055a5
 80078d0:	0800761d 	.word	0x0800761d

080078d4 <__sfputc_r>:
 80078d4:	6893      	ldr	r3, [r2, #8]
 80078d6:	b410      	push	{r4}
 80078d8:	3b01      	subs	r3, #1
 80078da:	2b00      	cmp	r3, #0
 80078dc:	6093      	str	r3, [r2, #8]
 80078de:	da07      	bge.n	80078f0 <__sfputc_r+0x1c>
 80078e0:	6994      	ldr	r4, [r2, #24]
 80078e2:	42a3      	cmp	r3, r4
 80078e4:	db01      	blt.n	80078ea <__sfputc_r+0x16>
 80078e6:	290a      	cmp	r1, #10
 80078e8:	d102      	bne.n	80078f0 <__sfputc_r+0x1c>
 80078ea:	bc10      	pop	{r4}
 80078ec:	f000 b95a 	b.w	8007ba4 <__swbuf_r>
 80078f0:	6813      	ldr	r3, [r2, #0]
 80078f2:	1c58      	adds	r0, r3, #1
 80078f4:	6010      	str	r0, [r2, #0]
 80078f6:	7019      	strb	r1, [r3, #0]
 80078f8:	4608      	mov	r0, r1
 80078fa:	bc10      	pop	{r4}
 80078fc:	4770      	bx	lr

080078fe <__sfputs_r>:
 80078fe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007900:	4606      	mov	r6, r0
 8007902:	460f      	mov	r7, r1
 8007904:	4614      	mov	r4, r2
 8007906:	18d5      	adds	r5, r2, r3
 8007908:	42ac      	cmp	r4, r5
 800790a:	d101      	bne.n	8007910 <__sfputs_r+0x12>
 800790c:	2000      	movs	r0, #0
 800790e:	e007      	b.n	8007920 <__sfputs_r+0x22>
 8007910:	463a      	mov	r2, r7
 8007912:	4630      	mov	r0, r6
 8007914:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007918:	f7ff ffdc 	bl	80078d4 <__sfputc_r>
 800791c:	1c43      	adds	r3, r0, #1
 800791e:	d1f3      	bne.n	8007908 <__sfputs_r+0xa>
 8007920:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08007924 <_vfiprintf_r>:
 8007924:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007928:	460d      	mov	r5, r1
 800792a:	4614      	mov	r4, r2
 800792c:	4698      	mov	r8, r3
 800792e:	4606      	mov	r6, r0
 8007930:	b09d      	sub	sp, #116	; 0x74
 8007932:	b118      	cbz	r0, 800793c <_vfiprintf_r+0x18>
 8007934:	6983      	ldr	r3, [r0, #24]
 8007936:	b90b      	cbnz	r3, 800793c <_vfiprintf_r+0x18>
 8007938:	f000 fb12 	bl	8007f60 <__sinit>
 800793c:	4b89      	ldr	r3, [pc, #548]	; (8007b64 <_vfiprintf_r+0x240>)
 800793e:	429d      	cmp	r5, r3
 8007940:	d11b      	bne.n	800797a <_vfiprintf_r+0x56>
 8007942:	6875      	ldr	r5, [r6, #4]
 8007944:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007946:	07d9      	lsls	r1, r3, #31
 8007948:	d405      	bmi.n	8007956 <_vfiprintf_r+0x32>
 800794a:	89ab      	ldrh	r3, [r5, #12]
 800794c:	059a      	lsls	r2, r3, #22
 800794e:	d402      	bmi.n	8007956 <_vfiprintf_r+0x32>
 8007950:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007952:	f000 fba3 	bl	800809c <__retarget_lock_acquire_recursive>
 8007956:	89ab      	ldrh	r3, [r5, #12]
 8007958:	071b      	lsls	r3, r3, #28
 800795a:	d501      	bpl.n	8007960 <_vfiprintf_r+0x3c>
 800795c:	692b      	ldr	r3, [r5, #16]
 800795e:	b9eb      	cbnz	r3, 800799c <_vfiprintf_r+0x78>
 8007960:	4629      	mov	r1, r5
 8007962:	4630      	mov	r0, r6
 8007964:	f000 f970 	bl	8007c48 <__swsetup_r>
 8007968:	b1c0      	cbz	r0, 800799c <_vfiprintf_r+0x78>
 800796a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800796c:	07dc      	lsls	r4, r3, #31
 800796e:	d50e      	bpl.n	800798e <_vfiprintf_r+0x6a>
 8007970:	f04f 30ff 	mov.w	r0, #4294967295
 8007974:	b01d      	add	sp, #116	; 0x74
 8007976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800797a:	4b7b      	ldr	r3, [pc, #492]	; (8007b68 <_vfiprintf_r+0x244>)
 800797c:	429d      	cmp	r5, r3
 800797e:	d101      	bne.n	8007984 <_vfiprintf_r+0x60>
 8007980:	68b5      	ldr	r5, [r6, #8]
 8007982:	e7df      	b.n	8007944 <_vfiprintf_r+0x20>
 8007984:	4b79      	ldr	r3, [pc, #484]	; (8007b6c <_vfiprintf_r+0x248>)
 8007986:	429d      	cmp	r5, r3
 8007988:	bf08      	it	eq
 800798a:	68f5      	ldreq	r5, [r6, #12]
 800798c:	e7da      	b.n	8007944 <_vfiprintf_r+0x20>
 800798e:	89ab      	ldrh	r3, [r5, #12]
 8007990:	0598      	lsls	r0, r3, #22
 8007992:	d4ed      	bmi.n	8007970 <_vfiprintf_r+0x4c>
 8007994:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007996:	f000 fb82 	bl	800809e <__retarget_lock_release_recursive>
 800799a:	e7e9      	b.n	8007970 <_vfiprintf_r+0x4c>
 800799c:	2300      	movs	r3, #0
 800799e:	9309      	str	r3, [sp, #36]	; 0x24
 80079a0:	2320      	movs	r3, #32
 80079a2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80079a6:	2330      	movs	r3, #48	; 0x30
 80079a8:	f04f 0901 	mov.w	r9, #1
 80079ac:	f8cd 800c 	str.w	r8, [sp, #12]
 80079b0:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8007b70 <_vfiprintf_r+0x24c>
 80079b4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80079b8:	4623      	mov	r3, r4
 80079ba:	469a      	mov	sl, r3
 80079bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80079c0:	b10a      	cbz	r2, 80079c6 <_vfiprintf_r+0xa2>
 80079c2:	2a25      	cmp	r2, #37	; 0x25
 80079c4:	d1f9      	bne.n	80079ba <_vfiprintf_r+0x96>
 80079c6:	ebba 0b04 	subs.w	fp, sl, r4
 80079ca:	d00b      	beq.n	80079e4 <_vfiprintf_r+0xc0>
 80079cc:	465b      	mov	r3, fp
 80079ce:	4622      	mov	r2, r4
 80079d0:	4629      	mov	r1, r5
 80079d2:	4630      	mov	r0, r6
 80079d4:	f7ff ff93 	bl	80078fe <__sfputs_r>
 80079d8:	3001      	adds	r0, #1
 80079da:	f000 80aa 	beq.w	8007b32 <_vfiprintf_r+0x20e>
 80079de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80079e0:	445a      	add	r2, fp
 80079e2:	9209      	str	r2, [sp, #36]	; 0x24
 80079e4:	f89a 3000 	ldrb.w	r3, [sl]
 80079e8:	2b00      	cmp	r3, #0
 80079ea:	f000 80a2 	beq.w	8007b32 <_vfiprintf_r+0x20e>
 80079ee:	2300      	movs	r3, #0
 80079f0:	f04f 32ff 	mov.w	r2, #4294967295
 80079f4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80079f8:	f10a 0a01 	add.w	sl, sl, #1
 80079fc:	9304      	str	r3, [sp, #16]
 80079fe:	9307      	str	r3, [sp, #28]
 8007a00:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007a04:	931a      	str	r3, [sp, #104]	; 0x68
 8007a06:	4654      	mov	r4, sl
 8007a08:	2205      	movs	r2, #5
 8007a0a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007a0e:	4858      	ldr	r0, [pc, #352]	; (8007b70 <_vfiprintf_r+0x24c>)
 8007a10:	f7ff f976 	bl	8006d00 <memchr>
 8007a14:	9a04      	ldr	r2, [sp, #16]
 8007a16:	b9d8      	cbnz	r0, 8007a50 <_vfiprintf_r+0x12c>
 8007a18:	06d1      	lsls	r1, r2, #27
 8007a1a:	bf44      	itt	mi
 8007a1c:	2320      	movmi	r3, #32
 8007a1e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007a22:	0713      	lsls	r3, r2, #28
 8007a24:	bf44      	itt	mi
 8007a26:	232b      	movmi	r3, #43	; 0x2b
 8007a28:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007a2c:	f89a 3000 	ldrb.w	r3, [sl]
 8007a30:	2b2a      	cmp	r3, #42	; 0x2a
 8007a32:	d015      	beq.n	8007a60 <_vfiprintf_r+0x13c>
 8007a34:	4654      	mov	r4, sl
 8007a36:	2000      	movs	r0, #0
 8007a38:	f04f 0c0a 	mov.w	ip, #10
 8007a3c:	9a07      	ldr	r2, [sp, #28]
 8007a3e:	4621      	mov	r1, r4
 8007a40:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007a44:	3b30      	subs	r3, #48	; 0x30
 8007a46:	2b09      	cmp	r3, #9
 8007a48:	d94e      	bls.n	8007ae8 <_vfiprintf_r+0x1c4>
 8007a4a:	b1b0      	cbz	r0, 8007a7a <_vfiprintf_r+0x156>
 8007a4c:	9207      	str	r2, [sp, #28]
 8007a4e:	e014      	b.n	8007a7a <_vfiprintf_r+0x156>
 8007a50:	eba0 0308 	sub.w	r3, r0, r8
 8007a54:	fa09 f303 	lsl.w	r3, r9, r3
 8007a58:	4313      	orrs	r3, r2
 8007a5a:	46a2      	mov	sl, r4
 8007a5c:	9304      	str	r3, [sp, #16]
 8007a5e:	e7d2      	b.n	8007a06 <_vfiprintf_r+0xe2>
 8007a60:	9b03      	ldr	r3, [sp, #12]
 8007a62:	1d19      	adds	r1, r3, #4
 8007a64:	681b      	ldr	r3, [r3, #0]
 8007a66:	9103      	str	r1, [sp, #12]
 8007a68:	2b00      	cmp	r3, #0
 8007a6a:	bfbb      	ittet	lt
 8007a6c:	425b      	neglt	r3, r3
 8007a6e:	f042 0202 	orrlt.w	r2, r2, #2
 8007a72:	9307      	strge	r3, [sp, #28]
 8007a74:	9307      	strlt	r3, [sp, #28]
 8007a76:	bfb8      	it	lt
 8007a78:	9204      	strlt	r2, [sp, #16]
 8007a7a:	7823      	ldrb	r3, [r4, #0]
 8007a7c:	2b2e      	cmp	r3, #46	; 0x2e
 8007a7e:	d10c      	bne.n	8007a9a <_vfiprintf_r+0x176>
 8007a80:	7863      	ldrb	r3, [r4, #1]
 8007a82:	2b2a      	cmp	r3, #42	; 0x2a
 8007a84:	d135      	bne.n	8007af2 <_vfiprintf_r+0x1ce>
 8007a86:	9b03      	ldr	r3, [sp, #12]
 8007a88:	3402      	adds	r4, #2
 8007a8a:	1d1a      	adds	r2, r3, #4
 8007a8c:	681b      	ldr	r3, [r3, #0]
 8007a8e:	9203      	str	r2, [sp, #12]
 8007a90:	2b00      	cmp	r3, #0
 8007a92:	bfb8      	it	lt
 8007a94:	f04f 33ff 	movlt.w	r3, #4294967295
 8007a98:	9305      	str	r3, [sp, #20]
 8007a9a:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8007b74 <_vfiprintf_r+0x250>
 8007a9e:	2203      	movs	r2, #3
 8007aa0:	4650      	mov	r0, sl
 8007aa2:	7821      	ldrb	r1, [r4, #0]
 8007aa4:	f7ff f92c 	bl	8006d00 <memchr>
 8007aa8:	b140      	cbz	r0, 8007abc <_vfiprintf_r+0x198>
 8007aaa:	2340      	movs	r3, #64	; 0x40
 8007aac:	eba0 000a 	sub.w	r0, r0, sl
 8007ab0:	fa03 f000 	lsl.w	r0, r3, r0
 8007ab4:	9b04      	ldr	r3, [sp, #16]
 8007ab6:	3401      	adds	r4, #1
 8007ab8:	4303      	orrs	r3, r0
 8007aba:	9304      	str	r3, [sp, #16]
 8007abc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8007ac0:	2206      	movs	r2, #6
 8007ac2:	482d      	ldr	r0, [pc, #180]	; (8007b78 <_vfiprintf_r+0x254>)
 8007ac4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007ac8:	f7ff f91a 	bl	8006d00 <memchr>
 8007acc:	2800      	cmp	r0, #0
 8007ace:	d03f      	beq.n	8007b50 <_vfiprintf_r+0x22c>
 8007ad0:	4b2a      	ldr	r3, [pc, #168]	; (8007b7c <_vfiprintf_r+0x258>)
 8007ad2:	bb1b      	cbnz	r3, 8007b1c <_vfiprintf_r+0x1f8>
 8007ad4:	9b03      	ldr	r3, [sp, #12]
 8007ad6:	3307      	adds	r3, #7
 8007ad8:	f023 0307 	bic.w	r3, r3, #7
 8007adc:	3308      	adds	r3, #8
 8007ade:	9303      	str	r3, [sp, #12]
 8007ae0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007ae2:	443b      	add	r3, r7
 8007ae4:	9309      	str	r3, [sp, #36]	; 0x24
 8007ae6:	e767      	b.n	80079b8 <_vfiprintf_r+0x94>
 8007ae8:	460c      	mov	r4, r1
 8007aea:	2001      	movs	r0, #1
 8007aec:	fb0c 3202 	mla	r2, ip, r2, r3
 8007af0:	e7a5      	b.n	8007a3e <_vfiprintf_r+0x11a>
 8007af2:	2300      	movs	r3, #0
 8007af4:	f04f 0c0a 	mov.w	ip, #10
 8007af8:	4619      	mov	r1, r3
 8007afa:	3401      	adds	r4, #1
 8007afc:	9305      	str	r3, [sp, #20]
 8007afe:	4620      	mov	r0, r4
 8007b00:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007b04:	3a30      	subs	r2, #48	; 0x30
 8007b06:	2a09      	cmp	r2, #9
 8007b08:	d903      	bls.n	8007b12 <_vfiprintf_r+0x1ee>
 8007b0a:	2b00      	cmp	r3, #0
 8007b0c:	d0c5      	beq.n	8007a9a <_vfiprintf_r+0x176>
 8007b0e:	9105      	str	r1, [sp, #20]
 8007b10:	e7c3      	b.n	8007a9a <_vfiprintf_r+0x176>
 8007b12:	4604      	mov	r4, r0
 8007b14:	2301      	movs	r3, #1
 8007b16:	fb0c 2101 	mla	r1, ip, r1, r2
 8007b1a:	e7f0      	b.n	8007afe <_vfiprintf_r+0x1da>
 8007b1c:	ab03      	add	r3, sp, #12
 8007b1e:	9300      	str	r3, [sp, #0]
 8007b20:	462a      	mov	r2, r5
 8007b22:	4630      	mov	r0, r6
 8007b24:	4b16      	ldr	r3, [pc, #88]	; (8007b80 <_vfiprintf_r+0x25c>)
 8007b26:	a904      	add	r1, sp, #16
 8007b28:	f7fd fd3c 	bl	80055a4 <_printf_float>
 8007b2c:	4607      	mov	r7, r0
 8007b2e:	1c78      	adds	r0, r7, #1
 8007b30:	d1d6      	bne.n	8007ae0 <_vfiprintf_r+0x1bc>
 8007b32:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007b34:	07d9      	lsls	r1, r3, #31
 8007b36:	d405      	bmi.n	8007b44 <_vfiprintf_r+0x220>
 8007b38:	89ab      	ldrh	r3, [r5, #12]
 8007b3a:	059a      	lsls	r2, r3, #22
 8007b3c:	d402      	bmi.n	8007b44 <_vfiprintf_r+0x220>
 8007b3e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007b40:	f000 faad 	bl	800809e <__retarget_lock_release_recursive>
 8007b44:	89ab      	ldrh	r3, [r5, #12]
 8007b46:	065b      	lsls	r3, r3, #25
 8007b48:	f53f af12 	bmi.w	8007970 <_vfiprintf_r+0x4c>
 8007b4c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8007b4e:	e711      	b.n	8007974 <_vfiprintf_r+0x50>
 8007b50:	ab03      	add	r3, sp, #12
 8007b52:	9300      	str	r3, [sp, #0]
 8007b54:	462a      	mov	r2, r5
 8007b56:	4630      	mov	r0, r6
 8007b58:	4b09      	ldr	r3, [pc, #36]	; (8007b80 <_vfiprintf_r+0x25c>)
 8007b5a:	a904      	add	r1, sp, #16
 8007b5c:	f7fd ffbe 	bl	8005adc <_printf_i>
 8007b60:	e7e4      	b.n	8007b2c <_vfiprintf_r+0x208>
 8007b62:	bf00      	nop
 8007b64:	08008a18 	.word	0x08008a18
 8007b68:	08008a38 	.word	0x08008a38
 8007b6c:	080089f8 	.word	0x080089f8
 8007b70:	080089e4 	.word	0x080089e4
 8007b74:	080089ea 	.word	0x080089ea
 8007b78:	080089ee 	.word	0x080089ee
 8007b7c:	080055a5 	.word	0x080055a5
 8007b80:	080078ff 	.word	0x080078ff

08007b84 <_sbrk_r>:
 8007b84:	b538      	push	{r3, r4, r5, lr}
 8007b86:	2300      	movs	r3, #0
 8007b88:	4d05      	ldr	r5, [pc, #20]	; (8007ba0 <_sbrk_r+0x1c>)
 8007b8a:	4604      	mov	r4, r0
 8007b8c:	4608      	mov	r0, r1
 8007b8e:	602b      	str	r3, [r5, #0]
 8007b90:	f7f9 ff34 	bl	80019fc <_sbrk>
 8007b94:	1c43      	adds	r3, r0, #1
 8007b96:	d102      	bne.n	8007b9e <_sbrk_r+0x1a>
 8007b98:	682b      	ldr	r3, [r5, #0]
 8007b9a:	b103      	cbz	r3, 8007b9e <_sbrk_r+0x1a>
 8007b9c:	6023      	str	r3, [r4, #0]
 8007b9e:	bd38      	pop	{r3, r4, r5, pc}
 8007ba0:	200006c4 	.word	0x200006c4

08007ba4 <__swbuf_r>:
 8007ba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ba6:	460e      	mov	r6, r1
 8007ba8:	4614      	mov	r4, r2
 8007baa:	4605      	mov	r5, r0
 8007bac:	b118      	cbz	r0, 8007bb6 <__swbuf_r+0x12>
 8007bae:	6983      	ldr	r3, [r0, #24]
 8007bb0:	b90b      	cbnz	r3, 8007bb6 <__swbuf_r+0x12>
 8007bb2:	f000 f9d5 	bl	8007f60 <__sinit>
 8007bb6:	4b21      	ldr	r3, [pc, #132]	; (8007c3c <__swbuf_r+0x98>)
 8007bb8:	429c      	cmp	r4, r3
 8007bba:	d12b      	bne.n	8007c14 <__swbuf_r+0x70>
 8007bbc:	686c      	ldr	r4, [r5, #4]
 8007bbe:	69a3      	ldr	r3, [r4, #24]
 8007bc0:	60a3      	str	r3, [r4, #8]
 8007bc2:	89a3      	ldrh	r3, [r4, #12]
 8007bc4:	071a      	lsls	r2, r3, #28
 8007bc6:	d52f      	bpl.n	8007c28 <__swbuf_r+0x84>
 8007bc8:	6923      	ldr	r3, [r4, #16]
 8007bca:	b36b      	cbz	r3, 8007c28 <__swbuf_r+0x84>
 8007bcc:	6923      	ldr	r3, [r4, #16]
 8007bce:	6820      	ldr	r0, [r4, #0]
 8007bd0:	b2f6      	uxtb	r6, r6
 8007bd2:	1ac0      	subs	r0, r0, r3
 8007bd4:	6963      	ldr	r3, [r4, #20]
 8007bd6:	4637      	mov	r7, r6
 8007bd8:	4283      	cmp	r3, r0
 8007bda:	dc04      	bgt.n	8007be6 <__swbuf_r+0x42>
 8007bdc:	4621      	mov	r1, r4
 8007bde:	4628      	mov	r0, r5
 8007be0:	f000 f92a 	bl	8007e38 <_fflush_r>
 8007be4:	bb30      	cbnz	r0, 8007c34 <__swbuf_r+0x90>
 8007be6:	68a3      	ldr	r3, [r4, #8]
 8007be8:	3001      	adds	r0, #1
 8007bea:	3b01      	subs	r3, #1
 8007bec:	60a3      	str	r3, [r4, #8]
 8007bee:	6823      	ldr	r3, [r4, #0]
 8007bf0:	1c5a      	adds	r2, r3, #1
 8007bf2:	6022      	str	r2, [r4, #0]
 8007bf4:	701e      	strb	r6, [r3, #0]
 8007bf6:	6963      	ldr	r3, [r4, #20]
 8007bf8:	4283      	cmp	r3, r0
 8007bfa:	d004      	beq.n	8007c06 <__swbuf_r+0x62>
 8007bfc:	89a3      	ldrh	r3, [r4, #12]
 8007bfe:	07db      	lsls	r3, r3, #31
 8007c00:	d506      	bpl.n	8007c10 <__swbuf_r+0x6c>
 8007c02:	2e0a      	cmp	r6, #10
 8007c04:	d104      	bne.n	8007c10 <__swbuf_r+0x6c>
 8007c06:	4621      	mov	r1, r4
 8007c08:	4628      	mov	r0, r5
 8007c0a:	f000 f915 	bl	8007e38 <_fflush_r>
 8007c0e:	b988      	cbnz	r0, 8007c34 <__swbuf_r+0x90>
 8007c10:	4638      	mov	r0, r7
 8007c12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007c14:	4b0a      	ldr	r3, [pc, #40]	; (8007c40 <__swbuf_r+0x9c>)
 8007c16:	429c      	cmp	r4, r3
 8007c18:	d101      	bne.n	8007c1e <__swbuf_r+0x7a>
 8007c1a:	68ac      	ldr	r4, [r5, #8]
 8007c1c:	e7cf      	b.n	8007bbe <__swbuf_r+0x1a>
 8007c1e:	4b09      	ldr	r3, [pc, #36]	; (8007c44 <__swbuf_r+0xa0>)
 8007c20:	429c      	cmp	r4, r3
 8007c22:	bf08      	it	eq
 8007c24:	68ec      	ldreq	r4, [r5, #12]
 8007c26:	e7ca      	b.n	8007bbe <__swbuf_r+0x1a>
 8007c28:	4621      	mov	r1, r4
 8007c2a:	4628      	mov	r0, r5
 8007c2c:	f000 f80c 	bl	8007c48 <__swsetup_r>
 8007c30:	2800      	cmp	r0, #0
 8007c32:	d0cb      	beq.n	8007bcc <__swbuf_r+0x28>
 8007c34:	f04f 37ff 	mov.w	r7, #4294967295
 8007c38:	e7ea      	b.n	8007c10 <__swbuf_r+0x6c>
 8007c3a:	bf00      	nop
 8007c3c:	08008a18 	.word	0x08008a18
 8007c40:	08008a38 	.word	0x08008a38
 8007c44:	080089f8 	.word	0x080089f8

08007c48 <__swsetup_r>:
 8007c48:	4b32      	ldr	r3, [pc, #200]	; (8007d14 <__swsetup_r+0xcc>)
 8007c4a:	b570      	push	{r4, r5, r6, lr}
 8007c4c:	681d      	ldr	r5, [r3, #0]
 8007c4e:	4606      	mov	r6, r0
 8007c50:	460c      	mov	r4, r1
 8007c52:	b125      	cbz	r5, 8007c5e <__swsetup_r+0x16>
 8007c54:	69ab      	ldr	r3, [r5, #24]
 8007c56:	b913      	cbnz	r3, 8007c5e <__swsetup_r+0x16>
 8007c58:	4628      	mov	r0, r5
 8007c5a:	f000 f981 	bl	8007f60 <__sinit>
 8007c5e:	4b2e      	ldr	r3, [pc, #184]	; (8007d18 <__swsetup_r+0xd0>)
 8007c60:	429c      	cmp	r4, r3
 8007c62:	d10f      	bne.n	8007c84 <__swsetup_r+0x3c>
 8007c64:	686c      	ldr	r4, [r5, #4]
 8007c66:	89a3      	ldrh	r3, [r4, #12]
 8007c68:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007c6c:	0719      	lsls	r1, r3, #28
 8007c6e:	d42c      	bmi.n	8007cca <__swsetup_r+0x82>
 8007c70:	06dd      	lsls	r5, r3, #27
 8007c72:	d411      	bmi.n	8007c98 <__swsetup_r+0x50>
 8007c74:	2309      	movs	r3, #9
 8007c76:	6033      	str	r3, [r6, #0]
 8007c78:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8007c7c:	f04f 30ff 	mov.w	r0, #4294967295
 8007c80:	81a3      	strh	r3, [r4, #12]
 8007c82:	e03e      	b.n	8007d02 <__swsetup_r+0xba>
 8007c84:	4b25      	ldr	r3, [pc, #148]	; (8007d1c <__swsetup_r+0xd4>)
 8007c86:	429c      	cmp	r4, r3
 8007c88:	d101      	bne.n	8007c8e <__swsetup_r+0x46>
 8007c8a:	68ac      	ldr	r4, [r5, #8]
 8007c8c:	e7eb      	b.n	8007c66 <__swsetup_r+0x1e>
 8007c8e:	4b24      	ldr	r3, [pc, #144]	; (8007d20 <__swsetup_r+0xd8>)
 8007c90:	429c      	cmp	r4, r3
 8007c92:	bf08      	it	eq
 8007c94:	68ec      	ldreq	r4, [r5, #12]
 8007c96:	e7e6      	b.n	8007c66 <__swsetup_r+0x1e>
 8007c98:	0758      	lsls	r0, r3, #29
 8007c9a:	d512      	bpl.n	8007cc2 <__swsetup_r+0x7a>
 8007c9c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007c9e:	b141      	cbz	r1, 8007cb2 <__swsetup_r+0x6a>
 8007ca0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007ca4:	4299      	cmp	r1, r3
 8007ca6:	d002      	beq.n	8007cae <__swsetup_r+0x66>
 8007ca8:	4630      	mov	r0, r6
 8007caa:	f7ff fbdb 	bl	8007464 <_free_r>
 8007cae:	2300      	movs	r3, #0
 8007cb0:	6363      	str	r3, [r4, #52]	; 0x34
 8007cb2:	89a3      	ldrh	r3, [r4, #12]
 8007cb4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8007cb8:	81a3      	strh	r3, [r4, #12]
 8007cba:	2300      	movs	r3, #0
 8007cbc:	6063      	str	r3, [r4, #4]
 8007cbe:	6923      	ldr	r3, [r4, #16]
 8007cc0:	6023      	str	r3, [r4, #0]
 8007cc2:	89a3      	ldrh	r3, [r4, #12]
 8007cc4:	f043 0308 	orr.w	r3, r3, #8
 8007cc8:	81a3      	strh	r3, [r4, #12]
 8007cca:	6923      	ldr	r3, [r4, #16]
 8007ccc:	b94b      	cbnz	r3, 8007ce2 <__swsetup_r+0x9a>
 8007cce:	89a3      	ldrh	r3, [r4, #12]
 8007cd0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8007cd4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007cd8:	d003      	beq.n	8007ce2 <__swsetup_r+0x9a>
 8007cda:	4621      	mov	r1, r4
 8007cdc:	4630      	mov	r0, r6
 8007cde:	f000 fa05 	bl	80080ec <__smakebuf_r>
 8007ce2:	89a0      	ldrh	r0, [r4, #12]
 8007ce4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007ce8:	f010 0301 	ands.w	r3, r0, #1
 8007cec:	d00a      	beq.n	8007d04 <__swsetup_r+0xbc>
 8007cee:	2300      	movs	r3, #0
 8007cf0:	60a3      	str	r3, [r4, #8]
 8007cf2:	6963      	ldr	r3, [r4, #20]
 8007cf4:	425b      	negs	r3, r3
 8007cf6:	61a3      	str	r3, [r4, #24]
 8007cf8:	6923      	ldr	r3, [r4, #16]
 8007cfa:	b943      	cbnz	r3, 8007d0e <__swsetup_r+0xc6>
 8007cfc:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8007d00:	d1ba      	bne.n	8007c78 <__swsetup_r+0x30>
 8007d02:	bd70      	pop	{r4, r5, r6, pc}
 8007d04:	0781      	lsls	r1, r0, #30
 8007d06:	bf58      	it	pl
 8007d08:	6963      	ldrpl	r3, [r4, #20]
 8007d0a:	60a3      	str	r3, [r4, #8]
 8007d0c:	e7f4      	b.n	8007cf8 <__swsetup_r+0xb0>
 8007d0e:	2000      	movs	r0, #0
 8007d10:	e7f7      	b.n	8007d02 <__swsetup_r+0xba>
 8007d12:	bf00      	nop
 8007d14:	20000014 	.word	0x20000014
 8007d18:	08008a18 	.word	0x08008a18
 8007d1c:	08008a38 	.word	0x08008a38
 8007d20:	080089f8 	.word	0x080089f8

08007d24 <abort>:
 8007d24:	2006      	movs	r0, #6
 8007d26:	b508      	push	{r3, lr}
 8007d28:	f000 fab0 	bl	800828c <raise>
 8007d2c:	2001      	movs	r0, #1
 8007d2e:	f7f9 fdf2 	bl	8001916 <_exit>
	...

08007d34 <__sflush_r>:
 8007d34:	898a      	ldrh	r2, [r1, #12]
 8007d36:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007d38:	4605      	mov	r5, r0
 8007d3a:	0710      	lsls	r0, r2, #28
 8007d3c:	460c      	mov	r4, r1
 8007d3e:	d457      	bmi.n	8007df0 <__sflush_r+0xbc>
 8007d40:	684b      	ldr	r3, [r1, #4]
 8007d42:	2b00      	cmp	r3, #0
 8007d44:	dc04      	bgt.n	8007d50 <__sflush_r+0x1c>
 8007d46:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8007d48:	2b00      	cmp	r3, #0
 8007d4a:	dc01      	bgt.n	8007d50 <__sflush_r+0x1c>
 8007d4c:	2000      	movs	r0, #0
 8007d4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007d50:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007d52:	2e00      	cmp	r6, #0
 8007d54:	d0fa      	beq.n	8007d4c <__sflush_r+0x18>
 8007d56:	2300      	movs	r3, #0
 8007d58:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8007d5c:	682f      	ldr	r7, [r5, #0]
 8007d5e:	602b      	str	r3, [r5, #0]
 8007d60:	d032      	beq.n	8007dc8 <__sflush_r+0x94>
 8007d62:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8007d64:	89a3      	ldrh	r3, [r4, #12]
 8007d66:	075a      	lsls	r2, r3, #29
 8007d68:	d505      	bpl.n	8007d76 <__sflush_r+0x42>
 8007d6a:	6863      	ldr	r3, [r4, #4]
 8007d6c:	1ac0      	subs	r0, r0, r3
 8007d6e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007d70:	b10b      	cbz	r3, 8007d76 <__sflush_r+0x42>
 8007d72:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007d74:	1ac0      	subs	r0, r0, r3
 8007d76:	2300      	movs	r3, #0
 8007d78:	4602      	mov	r2, r0
 8007d7a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007d7c:	4628      	mov	r0, r5
 8007d7e:	6a21      	ldr	r1, [r4, #32]
 8007d80:	47b0      	blx	r6
 8007d82:	1c43      	adds	r3, r0, #1
 8007d84:	89a3      	ldrh	r3, [r4, #12]
 8007d86:	d106      	bne.n	8007d96 <__sflush_r+0x62>
 8007d88:	6829      	ldr	r1, [r5, #0]
 8007d8a:	291d      	cmp	r1, #29
 8007d8c:	d82c      	bhi.n	8007de8 <__sflush_r+0xb4>
 8007d8e:	4a29      	ldr	r2, [pc, #164]	; (8007e34 <__sflush_r+0x100>)
 8007d90:	40ca      	lsrs	r2, r1
 8007d92:	07d6      	lsls	r6, r2, #31
 8007d94:	d528      	bpl.n	8007de8 <__sflush_r+0xb4>
 8007d96:	2200      	movs	r2, #0
 8007d98:	6062      	str	r2, [r4, #4]
 8007d9a:	6922      	ldr	r2, [r4, #16]
 8007d9c:	04d9      	lsls	r1, r3, #19
 8007d9e:	6022      	str	r2, [r4, #0]
 8007da0:	d504      	bpl.n	8007dac <__sflush_r+0x78>
 8007da2:	1c42      	adds	r2, r0, #1
 8007da4:	d101      	bne.n	8007daa <__sflush_r+0x76>
 8007da6:	682b      	ldr	r3, [r5, #0]
 8007da8:	b903      	cbnz	r3, 8007dac <__sflush_r+0x78>
 8007daa:	6560      	str	r0, [r4, #84]	; 0x54
 8007dac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007dae:	602f      	str	r7, [r5, #0]
 8007db0:	2900      	cmp	r1, #0
 8007db2:	d0cb      	beq.n	8007d4c <__sflush_r+0x18>
 8007db4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007db8:	4299      	cmp	r1, r3
 8007dba:	d002      	beq.n	8007dc2 <__sflush_r+0x8e>
 8007dbc:	4628      	mov	r0, r5
 8007dbe:	f7ff fb51 	bl	8007464 <_free_r>
 8007dc2:	2000      	movs	r0, #0
 8007dc4:	6360      	str	r0, [r4, #52]	; 0x34
 8007dc6:	e7c2      	b.n	8007d4e <__sflush_r+0x1a>
 8007dc8:	6a21      	ldr	r1, [r4, #32]
 8007dca:	2301      	movs	r3, #1
 8007dcc:	4628      	mov	r0, r5
 8007dce:	47b0      	blx	r6
 8007dd0:	1c41      	adds	r1, r0, #1
 8007dd2:	d1c7      	bne.n	8007d64 <__sflush_r+0x30>
 8007dd4:	682b      	ldr	r3, [r5, #0]
 8007dd6:	2b00      	cmp	r3, #0
 8007dd8:	d0c4      	beq.n	8007d64 <__sflush_r+0x30>
 8007dda:	2b1d      	cmp	r3, #29
 8007ddc:	d001      	beq.n	8007de2 <__sflush_r+0xae>
 8007dde:	2b16      	cmp	r3, #22
 8007de0:	d101      	bne.n	8007de6 <__sflush_r+0xb2>
 8007de2:	602f      	str	r7, [r5, #0]
 8007de4:	e7b2      	b.n	8007d4c <__sflush_r+0x18>
 8007de6:	89a3      	ldrh	r3, [r4, #12]
 8007de8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007dec:	81a3      	strh	r3, [r4, #12]
 8007dee:	e7ae      	b.n	8007d4e <__sflush_r+0x1a>
 8007df0:	690f      	ldr	r7, [r1, #16]
 8007df2:	2f00      	cmp	r7, #0
 8007df4:	d0aa      	beq.n	8007d4c <__sflush_r+0x18>
 8007df6:	0793      	lsls	r3, r2, #30
 8007df8:	bf18      	it	ne
 8007dfa:	2300      	movne	r3, #0
 8007dfc:	680e      	ldr	r6, [r1, #0]
 8007dfe:	bf08      	it	eq
 8007e00:	694b      	ldreq	r3, [r1, #20]
 8007e02:	1bf6      	subs	r6, r6, r7
 8007e04:	600f      	str	r7, [r1, #0]
 8007e06:	608b      	str	r3, [r1, #8]
 8007e08:	2e00      	cmp	r6, #0
 8007e0a:	dd9f      	ble.n	8007d4c <__sflush_r+0x18>
 8007e0c:	4633      	mov	r3, r6
 8007e0e:	463a      	mov	r2, r7
 8007e10:	4628      	mov	r0, r5
 8007e12:	6a21      	ldr	r1, [r4, #32]
 8007e14:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8007e18:	47e0      	blx	ip
 8007e1a:	2800      	cmp	r0, #0
 8007e1c:	dc06      	bgt.n	8007e2c <__sflush_r+0xf8>
 8007e1e:	89a3      	ldrh	r3, [r4, #12]
 8007e20:	f04f 30ff 	mov.w	r0, #4294967295
 8007e24:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007e28:	81a3      	strh	r3, [r4, #12]
 8007e2a:	e790      	b.n	8007d4e <__sflush_r+0x1a>
 8007e2c:	4407      	add	r7, r0
 8007e2e:	1a36      	subs	r6, r6, r0
 8007e30:	e7ea      	b.n	8007e08 <__sflush_r+0xd4>
 8007e32:	bf00      	nop
 8007e34:	20400001 	.word	0x20400001

08007e38 <_fflush_r>:
 8007e38:	b538      	push	{r3, r4, r5, lr}
 8007e3a:	690b      	ldr	r3, [r1, #16]
 8007e3c:	4605      	mov	r5, r0
 8007e3e:	460c      	mov	r4, r1
 8007e40:	b913      	cbnz	r3, 8007e48 <_fflush_r+0x10>
 8007e42:	2500      	movs	r5, #0
 8007e44:	4628      	mov	r0, r5
 8007e46:	bd38      	pop	{r3, r4, r5, pc}
 8007e48:	b118      	cbz	r0, 8007e52 <_fflush_r+0x1a>
 8007e4a:	6983      	ldr	r3, [r0, #24]
 8007e4c:	b90b      	cbnz	r3, 8007e52 <_fflush_r+0x1a>
 8007e4e:	f000 f887 	bl	8007f60 <__sinit>
 8007e52:	4b14      	ldr	r3, [pc, #80]	; (8007ea4 <_fflush_r+0x6c>)
 8007e54:	429c      	cmp	r4, r3
 8007e56:	d11b      	bne.n	8007e90 <_fflush_r+0x58>
 8007e58:	686c      	ldr	r4, [r5, #4]
 8007e5a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007e5e:	2b00      	cmp	r3, #0
 8007e60:	d0ef      	beq.n	8007e42 <_fflush_r+0xa>
 8007e62:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8007e64:	07d0      	lsls	r0, r2, #31
 8007e66:	d404      	bmi.n	8007e72 <_fflush_r+0x3a>
 8007e68:	0599      	lsls	r1, r3, #22
 8007e6a:	d402      	bmi.n	8007e72 <_fflush_r+0x3a>
 8007e6c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007e6e:	f000 f915 	bl	800809c <__retarget_lock_acquire_recursive>
 8007e72:	4628      	mov	r0, r5
 8007e74:	4621      	mov	r1, r4
 8007e76:	f7ff ff5d 	bl	8007d34 <__sflush_r>
 8007e7a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007e7c:	4605      	mov	r5, r0
 8007e7e:	07da      	lsls	r2, r3, #31
 8007e80:	d4e0      	bmi.n	8007e44 <_fflush_r+0xc>
 8007e82:	89a3      	ldrh	r3, [r4, #12]
 8007e84:	059b      	lsls	r3, r3, #22
 8007e86:	d4dd      	bmi.n	8007e44 <_fflush_r+0xc>
 8007e88:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007e8a:	f000 f908 	bl	800809e <__retarget_lock_release_recursive>
 8007e8e:	e7d9      	b.n	8007e44 <_fflush_r+0xc>
 8007e90:	4b05      	ldr	r3, [pc, #20]	; (8007ea8 <_fflush_r+0x70>)
 8007e92:	429c      	cmp	r4, r3
 8007e94:	d101      	bne.n	8007e9a <_fflush_r+0x62>
 8007e96:	68ac      	ldr	r4, [r5, #8]
 8007e98:	e7df      	b.n	8007e5a <_fflush_r+0x22>
 8007e9a:	4b04      	ldr	r3, [pc, #16]	; (8007eac <_fflush_r+0x74>)
 8007e9c:	429c      	cmp	r4, r3
 8007e9e:	bf08      	it	eq
 8007ea0:	68ec      	ldreq	r4, [r5, #12]
 8007ea2:	e7da      	b.n	8007e5a <_fflush_r+0x22>
 8007ea4:	08008a18 	.word	0x08008a18
 8007ea8:	08008a38 	.word	0x08008a38
 8007eac:	080089f8 	.word	0x080089f8

08007eb0 <std>:
 8007eb0:	2300      	movs	r3, #0
 8007eb2:	b510      	push	{r4, lr}
 8007eb4:	4604      	mov	r4, r0
 8007eb6:	e9c0 3300 	strd	r3, r3, [r0]
 8007eba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007ebe:	6083      	str	r3, [r0, #8]
 8007ec0:	8181      	strh	r1, [r0, #12]
 8007ec2:	6643      	str	r3, [r0, #100]	; 0x64
 8007ec4:	81c2      	strh	r2, [r0, #14]
 8007ec6:	6183      	str	r3, [r0, #24]
 8007ec8:	4619      	mov	r1, r3
 8007eca:	2208      	movs	r2, #8
 8007ecc:	305c      	adds	r0, #92	; 0x5c
 8007ece:	f7fd fac3 	bl	8005458 <memset>
 8007ed2:	4b05      	ldr	r3, [pc, #20]	; (8007ee8 <std+0x38>)
 8007ed4:	6224      	str	r4, [r4, #32]
 8007ed6:	6263      	str	r3, [r4, #36]	; 0x24
 8007ed8:	4b04      	ldr	r3, [pc, #16]	; (8007eec <std+0x3c>)
 8007eda:	62a3      	str	r3, [r4, #40]	; 0x28
 8007edc:	4b04      	ldr	r3, [pc, #16]	; (8007ef0 <std+0x40>)
 8007ede:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007ee0:	4b04      	ldr	r3, [pc, #16]	; (8007ef4 <std+0x44>)
 8007ee2:	6323      	str	r3, [r4, #48]	; 0x30
 8007ee4:	bd10      	pop	{r4, pc}
 8007ee6:	bf00      	nop
 8007ee8:	080082c5 	.word	0x080082c5
 8007eec:	080082e7 	.word	0x080082e7
 8007ef0:	0800831f 	.word	0x0800831f
 8007ef4:	08008343 	.word	0x08008343

08007ef8 <_cleanup_r>:
 8007ef8:	4901      	ldr	r1, [pc, #4]	; (8007f00 <_cleanup_r+0x8>)
 8007efa:	f000 b8af 	b.w	800805c <_fwalk_reent>
 8007efe:	bf00      	nop
 8007f00:	08007e39 	.word	0x08007e39

08007f04 <__sfmoreglue>:
 8007f04:	2268      	movs	r2, #104	; 0x68
 8007f06:	b570      	push	{r4, r5, r6, lr}
 8007f08:	1e4d      	subs	r5, r1, #1
 8007f0a:	4355      	muls	r5, r2
 8007f0c:	460e      	mov	r6, r1
 8007f0e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8007f12:	f7ff fb0f 	bl	8007534 <_malloc_r>
 8007f16:	4604      	mov	r4, r0
 8007f18:	b140      	cbz	r0, 8007f2c <__sfmoreglue+0x28>
 8007f1a:	2100      	movs	r1, #0
 8007f1c:	e9c0 1600 	strd	r1, r6, [r0]
 8007f20:	300c      	adds	r0, #12
 8007f22:	60a0      	str	r0, [r4, #8]
 8007f24:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8007f28:	f7fd fa96 	bl	8005458 <memset>
 8007f2c:	4620      	mov	r0, r4
 8007f2e:	bd70      	pop	{r4, r5, r6, pc}

08007f30 <__sfp_lock_acquire>:
 8007f30:	4801      	ldr	r0, [pc, #4]	; (8007f38 <__sfp_lock_acquire+0x8>)
 8007f32:	f000 b8b3 	b.w	800809c <__retarget_lock_acquire_recursive>
 8007f36:	bf00      	nop
 8007f38:	200006c1 	.word	0x200006c1

08007f3c <__sfp_lock_release>:
 8007f3c:	4801      	ldr	r0, [pc, #4]	; (8007f44 <__sfp_lock_release+0x8>)
 8007f3e:	f000 b8ae 	b.w	800809e <__retarget_lock_release_recursive>
 8007f42:	bf00      	nop
 8007f44:	200006c1 	.word	0x200006c1

08007f48 <__sinit_lock_acquire>:
 8007f48:	4801      	ldr	r0, [pc, #4]	; (8007f50 <__sinit_lock_acquire+0x8>)
 8007f4a:	f000 b8a7 	b.w	800809c <__retarget_lock_acquire_recursive>
 8007f4e:	bf00      	nop
 8007f50:	200006c2 	.word	0x200006c2

08007f54 <__sinit_lock_release>:
 8007f54:	4801      	ldr	r0, [pc, #4]	; (8007f5c <__sinit_lock_release+0x8>)
 8007f56:	f000 b8a2 	b.w	800809e <__retarget_lock_release_recursive>
 8007f5a:	bf00      	nop
 8007f5c:	200006c2 	.word	0x200006c2

08007f60 <__sinit>:
 8007f60:	b510      	push	{r4, lr}
 8007f62:	4604      	mov	r4, r0
 8007f64:	f7ff fff0 	bl	8007f48 <__sinit_lock_acquire>
 8007f68:	69a3      	ldr	r3, [r4, #24]
 8007f6a:	b11b      	cbz	r3, 8007f74 <__sinit+0x14>
 8007f6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007f70:	f7ff bff0 	b.w	8007f54 <__sinit_lock_release>
 8007f74:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8007f78:	6523      	str	r3, [r4, #80]	; 0x50
 8007f7a:	4b13      	ldr	r3, [pc, #76]	; (8007fc8 <__sinit+0x68>)
 8007f7c:	4a13      	ldr	r2, [pc, #76]	; (8007fcc <__sinit+0x6c>)
 8007f7e:	681b      	ldr	r3, [r3, #0]
 8007f80:	62a2      	str	r2, [r4, #40]	; 0x28
 8007f82:	42a3      	cmp	r3, r4
 8007f84:	bf08      	it	eq
 8007f86:	2301      	moveq	r3, #1
 8007f88:	4620      	mov	r0, r4
 8007f8a:	bf08      	it	eq
 8007f8c:	61a3      	streq	r3, [r4, #24]
 8007f8e:	f000 f81f 	bl	8007fd0 <__sfp>
 8007f92:	6060      	str	r0, [r4, #4]
 8007f94:	4620      	mov	r0, r4
 8007f96:	f000 f81b 	bl	8007fd0 <__sfp>
 8007f9a:	60a0      	str	r0, [r4, #8]
 8007f9c:	4620      	mov	r0, r4
 8007f9e:	f000 f817 	bl	8007fd0 <__sfp>
 8007fa2:	2200      	movs	r2, #0
 8007fa4:	2104      	movs	r1, #4
 8007fa6:	60e0      	str	r0, [r4, #12]
 8007fa8:	6860      	ldr	r0, [r4, #4]
 8007faa:	f7ff ff81 	bl	8007eb0 <std>
 8007fae:	2201      	movs	r2, #1
 8007fb0:	2109      	movs	r1, #9
 8007fb2:	68a0      	ldr	r0, [r4, #8]
 8007fb4:	f7ff ff7c 	bl	8007eb0 <std>
 8007fb8:	2202      	movs	r2, #2
 8007fba:	2112      	movs	r1, #18
 8007fbc:	68e0      	ldr	r0, [r4, #12]
 8007fbe:	f7ff ff77 	bl	8007eb0 <std>
 8007fc2:	2301      	movs	r3, #1
 8007fc4:	61a3      	str	r3, [r4, #24]
 8007fc6:	e7d1      	b.n	8007f6c <__sinit+0xc>
 8007fc8:	08008628 	.word	0x08008628
 8007fcc:	08007ef9 	.word	0x08007ef9

08007fd0 <__sfp>:
 8007fd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007fd2:	4607      	mov	r7, r0
 8007fd4:	f7ff ffac 	bl	8007f30 <__sfp_lock_acquire>
 8007fd8:	4b1e      	ldr	r3, [pc, #120]	; (8008054 <__sfp+0x84>)
 8007fda:	681e      	ldr	r6, [r3, #0]
 8007fdc:	69b3      	ldr	r3, [r6, #24]
 8007fde:	b913      	cbnz	r3, 8007fe6 <__sfp+0x16>
 8007fe0:	4630      	mov	r0, r6
 8007fe2:	f7ff ffbd 	bl	8007f60 <__sinit>
 8007fe6:	3648      	adds	r6, #72	; 0x48
 8007fe8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8007fec:	3b01      	subs	r3, #1
 8007fee:	d503      	bpl.n	8007ff8 <__sfp+0x28>
 8007ff0:	6833      	ldr	r3, [r6, #0]
 8007ff2:	b30b      	cbz	r3, 8008038 <__sfp+0x68>
 8007ff4:	6836      	ldr	r6, [r6, #0]
 8007ff6:	e7f7      	b.n	8007fe8 <__sfp+0x18>
 8007ff8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8007ffc:	b9d5      	cbnz	r5, 8008034 <__sfp+0x64>
 8007ffe:	4b16      	ldr	r3, [pc, #88]	; (8008058 <__sfp+0x88>)
 8008000:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8008004:	60e3      	str	r3, [r4, #12]
 8008006:	6665      	str	r5, [r4, #100]	; 0x64
 8008008:	f000 f847 	bl	800809a <__retarget_lock_init_recursive>
 800800c:	f7ff ff96 	bl	8007f3c <__sfp_lock_release>
 8008010:	2208      	movs	r2, #8
 8008012:	4629      	mov	r1, r5
 8008014:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8008018:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800801c:	6025      	str	r5, [r4, #0]
 800801e:	61a5      	str	r5, [r4, #24]
 8008020:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8008024:	f7fd fa18 	bl	8005458 <memset>
 8008028:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800802c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8008030:	4620      	mov	r0, r4
 8008032:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008034:	3468      	adds	r4, #104	; 0x68
 8008036:	e7d9      	b.n	8007fec <__sfp+0x1c>
 8008038:	2104      	movs	r1, #4
 800803a:	4638      	mov	r0, r7
 800803c:	f7ff ff62 	bl	8007f04 <__sfmoreglue>
 8008040:	4604      	mov	r4, r0
 8008042:	6030      	str	r0, [r6, #0]
 8008044:	2800      	cmp	r0, #0
 8008046:	d1d5      	bne.n	8007ff4 <__sfp+0x24>
 8008048:	f7ff ff78 	bl	8007f3c <__sfp_lock_release>
 800804c:	230c      	movs	r3, #12
 800804e:	603b      	str	r3, [r7, #0]
 8008050:	e7ee      	b.n	8008030 <__sfp+0x60>
 8008052:	bf00      	nop
 8008054:	08008628 	.word	0x08008628
 8008058:	ffff0001 	.word	0xffff0001

0800805c <_fwalk_reent>:
 800805c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008060:	4606      	mov	r6, r0
 8008062:	4688      	mov	r8, r1
 8008064:	2700      	movs	r7, #0
 8008066:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800806a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800806e:	f1b9 0901 	subs.w	r9, r9, #1
 8008072:	d505      	bpl.n	8008080 <_fwalk_reent+0x24>
 8008074:	6824      	ldr	r4, [r4, #0]
 8008076:	2c00      	cmp	r4, #0
 8008078:	d1f7      	bne.n	800806a <_fwalk_reent+0xe>
 800807a:	4638      	mov	r0, r7
 800807c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8008080:	89ab      	ldrh	r3, [r5, #12]
 8008082:	2b01      	cmp	r3, #1
 8008084:	d907      	bls.n	8008096 <_fwalk_reent+0x3a>
 8008086:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800808a:	3301      	adds	r3, #1
 800808c:	d003      	beq.n	8008096 <_fwalk_reent+0x3a>
 800808e:	4629      	mov	r1, r5
 8008090:	4630      	mov	r0, r6
 8008092:	47c0      	blx	r8
 8008094:	4307      	orrs	r7, r0
 8008096:	3568      	adds	r5, #104	; 0x68
 8008098:	e7e9      	b.n	800806e <_fwalk_reent+0x12>

0800809a <__retarget_lock_init_recursive>:
 800809a:	4770      	bx	lr

0800809c <__retarget_lock_acquire_recursive>:
 800809c:	4770      	bx	lr

0800809e <__retarget_lock_release_recursive>:
 800809e:	4770      	bx	lr

080080a0 <__swhatbuf_r>:
 80080a0:	b570      	push	{r4, r5, r6, lr}
 80080a2:	460e      	mov	r6, r1
 80080a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80080a8:	4614      	mov	r4, r2
 80080aa:	2900      	cmp	r1, #0
 80080ac:	461d      	mov	r5, r3
 80080ae:	b096      	sub	sp, #88	; 0x58
 80080b0:	da08      	bge.n	80080c4 <__swhatbuf_r+0x24>
 80080b2:	2200      	movs	r2, #0
 80080b4:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80080b8:	602a      	str	r2, [r5, #0]
 80080ba:	061a      	lsls	r2, r3, #24
 80080bc:	d410      	bmi.n	80080e0 <__swhatbuf_r+0x40>
 80080be:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80080c2:	e00e      	b.n	80080e2 <__swhatbuf_r+0x42>
 80080c4:	466a      	mov	r2, sp
 80080c6:	f000 f96f 	bl	80083a8 <_fstat_r>
 80080ca:	2800      	cmp	r0, #0
 80080cc:	dbf1      	blt.n	80080b2 <__swhatbuf_r+0x12>
 80080ce:	9a01      	ldr	r2, [sp, #4]
 80080d0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80080d4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80080d8:	425a      	negs	r2, r3
 80080da:	415a      	adcs	r2, r3
 80080dc:	602a      	str	r2, [r5, #0]
 80080de:	e7ee      	b.n	80080be <__swhatbuf_r+0x1e>
 80080e0:	2340      	movs	r3, #64	; 0x40
 80080e2:	2000      	movs	r0, #0
 80080e4:	6023      	str	r3, [r4, #0]
 80080e6:	b016      	add	sp, #88	; 0x58
 80080e8:	bd70      	pop	{r4, r5, r6, pc}
	...

080080ec <__smakebuf_r>:
 80080ec:	898b      	ldrh	r3, [r1, #12]
 80080ee:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80080f0:	079d      	lsls	r5, r3, #30
 80080f2:	4606      	mov	r6, r0
 80080f4:	460c      	mov	r4, r1
 80080f6:	d507      	bpl.n	8008108 <__smakebuf_r+0x1c>
 80080f8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80080fc:	6023      	str	r3, [r4, #0]
 80080fe:	6123      	str	r3, [r4, #16]
 8008100:	2301      	movs	r3, #1
 8008102:	6163      	str	r3, [r4, #20]
 8008104:	b002      	add	sp, #8
 8008106:	bd70      	pop	{r4, r5, r6, pc}
 8008108:	466a      	mov	r2, sp
 800810a:	ab01      	add	r3, sp, #4
 800810c:	f7ff ffc8 	bl	80080a0 <__swhatbuf_r>
 8008110:	9900      	ldr	r1, [sp, #0]
 8008112:	4605      	mov	r5, r0
 8008114:	4630      	mov	r0, r6
 8008116:	f7ff fa0d 	bl	8007534 <_malloc_r>
 800811a:	b948      	cbnz	r0, 8008130 <__smakebuf_r+0x44>
 800811c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008120:	059a      	lsls	r2, r3, #22
 8008122:	d4ef      	bmi.n	8008104 <__smakebuf_r+0x18>
 8008124:	f023 0303 	bic.w	r3, r3, #3
 8008128:	f043 0302 	orr.w	r3, r3, #2
 800812c:	81a3      	strh	r3, [r4, #12]
 800812e:	e7e3      	b.n	80080f8 <__smakebuf_r+0xc>
 8008130:	4b0d      	ldr	r3, [pc, #52]	; (8008168 <__smakebuf_r+0x7c>)
 8008132:	62b3      	str	r3, [r6, #40]	; 0x28
 8008134:	89a3      	ldrh	r3, [r4, #12]
 8008136:	6020      	str	r0, [r4, #0]
 8008138:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800813c:	81a3      	strh	r3, [r4, #12]
 800813e:	9b00      	ldr	r3, [sp, #0]
 8008140:	6120      	str	r0, [r4, #16]
 8008142:	6163      	str	r3, [r4, #20]
 8008144:	9b01      	ldr	r3, [sp, #4]
 8008146:	b15b      	cbz	r3, 8008160 <__smakebuf_r+0x74>
 8008148:	4630      	mov	r0, r6
 800814a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800814e:	f000 f93d 	bl	80083cc <_isatty_r>
 8008152:	b128      	cbz	r0, 8008160 <__smakebuf_r+0x74>
 8008154:	89a3      	ldrh	r3, [r4, #12]
 8008156:	f023 0303 	bic.w	r3, r3, #3
 800815a:	f043 0301 	orr.w	r3, r3, #1
 800815e:	81a3      	strh	r3, [r4, #12]
 8008160:	89a0      	ldrh	r0, [r4, #12]
 8008162:	4305      	orrs	r5, r0
 8008164:	81a5      	strh	r5, [r4, #12]
 8008166:	e7cd      	b.n	8008104 <__smakebuf_r+0x18>
 8008168:	08007ef9 	.word	0x08007ef9

0800816c <__ascii_mbtowc>:
 800816c:	b082      	sub	sp, #8
 800816e:	b901      	cbnz	r1, 8008172 <__ascii_mbtowc+0x6>
 8008170:	a901      	add	r1, sp, #4
 8008172:	b142      	cbz	r2, 8008186 <__ascii_mbtowc+0x1a>
 8008174:	b14b      	cbz	r3, 800818a <__ascii_mbtowc+0x1e>
 8008176:	7813      	ldrb	r3, [r2, #0]
 8008178:	600b      	str	r3, [r1, #0]
 800817a:	7812      	ldrb	r2, [r2, #0]
 800817c:	1e10      	subs	r0, r2, #0
 800817e:	bf18      	it	ne
 8008180:	2001      	movne	r0, #1
 8008182:	b002      	add	sp, #8
 8008184:	4770      	bx	lr
 8008186:	4610      	mov	r0, r2
 8008188:	e7fb      	b.n	8008182 <__ascii_mbtowc+0x16>
 800818a:	f06f 0001 	mvn.w	r0, #1
 800818e:	e7f8      	b.n	8008182 <__ascii_mbtowc+0x16>

08008190 <memmove>:
 8008190:	4288      	cmp	r0, r1
 8008192:	b510      	push	{r4, lr}
 8008194:	eb01 0402 	add.w	r4, r1, r2
 8008198:	d902      	bls.n	80081a0 <memmove+0x10>
 800819a:	4284      	cmp	r4, r0
 800819c:	4623      	mov	r3, r4
 800819e:	d807      	bhi.n	80081b0 <memmove+0x20>
 80081a0:	1e43      	subs	r3, r0, #1
 80081a2:	42a1      	cmp	r1, r4
 80081a4:	d008      	beq.n	80081b8 <memmove+0x28>
 80081a6:	f811 2b01 	ldrb.w	r2, [r1], #1
 80081aa:	f803 2f01 	strb.w	r2, [r3, #1]!
 80081ae:	e7f8      	b.n	80081a2 <memmove+0x12>
 80081b0:	4601      	mov	r1, r0
 80081b2:	4402      	add	r2, r0
 80081b4:	428a      	cmp	r2, r1
 80081b6:	d100      	bne.n	80081ba <memmove+0x2a>
 80081b8:	bd10      	pop	{r4, pc}
 80081ba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80081be:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80081c2:	e7f7      	b.n	80081b4 <memmove+0x24>

080081c4 <__malloc_lock>:
 80081c4:	4801      	ldr	r0, [pc, #4]	; (80081cc <__malloc_lock+0x8>)
 80081c6:	f7ff bf69 	b.w	800809c <__retarget_lock_acquire_recursive>
 80081ca:	bf00      	nop
 80081cc:	200006c0 	.word	0x200006c0

080081d0 <__malloc_unlock>:
 80081d0:	4801      	ldr	r0, [pc, #4]	; (80081d8 <__malloc_unlock+0x8>)
 80081d2:	f7ff bf64 	b.w	800809e <__retarget_lock_release_recursive>
 80081d6:	bf00      	nop
 80081d8:	200006c0 	.word	0x200006c0

080081dc <_realloc_r>:
 80081dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80081e0:	4680      	mov	r8, r0
 80081e2:	4614      	mov	r4, r2
 80081e4:	460e      	mov	r6, r1
 80081e6:	b921      	cbnz	r1, 80081f2 <_realloc_r+0x16>
 80081e8:	4611      	mov	r1, r2
 80081ea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80081ee:	f7ff b9a1 	b.w	8007534 <_malloc_r>
 80081f2:	b92a      	cbnz	r2, 8008200 <_realloc_r+0x24>
 80081f4:	f7ff f936 	bl	8007464 <_free_r>
 80081f8:	4625      	mov	r5, r4
 80081fa:	4628      	mov	r0, r5
 80081fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008200:	f000 f906 	bl	8008410 <_malloc_usable_size_r>
 8008204:	4284      	cmp	r4, r0
 8008206:	4607      	mov	r7, r0
 8008208:	d802      	bhi.n	8008210 <_realloc_r+0x34>
 800820a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800820e:	d812      	bhi.n	8008236 <_realloc_r+0x5a>
 8008210:	4621      	mov	r1, r4
 8008212:	4640      	mov	r0, r8
 8008214:	f7ff f98e 	bl	8007534 <_malloc_r>
 8008218:	4605      	mov	r5, r0
 800821a:	2800      	cmp	r0, #0
 800821c:	d0ed      	beq.n	80081fa <_realloc_r+0x1e>
 800821e:	42bc      	cmp	r4, r7
 8008220:	4622      	mov	r2, r4
 8008222:	4631      	mov	r1, r6
 8008224:	bf28      	it	cs
 8008226:	463a      	movcs	r2, r7
 8008228:	f7fe fd78 	bl	8006d1c <memcpy>
 800822c:	4631      	mov	r1, r6
 800822e:	4640      	mov	r0, r8
 8008230:	f7ff f918 	bl	8007464 <_free_r>
 8008234:	e7e1      	b.n	80081fa <_realloc_r+0x1e>
 8008236:	4635      	mov	r5, r6
 8008238:	e7df      	b.n	80081fa <_realloc_r+0x1e>

0800823a <_raise_r>:
 800823a:	291f      	cmp	r1, #31
 800823c:	b538      	push	{r3, r4, r5, lr}
 800823e:	4604      	mov	r4, r0
 8008240:	460d      	mov	r5, r1
 8008242:	d904      	bls.n	800824e <_raise_r+0x14>
 8008244:	2316      	movs	r3, #22
 8008246:	6003      	str	r3, [r0, #0]
 8008248:	f04f 30ff 	mov.w	r0, #4294967295
 800824c:	bd38      	pop	{r3, r4, r5, pc}
 800824e:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8008250:	b112      	cbz	r2, 8008258 <_raise_r+0x1e>
 8008252:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8008256:	b94b      	cbnz	r3, 800826c <_raise_r+0x32>
 8008258:	4620      	mov	r0, r4
 800825a:	f000 f831 	bl	80082c0 <_getpid_r>
 800825e:	462a      	mov	r2, r5
 8008260:	4601      	mov	r1, r0
 8008262:	4620      	mov	r0, r4
 8008264:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008268:	f000 b818 	b.w	800829c <_kill_r>
 800826c:	2b01      	cmp	r3, #1
 800826e:	d00a      	beq.n	8008286 <_raise_r+0x4c>
 8008270:	1c59      	adds	r1, r3, #1
 8008272:	d103      	bne.n	800827c <_raise_r+0x42>
 8008274:	2316      	movs	r3, #22
 8008276:	6003      	str	r3, [r0, #0]
 8008278:	2001      	movs	r0, #1
 800827a:	e7e7      	b.n	800824c <_raise_r+0x12>
 800827c:	2400      	movs	r4, #0
 800827e:	4628      	mov	r0, r5
 8008280:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8008284:	4798      	blx	r3
 8008286:	2000      	movs	r0, #0
 8008288:	e7e0      	b.n	800824c <_raise_r+0x12>
	...

0800828c <raise>:
 800828c:	4b02      	ldr	r3, [pc, #8]	; (8008298 <raise+0xc>)
 800828e:	4601      	mov	r1, r0
 8008290:	6818      	ldr	r0, [r3, #0]
 8008292:	f7ff bfd2 	b.w	800823a <_raise_r>
 8008296:	bf00      	nop
 8008298:	20000014 	.word	0x20000014

0800829c <_kill_r>:
 800829c:	b538      	push	{r3, r4, r5, lr}
 800829e:	2300      	movs	r3, #0
 80082a0:	4d06      	ldr	r5, [pc, #24]	; (80082bc <_kill_r+0x20>)
 80082a2:	4604      	mov	r4, r0
 80082a4:	4608      	mov	r0, r1
 80082a6:	4611      	mov	r1, r2
 80082a8:	602b      	str	r3, [r5, #0]
 80082aa:	f7f9 fb24 	bl	80018f6 <_kill>
 80082ae:	1c43      	adds	r3, r0, #1
 80082b0:	d102      	bne.n	80082b8 <_kill_r+0x1c>
 80082b2:	682b      	ldr	r3, [r5, #0]
 80082b4:	b103      	cbz	r3, 80082b8 <_kill_r+0x1c>
 80082b6:	6023      	str	r3, [r4, #0]
 80082b8:	bd38      	pop	{r3, r4, r5, pc}
 80082ba:	bf00      	nop
 80082bc:	200006c4 	.word	0x200006c4

080082c0 <_getpid_r>:
 80082c0:	f7f9 bb12 	b.w	80018e8 <_getpid>

080082c4 <__sread>:
 80082c4:	b510      	push	{r4, lr}
 80082c6:	460c      	mov	r4, r1
 80082c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80082cc:	f000 f8a8 	bl	8008420 <_read_r>
 80082d0:	2800      	cmp	r0, #0
 80082d2:	bfab      	itete	ge
 80082d4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80082d6:	89a3      	ldrhlt	r3, [r4, #12]
 80082d8:	181b      	addge	r3, r3, r0
 80082da:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80082de:	bfac      	ite	ge
 80082e0:	6563      	strge	r3, [r4, #84]	; 0x54
 80082e2:	81a3      	strhlt	r3, [r4, #12]
 80082e4:	bd10      	pop	{r4, pc}

080082e6 <__swrite>:
 80082e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80082ea:	461f      	mov	r7, r3
 80082ec:	898b      	ldrh	r3, [r1, #12]
 80082ee:	4605      	mov	r5, r0
 80082f0:	05db      	lsls	r3, r3, #23
 80082f2:	460c      	mov	r4, r1
 80082f4:	4616      	mov	r6, r2
 80082f6:	d505      	bpl.n	8008304 <__swrite+0x1e>
 80082f8:	2302      	movs	r3, #2
 80082fa:	2200      	movs	r2, #0
 80082fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008300:	f000 f874 	bl	80083ec <_lseek_r>
 8008304:	89a3      	ldrh	r3, [r4, #12]
 8008306:	4632      	mov	r2, r6
 8008308:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800830c:	81a3      	strh	r3, [r4, #12]
 800830e:	4628      	mov	r0, r5
 8008310:	463b      	mov	r3, r7
 8008312:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008316:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800831a:	f000 b823 	b.w	8008364 <_write_r>

0800831e <__sseek>:
 800831e:	b510      	push	{r4, lr}
 8008320:	460c      	mov	r4, r1
 8008322:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008326:	f000 f861 	bl	80083ec <_lseek_r>
 800832a:	1c43      	adds	r3, r0, #1
 800832c:	89a3      	ldrh	r3, [r4, #12]
 800832e:	bf15      	itete	ne
 8008330:	6560      	strne	r0, [r4, #84]	; 0x54
 8008332:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8008336:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800833a:	81a3      	strheq	r3, [r4, #12]
 800833c:	bf18      	it	ne
 800833e:	81a3      	strhne	r3, [r4, #12]
 8008340:	bd10      	pop	{r4, pc}

08008342 <__sclose>:
 8008342:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008346:	f000 b81f 	b.w	8008388 <_close_r>

0800834a <__ascii_wctomb>:
 800834a:	4603      	mov	r3, r0
 800834c:	4608      	mov	r0, r1
 800834e:	b141      	cbz	r1, 8008362 <__ascii_wctomb+0x18>
 8008350:	2aff      	cmp	r2, #255	; 0xff
 8008352:	d904      	bls.n	800835e <__ascii_wctomb+0x14>
 8008354:	228a      	movs	r2, #138	; 0x8a
 8008356:	f04f 30ff 	mov.w	r0, #4294967295
 800835a:	601a      	str	r2, [r3, #0]
 800835c:	4770      	bx	lr
 800835e:	2001      	movs	r0, #1
 8008360:	700a      	strb	r2, [r1, #0]
 8008362:	4770      	bx	lr

08008364 <_write_r>:
 8008364:	b538      	push	{r3, r4, r5, lr}
 8008366:	4604      	mov	r4, r0
 8008368:	4608      	mov	r0, r1
 800836a:	4611      	mov	r1, r2
 800836c:	2200      	movs	r2, #0
 800836e:	4d05      	ldr	r5, [pc, #20]	; (8008384 <_write_r+0x20>)
 8008370:	602a      	str	r2, [r5, #0]
 8008372:	461a      	mov	r2, r3
 8008374:	f7f9 faf6 	bl	8001964 <_write>
 8008378:	1c43      	adds	r3, r0, #1
 800837a:	d102      	bne.n	8008382 <_write_r+0x1e>
 800837c:	682b      	ldr	r3, [r5, #0]
 800837e:	b103      	cbz	r3, 8008382 <_write_r+0x1e>
 8008380:	6023      	str	r3, [r4, #0]
 8008382:	bd38      	pop	{r3, r4, r5, pc}
 8008384:	200006c4 	.word	0x200006c4

08008388 <_close_r>:
 8008388:	b538      	push	{r3, r4, r5, lr}
 800838a:	2300      	movs	r3, #0
 800838c:	4d05      	ldr	r5, [pc, #20]	; (80083a4 <_close_r+0x1c>)
 800838e:	4604      	mov	r4, r0
 8008390:	4608      	mov	r0, r1
 8008392:	602b      	str	r3, [r5, #0]
 8008394:	f7f9 fb02 	bl	800199c <_close>
 8008398:	1c43      	adds	r3, r0, #1
 800839a:	d102      	bne.n	80083a2 <_close_r+0x1a>
 800839c:	682b      	ldr	r3, [r5, #0]
 800839e:	b103      	cbz	r3, 80083a2 <_close_r+0x1a>
 80083a0:	6023      	str	r3, [r4, #0]
 80083a2:	bd38      	pop	{r3, r4, r5, pc}
 80083a4:	200006c4 	.word	0x200006c4

080083a8 <_fstat_r>:
 80083a8:	b538      	push	{r3, r4, r5, lr}
 80083aa:	2300      	movs	r3, #0
 80083ac:	4d06      	ldr	r5, [pc, #24]	; (80083c8 <_fstat_r+0x20>)
 80083ae:	4604      	mov	r4, r0
 80083b0:	4608      	mov	r0, r1
 80083b2:	4611      	mov	r1, r2
 80083b4:	602b      	str	r3, [r5, #0]
 80083b6:	f7f9 fafc 	bl	80019b2 <_fstat>
 80083ba:	1c43      	adds	r3, r0, #1
 80083bc:	d102      	bne.n	80083c4 <_fstat_r+0x1c>
 80083be:	682b      	ldr	r3, [r5, #0]
 80083c0:	b103      	cbz	r3, 80083c4 <_fstat_r+0x1c>
 80083c2:	6023      	str	r3, [r4, #0]
 80083c4:	bd38      	pop	{r3, r4, r5, pc}
 80083c6:	bf00      	nop
 80083c8:	200006c4 	.word	0x200006c4

080083cc <_isatty_r>:
 80083cc:	b538      	push	{r3, r4, r5, lr}
 80083ce:	2300      	movs	r3, #0
 80083d0:	4d05      	ldr	r5, [pc, #20]	; (80083e8 <_isatty_r+0x1c>)
 80083d2:	4604      	mov	r4, r0
 80083d4:	4608      	mov	r0, r1
 80083d6:	602b      	str	r3, [r5, #0]
 80083d8:	f7f9 fafa 	bl	80019d0 <_isatty>
 80083dc:	1c43      	adds	r3, r0, #1
 80083de:	d102      	bne.n	80083e6 <_isatty_r+0x1a>
 80083e0:	682b      	ldr	r3, [r5, #0]
 80083e2:	b103      	cbz	r3, 80083e6 <_isatty_r+0x1a>
 80083e4:	6023      	str	r3, [r4, #0]
 80083e6:	bd38      	pop	{r3, r4, r5, pc}
 80083e8:	200006c4 	.word	0x200006c4

080083ec <_lseek_r>:
 80083ec:	b538      	push	{r3, r4, r5, lr}
 80083ee:	4604      	mov	r4, r0
 80083f0:	4608      	mov	r0, r1
 80083f2:	4611      	mov	r1, r2
 80083f4:	2200      	movs	r2, #0
 80083f6:	4d05      	ldr	r5, [pc, #20]	; (800840c <_lseek_r+0x20>)
 80083f8:	602a      	str	r2, [r5, #0]
 80083fa:	461a      	mov	r2, r3
 80083fc:	f7f9 faf2 	bl	80019e4 <_lseek>
 8008400:	1c43      	adds	r3, r0, #1
 8008402:	d102      	bne.n	800840a <_lseek_r+0x1e>
 8008404:	682b      	ldr	r3, [r5, #0]
 8008406:	b103      	cbz	r3, 800840a <_lseek_r+0x1e>
 8008408:	6023      	str	r3, [r4, #0]
 800840a:	bd38      	pop	{r3, r4, r5, pc}
 800840c:	200006c4 	.word	0x200006c4

08008410 <_malloc_usable_size_r>:
 8008410:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8008414:	1f18      	subs	r0, r3, #4
 8008416:	2b00      	cmp	r3, #0
 8008418:	bfbc      	itt	lt
 800841a:	580b      	ldrlt	r3, [r1, r0]
 800841c:	18c0      	addlt	r0, r0, r3
 800841e:	4770      	bx	lr

08008420 <_read_r>:
 8008420:	b538      	push	{r3, r4, r5, lr}
 8008422:	4604      	mov	r4, r0
 8008424:	4608      	mov	r0, r1
 8008426:	4611      	mov	r1, r2
 8008428:	2200      	movs	r2, #0
 800842a:	4d05      	ldr	r5, [pc, #20]	; (8008440 <_read_r+0x20>)
 800842c:	602a      	str	r2, [r5, #0]
 800842e:	461a      	mov	r2, r3
 8008430:	f7f9 fa7b 	bl	800192a <_read>
 8008434:	1c43      	adds	r3, r0, #1
 8008436:	d102      	bne.n	800843e <_read_r+0x1e>
 8008438:	682b      	ldr	r3, [r5, #0]
 800843a:	b103      	cbz	r3, 800843e <_read_r+0x1e>
 800843c:	6023      	str	r3, [r4, #0]
 800843e:	bd38      	pop	{r3, r4, r5, pc}
 8008440:	200006c4 	.word	0x200006c4

08008444 <_init>:
 8008444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008446:	bf00      	nop
 8008448:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800844a:	bc08      	pop	{r3}
 800844c:	469e      	mov	lr, r3
 800844e:	4770      	bx	lr

08008450 <_fini>:
 8008450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008452:	bf00      	nop
 8008454:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008456:	bc08      	pop	{r3}
 8008458:	469e      	mov	lr, r3
 800845a:	4770      	bx	lr
