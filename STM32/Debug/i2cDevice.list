
i2cDevice.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004fa8  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000110  080050b4  080050b4  000150b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080051c4  080051c4  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  080051c4  080051c4  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  080051c4  080051c4  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080051c4  080051c4  000151c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080051c8  080051c8  000151c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  080051cc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000004f4  20000070  0800523c  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000564  0800523c  00020564  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000fbb7  00000000  00000000  00020099  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000026cd  00000000  00000000  0002fc50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001080  00000000  00000000  00032320  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000f90  00000000  00000000  000333a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019243  00000000  00000000  00034330  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000131be  00000000  00000000  0004d573  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008d290  00000000  00000000  00060731  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000ed9c1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004928  00000000  00000000  000eda14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000070 	.word	0x20000070
 8000128:	00000000 	.word	0x00000000
 800012c:	0800509c 	.word	0x0800509c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000074 	.word	0x20000074
 8000148:	0800509c 	.word	0x0800509c

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <dht20_init>:
#define SLAVE_ADDRESS_DHT20 (0x38 << 1)

uint16_t value_x10[2] = {0, 0};
char temp[20], humid[20];

void dht20_init(){
 800015c:	b580      	push	{r7, lr}
 800015e:	b084      	sub	sp, #16
 8000160:	af02      	add	r7, sp, #8
	//Set register when call a wrong reset
	uint8_t init[3];

	init[0] = 0xA8;
 8000162:	23a8      	movs	r3, #168	; 0xa8
 8000164:	713b      	strb	r3, [r7, #4]
	init[1] = 0x00;
 8000166:	2300      	movs	r3, #0
 8000168:	717b      	strb	r3, [r7, #5]
	init[2] = 0x00;
 800016a:	2300      	movs	r3, #0
 800016c:	71bb      	strb	r3, [r7, #6]
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) init, 3, 0xFF);
 800016e:	1d3a      	adds	r2, r7, #4
 8000170:	23ff      	movs	r3, #255	; 0xff
 8000172:	9300      	str	r3, [sp, #0]
 8000174:	2303      	movs	r3, #3
 8000176:	2170      	movs	r1, #112	; 0x70
 8000178:	480d      	ldr	r0, [pc, #52]	; (80001b0 <dht20_init+0x54>)
 800017a:	f001 fdab 	bl	8001cd4 <HAL_I2C_Master_Transmit>
	HAL_Delay(20);
 800017e:	2014      	movs	r0, #20
 8000180:	f001 f8e6 	bl	8001350 <HAL_Delay>

	init[0] = 0xBE;
 8000184:	23be      	movs	r3, #190	; 0xbe
 8000186:	713b      	strb	r3, [r7, #4]
	init[1] = 0x08;
 8000188:	2308      	movs	r3, #8
 800018a:	717b      	strb	r3, [r7, #5]
	init[2] = 0x00;
 800018c:	2300      	movs	r3, #0
 800018e:	71bb      	strb	r3, [r7, #6]
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) init, 3, 0xFF);
 8000190:	1d3a      	adds	r2, r7, #4
 8000192:	23ff      	movs	r3, #255	; 0xff
 8000194:	9300      	str	r3, [sp, #0]
 8000196:	2303      	movs	r3, #3
 8000198:	2170      	movs	r1, #112	; 0x70
 800019a:	4805      	ldr	r0, [pc, #20]	; (80001b0 <dht20_init+0x54>)
 800019c:	f001 fd9a 	bl	8001cd4 <HAL_I2C_Master_Transmit>
	HAL_Delay(20);
 80001a0:	2014      	movs	r0, #20
 80001a2:	f001 f8d5 	bl	8001350 <HAL_Delay>
}
 80001a6:	bf00      	nop
 80001a8:	3708      	adds	r7, #8
 80001aa:	46bd      	mov	sp, r7
 80001ac:	bd80      	pop	{r7, pc}
 80001ae:	bf00      	nop
 80001b0:	200000b8 	.word	0x200000b8

080001b4 <dht20_reset>:

void dht20_reset(uint8_t regist){
 80001b4:	b580      	push	{r7, lr}
 80001b6:	b086      	sub	sp, #24
 80001b8:	af02      	add	r7, sp, #8
 80001ba:	4603      	mov	r3, r0
 80001bc:	71fb      	strb	r3, [r7, #7]
	//reset register
	uint8_t reset[3], reply[3];

	reset[0] = regist;
 80001be:	79fb      	ldrb	r3, [r7, #7]
 80001c0:	733b      	strb	r3, [r7, #12]
	reset[1] = 0x00;
 80001c2:	2300      	movs	r3, #0
 80001c4:	737b      	strb	r3, [r7, #13]
	reset[2] = 0x00;
 80001c6:	2300      	movs	r3, #0
 80001c8:	73bb      	strb	r3, [r7, #14]
 	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) reset, 3, 0xFF);
 80001ca:	f107 020c 	add.w	r2, r7, #12
 80001ce:	23ff      	movs	r3, #255	; 0xff
 80001d0:	9300      	str	r3, [sp, #0]
 80001d2:	2303      	movs	r3, #3
 80001d4:	2170      	movs	r1, #112	; 0x70
 80001d6:	4814      	ldr	r0, [pc, #80]	; (8000228 <dht20_reset+0x74>)
 80001d8:	f001 fd7c 	bl	8001cd4 <HAL_I2C_Master_Transmit>
	HAL_Delay(10);
 80001dc:	200a      	movs	r0, #10
 80001de:	f001 f8b7 	bl	8001350 <HAL_Delay>

	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) reply, 3, 0xFF);
 80001e2:	f107 0208 	add.w	r2, r7, #8
 80001e6:	23ff      	movs	r3, #255	; 0xff
 80001e8:	9300      	str	r3, [sp, #0]
 80001ea:	2303      	movs	r3, #3
 80001ec:	2171      	movs	r1, #113	; 0x71
 80001ee:	480e      	ldr	r0, [pc, #56]	; (8000228 <dht20_reset+0x74>)
 80001f0:	f001 fe6e 	bl	8001ed0 <HAL_I2C_Master_Receive>
	reset[0] = 0xB0 | regist;
 80001f4:	79fb      	ldrb	r3, [r7, #7]
 80001f6:	f063 034f 	orn	r3, r3, #79	; 0x4f
 80001fa:	b2db      	uxtb	r3, r3
 80001fc:	733b      	strb	r3, [r7, #12]
	reset[1] = reply[1];
 80001fe:	7a7b      	ldrb	r3, [r7, #9]
 8000200:	737b      	strb	r3, [r7, #13]
	reset[2] = reply[2];
 8000202:	7abb      	ldrb	r3, [r7, #10]
 8000204:	73bb      	strb	r3, [r7, #14]
	HAL_Delay(10);
 8000206:	200a      	movs	r0, #10
 8000208:	f001 f8a2 	bl	8001350 <HAL_Delay>

	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) reset, 3, 0xFF);
 800020c:	f107 020c 	add.w	r2, r7, #12
 8000210:	23ff      	movs	r3, #255	; 0xff
 8000212:	9300      	str	r3, [sp, #0]
 8000214:	2303      	movs	r3, #3
 8000216:	2170      	movs	r1, #112	; 0x70
 8000218:	4803      	ldr	r0, [pc, #12]	; (8000228 <dht20_reset+0x74>)
 800021a:	f001 fd5b 	bl	8001cd4 <HAL_I2C_Master_Transmit>
}
 800021e:	bf00      	nop
 8000220:	3710      	adds	r7, #16
 8000222:	46bd      	mov	sp, r7
 8000224:	bd80      	pop	{r7, pc}
 8000226:	bf00      	nop
 8000228:	200000b8 	.word	0x200000b8

0800022c <dht20_start>:

void dht20_start(){
 800022c:	b580      	push	{r7, lr}
 800022e:	b084      	sub	sp, #16
 8000230:	af02      	add	r7, sp, #8
	//query the DHT20
	uint8_t status[1];
	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) status, 1, 0xFF);
 8000232:	1d3a      	adds	r2, r7, #4
 8000234:	23ff      	movs	r3, #255	; 0xff
 8000236:	9300      	str	r3, [sp, #0]
 8000238:	2301      	movs	r3, #1
 800023a:	2171      	movs	r1, #113	; 0x71
 800023c:	481b      	ldr	r0, [pc, #108]	; (80002ac <dht20_start+0x80>)
 800023e:	f001 fe47 	bl	8001ed0 <HAL_I2C_Master_Receive>

	if((status[0] & 0x18) != 0x18){
 8000242:	793b      	ldrb	r3, [r7, #4]
 8000244:	f003 0318 	and.w	r3, r3, #24
 8000248:	2b18      	cmp	r3, #24
 800024a:	d00d      	beq.n	8000268 <dht20_start+0x3c>
		dht20_reset(0x1B);
 800024c:	201b      	movs	r0, #27
 800024e:	f7ff ffb1 	bl	80001b4 <dht20_reset>
		dht20_reset(0x1C);
 8000252:	201c      	movs	r0, #28
 8000254:	f7ff ffae 	bl	80001b4 <dht20_reset>
		dht20_reset(0x1E);
 8000258:	201e      	movs	r0, #30
 800025a:	f7ff ffab 	bl	80001b4 <dht20_reset>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, RESET);
 800025e:	2200      	movs	r2, #0
 8000260:	2102      	movs	r1, #2
 8000262:	4813      	ldr	r0, [pc, #76]	; (80002b0 <dht20_start+0x84>)
 8000264:	f001 fbda 	bl	8001a1c <HAL_GPIO_WritePin>
	}

	if ((status[0] & 0x18) == 0x18){
 8000268:	793b      	ldrb	r3, [r7, #4]
 800026a:	f003 0318 	and.w	r3, r3, #24
 800026e:	2b18      	cmp	r3, #24
 8000270:	d104      	bne.n	800027c <dht20_start+0x50>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, SET);
 8000272:	2201      	movs	r2, #1
 8000274:	2102      	movs	r1, #2
 8000276:	480e      	ldr	r0, [pc, #56]	; (80002b0 <dht20_start+0x84>)
 8000278:	f001 fbd0 	bl	8001a1c <HAL_GPIO_WritePin>
	}

	uint8_t data[3] = {0xAC, 0x33, 0x00};
 800027c:	4a0d      	ldr	r2, [pc, #52]	; (80002b4 <dht20_start+0x88>)
 800027e:	463b      	mov	r3, r7
 8000280:	6812      	ldr	r2, [r2, #0]
 8000282:	4611      	mov	r1, r2
 8000284:	8019      	strh	r1, [r3, #0]
 8000286:	3302      	adds	r3, #2
 8000288:	0c12      	lsrs	r2, r2, #16
 800028a:	701a      	strb	r2, [r3, #0]

	//HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) trigger, 1, 0xFF);
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) data, 3, 0xFF);
 800028c:	463a      	mov	r2, r7
 800028e:	23ff      	movs	r3, #255	; 0xff
 8000290:	9300      	str	r3, [sp, #0]
 8000292:	2303      	movs	r3, #3
 8000294:	2170      	movs	r1, #112	; 0x70
 8000296:	4805      	ldr	r0, [pc, #20]	; (80002ac <dht20_start+0x80>)
 8000298:	f001 fd1c 	bl	8001cd4 <HAL_I2C_Master_Transmit>
	HAL_Delay(80);
 800029c:	2050      	movs	r0, #80	; 0x50
 800029e:	f001 f857 	bl	8001350 <HAL_Delay>
}
 80002a2:	bf00      	nop
 80002a4:	3708      	adds	r7, #8
 80002a6:	46bd      	mov	sp, r7
 80002a8:	bd80      	pop	{r7, pc}
 80002aa:	bf00      	nop
 80002ac:	200000b8 	.word	0x200000b8
 80002b0:	40010800 	.word	0x40010800
 80002b4:	080050b4 	.word	0x080050b4

080002b8 <dht20_read>:

void dht20_read(uint16_t* value){
 80002b8:	b580      	push	{r7, lr}
 80002ba:	b088      	sub	sp, #32
 80002bc:	af02      	add	r7, sp, #8
 80002be:	6078      	str	r0, [r7, #4]
	dht20_start();
 80002c0:	f7ff ffb4 	bl	800022c <dht20_start>
	uint8_t data[7];
	uint32_t Temper = 0, Humid = 0;
 80002c4:	2300      	movs	r3, #0
 80002c6:	617b      	str	r3, [r7, #20]
 80002c8:	2300      	movs	r3, #0
 80002ca:	613b      	str	r3, [r7, #16]
	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) data, 7, 0xFF);
 80002cc:	f107 0208 	add.w	r2, r7, #8
 80002d0:	23ff      	movs	r3, #255	; 0xff
 80002d2:	9300      	str	r3, [sp, #0]
 80002d4:	2307      	movs	r3, #7
 80002d6:	2171      	movs	r1, #113	; 0x71
 80002d8:	4824      	ldr	r0, [pc, #144]	; (800036c <dht20_read+0xb4>)
 80002da:	f001 fdf9 	bl	8001ed0 <HAL_I2C_Master_Receive>

	//Humid
	Humid = (Humid | data[1]) << 8;
 80002de:	7a7b      	ldrb	r3, [r7, #9]
 80002e0:	461a      	mov	r2, r3
 80002e2:	693b      	ldr	r3, [r7, #16]
 80002e4:	4313      	orrs	r3, r2
 80002e6:	021b      	lsls	r3, r3, #8
 80002e8:	613b      	str	r3, [r7, #16]
	Humid = (Humid | data[2]) << 8;
 80002ea:	7abb      	ldrb	r3, [r7, #10]
 80002ec:	461a      	mov	r2, r3
 80002ee:	693b      	ldr	r3, [r7, #16]
 80002f0:	4313      	orrs	r3, r2
 80002f2:	021b      	lsls	r3, r3, #8
 80002f4:	613b      	str	r3, [r7, #16]
	Humid = Humid | data[3];
 80002f6:	7afb      	ldrb	r3, [r7, #11]
 80002f8:	461a      	mov	r2, r3
 80002fa:	693b      	ldr	r3, [r7, #16]
 80002fc:	4313      	orrs	r3, r2
 80002fe:	613b      	str	r3, [r7, #16]
	Humid = Humid >> 4;
 8000300:	693b      	ldr	r3, [r7, #16]
 8000302:	091b      	lsrs	r3, r3, #4
 8000304:	613b      	str	r3, [r7, #16]
    Humid = (Humid * 100 * 10 / 1024 / 1024);
 8000306:	693b      	ldr	r3, [r7, #16]
 8000308:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800030c:	fb02 f303 	mul.w	r3, r2, r3
 8000310:	0d1b      	lsrs	r3, r3, #20
 8000312:	613b      	str	r3, [r7, #16]
    value[0] = Humid;
 8000314:	693b      	ldr	r3, [r7, #16]
 8000316:	b29a      	uxth	r2, r3
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	801a      	strh	r2, [r3, #0]

	//Temperature
    Temper = (Temper | data[3]) << 8;
 800031c:	7afb      	ldrb	r3, [r7, #11]
 800031e:	461a      	mov	r2, r3
 8000320:	697b      	ldr	r3, [r7, #20]
 8000322:	4313      	orrs	r3, r2
 8000324:	021b      	lsls	r3, r3, #8
 8000326:	617b      	str	r3, [r7, #20]
    Temper = (Temper | data[4]) << 8;
 8000328:	7b3b      	ldrb	r3, [r7, #12]
 800032a:	461a      	mov	r2, r3
 800032c:	697b      	ldr	r3, [r7, #20]
 800032e:	4313      	orrs	r3, r2
 8000330:	021b      	lsls	r3, r3, #8
 8000332:	617b      	str	r3, [r7, #20]
    Temper = Temper | data[5];
 8000334:	7b7b      	ldrb	r3, [r7, #13]
 8000336:	461a      	mov	r2, r3
 8000338:	697b      	ldr	r3, [r7, #20]
 800033a:	4313      	orrs	r3, r2
 800033c:	617b      	str	r3, [r7, #20]
    Temper = Temper & 0xfffff;
 800033e:	697b      	ldr	r3, [r7, #20]
 8000340:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8000344:	617b      	str	r3, [r7, #20]
    Temper = Temper*200*10/1024/1024 - 500;
 8000346:	697b      	ldr	r3, [r7, #20]
 8000348:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 800034c:	fb02 f303 	mul.w	r3, r2, r3
 8000350:	0d1b      	lsrs	r3, r3, #20
 8000352:	f5a3 73fa 	sub.w	r3, r3, #500	; 0x1f4
 8000356:	617b      	str	r3, [r7, #20]
	value[1] = Temper;
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	3302      	adds	r3, #2
 800035c:	697a      	ldr	r2, [r7, #20]
 800035e:	b292      	uxth	r2, r2
 8000360:	801a      	strh	r2, [r3, #0]

}
 8000362:	bf00      	nop
 8000364:	3718      	adds	r7, #24
 8000366:	46bd      	mov	sp, r7
 8000368:	bd80      	pop	{r7, pc}
 800036a:	bf00      	nop
 800036c:	200000b8 	.word	0x200000b8

08000370 <dht20_output>:

void dht20_output(){
 8000370:	b590      	push	{r4, r7, lr}
 8000372:	b093      	sub	sp, #76	; 0x4c
 8000374:	af02      	add	r7, sp, #8
	dht20_read(value_x10);
 8000376:	4844      	ldr	r0, [pc, #272]	; (8000488 <dht20_output+0x118>)
 8000378:	f7ff ff9e 	bl	80002b8 <dht20_read>
	char msg[64];
	//11011111 is degree character (manual)
	sprintf(temp, "TEMP:  %d.%d %cC",value_x10[1]/10,value_x10[1]%10 ,0b11011111);
 800037c:	4b42      	ldr	r3, [pc, #264]	; (8000488 <dht20_output+0x118>)
 800037e:	885b      	ldrh	r3, [r3, #2]
 8000380:	4a42      	ldr	r2, [pc, #264]	; (800048c <dht20_output+0x11c>)
 8000382:	fba2 2303 	umull	r2, r3, r2, r3
 8000386:	08db      	lsrs	r3, r3, #3
 8000388:	b29b      	uxth	r3, r3
 800038a:	4618      	mov	r0, r3
 800038c:	4b3e      	ldr	r3, [pc, #248]	; (8000488 <dht20_output+0x118>)
 800038e:	885a      	ldrh	r2, [r3, #2]
 8000390:	4b3e      	ldr	r3, [pc, #248]	; (800048c <dht20_output+0x11c>)
 8000392:	fba3 1302 	umull	r1, r3, r3, r2
 8000396:	08d9      	lsrs	r1, r3, #3
 8000398:	460b      	mov	r3, r1
 800039a:	009b      	lsls	r3, r3, #2
 800039c:	440b      	add	r3, r1
 800039e:	005b      	lsls	r3, r3, #1
 80003a0:	1ad3      	subs	r3, r2, r3
 80003a2:	b29b      	uxth	r3, r3
 80003a4:	461a      	mov	r2, r3
 80003a6:	23df      	movs	r3, #223	; 0xdf
 80003a8:	9300      	str	r3, [sp, #0]
 80003aa:	4613      	mov	r3, r2
 80003ac:	4602      	mov	r2, r0
 80003ae:	4938      	ldr	r1, [pc, #224]	; (8000490 <dht20_output+0x120>)
 80003b0:	4838      	ldr	r0, [pc, #224]	; (8000494 <dht20_output+0x124>)
 80003b2:	f004 f9f9 	bl	80047a8 <siprintf>
	sprintf(msg, "!TEMP:%d.%d#",value_x10[1]/10,value_x10[1]%10);
 80003b6:	4b34      	ldr	r3, [pc, #208]	; (8000488 <dht20_output+0x118>)
 80003b8:	885b      	ldrh	r3, [r3, #2]
 80003ba:	4a34      	ldr	r2, [pc, #208]	; (800048c <dht20_output+0x11c>)
 80003bc:	fba2 2303 	umull	r2, r3, r2, r3
 80003c0:	08db      	lsrs	r3, r3, #3
 80003c2:	b29b      	uxth	r3, r3
 80003c4:	461c      	mov	r4, r3
 80003c6:	4b30      	ldr	r3, [pc, #192]	; (8000488 <dht20_output+0x118>)
 80003c8:	885a      	ldrh	r2, [r3, #2]
 80003ca:	4b30      	ldr	r3, [pc, #192]	; (800048c <dht20_output+0x11c>)
 80003cc:	fba3 1302 	umull	r1, r3, r3, r2
 80003d0:	08d9      	lsrs	r1, r3, #3
 80003d2:	460b      	mov	r3, r1
 80003d4:	009b      	lsls	r3, r3, #2
 80003d6:	440b      	add	r3, r1
 80003d8:	005b      	lsls	r3, r3, #1
 80003da:	1ad3      	subs	r3, r2, r3
 80003dc:	b29b      	uxth	r3, r3
 80003de:	4638      	mov	r0, r7
 80003e0:	4622      	mov	r2, r4
 80003e2:	492d      	ldr	r1, [pc, #180]	; (8000498 <dht20_output+0x128>)
 80003e4:	f004 f9e0 	bl	80047a8 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 1000);
 80003e8:	463b      	mov	r3, r7
 80003ea:	4618      	mov	r0, r3
 80003ec:	f7ff feae 	bl	800014c <strlen>
 80003f0:	4603      	mov	r3, r0
 80003f2:	b29a      	uxth	r2, r3
 80003f4:	4639      	mov	r1, r7
 80003f6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80003fa:	4828      	ldr	r0, [pc, #160]	; (800049c <dht20_output+0x12c>)
 80003fc:	f003 fc83 	bl	8003d06 <HAL_UART_Transmit>
	sprintf(humid,"HUMID: %01d.%d %%   ",value_x10[0]/10,value_x10[0]%10);
 8000400:	4b21      	ldr	r3, [pc, #132]	; (8000488 <dht20_output+0x118>)
 8000402:	881b      	ldrh	r3, [r3, #0]
 8000404:	4a21      	ldr	r2, [pc, #132]	; (800048c <dht20_output+0x11c>)
 8000406:	fba2 2303 	umull	r2, r3, r2, r3
 800040a:	08db      	lsrs	r3, r3, #3
 800040c:	b29b      	uxth	r3, r3
 800040e:	4618      	mov	r0, r3
 8000410:	4b1d      	ldr	r3, [pc, #116]	; (8000488 <dht20_output+0x118>)
 8000412:	881a      	ldrh	r2, [r3, #0]
 8000414:	4b1d      	ldr	r3, [pc, #116]	; (800048c <dht20_output+0x11c>)
 8000416:	fba3 1302 	umull	r1, r3, r3, r2
 800041a:	08d9      	lsrs	r1, r3, #3
 800041c:	460b      	mov	r3, r1
 800041e:	009b      	lsls	r3, r3, #2
 8000420:	440b      	add	r3, r1
 8000422:	005b      	lsls	r3, r3, #1
 8000424:	1ad3      	subs	r3, r2, r3
 8000426:	b29b      	uxth	r3, r3
 8000428:	4602      	mov	r2, r0
 800042a:	491d      	ldr	r1, [pc, #116]	; (80004a0 <dht20_output+0x130>)
 800042c:	481d      	ldr	r0, [pc, #116]	; (80004a4 <dht20_output+0x134>)
 800042e:	f004 f9bb 	bl	80047a8 <siprintf>
	sprintf(msg, "!HUMID:%01d.%d#",value_x10[0]/10,value_x10[0]%10);
 8000432:	4b15      	ldr	r3, [pc, #84]	; (8000488 <dht20_output+0x118>)
 8000434:	881b      	ldrh	r3, [r3, #0]
 8000436:	4a15      	ldr	r2, [pc, #84]	; (800048c <dht20_output+0x11c>)
 8000438:	fba2 2303 	umull	r2, r3, r2, r3
 800043c:	08db      	lsrs	r3, r3, #3
 800043e:	b29b      	uxth	r3, r3
 8000440:	461c      	mov	r4, r3
 8000442:	4b11      	ldr	r3, [pc, #68]	; (8000488 <dht20_output+0x118>)
 8000444:	881a      	ldrh	r2, [r3, #0]
 8000446:	4b11      	ldr	r3, [pc, #68]	; (800048c <dht20_output+0x11c>)
 8000448:	fba3 1302 	umull	r1, r3, r3, r2
 800044c:	08d9      	lsrs	r1, r3, #3
 800044e:	460b      	mov	r3, r1
 8000450:	009b      	lsls	r3, r3, #2
 8000452:	440b      	add	r3, r1
 8000454:	005b      	lsls	r3, r3, #1
 8000456:	1ad3      	subs	r3, r2, r3
 8000458:	b29b      	uxth	r3, r3
 800045a:	4638      	mov	r0, r7
 800045c:	4622      	mov	r2, r4
 800045e:	4912      	ldr	r1, [pc, #72]	; (80004a8 <dht20_output+0x138>)
 8000460:	f004 f9a2 	bl	80047a8 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 1000);
 8000464:	463b      	mov	r3, r7
 8000466:	4618      	mov	r0, r3
 8000468:	f7ff fe70 	bl	800014c <strlen>
 800046c:	4603      	mov	r3, r0
 800046e:	b29a      	uxth	r2, r3
 8000470:	4639      	mov	r1, r7
 8000472:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000476:	4809      	ldr	r0, [pc, #36]	; (800049c <dht20_output+0x12c>)
 8000478:	f003 fc45 	bl	8003d06 <HAL_UART_Transmit>
	lcd_show_value();
 800047c:	f000 f8f0 	bl	8000660 <lcd_show_value>
}
 8000480:	bf00      	nop
 8000482:	3744      	adds	r7, #68	; 0x44
 8000484:	46bd      	mov	sp, r7
 8000486:	bd90      	pop	{r4, r7, pc}
 8000488:	2000008c 	.word	0x2000008c
 800048c:	cccccccd 	.word	0xcccccccd
 8000490:	080050b8 	.word	0x080050b8
 8000494:	20000090 	.word	0x20000090
 8000498:	080050cc 	.word	0x080050cc
 800049c:	20000154 	.word	0x20000154
 80004a0:	080050dc 	.word	0x080050dc
 80004a4:	200000a4 	.word	0x200000a4
 80004a8:	080050f4 	.word	0x080050f4

080004ac <lcd_send_cmd>:

#define SLAVE_ADDRESS_LCD (0x27 << 1)
//(0x3F << 1)  // change this according to ur setup

void lcd_send_cmd (char cmd)
{
 80004ac:	b580      	push	{r7, lr}
 80004ae:	b086      	sub	sp, #24
 80004b0:	af02      	add	r7, sp, #8
 80004b2:	4603      	mov	r3, r0
 80004b4:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (cmd&0xf0);
 80004b6:	79fb      	ldrb	r3, [r7, #7]
 80004b8:	f023 030f 	bic.w	r3, r3, #15
 80004bc:	73fb      	strb	r3, [r7, #15]
	data_l = ((cmd<<4)&0xf0);
 80004be:	79fb      	ldrb	r3, [r7, #7]
 80004c0:	011b      	lsls	r3, r3, #4
 80004c2:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0C;  //en=1, rs=0
 80004c4:	7bfb      	ldrb	r3, [r7, #15]
 80004c6:	f043 030c 	orr.w	r3, r3, #12
 80004ca:	b2db      	uxtb	r3, r3
 80004cc:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x08;  //en=0, rs=0
 80004ce:	7bfb      	ldrb	r3, [r7, #15]
 80004d0:	f043 0308 	orr.w	r3, r3, #8
 80004d4:	b2db      	uxtb	r3, r3
 80004d6:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0C;  //en=1, rs=0
 80004d8:	7bbb      	ldrb	r3, [r7, #14]
 80004da:	f043 030c 	orr.w	r3, r3, #12
 80004de:	b2db      	uxtb	r3, r3
 80004e0:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x08;  //en=0, rs=0
 80004e2:	7bbb      	ldrb	r3, [r7, #14]
 80004e4:	f043 0308 	orr.w	r3, r3, #8
 80004e8:	b2db      	uxtb	r3, r3
 80004ea:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 80004ec:	f107 0208 	add.w	r2, r7, #8
 80004f0:	2364      	movs	r3, #100	; 0x64
 80004f2:	9300      	str	r3, [sp, #0]
 80004f4:	2304      	movs	r3, #4
 80004f6:	214e      	movs	r1, #78	; 0x4e
 80004f8:	4803      	ldr	r0, [pc, #12]	; (8000508 <lcd_send_cmd+0x5c>)
 80004fa:	f001 fbeb 	bl	8001cd4 <HAL_I2C_Master_Transmit>
}
 80004fe:	bf00      	nop
 8000500:	3710      	adds	r7, #16
 8000502:	46bd      	mov	sp, r7
 8000504:	bd80      	pop	{r7, pc}
 8000506:	bf00      	nop
 8000508:	200000b8 	.word	0x200000b8

0800050c <lcd_send_data>:

void lcd_send_data (char data)
{
 800050c:	b580      	push	{r7, lr}
 800050e:	b086      	sub	sp, #24
 8000510:	af02      	add	r7, sp, #8
 8000512:	4603      	mov	r3, r0
 8000514:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (data&0xf0);
 8000516:	79fb      	ldrb	r3, [r7, #7]
 8000518:	f023 030f 	bic.w	r3, r3, #15
 800051c:	73fb      	strb	r3, [r7, #15]
	data_l = ((data<<4)&0xf0);
 800051e:	79fb      	ldrb	r3, [r7, #7]
 8000520:	011b      	lsls	r3, r3, #4
 8000522:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0D;  //en=1, rs=0
 8000524:	7bfb      	ldrb	r3, [r7, #15]
 8000526:	f043 030d 	orr.w	r3, r3, #13
 800052a:	b2db      	uxtb	r3, r3
 800052c:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x09;  //en=0, rs=0
 800052e:	7bfb      	ldrb	r3, [r7, #15]
 8000530:	f043 0309 	orr.w	r3, r3, #9
 8000534:	b2db      	uxtb	r3, r3
 8000536:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0D;  //en=1, rs=0
 8000538:	7bbb      	ldrb	r3, [r7, #14]
 800053a:	f043 030d 	orr.w	r3, r3, #13
 800053e:	b2db      	uxtb	r3, r3
 8000540:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x09;  //en=0, rs=0
 8000542:	7bbb      	ldrb	r3, [r7, #14]
 8000544:	f043 0309 	orr.w	r3, r3, #9
 8000548:	b2db      	uxtb	r3, r3
 800054a:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 800054c:	f107 0208 	add.w	r2, r7, #8
 8000550:	2364      	movs	r3, #100	; 0x64
 8000552:	9300      	str	r3, [sp, #0]
 8000554:	2304      	movs	r3, #4
 8000556:	214e      	movs	r1, #78	; 0x4e
 8000558:	4803      	ldr	r0, [pc, #12]	; (8000568 <lcd_send_data+0x5c>)
 800055a:	f001 fbbb 	bl	8001cd4 <HAL_I2C_Master_Transmit>
}
 800055e:	bf00      	nop
 8000560:	3710      	adds	r7, #16
 8000562:	46bd      	mov	sp, r7
 8000564:	bd80      	pop	{r7, pc}
 8000566:	bf00      	nop
 8000568:	200000b8 	.word	0x200000b8

0800056c <lcd_init>:

void lcd_init ()
{
 800056c:	b580      	push	{r7, lr}
 800056e:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x33);
 8000570:	2033      	movs	r0, #51	; 0x33
 8000572:	f7ff ff9b 	bl	80004ac <lcd_send_cmd>
	lcd_send_cmd (0x32);
 8000576:	2032      	movs	r0, #50	; 0x32
 8000578:	f7ff ff98 	bl	80004ac <lcd_send_cmd>
	HAL_Delay(50);
 800057c:	2032      	movs	r0, #50	; 0x32
 800057e:	f000 fee7 	bl	8001350 <HAL_Delay>
	lcd_send_cmd (0x28); /* start to set LCD function (4-bit mode) */
 8000582:	2028      	movs	r0, #40	; 0x28
 8000584:	f7ff ff92 	bl	80004ac <lcd_send_cmd>
	HAL_Delay(50);
 8000588:	2032      	movs	r0, #50	; 0x32
 800058a:	f000 fee1 	bl	8001350 <HAL_Delay>
	lcd_send_cmd (0x01); /* clear display */
 800058e:	2001      	movs	r0, #1
 8000590:	f7ff ff8c 	bl	80004ac <lcd_send_cmd>
	HAL_Delay(50);
 8000594:	2032      	movs	r0, #50	; 0x32
 8000596:	f000 fedb 	bl	8001350 <HAL_Delay>
	lcd_send_cmd (0x06); /* set entry mode */
 800059a:	2006      	movs	r0, #6
 800059c:	f7ff ff86 	bl	80004ac <lcd_send_cmd>
	HAL_Delay(50);
 80005a0:	2032      	movs	r0, #50	; 0x32
 80005a2:	f000 fed5 	bl	8001350 <HAL_Delay>
	lcd_send_cmd (0x0c); /* set display to on */	
 80005a6:	200c      	movs	r0, #12
 80005a8:	f7ff ff80 	bl	80004ac <lcd_send_cmd>
	HAL_Delay(50);
 80005ac:	2032      	movs	r0, #50	; 0x32
 80005ae:	f000 fecf 	bl	8001350 <HAL_Delay>
	lcd_send_cmd (0x02); /* move cursor to home and set data address to 0 */
 80005b2:	2002      	movs	r0, #2
 80005b4:	f7ff ff7a 	bl	80004ac <lcd_send_cmd>
	HAL_Delay(50);
 80005b8:	2032      	movs	r0, #50	; 0x32
 80005ba:	f000 fec9 	bl	8001350 <HAL_Delay>
	lcd_send_cmd (0x80);
 80005be:	2080      	movs	r0, #128	; 0x80
 80005c0:	f7ff ff74 	bl	80004ac <lcd_send_cmd>
}
 80005c4:	bf00      	nop
 80005c6:	bd80      	pop	{r7, pc}

080005c8 <lcd_send_string>:

void lcd_send_string (char *str)
{
 80005c8:	b580      	push	{r7, lr}
 80005ca:	b082      	sub	sp, #8
 80005cc:	af00      	add	r7, sp, #0
 80005ce:	6078      	str	r0, [r7, #4]
	while (*str) lcd_send_data (*str++);
 80005d0:	e006      	b.n	80005e0 <lcd_send_string+0x18>
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	1c5a      	adds	r2, r3, #1
 80005d6:	607a      	str	r2, [r7, #4]
 80005d8:	781b      	ldrb	r3, [r3, #0]
 80005da:	4618      	mov	r0, r3
 80005dc:	f7ff ff96 	bl	800050c <lcd_send_data>
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	781b      	ldrb	r3, [r3, #0]
 80005e4:	2b00      	cmp	r3, #0
 80005e6:	d1f4      	bne.n	80005d2 <lcd_send_string+0xa>
}
 80005e8:	bf00      	nop
 80005ea:	bf00      	nop
 80005ec:	3708      	adds	r7, #8
 80005ee:	46bd      	mov	sp, r7
 80005f0:	bd80      	pop	{r7, pc}

080005f2 <lcd_clear_display>:

void lcd_clear_display ()
{
 80005f2:	b580      	push	{r7, lr}
 80005f4:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x01); //clear display
 80005f6:	2001      	movs	r0, #1
 80005f8:	f7ff ff58 	bl	80004ac <lcd_send_cmd>
}
 80005fc:	bf00      	nop
 80005fe:	bd80      	pop	{r7, pc}

08000600 <lcd_goto_XY>:

void lcd_goto_XY (int row, int col)
{
 8000600:	b580      	push	{r7, lr}
 8000602:	b084      	sub	sp, #16
 8000604:	af00      	add	r7, sp, #0
 8000606:	6078      	str	r0, [r7, #4]
 8000608:	6039      	str	r1, [r7, #0]
	uint8_t pos_Addr;
	if(row == 0)
 800060a:	687b      	ldr	r3, [r7, #4]
 800060c:	2b00      	cmp	r3, #0
 800060e:	d104      	bne.n	800061a <lcd_goto_XY+0x1a>
	{
		pos_Addr = 0x80 + col;
 8000610:	683b      	ldr	r3, [r7, #0]
 8000612:	b2db      	uxtb	r3, r3
 8000614:	3b80      	subs	r3, #128	; 0x80
 8000616:	73fb      	strb	r3, [r7, #15]
 8000618:	e003      	b.n	8000622 <lcd_goto_XY+0x22>
	}
	else
	{
		pos_Addr = 0xC0 + col;
 800061a:	683b      	ldr	r3, [r7, #0]
 800061c:	b2db      	uxtb	r3, r3
 800061e:	3b40      	subs	r3, #64	; 0x40
 8000620:	73fb      	strb	r3, [r7, #15]
	}
	lcd_send_cmd(pos_Addr);
 8000622:	7bfb      	ldrb	r3, [r7, #15]
 8000624:	4618      	mov	r0, r3
 8000626:	f7ff ff41 	bl	80004ac <lcd_send_cmd>
}
 800062a:	bf00      	nop
 800062c:	3710      	adds	r7, #16
 800062e:	46bd      	mov	sp, r7
 8000630:	bd80      	pop	{r7, pc}
	...

08000634 <lcd_greeting>:

void lcd_greeting (){
 8000634:	b580      	push	{r7, lr}
 8000636:	af00      	add	r7, sp, #0
	  lcd_goto_XY(0, 0);
 8000638:	2100      	movs	r1, #0
 800063a:	2000      	movs	r0, #0
 800063c:	f7ff ffe0 	bl	8000600 <lcd_goto_XY>
	  lcd_send_string("System Boot Done");
 8000640:	4805      	ldr	r0, [pc, #20]	; (8000658 <lcd_greeting+0x24>)
 8000642:	f7ff ffc1 	bl	80005c8 <lcd_send_string>
	  lcd_goto_XY(1, 0);
 8000646:	2100      	movs	r1, #0
 8000648:	2001      	movs	r0, #1
 800064a:	f7ff ffd9 	bl	8000600 <lcd_goto_XY>
	  lcd_send_string("Waiting...");
 800064e:	4803      	ldr	r0, [pc, #12]	; (800065c <lcd_greeting+0x28>)
 8000650:	f7ff ffba 	bl	80005c8 <lcd_send_string>
}
 8000654:	bf00      	nop
 8000656:	bd80      	pop	{r7, pc}
 8000658:	08005104 	.word	0x08005104
 800065c:	08005118 	.word	0x08005118

08000660 <lcd_show_value>:

void lcd_show_value(){
 8000660:	b580      	push	{r7, lr}
 8000662:	af00      	add	r7, sp, #0
	  lcd_goto_XY(0, 0);
 8000664:	2100      	movs	r1, #0
 8000666:	2000      	movs	r0, #0
 8000668:	f7ff ffca 	bl	8000600 <lcd_goto_XY>
	  lcd_send_string(humid);
 800066c:	4805      	ldr	r0, [pc, #20]	; (8000684 <lcd_show_value+0x24>)
 800066e:	f7ff ffab 	bl	80005c8 <lcd_send_string>
	  lcd_goto_XY(1, 0);
 8000672:	2100      	movs	r1, #0
 8000674:	2001      	movs	r0, #1
 8000676:	f7ff ffc3 	bl	8000600 <lcd_goto_XY>
	  lcd_send_string(temp);
 800067a:	4803      	ldr	r0, [pc, #12]	; (8000688 <lcd_show_value+0x28>)
 800067c:	f7ff ffa4 	bl	80005c8 <lcd_send_string>
}
 8000680:	bf00      	nop
 8000682:	bd80      	pop	{r7, pc}
 8000684:	200000a4 	.word	0x200000a4
 8000688:	20000090 	.word	0x20000090

0800068c <turnLedOn>:
 *      Author: acer
 */

#include "led_display.h"

void turnLedOn(){
 800068c:	b580      	push	{r7, lr}
 800068e:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 8000690:	2200      	movs	r2, #0
 8000692:	2102      	movs	r1, #2
 8000694:	4802      	ldr	r0, [pc, #8]	; (80006a0 <turnLedOn+0x14>)
 8000696:	f001 f9c1 	bl	8001a1c <HAL_GPIO_WritePin>
}
 800069a:	bf00      	nop
 800069c:	bd80      	pop	{r7, pc}
 800069e:	bf00      	nop
 80006a0:	40010800 	.word	0x40010800

080006a4 <turnLedOff>:

void turnLedOff(){
 80006a4:	b580      	push	{r7, lr}
 80006a6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 80006a8:	2201      	movs	r2, #1
 80006aa:	2102      	movs	r1, #2
 80006ac:	4802      	ldr	r0, [pc, #8]	; (80006b8 <turnLedOff+0x14>)
 80006ae:	f001 f9b5 	bl	8001a1c <HAL_GPIO_WritePin>
}
 80006b2:	bf00      	nop
 80006b4:	bd80      	pop	{r7, pc}
 80006b6:	bf00      	nop
 80006b8:	40010800 	.word	0x40010800

080006bc <HAL_UART_RxCpltCallback>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 80006bc:	b580      	push	{r7, lr}
 80006be:	b082      	sub	sp, #8
 80006c0:	af00      	add	r7, sp, #0
 80006c2:	6078      	str	r0, [r7, #4]
	if (huart->Instance == USART2){
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	4a14      	ldr	r2, [pc, #80]	; (800071c <HAL_UART_RxCpltCallback+0x60>)
 80006ca:	4293      	cmp	r3, r2
 80006cc:	d122      	bne.n	8000714 <HAL_UART_RxCpltCallback+0x58>
		HAL_UART_Transmit(&huart2, &buffer_byte, 1, 500);
 80006ce:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80006d2:	2201      	movs	r2, #1
 80006d4:	4912      	ldr	r1, [pc, #72]	; (8000720 <HAL_UART_RxCpltCallback+0x64>)
 80006d6:	4813      	ldr	r0, [pc, #76]	; (8000724 <HAL_UART_RxCpltCallback+0x68>)
 80006d8:	f003 fb15 	bl	8003d06 <HAL_UART_Transmit>
		buffer[index_buffer] = buffer_byte;
 80006dc:	4b12      	ldr	r3, [pc, #72]	; (8000728 <HAL_UART_RxCpltCallback+0x6c>)
 80006de:	781b      	ldrb	r3, [r3, #0]
 80006e0:	461a      	mov	r2, r3
 80006e2:	4b0f      	ldr	r3, [pc, #60]	; (8000720 <HAL_UART_RxCpltCallback+0x64>)
 80006e4:	7819      	ldrb	r1, [r3, #0]
 80006e6:	4b11      	ldr	r3, [pc, #68]	; (800072c <HAL_UART_RxCpltCallback+0x70>)
 80006e8:	5499      	strb	r1, [r3, r2]
		index_buffer++;
 80006ea:	4b0f      	ldr	r3, [pc, #60]	; (8000728 <HAL_UART_RxCpltCallback+0x6c>)
 80006ec:	781b      	ldrb	r3, [r3, #0]
 80006ee:	3301      	adds	r3, #1
 80006f0:	b2da      	uxtb	r2, r3
 80006f2:	4b0d      	ldr	r3, [pc, #52]	; (8000728 <HAL_UART_RxCpltCallback+0x6c>)
 80006f4:	701a      	strb	r2, [r3, #0]
		if (index_buffer == MAX_BUFFER_SIZE) index_buffer = 0;
 80006f6:	4b0c      	ldr	r3, [pc, #48]	; (8000728 <HAL_UART_RxCpltCallback+0x6c>)
 80006f8:	781b      	ldrb	r3, [r3, #0]
 80006fa:	2b32      	cmp	r3, #50	; 0x32
 80006fc:	d102      	bne.n	8000704 <HAL_UART_RxCpltCallback+0x48>
 80006fe:	4b0a      	ldr	r3, [pc, #40]	; (8000728 <HAL_UART_RxCpltCallback+0x6c>)
 8000700:	2200      	movs	r2, #0
 8000702:	701a      	strb	r2, [r3, #0]
		buffer_flag = 1;
 8000704:	4b0a      	ldr	r3, [pc, #40]	; (8000730 <HAL_UART_RxCpltCallback+0x74>)
 8000706:	2201      	movs	r2, #1
 8000708:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(&huart2, &buffer_byte, 1);
 800070a:	2201      	movs	r2, #1
 800070c:	4904      	ldr	r1, [pc, #16]	; (8000720 <HAL_UART_RxCpltCallback+0x64>)
 800070e:	4805      	ldr	r0, [pc, #20]	; (8000724 <HAL_UART_RxCpltCallback+0x68>)
 8000710:	f003 fb8b 	bl	8003e2a <HAL_UART_Receive_IT>
	}
}
 8000714:	bf00      	nop
 8000716:	3708      	adds	r7, #8
 8000718:	46bd      	mov	sp, r7
 800071a:	bd80      	pop	{r7, pc}
 800071c:	40004400 	.word	0x40004400
 8000720:	2000050c 	.word	0x2000050c
 8000724:	20000154 	.word	0x20000154
 8000728:	20000542 	.word	0x20000542
 800072c:	20000510 	.word	0x20000510
 8000730:	20000543 	.word	0x20000543

08000734 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000734:	b580      	push	{r7, lr}
 8000736:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000738:	f000 fda8 	bl	800128c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800073c:	f000 f83c 	bl	80007b8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000740:	f000 f924 	bl	800098c <MX_GPIO_Init>
  MX_I2C1_Init();
 8000744:	f000 f87e 	bl	8000844 <MX_I2C1_Init>
  MX_USART2_UART_Init();
 8000748:	f000 f8f6 	bl	8000938 <MX_USART2_UART_Init>
  MX_TIM2_Init();
 800074c:	f000 f8a8 	bl	80008a0 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000750:	4814      	ldr	r0, [pc, #80]	; (80007a4 <main+0x70>)
 8000752:	f002 fee1 	bl	8003518 <HAL_TIM_Base_Start_IT>
  HAL_UART_Receive_IT(&huart2, &buffer_byte, 1);
 8000756:	2201      	movs	r2, #1
 8000758:	4913      	ldr	r1, [pc, #76]	; (80007a8 <main+0x74>)
 800075a:	4814      	ldr	r0, [pc, #80]	; (80007ac <main+0x78>)
 800075c:	f003 fb65 	bl	8003e2a <HAL_UART_Receive_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  //Scan the address of I2C device
  Scan_Addr();
 8000760:	f000 fcee 	bl	8001140 <Scan_Addr>
  //Initialization for LCD
  lcd_clear_display();
 8000764:	f7ff ff45 	bl	80005f2 <lcd_clear_display>
  lcd_init();
 8000768:	f7ff ff00 	bl	800056c <lcd_init>
  lcd_greeting();
 800076c:	f7ff ff62 	bl	8000634 <lcd_greeting>
  //Initialization for DHT-20
  dht20_init();
 8000770:	f7ff fcf4 	bl	800015c <dht20_init>
  setTimer1(300);
 8000774:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8000778:	f000 f97c 	bl	8000a74 <setTimer1>
//  SCH_Add_Task(intercep_UartCmd, 0, 1);
//  SCH_Add_Task(uart_control_fsm, 100, 1);
  while (1)
  {
	  //Using timer to synchronize
	  if (buffer_flag == 1){
 800077c:	4b0c      	ldr	r3, [pc, #48]	; (80007b0 <main+0x7c>)
 800077e:	781b      	ldrb	r3, [r3, #0]
 8000780:	2b01      	cmp	r3, #1
 8000782:	d104      	bne.n	800078e <main+0x5a>
		  cmd_parser_fsm();
 8000784:	f000 fc1a 	bl	8000fbc <cmd_parser_fsm>
		  buffer_flag = 0;
 8000788:	4b09      	ldr	r3, [pc, #36]	; (80007b0 <main+0x7c>)
 800078a:	2200      	movs	r2, #0
 800078c:	701a      	strb	r2, [r3, #0]
	  }
	  if(timer1_flag == 1){
 800078e:	4b09      	ldr	r3, [pc, #36]	; (80007b4 <main+0x80>)
 8000790:	681b      	ldr	r3, [r3, #0]
 8000792:	2b01      	cmp	r3, #1
 8000794:	d1f2      	bne.n	800077c <main+0x48>
		  setTimer1(1);
 8000796:	2001      	movs	r0, #1
 8000798:	f000 f96c 	bl	8000a74 <setTimer1>
		  uart_control_fsm();
 800079c:	f000 fc76 	bl	800108c <uart_control_fsm>
	  if (buffer_flag == 1){
 80007a0:	e7ec      	b.n	800077c <main+0x48>
 80007a2:	bf00      	nop
 80007a4:	2000010c 	.word	0x2000010c
 80007a8:	2000050c 	.word	0x2000050c
 80007ac:	20000154 	.word	0x20000154
 80007b0:	20000543 	.word	0x20000543
 80007b4:	200004bc 	.word	0x200004bc

080007b8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80007b8:	b580      	push	{r7, lr}
 80007ba:	b090      	sub	sp, #64	; 0x40
 80007bc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80007be:	f107 0318 	add.w	r3, r7, #24
 80007c2:	2228      	movs	r2, #40	; 0x28
 80007c4:	2100      	movs	r1, #0
 80007c6:	4618      	mov	r0, r3
 80007c8:	f003 ffb2 	bl	8004730 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80007cc:	1d3b      	adds	r3, r7, #4
 80007ce:	2200      	movs	r2, #0
 80007d0:	601a      	str	r2, [r3, #0]
 80007d2:	605a      	str	r2, [r3, #4]
 80007d4:	609a      	str	r2, [r3, #8]
 80007d6:	60da      	str	r2, [r3, #12]
 80007d8:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80007da:	2301      	movs	r3, #1
 80007dc:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80007de:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80007e2:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80007e4:	2300      	movs	r3, #0
 80007e6:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80007e8:	2301      	movs	r3, #1
 80007ea:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80007ec:	2302      	movs	r3, #2
 80007ee:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80007f0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80007f4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80007f6:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 80007fa:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007fc:	f107 0318 	add.w	r3, r7, #24
 8000800:	4618      	mov	r0, r3
 8000802:	f002 fa1f 	bl	8002c44 <HAL_RCC_OscConfig>
 8000806:	4603      	mov	r3, r0
 8000808:	2b00      	cmp	r3, #0
 800080a:	d001      	beq.n	8000810 <SystemClock_Config+0x58>
  {
    Error_Handler();
 800080c:	f000 f914 	bl	8000a38 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000810:	230f      	movs	r3, #15
 8000812:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000814:	2302      	movs	r3, #2
 8000816:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000818:	2300      	movs	r3, #0
 800081a:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800081c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000820:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000822:	2300      	movs	r3, #0
 8000824:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000826:	1d3b      	adds	r3, r7, #4
 8000828:	2102      	movs	r1, #2
 800082a:	4618      	mov	r0, r3
 800082c:	f002 fc8c 	bl	8003148 <HAL_RCC_ClockConfig>
 8000830:	4603      	mov	r3, r0
 8000832:	2b00      	cmp	r3, #0
 8000834:	d001      	beq.n	800083a <SystemClock_Config+0x82>
  {
    Error_Handler();
 8000836:	f000 f8ff 	bl	8000a38 <Error_Handler>
  }
}
 800083a:	bf00      	nop
 800083c:	3740      	adds	r7, #64	; 0x40
 800083e:	46bd      	mov	sp, r7
 8000840:	bd80      	pop	{r7, pc}
	...

08000844 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000844:	b580      	push	{r7, lr}
 8000846:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000848:	4b12      	ldr	r3, [pc, #72]	; (8000894 <MX_I2C1_Init+0x50>)
 800084a:	4a13      	ldr	r2, [pc, #76]	; (8000898 <MX_I2C1_Init+0x54>)
 800084c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 800084e:	4b11      	ldr	r3, [pc, #68]	; (8000894 <MX_I2C1_Init+0x50>)
 8000850:	4a12      	ldr	r2, [pc, #72]	; (800089c <MX_I2C1_Init+0x58>)
 8000852:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000854:	4b0f      	ldr	r3, [pc, #60]	; (8000894 <MX_I2C1_Init+0x50>)
 8000856:	2200      	movs	r2, #0
 8000858:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800085a:	4b0e      	ldr	r3, [pc, #56]	; (8000894 <MX_I2C1_Init+0x50>)
 800085c:	2200      	movs	r2, #0
 800085e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000860:	4b0c      	ldr	r3, [pc, #48]	; (8000894 <MX_I2C1_Init+0x50>)
 8000862:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000866:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000868:	4b0a      	ldr	r3, [pc, #40]	; (8000894 <MX_I2C1_Init+0x50>)
 800086a:	2200      	movs	r2, #0
 800086c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800086e:	4b09      	ldr	r3, [pc, #36]	; (8000894 <MX_I2C1_Init+0x50>)
 8000870:	2200      	movs	r2, #0
 8000872:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000874:	4b07      	ldr	r3, [pc, #28]	; (8000894 <MX_I2C1_Init+0x50>)
 8000876:	2200      	movs	r2, #0
 8000878:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800087a:	4b06      	ldr	r3, [pc, #24]	; (8000894 <MX_I2C1_Init+0x50>)
 800087c:	2200      	movs	r2, #0
 800087e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000880:	4804      	ldr	r0, [pc, #16]	; (8000894 <MX_I2C1_Init+0x50>)
 8000882:	f001 f8e3 	bl	8001a4c <HAL_I2C_Init>
 8000886:	4603      	mov	r3, r0
 8000888:	2b00      	cmp	r3, #0
 800088a:	d001      	beq.n	8000890 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 800088c:	f000 f8d4 	bl	8000a38 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000890:	bf00      	nop
 8000892:	bd80      	pop	{r7, pc}
 8000894:	200000b8 	.word	0x200000b8
 8000898:	40005400 	.word	0x40005400
 800089c:	000186a0 	.word	0x000186a0

080008a0 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80008a0:	b580      	push	{r7, lr}
 80008a2:	b086      	sub	sp, #24
 80008a4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80008a6:	f107 0308 	add.w	r3, r7, #8
 80008aa:	2200      	movs	r2, #0
 80008ac:	601a      	str	r2, [r3, #0]
 80008ae:	605a      	str	r2, [r3, #4]
 80008b0:	609a      	str	r2, [r3, #8]
 80008b2:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80008b4:	463b      	mov	r3, r7
 80008b6:	2200      	movs	r2, #0
 80008b8:	601a      	str	r2, [r3, #0]
 80008ba:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80008bc:	4b1d      	ldr	r3, [pc, #116]	; (8000934 <MX_TIM2_Init+0x94>)
 80008be:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80008c2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7199;
 80008c4:	4b1b      	ldr	r3, [pc, #108]	; (8000934 <MX_TIM2_Init+0x94>)
 80008c6:	f641 421f 	movw	r2, #7199	; 0x1c1f
 80008ca:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80008cc:	4b19      	ldr	r3, [pc, #100]	; (8000934 <MX_TIM2_Init+0x94>)
 80008ce:	2200      	movs	r2, #0
 80008d0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 99;
 80008d2:	4b18      	ldr	r3, [pc, #96]	; (8000934 <MX_TIM2_Init+0x94>)
 80008d4:	2263      	movs	r2, #99	; 0x63
 80008d6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80008d8:	4b16      	ldr	r3, [pc, #88]	; (8000934 <MX_TIM2_Init+0x94>)
 80008da:	2200      	movs	r2, #0
 80008dc:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80008de:	4b15      	ldr	r3, [pc, #84]	; (8000934 <MX_TIM2_Init+0x94>)
 80008e0:	2200      	movs	r2, #0
 80008e2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80008e4:	4813      	ldr	r0, [pc, #76]	; (8000934 <MX_TIM2_Init+0x94>)
 80008e6:	f002 fdc7 	bl	8003478 <HAL_TIM_Base_Init>
 80008ea:	4603      	mov	r3, r0
 80008ec:	2b00      	cmp	r3, #0
 80008ee:	d001      	beq.n	80008f4 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80008f0:	f000 f8a2 	bl	8000a38 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80008f4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80008f8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80008fa:	f107 0308 	add.w	r3, r7, #8
 80008fe:	4619      	mov	r1, r3
 8000900:	480c      	ldr	r0, [pc, #48]	; (8000934 <MX_TIM2_Init+0x94>)
 8000902:	f002 ff63 	bl	80037cc <HAL_TIM_ConfigClockSource>
 8000906:	4603      	mov	r3, r0
 8000908:	2b00      	cmp	r3, #0
 800090a:	d001      	beq.n	8000910 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 800090c:	f000 f894 	bl	8000a38 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000910:	2300      	movs	r3, #0
 8000912:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000914:	2300      	movs	r3, #0
 8000916:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000918:	463b      	mov	r3, r7
 800091a:	4619      	mov	r1, r3
 800091c:	4805      	ldr	r0, [pc, #20]	; (8000934 <MX_TIM2_Init+0x94>)
 800091e:	f003 f935 	bl	8003b8c <HAL_TIMEx_MasterConfigSynchronization>
 8000922:	4603      	mov	r3, r0
 8000924:	2b00      	cmp	r3, #0
 8000926:	d001      	beq.n	800092c <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000928:	f000 f886 	bl	8000a38 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 800092c:	bf00      	nop
 800092e:	3718      	adds	r7, #24
 8000930:	46bd      	mov	sp, r7
 8000932:	bd80      	pop	{r7, pc}
 8000934:	2000010c 	.word	0x2000010c

08000938 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000938:	b580      	push	{r7, lr}
 800093a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800093c:	4b11      	ldr	r3, [pc, #68]	; (8000984 <MX_USART2_UART_Init+0x4c>)
 800093e:	4a12      	ldr	r2, [pc, #72]	; (8000988 <MX_USART2_UART_Init+0x50>)
 8000940:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8000942:	4b10      	ldr	r3, [pc, #64]	; (8000984 <MX_USART2_UART_Init+0x4c>)
 8000944:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000948:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800094a:	4b0e      	ldr	r3, [pc, #56]	; (8000984 <MX_USART2_UART_Init+0x4c>)
 800094c:	2200      	movs	r2, #0
 800094e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8000950:	4b0c      	ldr	r3, [pc, #48]	; (8000984 <MX_USART2_UART_Init+0x4c>)
 8000952:	2200      	movs	r2, #0
 8000954:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000956:	4b0b      	ldr	r3, [pc, #44]	; (8000984 <MX_USART2_UART_Init+0x4c>)
 8000958:	2200      	movs	r2, #0
 800095a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800095c:	4b09      	ldr	r3, [pc, #36]	; (8000984 <MX_USART2_UART_Init+0x4c>)
 800095e:	220c      	movs	r2, #12
 8000960:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000962:	4b08      	ldr	r3, [pc, #32]	; (8000984 <MX_USART2_UART_Init+0x4c>)
 8000964:	2200      	movs	r2, #0
 8000966:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000968:	4b06      	ldr	r3, [pc, #24]	; (8000984 <MX_USART2_UART_Init+0x4c>)
 800096a:	2200      	movs	r2, #0
 800096c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800096e:	4805      	ldr	r0, [pc, #20]	; (8000984 <MX_USART2_UART_Init+0x4c>)
 8000970:	f003 f97c 	bl	8003c6c <HAL_UART_Init>
 8000974:	4603      	mov	r3, r0
 8000976:	2b00      	cmp	r3, #0
 8000978:	d001      	beq.n	800097e <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800097a:	f000 f85d 	bl	8000a38 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800097e:	bf00      	nop
 8000980:	bd80      	pop	{r7, pc}
 8000982:	bf00      	nop
 8000984:	20000154 	.word	0x20000154
 8000988:	40004400 	.word	0x40004400

0800098c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800098c:	b580      	push	{r7, lr}
 800098e:	b088      	sub	sp, #32
 8000990:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000992:	f107 0310 	add.w	r3, r7, #16
 8000996:	2200      	movs	r2, #0
 8000998:	601a      	str	r2, [r3, #0]
 800099a:	605a      	str	r2, [r3, #4]
 800099c:	609a      	str	r2, [r3, #8]
 800099e:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80009a0:	4b1d      	ldr	r3, [pc, #116]	; (8000a18 <MX_GPIO_Init+0x8c>)
 80009a2:	699b      	ldr	r3, [r3, #24]
 80009a4:	4a1c      	ldr	r2, [pc, #112]	; (8000a18 <MX_GPIO_Init+0x8c>)
 80009a6:	f043 0320 	orr.w	r3, r3, #32
 80009aa:	6193      	str	r3, [r2, #24]
 80009ac:	4b1a      	ldr	r3, [pc, #104]	; (8000a18 <MX_GPIO_Init+0x8c>)
 80009ae:	699b      	ldr	r3, [r3, #24]
 80009b0:	f003 0320 	and.w	r3, r3, #32
 80009b4:	60fb      	str	r3, [r7, #12]
 80009b6:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80009b8:	4b17      	ldr	r3, [pc, #92]	; (8000a18 <MX_GPIO_Init+0x8c>)
 80009ba:	699b      	ldr	r3, [r3, #24]
 80009bc:	4a16      	ldr	r2, [pc, #88]	; (8000a18 <MX_GPIO_Init+0x8c>)
 80009be:	f043 0304 	orr.w	r3, r3, #4
 80009c2:	6193      	str	r3, [r2, #24]
 80009c4:	4b14      	ldr	r3, [pc, #80]	; (8000a18 <MX_GPIO_Init+0x8c>)
 80009c6:	699b      	ldr	r3, [r3, #24]
 80009c8:	f003 0304 	and.w	r3, r3, #4
 80009cc:	60bb      	str	r3, [r7, #8]
 80009ce:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80009d0:	4b11      	ldr	r3, [pc, #68]	; (8000a18 <MX_GPIO_Init+0x8c>)
 80009d2:	699b      	ldr	r3, [r3, #24]
 80009d4:	4a10      	ldr	r2, [pc, #64]	; (8000a18 <MX_GPIO_Init+0x8c>)
 80009d6:	f043 0308 	orr.w	r3, r3, #8
 80009da:	6193      	str	r3, [r2, #24]
 80009dc:	4b0e      	ldr	r3, [pc, #56]	; (8000a18 <MX_GPIO_Init+0x8c>)
 80009de:	699b      	ldr	r3, [r3, #24]
 80009e0:	f003 0308 	and.w	r3, r3, #8
 80009e4:	607b      	str	r3, [r7, #4]
 80009e6:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 80009e8:	2200      	movs	r2, #0
 80009ea:	2102      	movs	r1, #2
 80009ec:	480b      	ldr	r0, [pc, #44]	; (8000a1c <MX_GPIO_Init+0x90>)
 80009ee:	f001 f815 	bl	8001a1c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 80009f2:	2302      	movs	r3, #2
 80009f4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009f6:	2301      	movs	r3, #1
 80009f8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009fa:	2300      	movs	r3, #0
 80009fc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009fe:	2302      	movs	r3, #2
 8000a00:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8000a02:	f107 0310 	add.w	r3, r7, #16
 8000a06:	4619      	mov	r1, r3
 8000a08:	4804      	ldr	r0, [pc, #16]	; (8000a1c <MX_GPIO_Init+0x90>)
 8000a0a:	f000 fe83 	bl	8001714 <HAL_GPIO_Init>

}
 8000a0e:	bf00      	nop
 8000a10:	3720      	adds	r7, #32
 8000a12:	46bd      	mov	sp, r7
 8000a14:	bd80      	pop	{r7, pc}
 8000a16:	bf00      	nop
 8000a18:	40021000 	.word	0x40021000
 8000a1c:	40010800 	.word	0x40010800

08000a20 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8000a20:	b580      	push	{r7, lr}
 8000a22:	b082      	sub	sp, #8
 8000a24:	af00      	add	r7, sp, #0
 8000a26:	6078      	str	r0, [r7, #4]
	timerRun();
 8000a28:	f000 f860 	bl	8000aec <timerRun>
	SCH_Update();
 8000a2c:	f000 f80a 	bl	8000a44 <SCH_Update>
}
 8000a30:	bf00      	nop
 8000a32:	3708      	adds	r7, #8
 8000a34:	46bd      	mov	sp, r7
 8000a36:	bd80      	pop	{r7, pc}

08000a38 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000a38:	b480      	push	{r7}
 8000a3a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000a3c:	b672      	cpsid	i
}
 8000a3e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000a40:	e7fe      	b.n	8000a40 <Error_Handler+0x8>
	...

08000a44 <SCH_Update>:
			if (backup.Period > 0) SCH_Add_Task(backup.pTask, backup.Period, backup.Period);
		}
	}
}

void SCH_Update(void){
 8000a44:	b480      	push	{r7}
 8000a46:	af00      	add	r7, sp, #0
	if (SCH_tasks_G[0].Delay > 0) SCH_tasks_G[0].Delay--;
 8000a48:	4b09      	ldr	r3, [pc, #36]	; (8000a70 <SCH_Update+0x2c>)
 8000a4a:	685b      	ldr	r3, [r3, #4]
 8000a4c:	2b00      	cmp	r3, #0
 8000a4e:	d005      	beq.n	8000a5c <SCH_Update+0x18>
 8000a50:	4b07      	ldr	r3, [pc, #28]	; (8000a70 <SCH_Update+0x2c>)
 8000a52:	685b      	ldr	r3, [r3, #4]
 8000a54:	3b01      	subs	r3, #1
 8000a56:	4a06      	ldr	r2, [pc, #24]	; (8000a70 <SCH_Update+0x2c>)
 8000a58:	6053      	str	r3, [r2, #4]
	else SCH_tasks_G[0].RunMe++;
}
 8000a5a:	e005      	b.n	8000a68 <SCH_Update+0x24>
	else SCH_tasks_G[0].RunMe++;
 8000a5c:	4b04      	ldr	r3, [pc, #16]	; (8000a70 <SCH_Update+0x2c>)
 8000a5e:	7b1b      	ldrb	r3, [r3, #12]
 8000a60:	3301      	adds	r3, #1
 8000a62:	b2da      	uxtb	r2, r3
 8000a64:	4b02      	ldr	r3, [pc, #8]	; (8000a70 <SCH_Update+0x2c>)
 8000a66:	731a      	strb	r2, [r3, #12]
}
 8000a68:	bf00      	nop
 8000a6a:	46bd      	mov	sp, r7
 8000a6c:	bc80      	pop	{r7}
 8000a6e:	4770      	bx	lr
 8000a70:	20000198 	.word	0x20000198

08000a74 <setTimer1>:
int timer9_flag = 0;

int timer10_counter = 0;
int timer10_flag = 0;

void setTimer1(int duration){
 8000a74:	b480      	push	{r7}
 8000a76:	b083      	sub	sp, #12
 8000a78:	af00      	add	r7, sp, #0
 8000a7a:	6078      	str	r0, [r7, #4]
	timer1_counter = duration;
 8000a7c:	4a05      	ldr	r2, [pc, #20]	; (8000a94 <setTimer1+0x20>)
 8000a7e:	687b      	ldr	r3, [r7, #4]
 8000a80:	6013      	str	r3, [r2, #0]
	timer1_flag = 0;
 8000a82:	4b05      	ldr	r3, [pc, #20]	; (8000a98 <setTimer1+0x24>)
 8000a84:	2200      	movs	r2, #0
 8000a86:	601a      	str	r2, [r3, #0]
}
 8000a88:	bf00      	nop
 8000a8a:	370c      	adds	r7, #12
 8000a8c:	46bd      	mov	sp, r7
 8000a8e:	bc80      	pop	{r7}
 8000a90:	4770      	bx	lr
 8000a92:	bf00      	nop
 8000a94:	200004b8 	.word	0x200004b8
 8000a98:	200004bc 	.word	0x200004bc

08000a9c <setTimer2>:

void setTimer2(int duration){
 8000a9c:	b480      	push	{r7}
 8000a9e:	b083      	sub	sp, #12
 8000aa0:	af00      	add	r7, sp, #0
 8000aa2:	6078      	str	r0, [r7, #4]
	timer2_counter = duration;
 8000aa4:	4a05      	ldr	r2, [pc, #20]	; (8000abc <setTimer2+0x20>)
 8000aa6:	687b      	ldr	r3, [r7, #4]
 8000aa8:	6013      	str	r3, [r2, #0]
	timer2_flag = 0;
 8000aaa:	4b05      	ldr	r3, [pc, #20]	; (8000ac0 <setTimer2+0x24>)
 8000aac:	2200      	movs	r2, #0
 8000aae:	601a      	str	r2, [r3, #0]
}
 8000ab0:	bf00      	nop
 8000ab2:	370c      	adds	r7, #12
 8000ab4:	46bd      	mov	sp, r7
 8000ab6:	bc80      	pop	{r7}
 8000ab8:	4770      	bx	lr
 8000aba:	bf00      	nop
 8000abc:	200004c0 	.word	0x200004c0
 8000ac0:	200004c4 	.word	0x200004c4

08000ac4 <setTimer3>:

void setTimer3(int duration){
 8000ac4:	b480      	push	{r7}
 8000ac6:	b083      	sub	sp, #12
 8000ac8:	af00      	add	r7, sp, #0
 8000aca:	6078      	str	r0, [r7, #4]
	timer3_counter = duration;
 8000acc:	4a05      	ldr	r2, [pc, #20]	; (8000ae4 <setTimer3+0x20>)
 8000ace:	687b      	ldr	r3, [r7, #4]
 8000ad0:	6013      	str	r3, [r2, #0]
	timer3_flag = 0;
 8000ad2:	4b05      	ldr	r3, [pc, #20]	; (8000ae8 <setTimer3+0x24>)
 8000ad4:	2200      	movs	r2, #0
 8000ad6:	601a      	str	r2, [r3, #0]
}
 8000ad8:	bf00      	nop
 8000ada:	370c      	adds	r7, #12
 8000adc:	46bd      	mov	sp, r7
 8000ade:	bc80      	pop	{r7}
 8000ae0:	4770      	bx	lr
 8000ae2:	bf00      	nop
 8000ae4:	200004c8 	.word	0x200004c8
 8000ae8:	200004cc 	.word	0x200004cc

08000aec <timerRun>:
void setTimer10(int duration){
	timer10_counter = duration;
	timer10_flag = 0;
}

void timerRun(){
 8000aec:	b480      	push	{r7}
 8000aee:	af00      	add	r7, sp, #0
	if(timer1_counter > 0){
 8000af0:	4b51      	ldr	r3, [pc, #324]	; (8000c38 <timerRun+0x14c>)
 8000af2:	681b      	ldr	r3, [r3, #0]
 8000af4:	2b00      	cmp	r3, #0
 8000af6:	dd0b      	ble.n	8000b10 <timerRun+0x24>
		timer1_counter--;
 8000af8:	4b4f      	ldr	r3, [pc, #316]	; (8000c38 <timerRun+0x14c>)
 8000afa:	681b      	ldr	r3, [r3, #0]
 8000afc:	3b01      	subs	r3, #1
 8000afe:	4a4e      	ldr	r2, [pc, #312]	; (8000c38 <timerRun+0x14c>)
 8000b00:	6013      	str	r3, [r2, #0]
		if(timer1_counter == 0){
 8000b02:	4b4d      	ldr	r3, [pc, #308]	; (8000c38 <timerRun+0x14c>)
 8000b04:	681b      	ldr	r3, [r3, #0]
 8000b06:	2b00      	cmp	r3, #0
 8000b08:	d102      	bne.n	8000b10 <timerRun+0x24>
			timer1_flag = 1;
 8000b0a:	4b4c      	ldr	r3, [pc, #304]	; (8000c3c <timerRun+0x150>)
 8000b0c:	2201      	movs	r2, #1
 8000b0e:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer2_counter > 0){
 8000b10:	4b4b      	ldr	r3, [pc, #300]	; (8000c40 <timerRun+0x154>)
 8000b12:	681b      	ldr	r3, [r3, #0]
 8000b14:	2b00      	cmp	r3, #0
 8000b16:	dd0b      	ble.n	8000b30 <timerRun+0x44>
		timer2_counter--;
 8000b18:	4b49      	ldr	r3, [pc, #292]	; (8000c40 <timerRun+0x154>)
 8000b1a:	681b      	ldr	r3, [r3, #0]
 8000b1c:	3b01      	subs	r3, #1
 8000b1e:	4a48      	ldr	r2, [pc, #288]	; (8000c40 <timerRun+0x154>)
 8000b20:	6013      	str	r3, [r2, #0]
		if(timer2_counter == 0){
 8000b22:	4b47      	ldr	r3, [pc, #284]	; (8000c40 <timerRun+0x154>)
 8000b24:	681b      	ldr	r3, [r3, #0]
 8000b26:	2b00      	cmp	r3, #0
 8000b28:	d102      	bne.n	8000b30 <timerRun+0x44>
			timer2_flag = 1;
 8000b2a:	4b46      	ldr	r3, [pc, #280]	; (8000c44 <timerRun+0x158>)
 8000b2c:	2201      	movs	r2, #1
 8000b2e:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer3_counter > 0){
 8000b30:	4b45      	ldr	r3, [pc, #276]	; (8000c48 <timerRun+0x15c>)
 8000b32:	681b      	ldr	r3, [r3, #0]
 8000b34:	2b00      	cmp	r3, #0
 8000b36:	dd0b      	ble.n	8000b50 <timerRun+0x64>
		timer3_counter--;
 8000b38:	4b43      	ldr	r3, [pc, #268]	; (8000c48 <timerRun+0x15c>)
 8000b3a:	681b      	ldr	r3, [r3, #0]
 8000b3c:	3b01      	subs	r3, #1
 8000b3e:	4a42      	ldr	r2, [pc, #264]	; (8000c48 <timerRun+0x15c>)
 8000b40:	6013      	str	r3, [r2, #0]
		if(timer3_counter == 0){
 8000b42:	4b41      	ldr	r3, [pc, #260]	; (8000c48 <timerRun+0x15c>)
 8000b44:	681b      	ldr	r3, [r3, #0]
 8000b46:	2b00      	cmp	r3, #0
 8000b48:	d102      	bne.n	8000b50 <timerRun+0x64>
			timer3_flag = 1;
 8000b4a:	4b40      	ldr	r3, [pc, #256]	; (8000c4c <timerRun+0x160>)
 8000b4c:	2201      	movs	r2, #1
 8000b4e:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer4_counter > 0){
 8000b50:	4b3f      	ldr	r3, [pc, #252]	; (8000c50 <timerRun+0x164>)
 8000b52:	681b      	ldr	r3, [r3, #0]
 8000b54:	2b00      	cmp	r3, #0
 8000b56:	dd0b      	ble.n	8000b70 <timerRun+0x84>
		timer4_counter--;
 8000b58:	4b3d      	ldr	r3, [pc, #244]	; (8000c50 <timerRun+0x164>)
 8000b5a:	681b      	ldr	r3, [r3, #0]
 8000b5c:	3b01      	subs	r3, #1
 8000b5e:	4a3c      	ldr	r2, [pc, #240]	; (8000c50 <timerRun+0x164>)
 8000b60:	6013      	str	r3, [r2, #0]
		if(timer4_counter == 0){
 8000b62:	4b3b      	ldr	r3, [pc, #236]	; (8000c50 <timerRun+0x164>)
 8000b64:	681b      	ldr	r3, [r3, #0]
 8000b66:	2b00      	cmp	r3, #0
 8000b68:	d102      	bne.n	8000b70 <timerRun+0x84>
			timer4_flag = 1;
 8000b6a:	4b3a      	ldr	r3, [pc, #232]	; (8000c54 <timerRun+0x168>)
 8000b6c:	2201      	movs	r2, #1
 8000b6e:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer5_counter > 0){
 8000b70:	4b39      	ldr	r3, [pc, #228]	; (8000c58 <timerRun+0x16c>)
 8000b72:	681b      	ldr	r3, [r3, #0]
 8000b74:	2b00      	cmp	r3, #0
 8000b76:	dd0b      	ble.n	8000b90 <timerRun+0xa4>
		timer5_counter--;
 8000b78:	4b37      	ldr	r3, [pc, #220]	; (8000c58 <timerRun+0x16c>)
 8000b7a:	681b      	ldr	r3, [r3, #0]
 8000b7c:	3b01      	subs	r3, #1
 8000b7e:	4a36      	ldr	r2, [pc, #216]	; (8000c58 <timerRun+0x16c>)
 8000b80:	6013      	str	r3, [r2, #0]
		if(timer5_counter == 0){
 8000b82:	4b35      	ldr	r3, [pc, #212]	; (8000c58 <timerRun+0x16c>)
 8000b84:	681b      	ldr	r3, [r3, #0]
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	d102      	bne.n	8000b90 <timerRun+0xa4>
			timer5_flag = 1;
 8000b8a:	4b34      	ldr	r3, [pc, #208]	; (8000c5c <timerRun+0x170>)
 8000b8c:	2201      	movs	r2, #1
 8000b8e:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer6_counter > 0){
 8000b90:	4b33      	ldr	r3, [pc, #204]	; (8000c60 <timerRun+0x174>)
 8000b92:	681b      	ldr	r3, [r3, #0]
 8000b94:	2b00      	cmp	r3, #0
 8000b96:	dd0b      	ble.n	8000bb0 <timerRun+0xc4>
		timer6_counter--;
 8000b98:	4b31      	ldr	r3, [pc, #196]	; (8000c60 <timerRun+0x174>)
 8000b9a:	681b      	ldr	r3, [r3, #0]
 8000b9c:	3b01      	subs	r3, #1
 8000b9e:	4a30      	ldr	r2, [pc, #192]	; (8000c60 <timerRun+0x174>)
 8000ba0:	6013      	str	r3, [r2, #0]
		if(timer6_counter == 0){
 8000ba2:	4b2f      	ldr	r3, [pc, #188]	; (8000c60 <timerRun+0x174>)
 8000ba4:	681b      	ldr	r3, [r3, #0]
 8000ba6:	2b00      	cmp	r3, #0
 8000ba8:	d102      	bne.n	8000bb0 <timerRun+0xc4>
			timer6_flag = 1;
 8000baa:	4b2e      	ldr	r3, [pc, #184]	; (8000c64 <timerRun+0x178>)
 8000bac:	2201      	movs	r2, #1
 8000bae:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer7_counter > 0){
 8000bb0:	4b2d      	ldr	r3, [pc, #180]	; (8000c68 <timerRun+0x17c>)
 8000bb2:	681b      	ldr	r3, [r3, #0]
 8000bb4:	2b00      	cmp	r3, #0
 8000bb6:	dd0b      	ble.n	8000bd0 <timerRun+0xe4>
		timer7_counter--;
 8000bb8:	4b2b      	ldr	r3, [pc, #172]	; (8000c68 <timerRun+0x17c>)
 8000bba:	681b      	ldr	r3, [r3, #0]
 8000bbc:	3b01      	subs	r3, #1
 8000bbe:	4a2a      	ldr	r2, [pc, #168]	; (8000c68 <timerRun+0x17c>)
 8000bc0:	6013      	str	r3, [r2, #0]
		if(timer7_counter == 0){
 8000bc2:	4b29      	ldr	r3, [pc, #164]	; (8000c68 <timerRun+0x17c>)
 8000bc4:	681b      	ldr	r3, [r3, #0]
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	d102      	bne.n	8000bd0 <timerRun+0xe4>
			timer7_flag = 1;
 8000bca:	4b28      	ldr	r3, [pc, #160]	; (8000c6c <timerRun+0x180>)
 8000bcc:	2201      	movs	r2, #1
 8000bce:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer8_counter > 0){
 8000bd0:	4b27      	ldr	r3, [pc, #156]	; (8000c70 <timerRun+0x184>)
 8000bd2:	681b      	ldr	r3, [r3, #0]
 8000bd4:	2b00      	cmp	r3, #0
 8000bd6:	dd0b      	ble.n	8000bf0 <timerRun+0x104>
		timer8_counter--;
 8000bd8:	4b25      	ldr	r3, [pc, #148]	; (8000c70 <timerRun+0x184>)
 8000bda:	681b      	ldr	r3, [r3, #0]
 8000bdc:	3b01      	subs	r3, #1
 8000bde:	4a24      	ldr	r2, [pc, #144]	; (8000c70 <timerRun+0x184>)
 8000be0:	6013      	str	r3, [r2, #0]
		if(timer8_counter == 0){
 8000be2:	4b23      	ldr	r3, [pc, #140]	; (8000c70 <timerRun+0x184>)
 8000be4:	681b      	ldr	r3, [r3, #0]
 8000be6:	2b00      	cmp	r3, #0
 8000be8:	d102      	bne.n	8000bf0 <timerRun+0x104>
			timer8_flag = 1;
 8000bea:	4b22      	ldr	r3, [pc, #136]	; (8000c74 <timerRun+0x188>)
 8000bec:	2201      	movs	r2, #1
 8000bee:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer9_counter > 0){
 8000bf0:	4b21      	ldr	r3, [pc, #132]	; (8000c78 <timerRun+0x18c>)
 8000bf2:	681b      	ldr	r3, [r3, #0]
 8000bf4:	2b00      	cmp	r3, #0
 8000bf6:	dd0b      	ble.n	8000c10 <timerRun+0x124>
		timer9_counter--;
 8000bf8:	4b1f      	ldr	r3, [pc, #124]	; (8000c78 <timerRun+0x18c>)
 8000bfa:	681b      	ldr	r3, [r3, #0]
 8000bfc:	3b01      	subs	r3, #1
 8000bfe:	4a1e      	ldr	r2, [pc, #120]	; (8000c78 <timerRun+0x18c>)
 8000c00:	6013      	str	r3, [r2, #0]
		if(timer9_counter == 0){
 8000c02:	4b1d      	ldr	r3, [pc, #116]	; (8000c78 <timerRun+0x18c>)
 8000c04:	681b      	ldr	r3, [r3, #0]
 8000c06:	2b00      	cmp	r3, #0
 8000c08:	d102      	bne.n	8000c10 <timerRun+0x124>
			timer9_flag = 1;
 8000c0a:	4b1c      	ldr	r3, [pc, #112]	; (8000c7c <timerRun+0x190>)
 8000c0c:	2201      	movs	r2, #1
 8000c0e:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer10_counter > 0){
 8000c10:	4b1b      	ldr	r3, [pc, #108]	; (8000c80 <timerRun+0x194>)
 8000c12:	681b      	ldr	r3, [r3, #0]
 8000c14:	2b00      	cmp	r3, #0
 8000c16:	dd0b      	ble.n	8000c30 <timerRun+0x144>
		timer10_counter--;
 8000c18:	4b19      	ldr	r3, [pc, #100]	; (8000c80 <timerRun+0x194>)
 8000c1a:	681b      	ldr	r3, [r3, #0]
 8000c1c:	3b01      	subs	r3, #1
 8000c1e:	4a18      	ldr	r2, [pc, #96]	; (8000c80 <timerRun+0x194>)
 8000c20:	6013      	str	r3, [r2, #0]
		if(timer10_counter == 0){
 8000c22:	4b17      	ldr	r3, [pc, #92]	; (8000c80 <timerRun+0x194>)
 8000c24:	681b      	ldr	r3, [r3, #0]
 8000c26:	2b00      	cmp	r3, #0
 8000c28:	d102      	bne.n	8000c30 <timerRun+0x144>
			timer10_flag = 1;
 8000c2a:	4b16      	ldr	r3, [pc, #88]	; (8000c84 <timerRun+0x198>)
 8000c2c:	2201      	movs	r2, #1
 8000c2e:	601a      	str	r2, [r3, #0]
		}
	}
}
 8000c30:	bf00      	nop
 8000c32:	46bd      	mov	sp, r7
 8000c34:	bc80      	pop	{r7}
 8000c36:	4770      	bx	lr
 8000c38:	200004b8 	.word	0x200004b8
 8000c3c:	200004bc 	.word	0x200004bc
 8000c40:	200004c0 	.word	0x200004c0
 8000c44:	200004c4 	.word	0x200004c4
 8000c48:	200004c8 	.word	0x200004c8
 8000c4c:	200004cc 	.word	0x200004cc
 8000c50:	200004d0 	.word	0x200004d0
 8000c54:	200004d4 	.word	0x200004d4
 8000c58:	200004d8 	.word	0x200004d8
 8000c5c:	200004dc 	.word	0x200004dc
 8000c60:	200004e0 	.word	0x200004e0
 8000c64:	200004e4 	.word	0x200004e4
 8000c68:	200004e8 	.word	0x200004e8
 8000c6c:	200004ec 	.word	0x200004ec
 8000c70:	200004f0 	.word	0x200004f0
 8000c74:	200004f4 	.word	0x200004f4
 8000c78:	200004f8 	.word	0x200004f8
 8000c7c:	200004fc 	.word	0x200004fc
 8000c80:	20000500 	.word	0x20000500
 8000c84:	20000504 	.word	0x20000504

08000c88 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000c88:	b480      	push	{r7}
 8000c8a:	b085      	sub	sp, #20
 8000c8c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000c8e:	4b15      	ldr	r3, [pc, #84]	; (8000ce4 <HAL_MspInit+0x5c>)
 8000c90:	699b      	ldr	r3, [r3, #24]
 8000c92:	4a14      	ldr	r2, [pc, #80]	; (8000ce4 <HAL_MspInit+0x5c>)
 8000c94:	f043 0301 	orr.w	r3, r3, #1
 8000c98:	6193      	str	r3, [r2, #24]
 8000c9a:	4b12      	ldr	r3, [pc, #72]	; (8000ce4 <HAL_MspInit+0x5c>)
 8000c9c:	699b      	ldr	r3, [r3, #24]
 8000c9e:	f003 0301 	and.w	r3, r3, #1
 8000ca2:	60bb      	str	r3, [r7, #8]
 8000ca4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ca6:	4b0f      	ldr	r3, [pc, #60]	; (8000ce4 <HAL_MspInit+0x5c>)
 8000ca8:	69db      	ldr	r3, [r3, #28]
 8000caa:	4a0e      	ldr	r2, [pc, #56]	; (8000ce4 <HAL_MspInit+0x5c>)
 8000cac:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000cb0:	61d3      	str	r3, [r2, #28]
 8000cb2:	4b0c      	ldr	r3, [pc, #48]	; (8000ce4 <HAL_MspInit+0x5c>)
 8000cb4:	69db      	ldr	r3, [r3, #28]
 8000cb6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000cba:	607b      	str	r3, [r7, #4]
 8000cbc:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000cbe:	4b0a      	ldr	r3, [pc, #40]	; (8000ce8 <HAL_MspInit+0x60>)
 8000cc0:	685b      	ldr	r3, [r3, #4]
 8000cc2:	60fb      	str	r3, [r7, #12]
 8000cc4:	68fb      	ldr	r3, [r7, #12]
 8000cc6:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000cca:	60fb      	str	r3, [r7, #12]
 8000ccc:	68fb      	ldr	r3, [r7, #12]
 8000cce:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000cd2:	60fb      	str	r3, [r7, #12]
 8000cd4:	4a04      	ldr	r2, [pc, #16]	; (8000ce8 <HAL_MspInit+0x60>)
 8000cd6:	68fb      	ldr	r3, [r7, #12]
 8000cd8:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000cda:	bf00      	nop
 8000cdc:	3714      	adds	r7, #20
 8000cde:	46bd      	mov	sp, r7
 8000ce0:	bc80      	pop	{r7}
 8000ce2:	4770      	bx	lr
 8000ce4:	40021000 	.word	0x40021000
 8000ce8:	40010000 	.word	0x40010000

08000cec <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000cec:	b580      	push	{r7, lr}
 8000cee:	b08a      	sub	sp, #40	; 0x28
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000cf4:	f107 0314 	add.w	r3, r7, #20
 8000cf8:	2200      	movs	r2, #0
 8000cfa:	601a      	str	r2, [r3, #0]
 8000cfc:	605a      	str	r2, [r3, #4]
 8000cfe:	609a      	str	r2, [r3, #8]
 8000d00:	60da      	str	r2, [r3, #12]
  if(hi2c->Instance==I2C1)
 8000d02:	687b      	ldr	r3, [r7, #4]
 8000d04:	681b      	ldr	r3, [r3, #0]
 8000d06:	4a1d      	ldr	r2, [pc, #116]	; (8000d7c <HAL_I2C_MspInit+0x90>)
 8000d08:	4293      	cmp	r3, r2
 8000d0a:	d132      	bne.n	8000d72 <HAL_I2C_MspInit+0x86>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000d0c:	4b1c      	ldr	r3, [pc, #112]	; (8000d80 <HAL_I2C_MspInit+0x94>)
 8000d0e:	699b      	ldr	r3, [r3, #24]
 8000d10:	4a1b      	ldr	r2, [pc, #108]	; (8000d80 <HAL_I2C_MspInit+0x94>)
 8000d12:	f043 0308 	orr.w	r3, r3, #8
 8000d16:	6193      	str	r3, [r2, #24]
 8000d18:	4b19      	ldr	r3, [pc, #100]	; (8000d80 <HAL_I2C_MspInit+0x94>)
 8000d1a:	699b      	ldr	r3, [r3, #24]
 8000d1c:	f003 0308 	and.w	r3, r3, #8
 8000d20:	613b      	str	r3, [r7, #16]
 8000d22:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8000d24:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000d28:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000d2a:	2312      	movs	r3, #18
 8000d2c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000d2e:	2303      	movs	r3, #3
 8000d30:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d32:	f107 0314 	add.w	r3, r7, #20
 8000d36:	4619      	mov	r1, r3
 8000d38:	4812      	ldr	r0, [pc, #72]	; (8000d84 <HAL_I2C_MspInit+0x98>)
 8000d3a:	f000 fceb 	bl	8001714 <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_I2C1_ENABLE();
 8000d3e:	4b12      	ldr	r3, [pc, #72]	; (8000d88 <HAL_I2C_MspInit+0x9c>)
 8000d40:	685b      	ldr	r3, [r3, #4]
 8000d42:	627b      	str	r3, [r7, #36]	; 0x24
 8000d44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000d46:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8000d4a:	627b      	str	r3, [r7, #36]	; 0x24
 8000d4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000d4e:	f043 0302 	orr.w	r3, r3, #2
 8000d52:	627b      	str	r3, [r7, #36]	; 0x24
 8000d54:	4a0c      	ldr	r2, [pc, #48]	; (8000d88 <HAL_I2C_MspInit+0x9c>)
 8000d56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000d58:	6053      	str	r3, [r2, #4]

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8000d5a:	4b09      	ldr	r3, [pc, #36]	; (8000d80 <HAL_I2C_MspInit+0x94>)
 8000d5c:	69db      	ldr	r3, [r3, #28]
 8000d5e:	4a08      	ldr	r2, [pc, #32]	; (8000d80 <HAL_I2C_MspInit+0x94>)
 8000d60:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000d64:	61d3      	str	r3, [r2, #28]
 8000d66:	4b06      	ldr	r3, [pc, #24]	; (8000d80 <HAL_I2C_MspInit+0x94>)
 8000d68:	69db      	ldr	r3, [r3, #28]
 8000d6a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8000d6e:	60fb      	str	r3, [r7, #12]
 8000d70:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8000d72:	bf00      	nop
 8000d74:	3728      	adds	r7, #40	; 0x28
 8000d76:	46bd      	mov	sp, r7
 8000d78:	bd80      	pop	{r7, pc}
 8000d7a:	bf00      	nop
 8000d7c:	40005400 	.word	0x40005400
 8000d80:	40021000 	.word	0x40021000
 8000d84:	40010c00 	.word	0x40010c00
 8000d88:	40010000 	.word	0x40010000

08000d8c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8000d8c:	b580      	push	{r7, lr}
 8000d8e:	b084      	sub	sp, #16
 8000d90:	af00      	add	r7, sp, #0
 8000d92:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8000d94:	687b      	ldr	r3, [r7, #4]
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000d9c:	d113      	bne.n	8000dc6 <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8000d9e:	4b0c      	ldr	r3, [pc, #48]	; (8000dd0 <HAL_TIM_Base_MspInit+0x44>)
 8000da0:	69db      	ldr	r3, [r3, #28]
 8000da2:	4a0b      	ldr	r2, [pc, #44]	; (8000dd0 <HAL_TIM_Base_MspInit+0x44>)
 8000da4:	f043 0301 	orr.w	r3, r3, #1
 8000da8:	61d3      	str	r3, [r2, #28]
 8000daa:	4b09      	ldr	r3, [pc, #36]	; (8000dd0 <HAL_TIM_Base_MspInit+0x44>)
 8000dac:	69db      	ldr	r3, [r3, #28]
 8000dae:	f003 0301 	and.w	r3, r3, #1
 8000db2:	60fb      	str	r3, [r7, #12]
 8000db4:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8000db6:	2200      	movs	r2, #0
 8000db8:	2100      	movs	r1, #0
 8000dba:	201c      	movs	r0, #28
 8000dbc:	f000 fbc3 	bl	8001546 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8000dc0:	201c      	movs	r0, #28
 8000dc2:	f000 fbdc 	bl	800157e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8000dc6:	bf00      	nop
 8000dc8:	3710      	adds	r7, #16
 8000dca:	46bd      	mov	sp, r7
 8000dcc:	bd80      	pop	{r7, pc}
 8000dce:	bf00      	nop
 8000dd0:	40021000 	.word	0x40021000

08000dd4 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8000dd4:	b580      	push	{r7, lr}
 8000dd6:	b088      	sub	sp, #32
 8000dd8:	af00      	add	r7, sp, #0
 8000dda:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ddc:	f107 0310 	add.w	r3, r7, #16
 8000de0:	2200      	movs	r2, #0
 8000de2:	601a      	str	r2, [r3, #0]
 8000de4:	605a      	str	r2, [r3, #4]
 8000de6:	609a      	str	r2, [r3, #8]
 8000de8:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART2)
 8000dea:	687b      	ldr	r3, [r7, #4]
 8000dec:	681b      	ldr	r3, [r3, #0]
 8000dee:	4a1f      	ldr	r2, [pc, #124]	; (8000e6c <HAL_UART_MspInit+0x98>)
 8000df0:	4293      	cmp	r3, r2
 8000df2:	d137      	bne.n	8000e64 <HAL_UART_MspInit+0x90>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8000df4:	4b1e      	ldr	r3, [pc, #120]	; (8000e70 <HAL_UART_MspInit+0x9c>)
 8000df6:	69db      	ldr	r3, [r3, #28]
 8000df8:	4a1d      	ldr	r2, [pc, #116]	; (8000e70 <HAL_UART_MspInit+0x9c>)
 8000dfa:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000dfe:	61d3      	str	r3, [r2, #28]
 8000e00:	4b1b      	ldr	r3, [pc, #108]	; (8000e70 <HAL_UART_MspInit+0x9c>)
 8000e02:	69db      	ldr	r3, [r3, #28]
 8000e04:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000e08:	60fb      	str	r3, [r7, #12]
 8000e0a:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000e0c:	4b18      	ldr	r3, [pc, #96]	; (8000e70 <HAL_UART_MspInit+0x9c>)
 8000e0e:	699b      	ldr	r3, [r3, #24]
 8000e10:	4a17      	ldr	r2, [pc, #92]	; (8000e70 <HAL_UART_MspInit+0x9c>)
 8000e12:	f043 0304 	orr.w	r3, r3, #4
 8000e16:	6193      	str	r3, [r2, #24]
 8000e18:	4b15      	ldr	r3, [pc, #84]	; (8000e70 <HAL_UART_MspInit+0x9c>)
 8000e1a:	699b      	ldr	r3, [r3, #24]
 8000e1c:	f003 0304 	and.w	r3, r3, #4
 8000e20:	60bb      	str	r3, [r7, #8]
 8000e22:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000e24:	2304      	movs	r3, #4
 8000e26:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e28:	2302      	movs	r3, #2
 8000e2a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000e2c:	2303      	movs	r3, #3
 8000e2e:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e30:	f107 0310 	add.w	r3, r7, #16
 8000e34:	4619      	mov	r1, r3
 8000e36:	480f      	ldr	r0, [pc, #60]	; (8000e74 <HAL_UART_MspInit+0xa0>)
 8000e38:	f000 fc6c 	bl	8001714 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000e3c:	2308      	movs	r3, #8
 8000e3e:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000e40:	2300      	movs	r3, #0
 8000e42:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e44:	2300      	movs	r3, #0
 8000e46:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e48:	f107 0310 	add.w	r3, r7, #16
 8000e4c:	4619      	mov	r1, r3
 8000e4e:	4809      	ldr	r0, [pc, #36]	; (8000e74 <HAL_UART_MspInit+0xa0>)
 8000e50:	f000 fc60 	bl	8001714 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8000e54:	2200      	movs	r2, #0
 8000e56:	2100      	movs	r1, #0
 8000e58:	2026      	movs	r0, #38	; 0x26
 8000e5a:	f000 fb74 	bl	8001546 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8000e5e:	2026      	movs	r0, #38	; 0x26
 8000e60:	f000 fb8d 	bl	800157e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8000e64:	bf00      	nop
 8000e66:	3720      	adds	r7, #32
 8000e68:	46bd      	mov	sp, r7
 8000e6a:	bd80      	pop	{r7, pc}
 8000e6c:	40004400 	.word	0x40004400
 8000e70:	40021000 	.word	0x40021000
 8000e74:	40010800 	.word	0x40010800

08000e78 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000e78:	b480      	push	{r7}
 8000e7a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000e7c:	e7fe      	b.n	8000e7c <NMI_Handler+0x4>

08000e7e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000e7e:	b480      	push	{r7}
 8000e80:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000e82:	e7fe      	b.n	8000e82 <HardFault_Handler+0x4>

08000e84 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000e84:	b480      	push	{r7}
 8000e86:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000e88:	e7fe      	b.n	8000e88 <MemManage_Handler+0x4>

08000e8a <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000e8a:	b480      	push	{r7}
 8000e8c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000e8e:	e7fe      	b.n	8000e8e <BusFault_Handler+0x4>

08000e90 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000e90:	b480      	push	{r7}
 8000e92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000e94:	e7fe      	b.n	8000e94 <UsageFault_Handler+0x4>

08000e96 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000e96:	b480      	push	{r7}
 8000e98:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000e9a:	bf00      	nop
 8000e9c:	46bd      	mov	sp, r7
 8000e9e:	bc80      	pop	{r7}
 8000ea0:	4770      	bx	lr

08000ea2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000ea2:	b480      	push	{r7}
 8000ea4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000ea6:	bf00      	nop
 8000ea8:	46bd      	mov	sp, r7
 8000eaa:	bc80      	pop	{r7}
 8000eac:	4770      	bx	lr

08000eae <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000eae:	b480      	push	{r7}
 8000eb0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000eb2:	bf00      	nop
 8000eb4:	46bd      	mov	sp, r7
 8000eb6:	bc80      	pop	{r7}
 8000eb8:	4770      	bx	lr

08000eba <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000eba:	b580      	push	{r7, lr}
 8000ebc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000ebe:	f000 fa2b 	bl	8001318 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000ec2:	bf00      	nop
 8000ec4:	bd80      	pop	{r7, pc}
	...

08000ec8 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8000ec8:	b580      	push	{r7, lr}
 8000eca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8000ecc:	4802      	ldr	r0, [pc, #8]	; (8000ed8 <TIM2_IRQHandler+0x10>)
 8000ece:	f002 fb75 	bl	80035bc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8000ed2:	bf00      	nop
 8000ed4:	bd80      	pop	{r7, pc}
 8000ed6:	bf00      	nop
 8000ed8:	2000010c 	.word	0x2000010c

08000edc <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8000edc:	b580      	push	{r7, lr}
 8000ede:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8000ee0:	4802      	ldr	r0, [pc, #8]	; (8000eec <USART2_IRQHandler+0x10>)
 8000ee2:	f002 ffd3 	bl	8003e8c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 8000ee6:	bf00      	nop
 8000ee8:	bd80      	pop	{r7, pc}
 8000eea:	bf00      	nop
 8000eec:	20000154 	.word	0x20000154

08000ef0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000ef0:	b580      	push	{r7, lr}
 8000ef2:	b086      	sub	sp, #24
 8000ef4:	af00      	add	r7, sp, #0
 8000ef6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000ef8:	4a14      	ldr	r2, [pc, #80]	; (8000f4c <_sbrk+0x5c>)
 8000efa:	4b15      	ldr	r3, [pc, #84]	; (8000f50 <_sbrk+0x60>)
 8000efc:	1ad3      	subs	r3, r2, r3
 8000efe:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000f00:	697b      	ldr	r3, [r7, #20]
 8000f02:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f04:	4b13      	ldr	r3, [pc, #76]	; (8000f54 <_sbrk+0x64>)
 8000f06:	681b      	ldr	r3, [r3, #0]
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	d102      	bne.n	8000f12 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000f0c:	4b11      	ldr	r3, [pc, #68]	; (8000f54 <_sbrk+0x64>)
 8000f0e:	4a12      	ldr	r2, [pc, #72]	; (8000f58 <_sbrk+0x68>)
 8000f10:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f12:	4b10      	ldr	r3, [pc, #64]	; (8000f54 <_sbrk+0x64>)
 8000f14:	681a      	ldr	r2, [r3, #0]
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	4413      	add	r3, r2
 8000f1a:	693a      	ldr	r2, [r7, #16]
 8000f1c:	429a      	cmp	r2, r3
 8000f1e:	d207      	bcs.n	8000f30 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000f20:	f003 fbdc 	bl	80046dc <__errno>
 8000f24:	4603      	mov	r3, r0
 8000f26:	220c      	movs	r2, #12
 8000f28:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000f2a:	f04f 33ff 	mov.w	r3, #4294967295
 8000f2e:	e009      	b.n	8000f44 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000f30:	4b08      	ldr	r3, [pc, #32]	; (8000f54 <_sbrk+0x64>)
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000f36:	4b07      	ldr	r3, [pc, #28]	; (8000f54 <_sbrk+0x64>)
 8000f38:	681a      	ldr	r2, [r3, #0]
 8000f3a:	687b      	ldr	r3, [r7, #4]
 8000f3c:	4413      	add	r3, r2
 8000f3e:	4a05      	ldr	r2, [pc, #20]	; (8000f54 <_sbrk+0x64>)
 8000f40:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000f42:	68fb      	ldr	r3, [r7, #12]
}
 8000f44:	4618      	mov	r0, r3
 8000f46:	3718      	adds	r7, #24
 8000f48:	46bd      	mov	sp, r7
 8000f4a:	bd80      	pop	{r7, pc}
 8000f4c:	20005000 	.word	0x20005000
 8000f50:	00000400 	.word	0x00000400
 8000f54:	20000508 	.word	0x20000508
 8000f58:	20000568 	.word	0x20000568

08000f5c <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000f5c:	b480      	push	{r7}
 8000f5e:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000f60:	bf00      	nop
 8000f62:	46bd      	mov	sp, r7
 8000f64:	bc80      	pop	{r7}
 8000f66:	4770      	bx	lr

08000f68 <isCmdEqualToRST>:
uint8_t cmd_data[MAX_CMD_SIZE];
uint8_t cmd_index = 0;
uint8_t cmd_flag = INIT_UART;
uint8_t counter = WAIT;

int isCmdEqualToRST(uint8_t str[]){
 8000f68:	b480      	push	{r7}
 8000f6a:	b085      	sub	sp, #20
 8000f6c:	af00      	add	r7, sp, #0
 8000f6e:	6078      	str	r0, [r7, #4]
	int flag = 0;
 8000f70:	2300      	movs	r3, #0
 8000f72:	60fb      	str	r3, [r7, #12]
	if (str[0] == 'R') flag = 1;
 8000f74:	687b      	ldr	r3, [r7, #4]
 8000f76:	781b      	ldrb	r3, [r3, #0]
 8000f78:	2b52      	cmp	r3, #82	; 0x52
 8000f7a:	d102      	bne.n	8000f82 <isCmdEqualToRST+0x1a>
 8000f7c:	2301      	movs	r3, #1
 8000f7e:	60fb      	str	r3, [r7, #12]
 8000f80:	e001      	b.n	8000f86 <isCmdEqualToRST+0x1e>
	else flag = 0;
 8000f82:	2300      	movs	r3, #0
 8000f84:	60fb      	str	r3, [r7, #12]
	return flag;
 8000f86:	68fb      	ldr	r3, [r7, #12]
}
 8000f88:	4618      	mov	r0, r3
 8000f8a:	3714      	adds	r7, #20
 8000f8c:	46bd      	mov	sp, r7
 8000f8e:	bc80      	pop	{r7}
 8000f90:	4770      	bx	lr

08000f92 <isCmdEqualToCAP>:

int isCmdEqualToCAP(uint8_t str[]){
 8000f92:	b480      	push	{r7}
 8000f94:	b085      	sub	sp, #20
 8000f96:	af00      	add	r7, sp, #0
 8000f98:	6078      	str	r0, [r7, #4]
	int flag = 0;
 8000f9a:	2300      	movs	r3, #0
 8000f9c:	60fb      	str	r3, [r7, #12]
	if (str[0] == 'C') flag = 1;
 8000f9e:	687b      	ldr	r3, [r7, #4]
 8000fa0:	781b      	ldrb	r3, [r3, #0]
 8000fa2:	2b43      	cmp	r3, #67	; 0x43
 8000fa4:	d102      	bne.n	8000fac <isCmdEqualToCAP+0x1a>
 8000fa6:	2301      	movs	r3, #1
 8000fa8:	60fb      	str	r3, [r7, #12]
 8000faa:	e001      	b.n	8000fb0 <isCmdEqualToCAP+0x1e>
	else flag = 0;
 8000fac:	2300      	movs	r3, #0
 8000fae:	60fb      	str	r3, [r7, #12]
	return flag;
 8000fb0:	68fb      	ldr	r3, [r7, #12]
}
 8000fb2:	4618      	mov	r0, r3
 8000fb4:	3714      	adds	r7, #20
 8000fb6:	46bd      	mov	sp, r7
 8000fb8:	bc80      	pop	{r7}
 8000fba:	4770      	bx	lr

08000fbc <cmd_parser_fsm>:

void cmd_parser_fsm(){
 8000fbc:	b580      	push	{r7, lr}
 8000fbe:	af00      	add	r7, sp, #0
	switch(cmdParserStatus){
 8000fc0:	4b2d      	ldr	r3, [pc, #180]	; (8001078 <cmd_parser_fsm+0xbc>)
 8000fc2:	781b      	ldrb	r3, [r3, #0]
 8000fc4:	2b02      	cmp	r3, #2
 8000fc6:	d037      	beq.n	8001038 <cmd_parser_fsm+0x7c>
 8000fc8:	2b02      	cmp	r3, #2
 8000fca:	dc4c      	bgt.n	8001066 <cmd_parser_fsm+0xaa>
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d002      	beq.n	8000fd6 <cmd_parser_fsm+0x1a>
 8000fd0:	2b01      	cmp	r3, #1
 8000fd2:	d008      	beq.n	8000fe6 <cmd_parser_fsm+0x2a>
			else if (isCmdEqualToCAP(cmd_data)==1) cmd_flag = isCAP;
			else return;
			cmdParserStatus = INIT_UART;
			break;
		default:
			break;
 8000fd4:	e047      	b.n	8001066 <cmd_parser_fsm+0xaa>
			if (buffer_byte == '!') cmdParserStatus = READING;
 8000fd6:	4b29      	ldr	r3, [pc, #164]	; (800107c <cmd_parser_fsm+0xc0>)
 8000fd8:	781b      	ldrb	r3, [r3, #0]
 8000fda:	2b21      	cmp	r3, #33	; 0x21
 8000fdc:	d145      	bne.n	800106a <cmd_parser_fsm+0xae>
 8000fde:	4b26      	ldr	r3, [pc, #152]	; (8001078 <cmd_parser_fsm+0xbc>)
 8000fe0:	2201      	movs	r2, #1
 8000fe2:	701a      	strb	r2, [r3, #0]
			break;
 8000fe4:	e041      	b.n	800106a <cmd_parser_fsm+0xae>
			if (buffer_byte != '!' && buffer_byte != '#'){
 8000fe6:	4b25      	ldr	r3, [pc, #148]	; (800107c <cmd_parser_fsm+0xc0>)
 8000fe8:	781b      	ldrb	r3, [r3, #0]
 8000fea:	2b21      	cmp	r3, #33	; 0x21
 8000fec:	d011      	beq.n	8001012 <cmd_parser_fsm+0x56>
 8000fee:	4b23      	ldr	r3, [pc, #140]	; (800107c <cmd_parser_fsm+0xc0>)
 8000ff0:	781b      	ldrb	r3, [r3, #0]
 8000ff2:	2b23      	cmp	r3, #35	; 0x23
 8000ff4:	d00d      	beq.n	8001012 <cmd_parser_fsm+0x56>
				cmd_data[cmd_index] = buffer_byte;
 8000ff6:	4b22      	ldr	r3, [pc, #136]	; (8001080 <cmd_parser_fsm+0xc4>)
 8000ff8:	781b      	ldrb	r3, [r3, #0]
 8000ffa:	461a      	mov	r2, r3
 8000ffc:	4b1f      	ldr	r3, [pc, #124]	; (800107c <cmd_parser_fsm+0xc0>)
 8000ffe:	7819      	ldrb	r1, [r3, #0]
 8001000:	4b20      	ldr	r3, [pc, #128]	; (8001084 <cmd_parser_fsm+0xc8>)
 8001002:	5499      	strb	r1, [r3, r2]
				cmd_index++;
 8001004:	4b1e      	ldr	r3, [pc, #120]	; (8001080 <cmd_parser_fsm+0xc4>)
 8001006:	781b      	ldrb	r3, [r3, #0]
 8001008:	3301      	adds	r3, #1
 800100a:	b2da      	uxtb	r2, r3
 800100c:	4b1c      	ldr	r3, [pc, #112]	; (8001080 <cmd_parser_fsm+0xc4>)
 800100e:	701a      	strb	r2, [r3, #0]
			break;
 8001010:	e02d      	b.n	800106e <cmd_parser_fsm+0xb2>
			else if (buffer_byte == '!'){
 8001012:	4b1a      	ldr	r3, [pc, #104]	; (800107c <cmd_parser_fsm+0xc0>)
 8001014:	781b      	ldrb	r3, [r3, #0]
 8001016:	2b21      	cmp	r3, #33	; 0x21
 8001018:	d103      	bne.n	8001022 <cmd_parser_fsm+0x66>
				cmdParserStatus = READING;
 800101a:	4b17      	ldr	r3, [pc, #92]	; (8001078 <cmd_parser_fsm+0xbc>)
 800101c:	2201      	movs	r2, #1
 800101e:	701a      	strb	r2, [r3, #0]
			break;
 8001020:	e025      	b.n	800106e <cmd_parser_fsm+0xb2>
			else if (buffer_byte == '#'){
 8001022:	4b16      	ldr	r3, [pc, #88]	; (800107c <cmd_parser_fsm+0xc0>)
 8001024:	781b      	ldrb	r3, [r3, #0]
 8001026:	2b23      	cmp	r3, #35	; 0x23
 8001028:	d121      	bne.n	800106e <cmd_parser_fsm+0xb2>
				cmdParserStatus = STOP;
 800102a:	4b13      	ldr	r3, [pc, #76]	; (8001078 <cmd_parser_fsm+0xbc>)
 800102c:	2202      	movs	r2, #2
 800102e:	701a      	strb	r2, [r3, #0]
				cmd_index = 0;
 8001030:	4b13      	ldr	r3, [pc, #76]	; (8001080 <cmd_parser_fsm+0xc4>)
 8001032:	2200      	movs	r2, #0
 8001034:	701a      	strb	r2, [r3, #0]
			break;
 8001036:	e01a      	b.n	800106e <cmd_parser_fsm+0xb2>
			if (isCmdEqualToRST(cmd_data)==1) cmd_flag = isRST;
 8001038:	4812      	ldr	r0, [pc, #72]	; (8001084 <cmd_parser_fsm+0xc8>)
 800103a:	f7ff ff95 	bl	8000f68 <isCmdEqualToRST>
 800103e:	4603      	mov	r3, r0
 8001040:	2b01      	cmp	r3, #1
 8001042:	d103      	bne.n	800104c <cmd_parser_fsm+0x90>
 8001044:	4b10      	ldr	r3, [pc, #64]	; (8001088 <cmd_parser_fsm+0xcc>)
 8001046:	2207      	movs	r2, #7
 8001048:	701a      	strb	r2, [r3, #0]
 800104a:	e008      	b.n	800105e <cmd_parser_fsm+0xa2>
			else if (isCmdEqualToCAP(cmd_data)==1) cmd_flag = isCAP;
 800104c:	480d      	ldr	r0, [pc, #52]	; (8001084 <cmd_parser_fsm+0xc8>)
 800104e:	f7ff ffa0 	bl	8000f92 <isCmdEqualToCAP>
 8001052:	4603      	mov	r3, r0
 8001054:	2b01      	cmp	r3, #1
 8001056:	d10c      	bne.n	8001072 <cmd_parser_fsm+0xb6>
 8001058:	4b0b      	ldr	r3, [pc, #44]	; (8001088 <cmd_parser_fsm+0xcc>)
 800105a:	2208      	movs	r2, #8
 800105c:	701a      	strb	r2, [r3, #0]
			cmdParserStatus = INIT_UART;
 800105e:	4b06      	ldr	r3, [pc, #24]	; (8001078 <cmd_parser_fsm+0xbc>)
 8001060:	2200      	movs	r2, #0
 8001062:	701a      	strb	r2, [r3, #0]
			break;
 8001064:	e006      	b.n	8001074 <cmd_parser_fsm+0xb8>
			break;
 8001066:	bf00      	nop
 8001068:	e004      	b.n	8001074 <cmd_parser_fsm+0xb8>
			break;
 800106a:	bf00      	nop
 800106c:	e002      	b.n	8001074 <cmd_parser_fsm+0xb8>
			break;
 800106e:	bf00      	nop
 8001070:	e000      	b.n	8001074 <cmd_parser_fsm+0xb8>
			else return;
 8001072:	bf00      	nop
	}
}
 8001074:	bd80      	pop	{r7, pc}
 8001076:	bf00      	nop
 8001078:	20000544 	.word	0x20000544
 800107c:	2000050c 	.word	0x2000050c
 8001080:	2000054b 	.word	0x2000054b
 8001084:	20000548 	.word	0x20000548
 8001088:	2000054c 	.word	0x2000054c

0800108c <uart_control_fsm>:
//	}
//}

//User timer to synchronize
void uart_control_fsm()
{
 800108c:	b580      	push	{r7, lr}
 800108e:	af00      	add	r7, sp, #0
	switch (cmd_flag){
 8001090:	4b28      	ldr	r3, [pc, #160]	; (8001134 <uart_control_fsm+0xa8>)
 8001092:	781b      	ldrb	r3, [r3, #0]
 8001094:	2b0a      	cmp	r3, #10
 8001096:	d847      	bhi.n	8001128 <uart_control_fsm+0x9c>
 8001098:	a201      	add	r2, pc, #4	; (adr r2, 80010a0 <uart_control_fsm+0x14>)
 800109a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800109e:	bf00      	nop
 80010a0:	080010cd 	.word	0x080010cd
 80010a4:	08001129 	.word	0x08001129
 80010a8:	08001129 	.word	0x08001129
 80010ac:	08001129 	.word	0x08001129
 80010b0:	08001129 	.word	0x08001129
 80010b4:	08001129 	.word	0x08001129
 80010b8:	08001129 	.word	0x08001129
 80010bc:	08001121 	.word	0x08001121
 80010c0:	080010f9 	.word	0x080010f9
 80010c4:	080010db 	.word	0x080010db
 80010c8:	0800110d 	.word	0x0800110d
		case INIT_UART:
			cmd_flag = AUTO;
 80010cc:	4b19      	ldr	r3, [pc, #100]	; (8001134 <uart_control_fsm+0xa8>)
 80010ce:	2209      	movs	r2, #9
 80010d0:	701a      	strb	r2, [r3, #0]
			setTimer2(1);
 80010d2:	2001      	movs	r0, #1
 80010d4:	f7ff fce2 	bl	8000a9c <setTimer2>
			break;
 80010d8:	e029      	b.n	800112e <uart_control_fsm+0xa2>
		case AUTO:
			if (timer2_flag == 1){
 80010da:	4b17      	ldr	r3, [pc, #92]	; (8001138 <uart_control_fsm+0xac>)
 80010dc:	681b      	ldr	r3, [r3, #0]
 80010de:	2b01      	cmp	r3, #1
 80010e0:	d107      	bne.n	80010f2 <uart_control_fsm+0x66>
				turnLedOn();
 80010e2:	f7ff fad3 	bl	800068c <turnLedOn>
				dht20_output();
 80010e6:	f7ff f943 	bl	8000370 <dht20_output>
				setTimer2(1000);
 80010ea:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80010ee:	f7ff fcd5 	bl	8000a9c <setTimer2>
			}
			turnLedOff();
 80010f2:	f7ff fad7 	bl	80006a4 <turnLedOff>
			break;
 80010f6:	e01a      	b.n	800112e <uart_control_fsm+0xa2>
		case isCAP:
			setTimer3(1000);
 80010f8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80010fc:	f7ff fce2 	bl	8000ac4 <setTimer3>
			cmd_flag = WAIT;
 8001100:	4b0c      	ldr	r3, [pc, #48]	; (8001134 <uart_control_fsm+0xa8>)
 8001102:	220a      	movs	r2, #10
 8001104:	701a      	strb	r2, [r3, #0]
			turnLedOn();
 8001106:	f7ff fac1 	bl	800068c <turnLedOn>
			break;
 800110a:	e010      	b.n	800112e <uart_control_fsm+0xa2>
		case WAIT:
			turnLedOn();
 800110c:	f7ff fabe 	bl	800068c <turnLedOn>
			if (timer3_flag == 1) cmd_flag = INIT_UART;
 8001110:	4b0a      	ldr	r3, [pc, #40]	; (800113c <uart_control_fsm+0xb0>)
 8001112:	681b      	ldr	r3, [r3, #0]
 8001114:	2b01      	cmp	r3, #1
 8001116:	d109      	bne.n	800112c <uart_control_fsm+0xa0>
 8001118:	4b06      	ldr	r3, [pc, #24]	; (8001134 <uart_control_fsm+0xa8>)
 800111a:	2200      	movs	r2, #0
 800111c:	701a      	strb	r2, [r3, #0]
			break;
 800111e:	e005      	b.n	800112c <uart_control_fsm+0xa0>
		case isRST:
			cmd_flag = INIT_UART;
 8001120:	4b04      	ldr	r3, [pc, #16]	; (8001134 <uart_control_fsm+0xa8>)
 8001122:	2200      	movs	r2, #0
 8001124:	701a      	strb	r2, [r3, #0]
			break;
 8001126:	e002      	b.n	800112e <uart_control_fsm+0xa2>
		default:
			break;
 8001128:	bf00      	nop
 800112a:	e000      	b.n	800112e <uart_control_fsm+0xa2>
			break;
 800112c:	bf00      	nop
	}
}
 800112e:	bf00      	nop
 8001130:	bd80      	pop	{r7, pc}
 8001132:	bf00      	nop
 8001134:	2000054c 	.word	0x2000054c
 8001138:	200004c4 	.word	0x200004c4
 800113c:	200004cc 	.word	0x200004cc

08001140 <Scan_Addr>:

void Scan_Addr() {
 8001140:	b5b0      	push	{r4, r5, r7, lr}
 8001142:	b098      	sub	sp, #96	; 0x60
 8001144:	af00      	add	r7, sp, #0
    char info[] = "\r\n\r\nScanning I2C bus...\r\n";
 8001146:	4b38      	ldr	r3, [pc, #224]	; (8001228 <Scan_Addr+0xe8>)
 8001148:	f107 0440 	add.w	r4, r7, #64	; 0x40
 800114c:	461d      	mov	r5, r3
 800114e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001150:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001152:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001156:	c403      	stmia	r4!, {r0, r1}
 8001158:	8022      	strh	r2, [r4, #0]
    HAL_UART_Transmit(&huart2, (uint8_t*)info, strlen(info), HAL_MAX_DELAY);
 800115a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800115e:	4618      	mov	r0, r3
 8001160:	f7fe fff4 	bl	800014c <strlen>
 8001164:	4603      	mov	r3, r0
 8001166:	b29a      	uxth	r2, r3
 8001168:	f107 0140 	add.w	r1, r7, #64	; 0x40
 800116c:	f04f 33ff 	mov.w	r3, #4294967295
 8001170:	482e      	ldr	r0, [pc, #184]	; (800122c <Scan_Addr+0xec>)
 8001172:	f002 fdc8 	bl	8003d06 <HAL_UART_Transmit>

    HAL_StatusTypeDef res;
    uint8_t device_counter = 0;
 8001176:	2300      	movs	r3, #0
 8001178:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
    for(uint16_t i = 0; i < 128; i++) {
 800117c:	2300      	movs	r3, #0
 800117e:	f8a7 305c 	strh.w	r3, [r7, #92]	; 0x5c
 8001182:	e034      	b.n	80011ee <Scan_Addr+0xae>
        res = HAL_I2C_IsDeviceReady(&hi2c1, i << 1, 1, 10);
 8001184:	f8b7 305c 	ldrh.w	r3, [r7, #92]	; 0x5c
 8001188:	005b      	lsls	r3, r3, #1
 800118a:	b299      	uxth	r1, r3
 800118c:	230a      	movs	r3, #10
 800118e:	2201      	movs	r2, #1
 8001190:	4827      	ldr	r0, [pc, #156]	; (8001230 <Scan_Addr+0xf0>)
 8001192:	f001 f8fd 	bl	8002390 <HAL_I2C_IsDeviceReady>
 8001196:	4603      	mov	r3, r0
 8001198:	f887 305b 	strb.w	r3, [r7, #91]	; 0x5b
        if(res == HAL_OK) {
 800119c:	f897 305b 	ldrb.w	r3, [r7, #91]	; 0x5b
 80011a0:	2b00      	cmp	r3, #0
 80011a2:	d118      	bne.n	80011d6 <Scan_Addr+0x96>
        	device_counter += 1;
 80011a4:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 80011a8:	3301      	adds	r3, #1
 80011aa:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
            char msg[64];
            snprintf(msg, sizeof(msg), "0x%02X", i);
 80011ae:	f8b7 305c 	ldrh.w	r3, [r7, #92]	; 0x5c
 80011b2:	4638      	mov	r0, r7
 80011b4:	4a1f      	ldr	r2, [pc, #124]	; (8001234 <Scan_Addr+0xf4>)
 80011b6:	2140      	movs	r1, #64	; 0x40
 80011b8:	f003 fac2 	bl	8004740 <sniprintf>
            HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 80011bc:	463b      	mov	r3, r7
 80011be:	4618      	mov	r0, r3
 80011c0:	f7fe ffc4 	bl	800014c <strlen>
 80011c4:	4603      	mov	r3, r0
 80011c6:	b29a      	uxth	r2, r3
 80011c8:	4639      	mov	r1, r7
 80011ca:	f04f 33ff 	mov.w	r3, #4294967295
 80011ce:	4817      	ldr	r0, [pc, #92]	; (800122c <Scan_Addr+0xec>)
 80011d0:	f002 fd99 	bl	8003d06 <HAL_UART_Transmit>
 80011d4:	e006      	b.n	80011e4 <Scan_Addr+0xa4>
        }
        else {
            HAL_UART_Transmit(&huart2, (uint8_t*)".", 1, HAL_MAX_DELAY);
 80011d6:	f04f 33ff 	mov.w	r3, #4294967295
 80011da:	2201      	movs	r2, #1
 80011dc:	4916      	ldr	r1, [pc, #88]	; (8001238 <Scan_Addr+0xf8>)
 80011de:	4813      	ldr	r0, [pc, #76]	; (800122c <Scan_Addr+0xec>)
 80011e0:	f002 fd91 	bl	8003d06 <HAL_UART_Transmit>
    for(uint16_t i = 0; i < 128; i++) {
 80011e4:	f8b7 305c 	ldrh.w	r3, [r7, #92]	; 0x5c
 80011e8:	3301      	adds	r3, #1
 80011ea:	f8a7 305c 	strh.w	r3, [r7, #92]	; 0x5c
 80011ee:	f8b7 305c 	ldrh.w	r3, [r7, #92]	; 0x5c
 80011f2:	2b7f      	cmp	r3, #127	; 0x7f
 80011f4:	d9c6      	bls.n	8001184 <Scan_Addr+0x44>
        }
    }

    if (device_counter == 0){
 80011f6:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	d110      	bne.n	8001220 <Scan_Addr+0xe0>
    	char msg[64];
    	sprintf(msg, "!ERROR:Sensor Not Found...#");
 80011fe:	463b      	mov	r3, r7
 8001200:	490e      	ldr	r1, [pc, #56]	; (800123c <Scan_Addr+0xfc>)
 8001202:	4618      	mov	r0, r3
 8001204:	f003 fad0 	bl	80047a8 <siprintf>
    	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8001208:	463b      	mov	r3, r7
 800120a:	4618      	mov	r0, r3
 800120c:	f7fe ff9e 	bl	800014c <strlen>
 8001210:	4603      	mov	r3, r0
 8001212:	b29a      	uxth	r2, r3
 8001214:	4639      	mov	r1, r7
 8001216:	f04f 33ff 	mov.w	r3, #4294967295
 800121a:	4804      	ldr	r0, [pc, #16]	; (800122c <Scan_Addr+0xec>)
 800121c:	f002 fd73 	bl	8003d06 <HAL_UART_Transmit>
    }
}
 8001220:	bf00      	nop
 8001222:	3760      	adds	r7, #96	; 0x60
 8001224:	46bd      	mov	sp, r7
 8001226:	bdb0      	pop	{r4, r5, r7, pc}
 8001228:	0800514c 	.word	0x0800514c
 800122c:	20000154 	.word	0x20000154
 8001230:	200000b8 	.word	0x200000b8
 8001234:	08005124 	.word	0x08005124
 8001238:	0800512c 	.word	0x0800512c
 800123c:	08005130 	.word	0x08005130

08001240 <Reset_Handler>:
 8001240:	480c      	ldr	r0, [pc, #48]	; (8001274 <LoopFillZerobss+0x12>)
 8001242:	490d      	ldr	r1, [pc, #52]	; (8001278 <LoopFillZerobss+0x16>)
 8001244:	4a0d      	ldr	r2, [pc, #52]	; (800127c <LoopFillZerobss+0x1a>)
 8001246:	2300      	movs	r3, #0
 8001248:	e002      	b.n	8001250 <LoopCopyDataInit>

0800124a <CopyDataInit>:
 800124a:	58d4      	ldr	r4, [r2, r3]
 800124c:	50c4      	str	r4, [r0, r3]
 800124e:	3304      	adds	r3, #4

08001250 <LoopCopyDataInit>:
 8001250:	18c4      	adds	r4, r0, r3
 8001252:	428c      	cmp	r4, r1
 8001254:	d3f9      	bcc.n	800124a <CopyDataInit>
 8001256:	4a0a      	ldr	r2, [pc, #40]	; (8001280 <LoopFillZerobss+0x1e>)
 8001258:	4c0a      	ldr	r4, [pc, #40]	; (8001284 <LoopFillZerobss+0x22>)
 800125a:	2300      	movs	r3, #0
 800125c:	e001      	b.n	8001262 <LoopFillZerobss>

0800125e <FillZerobss>:
 800125e:	6013      	str	r3, [r2, #0]
 8001260:	3204      	adds	r2, #4

08001262 <LoopFillZerobss>:
 8001262:	42a2      	cmp	r2, r4
 8001264:	d3fb      	bcc.n	800125e <FillZerobss>
 8001266:	f7ff fe79 	bl	8000f5c <SystemInit>
 800126a:	f003 fa3d 	bl	80046e8 <__libc_init_array>
 800126e:	f7ff fa61 	bl	8000734 <main>
 8001272:	4770      	bx	lr
 8001274:	20000000 	.word	0x20000000
 8001278:	20000070 	.word	0x20000070
 800127c:	080051cc 	.word	0x080051cc
 8001280:	20000070 	.word	0x20000070
 8001284:	20000564 	.word	0x20000564

08001288 <ADC1_2_IRQHandler>:
 8001288:	e7fe      	b.n	8001288 <ADC1_2_IRQHandler>
	...

0800128c <HAL_Init>:
 800128c:	b580      	push	{r7, lr}
 800128e:	af00      	add	r7, sp, #0
 8001290:	4b08      	ldr	r3, [pc, #32]	; (80012b4 <HAL_Init+0x28>)
 8001292:	681b      	ldr	r3, [r3, #0]
 8001294:	4a07      	ldr	r2, [pc, #28]	; (80012b4 <HAL_Init+0x28>)
 8001296:	f043 0310 	orr.w	r3, r3, #16
 800129a:	6013      	str	r3, [r2, #0]
 800129c:	2003      	movs	r0, #3
 800129e:	f000 f947 	bl	8001530 <HAL_NVIC_SetPriorityGrouping>
 80012a2:	200f      	movs	r0, #15
 80012a4:	f000 f808 	bl	80012b8 <HAL_InitTick>
 80012a8:	f7ff fcee 	bl	8000c88 <HAL_MspInit>
 80012ac:	2300      	movs	r3, #0
 80012ae:	4618      	mov	r0, r3
 80012b0:	bd80      	pop	{r7, pc}
 80012b2:	bf00      	nop
 80012b4:	40022000 	.word	0x40022000

080012b8 <HAL_InitTick>:
 80012b8:	b580      	push	{r7, lr}
 80012ba:	b082      	sub	sp, #8
 80012bc:	af00      	add	r7, sp, #0
 80012be:	6078      	str	r0, [r7, #4]
 80012c0:	4b12      	ldr	r3, [pc, #72]	; (800130c <HAL_InitTick+0x54>)
 80012c2:	681a      	ldr	r2, [r3, #0]
 80012c4:	4b12      	ldr	r3, [pc, #72]	; (8001310 <HAL_InitTick+0x58>)
 80012c6:	781b      	ldrb	r3, [r3, #0]
 80012c8:	4619      	mov	r1, r3
 80012ca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80012ce:	fbb3 f3f1 	udiv	r3, r3, r1
 80012d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80012d6:	4618      	mov	r0, r3
 80012d8:	f000 f95f 	bl	800159a <HAL_SYSTICK_Config>
 80012dc:	4603      	mov	r3, r0
 80012de:	2b00      	cmp	r3, #0
 80012e0:	d001      	beq.n	80012e6 <HAL_InitTick+0x2e>
 80012e2:	2301      	movs	r3, #1
 80012e4:	e00e      	b.n	8001304 <HAL_InitTick+0x4c>
 80012e6:	687b      	ldr	r3, [r7, #4]
 80012e8:	2b0f      	cmp	r3, #15
 80012ea:	d80a      	bhi.n	8001302 <HAL_InitTick+0x4a>
 80012ec:	2200      	movs	r2, #0
 80012ee:	6879      	ldr	r1, [r7, #4]
 80012f0:	f04f 30ff 	mov.w	r0, #4294967295
 80012f4:	f000 f927 	bl	8001546 <HAL_NVIC_SetPriority>
 80012f8:	4a06      	ldr	r2, [pc, #24]	; (8001314 <HAL_InitTick+0x5c>)
 80012fa:	687b      	ldr	r3, [r7, #4]
 80012fc:	6013      	str	r3, [r2, #0]
 80012fe:	2300      	movs	r3, #0
 8001300:	e000      	b.n	8001304 <HAL_InitTick+0x4c>
 8001302:	2301      	movs	r3, #1
 8001304:	4618      	mov	r0, r3
 8001306:	3708      	adds	r7, #8
 8001308:	46bd      	mov	sp, r7
 800130a:	bd80      	pop	{r7, pc}
 800130c:	20000000 	.word	0x20000000
 8001310:	20000008 	.word	0x20000008
 8001314:	20000004 	.word	0x20000004

08001318 <HAL_IncTick>:
 8001318:	b480      	push	{r7}
 800131a:	af00      	add	r7, sp, #0
 800131c:	4b05      	ldr	r3, [pc, #20]	; (8001334 <HAL_IncTick+0x1c>)
 800131e:	781b      	ldrb	r3, [r3, #0]
 8001320:	461a      	mov	r2, r3
 8001322:	4b05      	ldr	r3, [pc, #20]	; (8001338 <HAL_IncTick+0x20>)
 8001324:	681b      	ldr	r3, [r3, #0]
 8001326:	4413      	add	r3, r2
 8001328:	4a03      	ldr	r2, [pc, #12]	; (8001338 <HAL_IncTick+0x20>)
 800132a:	6013      	str	r3, [r2, #0]
 800132c:	bf00      	nop
 800132e:	46bd      	mov	sp, r7
 8001330:	bc80      	pop	{r7}
 8001332:	4770      	bx	lr
 8001334:	20000008 	.word	0x20000008
 8001338:	20000550 	.word	0x20000550

0800133c <HAL_GetTick>:
 800133c:	b480      	push	{r7}
 800133e:	af00      	add	r7, sp, #0
 8001340:	4b02      	ldr	r3, [pc, #8]	; (800134c <HAL_GetTick+0x10>)
 8001342:	681b      	ldr	r3, [r3, #0]
 8001344:	4618      	mov	r0, r3
 8001346:	46bd      	mov	sp, r7
 8001348:	bc80      	pop	{r7}
 800134a:	4770      	bx	lr
 800134c:	20000550 	.word	0x20000550

08001350 <HAL_Delay>:
 8001350:	b580      	push	{r7, lr}
 8001352:	b084      	sub	sp, #16
 8001354:	af00      	add	r7, sp, #0
 8001356:	6078      	str	r0, [r7, #4]
 8001358:	f7ff fff0 	bl	800133c <HAL_GetTick>
 800135c:	60b8      	str	r0, [r7, #8]
 800135e:	687b      	ldr	r3, [r7, #4]
 8001360:	60fb      	str	r3, [r7, #12]
 8001362:	68fb      	ldr	r3, [r7, #12]
 8001364:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001368:	d005      	beq.n	8001376 <HAL_Delay+0x26>
 800136a:	4b0a      	ldr	r3, [pc, #40]	; (8001394 <HAL_Delay+0x44>)
 800136c:	781b      	ldrb	r3, [r3, #0]
 800136e:	461a      	mov	r2, r3
 8001370:	68fb      	ldr	r3, [r7, #12]
 8001372:	4413      	add	r3, r2
 8001374:	60fb      	str	r3, [r7, #12]
 8001376:	bf00      	nop
 8001378:	f7ff ffe0 	bl	800133c <HAL_GetTick>
 800137c:	4602      	mov	r2, r0
 800137e:	68bb      	ldr	r3, [r7, #8]
 8001380:	1ad3      	subs	r3, r2, r3
 8001382:	68fa      	ldr	r2, [r7, #12]
 8001384:	429a      	cmp	r2, r3
 8001386:	d8f7      	bhi.n	8001378 <HAL_Delay+0x28>
 8001388:	bf00      	nop
 800138a:	bf00      	nop
 800138c:	3710      	adds	r7, #16
 800138e:	46bd      	mov	sp, r7
 8001390:	bd80      	pop	{r7, pc}
 8001392:	bf00      	nop
 8001394:	20000008 	.word	0x20000008

08001398 <__NVIC_SetPriorityGrouping>:
 8001398:	b480      	push	{r7}
 800139a:	b085      	sub	sp, #20
 800139c:	af00      	add	r7, sp, #0
 800139e:	6078      	str	r0, [r7, #4]
 80013a0:	687b      	ldr	r3, [r7, #4]
 80013a2:	f003 0307 	and.w	r3, r3, #7
 80013a6:	60fb      	str	r3, [r7, #12]
 80013a8:	4b0c      	ldr	r3, [pc, #48]	; (80013dc <__NVIC_SetPriorityGrouping+0x44>)
 80013aa:	68db      	ldr	r3, [r3, #12]
 80013ac:	60bb      	str	r3, [r7, #8]
 80013ae:	68ba      	ldr	r2, [r7, #8]
 80013b0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80013b4:	4013      	ands	r3, r2
 80013b6:	60bb      	str	r3, [r7, #8]
 80013b8:	68fb      	ldr	r3, [r7, #12]
 80013ba:	021a      	lsls	r2, r3, #8
 80013bc:	68bb      	ldr	r3, [r7, #8]
 80013be:	4313      	orrs	r3, r2
 80013c0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80013c4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80013c8:	60bb      	str	r3, [r7, #8]
 80013ca:	4a04      	ldr	r2, [pc, #16]	; (80013dc <__NVIC_SetPriorityGrouping+0x44>)
 80013cc:	68bb      	ldr	r3, [r7, #8]
 80013ce:	60d3      	str	r3, [r2, #12]
 80013d0:	bf00      	nop
 80013d2:	3714      	adds	r7, #20
 80013d4:	46bd      	mov	sp, r7
 80013d6:	bc80      	pop	{r7}
 80013d8:	4770      	bx	lr
 80013da:	bf00      	nop
 80013dc:	e000ed00 	.word	0xe000ed00

080013e0 <__NVIC_GetPriorityGrouping>:
 80013e0:	b480      	push	{r7}
 80013e2:	af00      	add	r7, sp, #0
 80013e4:	4b04      	ldr	r3, [pc, #16]	; (80013f8 <__NVIC_GetPriorityGrouping+0x18>)
 80013e6:	68db      	ldr	r3, [r3, #12]
 80013e8:	0a1b      	lsrs	r3, r3, #8
 80013ea:	f003 0307 	and.w	r3, r3, #7
 80013ee:	4618      	mov	r0, r3
 80013f0:	46bd      	mov	sp, r7
 80013f2:	bc80      	pop	{r7}
 80013f4:	4770      	bx	lr
 80013f6:	bf00      	nop
 80013f8:	e000ed00 	.word	0xe000ed00

080013fc <__NVIC_EnableIRQ>:
 80013fc:	b480      	push	{r7}
 80013fe:	b083      	sub	sp, #12
 8001400:	af00      	add	r7, sp, #0
 8001402:	4603      	mov	r3, r0
 8001404:	71fb      	strb	r3, [r7, #7]
 8001406:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800140a:	2b00      	cmp	r3, #0
 800140c:	db0b      	blt.n	8001426 <__NVIC_EnableIRQ+0x2a>
 800140e:	79fb      	ldrb	r3, [r7, #7]
 8001410:	f003 021f 	and.w	r2, r3, #31
 8001414:	4906      	ldr	r1, [pc, #24]	; (8001430 <__NVIC_EnableIRQ+0x34>)
 8001416:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800141a:	095b      	lsrs	r3, r3, #5
 800141c:	2001      	movs	r0, #1
 800141e:	fa00 f202 	lsl.w	r2, r0, r2
 8001422:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001426:	bf00      	nop
 8001428:	370c      	adds	r7, #12
 800142a:	46bd      	mov	sp, r7
 800142c:	bc80      	pop	{r7}
 800142e:	4770      	bx	lr
 8001430:	e000e100 	.word	0xe000e100

08001434 <__NVIC_SetPriority>:
 8001434:	b480      	push	{r7}
 8001436:	b083      	sub	sp, #12
 8001438:	af00      	add	r7, sp, #0
 800143a:	4603      	mov	r3, r0
 800143c:	6039      	str	r1, [r7, #0]
 800143e:	71fb      	strb	r3, [r7, #7]
 8001440:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001444:	2b00      	cmp	r3, #0
 8001446:	db0a      	blt.n	800145e <__NVIC_SetPriority+0x2a>
 8001448:	683b      	ldr	r3, [r7, #0]
 800144a:	b2da      	uxtb	r2, r3
 800144c:	490c      	ldr	r1, [pc, #48]	; (8001480 <__NVIC_SetPriority+0x4c>)
 800144e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001452:	0112      	lsls	r2, r2, #4
 8001454:	b2d2      	uxtb	r2, r2
 8001456:	440b      	add	r3, r1
 8001458:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800145c:	e00a      	b.n	8001474 <__NVIC_SetPriority+0x40>
 800145e:	683b      	ldr	r3, [r7, #0]
 8001460:	b2da      	uxtb	r2, r3
 8001462:	4908      	ldr	r1, [pc, #32]	; (8001484 <__NVIC_SetPriority+0x50>)
 8001464:	79fb      	ldrb	r3, [r7, #7]
 8001466:	f003 030f 	and.w	r3, r3, #15
 800146a:	3b04      	subs	r3, #4
 800146c:	0112      	lsls	r2, r2, #4
 800146e:	b2d2      	uxtb	r2, r2
 8001470:	440b      	add	r3, r1
 8001472:	761a      	strb	r2, [r3, #24]
 8001474:	bf00      	nop
 8001476:	370c      	adds	r7, #12
 8001478:	46bd      	mov	sp, r7
 800147a:	bc80      	pop	{r7}
 800147c:	4770      	bx	lr
 800147e:	bf00      	nop
 8001480:	e000e100 	.word	0xe000e100
 8001484:	e000ed00 	.word	0xe000ed00

08001488 <NVIC_EncodePriority>:
 8001488:	b480      	push	{r7}
 800148a:	b089      	sub	sp, #36	; 0x24
 800148c:	af00      	add	r7, sp, #0
 800148e:	60f8      	str	r0, [r7, #12]
 8001490:	60b9      	str	r1, [r7, #8]
 8001492:	607a      	str	r2, [r7, #4]
 8001494:	68fb      	ldr	r3, [r7, #12]
 8001496:	f003 0307 	and.w	r3, r3, #7
 800149a:	61fb      	str	r3, [r7, #28]
 800149c:	69fb      	ldr	r3, [r7, #28]
 800149e:	f1c3 0307 	rsb	r3, r3, #7
 80014a2:	2b04      	cmp	r3, #4
 80014a4:	bf28      	it	cs
 80014a6:	2304      	movcs	r3, #4
 80014a8:	61bb      	str	r3, [r7, #24]
 80014aa:	69fb      	ldr	r3, [r7, #28]
 80014ac:	3304      	adds	r3, #4
 80014ae:	2b06      	cmp	r3, #6
 80014b0:	d902      	bls.n	80014b8 <NVIC_EncodePriority+0x30>
 80014b2:	69fb      	ldr	r3, [r7, #28]
 80014b4:	3b03      	subs	r3, #3
 80014b6:	e000      	b.n	80014ba <NVIC_EncodePriority+0x32>
 80014b8:	2300      	movs	r3, #0
 80014ba:	617b      	str	r3, [r7, #20]
 80014bc:	f04f 32ff 	mov.w	r2, #4294967295
 80014c0:	69bb      	ldr	r3, [r7, #24]
 80014c2:	fa02 f303 	lsl.w	r3, r2, r3
 80014c6:	43da      	mvns	r2, r3
 80014c8:	68bb      	ldr	r3, [r7, #8]
 80014ca:	401a      	ands	r2, r3
 80014cc:	697b      	ldr	r3, [r7, #20]
 80014ce:	409a      	lsls	r2, r3
 80014d0:	f04f 31ff 	mov.w	r1, #4294967295
 80014d4:	697b      	ldr	r3, [r7, #20]
 80014d6:	fa01 f303 	lsl.w	r3, r1, r3
 80014da:	43d9      	mvns	r1, r3
 80014dc:	687b      	ldr	r3, [r7, #4]
 80014de:	400b      	ands	r3, r1
 80014e0:	4313      	orrs	r3, r2
 80014e2:	4618      	mov	r0, r3
 80014e4:	3724      	adds	r7, #36	; 0x24
 80014e6:	46bd      	mov	sp, r7
 80014e8:	bc80      	pop	{r7}
 80014ea:	4770      	bx	lr

080014ec <SysTick_Config>:
 80014ec:	b580      	push	{r7, lr}
 80014ee:	b082      	sub	sp, #8
 80014f0:	af00      	add	r7, sp, #0
 80014f2:	6078      	str	r0, [r7, #4]
 80014f4:	687b      	ldr	r3, [r7, #4]
 80014f6:	3b01      	subs	r3, #1
 80014f8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80014fc:	d301      	bcc.n	8001502 <SysTick_Config+0x16>
 80014fe:	2301      	movs	r3, #1
 8001500:	e00f      	b.n	8001522 <SysTick_Config+0x36>
 8001502:	4a0a      	ldr	r2, [pc, #40]	; (800152c <SysTick_Config+0x40>)
 8001504:	687b      	ldr	r3, [r7, #4]
 8001506:	3b01      	subs	r3, #1
 8001508:	6053      	str	r3, [r2, #4]
 800150a:	210f      	movs	r1, #15
 800150c:	f04f 30ff 	mov.w	r0, #4294967295
 8001510:	f7ff ff90 	bl	8001434 <__NVIC_SetPriority>
 8001514:	4b05      	ldr	r3, [pc, #20]	; (800152c <SysTick_Config+0x40>)
 8001516:	2200      	movs	r2, #0
 8001518:	609a      	str	r2, [r3, #8]
 800151a:	4b04      	ldr	r3, [pc, #16]	; (800152c <SysTick_Config+0x40>)
 800151c:	2207      	movs	r2, #7
 800151e:	601a      	str	r2, [r3, #0]
 8001520:	2300      	movs	r3, #0
 8001522:	4618      	mov	r0, r3
 8001524:	3708      	adds	r7, #8
 8001526:	46bd      	mov	sp, r7
 8001528:	bd80      	pop	{r7, pc}
 800152a:	bf00      	nop
 800152c:	e000e010 	.word	0xe000e010

08001530 <HAL_NVIC_SetPriorityGrouping>:
 8001530:	b580      	push	{r7, lr}
 8001532:	b082      	sub	sp, #8
 8001534:	af00      	add	r7, sp, #0
 8001536:	6078      	str	r0, [r7, #4]
 8001538:	6878      	ldr	r0, [r7, #4]
 800153a:	f7ff ff2d 	bl	8001398 <__NVIC_SetPriorityGrouping>
 800153e:	bf00      	nop
 8001540:	3708      	adds	r7, #8
 8001542:	46bd      	mov	sp, r7
 8001544:	bd80      	pop	{r7, pc}

08001546 <HAL_NVIC_SetPriority>:
 8001546:	b580      	push	{r7, lr}
 8001548:	b086      	sub	sp, #24
 800154a:	af00      	add	r7, sp, #0
 800154c:	4603      	mov	r3, r0
 800154e:	60b9      	str	r1, [r7, #8]
 8001550:	607a      	str	r2, [r7, #4]
 8001552:	73fb      	strb	r3, [r7, #15]
 8001554:	2300      	movs	r3, #0
 8001556:	617b      	str	r3, [r7, #20]
 8001558:	f7ff ff42 	bl	80013e0 <__NVIC_GetPriorityGrouping>
 800155c:	6178      	str	r0, [r7, #20]
 800155e:	687a      	ldr	r2, [r7, #4]
 8001560:	68b9      	ldr	r1, [r7, #8]
 8001562:	6978      	ldr	r0, [r7, #20]
 8001564:	f7ff ff90 	bl	8001488 <NVIC_EncodePriority>
 8001568:	4602      	mov	r2, r0
 800156a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800156e:	4611      	mov	r1, r2
 8001570:	4618      	mov	r0, r3
 8001572:	f7ff ff5f 	bl	8001434 <__NVIC_SetPriority>
 8001576:	bf00      	nop
 8001578:	3718      	adds	r7, #24
 800157a:	46bd      	mov	sp, r7
 800157c:	bd80      	pop	{r7, pc}

0800157e <HAL_NVIC_EnableIRQ>:
 800157e:	b580      	push	{r7, lr}
 8001580:	b082      	sub	sp, #8
 8001582:	af00      	add	r7, sp, #0
 8001584:	4603      	mov	r3, r0
 8001586:	71fb      	strb	r3, [r7, #7]
 8001588:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800158c:	4618      	mov	r0, r3
 800158e:	f7ff ff35 	bl	80013fc <__NVIC_EnableIRQ>
 8001592:	bf00      	nop
 8001594:	3708      	adds	r7, #8
 8001596:	46bd      	mov	sp, r7
 8001598:	bd80      	pop	{r7, pc}

0800159a <HAL_SYSTICK_Config>:
 800159a:	b580      	push	{r7, lr}
 800159c:	b082      	sub	sp, #8
 800159e:	af00      	add	r7, sp, #0
 80015a0:	6078      	str	r0, [r7, #4]
 80015a2:	6878      	ldr	r0, [r7, #4]
 80015a4:	f7ff ffa2 	bl	80014ec <SysTick_Config>
 80015a8:	4603      	mov	r3, r0
 80015aa:	4618      	mov	r0, r3
 80015ac:	3708      	adds	r7, #8
 80015ae:	46bd      	mov	sp, r7
 80015b0:	bd80      	pop	{r7, pc}

080015b2 <HAL_DMA_Abort>:
 80015b2:	b480      	push	{r7}
 80015b4:	b085      	sub	sp, #20
 80015b6:	af00      	add	r7, sp, #0
 80015b8:	6078      	str	r0, [r7, #4]
 80015ba:	2300      	movs	r3, #0
 80015bc:	73fb      	strb	r3, [r7, #15]
 80015be:	687b      	ldr	r3, [r7, #4]
 80015c0:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80015c4:	2b02      	cmp	r3, #2
 80015c6:	d008      	beq.n	80015da <HAL_DMA_Abort+0x28>
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	2204      	movs	r2, #4
 80015cc:	639a      	str	r2, [r3, #56]	; 0x38
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	2200      	movs	r2, #0
 80015d2:	f883 2020 	strb.w	r2, [r3, #32]
 80015d6:	2301      	movs	r3, #1
 80015d8:	e020      	b.n	800161c <HAL_DMA_Abort+0x6a>
 80015da:	687b      	ldr	r3, [r7, #4]
 80015dc:	681b      	ldr	r3, [r3, #0]
 80015de:	681a      	ldr	r2, [r3, #0]
 80015e0:	687b      	ldr	r3, [r7, #4]
 80015e2:	681b      	ldr	r3, [r3, #0]
 80015e4:	f022 020e 	bic.w	r2, r2, #14
 80015e8:	601a      	str	r2, [r3, #0]
 80015ea:	687b      	ldr	r3, [r7, #4]
 80015ec:	681b      	ldr	r3, [r3, #0]
 80015ee:	681a      	ldr	r2, [r3, #0]
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	f022 0201 	bic.w	r2, r2, #1
 80015f8:	601a      	str	r2, [r3, #0]
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80015fe:	687b      	ldr	r3, [r7, #4]
 8001600:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001602:	2101      	movs	r1, #1
 8001604:	fa01 f202 	lsl.w	r2, r1, r2
 8001608:	605a      	str	r2, [r3, #4]
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	2201      	movs	r2, #1
 800160e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	2200      	movs	r2, #0
 8001616:	f883 2020 	strb.w	r2, [r3, #32]
 800161a:	7bfb      	ldrb	r3, [r7, #15]
 800161c:	4618      	mov	r0, r3
 800161e:	3714      	adds	r7, #20
 8001620:	46bd      	mov	sp, r7
 8001622:	bc80      	pop	{r7}
 8001624:	4770      	bx	lr
	...

08001628 <HAL_DMA_Abort_IT>:
 8001628:	b580      	push	{r7, lr}
 800162a:	b084      	sub	sp, #16
 800162c:	af00      	add	r7, sp, #0
 800162e:	6078      	str	r0, [r7, #4]
 8001630:	2300      	movs	r3, #0
 8001632:	73fb      	strb	r3, [r7, #15]
 8001634:	687b      	ldr	r3, [r7, #4]
 8001636:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800163a:	2b02      	cmp	r3, #2
 800163c:	d005      	beq.n	800164a <HAL_DMA_Abort_IT+0x22>
 800163e:	687b      	ldr	r3, [r7, #4]
 8001640:	2204      	movs	r2, #4
 8001642:	639a      	str	r2, [r3, #56]	; 0x38
 8001644:	2301      	movs	r3, #1
 8001646:	73fb      	strb	r3, [r7, #15]
 8001648:	e051      	b.n	80016ee <HAL_DMA_Abort_IT+0xc6>
 800164a:	687b      	ldr	r3, [r7, #4]
 800164c:	681b      	ldr	r3, [r3, #0]
 800164e:	681a      	ldr	r2, [r3, #0]
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	681b      	ldr	r3, [r3, #0]
 8001654:	f022 020e 	bic.w	r2, r2, #14
 8001658:	601a      	str	r2, [r3, #0]
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	681b      	ldr	r3, [r3, #0]
 800165e:	681a      	ldr	r2, [r3, #0]
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	681b      	ldr	r3, [r3, #0]
 8001664:	f022 0201 	bic.w	r2, r2, #1
 8001668:	601a      	str	r2, [r3, #0]
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	681b      	ldr	r3, [r3, #0]
 800166e:	4a22      	ldr	r2, [pc, #136]	; (80016f8 <HAL_DMA_Abort_IT+0xd0>)
 8001670:	4293      	cmp	r3, r2
 8001672:	d029      	beq.n	80016c8 <HAL_DMA_Abort_IT+0xa0>
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	681b      	ldr	r3, [r3, #0]
 8001678:	4a20      	ldr	r2, [pc, #128]	; (80016fc <HAL_DMA_Abort_IT+0xd4>)
 800167a:	4293      	cmp	r3, r2
 800167c:	d022      	beq.n	80016c4 <HAL_DMA_Abort_IT+0x9c>
 800167e:	687b      	ldr	r3, [r7, #4]
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	4a1f      	ldr	r2, [pc, #124]	; (8001700 <HAL_DMA_Abort_IT+0xd8>)
 8001684:	4293      	cmp	r3, r2
 8001686:	d01a      	beq.n	80016be <HAL_DMA_Abort_IT+0x96>
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	4a1d      	ldr	r2, [pc, #116]	; (8001704 <HAL_DMA_Abort_IT+0xdc>)
 800168e:	4293      	cmp	r3, r2
 8001690:	d012      	beq.n	80016b8 <HAL_DMA_Abort_IT+0x90>
 8001692:	687b      	ldr	r3, [r7, #4]
 8001694:	681b      	ldr	r3, [r3, #0]
 8001696:	4a1c      	ldr	r2, [pc, #112]	; (8001708 <HAL_DMA_Abort_IT+0xe0>)
 8001698:	4293      	cmp	r3, r2
 800169a:	d00a      	beq.n	80016b2 <HAL_DMA_Abort_IT+0x8a>
 800169c:	687b      	ldr	r3, [r7, #4]
 800169e:	681b      	ldr	r3, [r3, #0]
 80016a0:	4a1a      	ldr	r2, [pc, #104]	; (800170c <HAL_DMA_Abort_IT+0xe4>)
 80016a2:	4293      	cmp	r3, r2
 80016a4:	d102      	bne.n	80016ac <HAL_DMA_Abort_IT+0x84>
 80016a6:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80016aa:	e00e      	b.n	80016ca <HAL_DMA_Abort_IT+0xa2>
 80016ac:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80016b0:	e00b      	b.n	80016ca <HAL_DMA_Abort_IT+0xa2>
 80016b2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016b6:	e008      	b.n	80016ca <HAL_DMA_Abort_IT+0xa2>
 80016b8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80016bc:	e005      	b.n	80016ca <HAL_DMA_Abort_IT+0xa2>
 80016be:	f44f 7380 	mov.w	r3, #256	; 0x100
 80016c2:	e002      	b.n	80016ca <HAL_DMA_Abort_IT+0xa2>
 80016c4:	2310      	movs	r3, #16
 80016c6:	e000      	b.n	80016ca <HAL_DMA_Abort_IT+0xa2>
 80016c8:	2301      	movs	r3, #1
 80016ca:	4a11      	ldr	r2, [pc, #68]	; (8001710 <HAL_DMA_Abort_IT+0xe8>)
 80016cc:	6053      	str	r3, [r2, #4]
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	2201      	movs	r2, #1
 80016d2:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80016d6:	687b      	ldr	r3, [r7, #4]
 80016d8:	2200      	movs	r2, #0
 80016da:	f883 2020 	strb.w	r2, [r3, #32]
 80016de:	687b      	ldr	r3, [r7, #4]
 80016e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80016e2:	2b00      	cmp	r3, #0
 80016e4:	d003      	beq.n	80016ee <HAL_DMA_Abort_IT+0xc6>
 80016e6:	687b      	ldr	r3, [r7, #4]
 80016e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80016ea:	6878      	ldr	r0, [r7, #4]
 80016ec:	4798      	blx	r3
 80016ee:	7bfb      	ldrb	r3, [r7, #15]
 80016f0:	4618      	mov	r0, r3
 80016f2:	3710      	adds	r7, #16
 80016f4:	46bd      	mov	sp, r7
 80016f6:	bd80      	pop	{r7, pc}
 80016f8:	40020008 	.word	0x40020008
 80016fc:	4002001c 	.word	0x4002001c
 8001700:	40020030 	.word	0x40020030
 8001704:	40020044 	.word	0x40020044
 8001708:	40020058 	.word	0x40020058
 800170c:	4002006c 	.word	0x4002006c
 8001710:	40020000 	.word	0x40020000

08001714 <HAL_GPIO_Init>:
 8001714:	b480      	push	{r7}
 8001716:	b08b      	sub	sp, #44	; 0x2c
 8001718:	af00      	add	r7, sp, #0
 800171a:	6078      	str	r0, [r7, #4]
 800171c:	6039      	str	r1, [r7, #0]
 800171e:	2300      	movs	r3, #0
 8001720:	627b      	str	r3, [r7, #36]	; 0x24
 8001722:	2300      	movs	r3, #0
 8001724:	623b      	str	r3, [r7, #32]
 8001726:	e169      	b.n	80019fc <HAL_GPIO_Init+0x2e8>
 8001728:	2201      	movs	r2, #1
 800172a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800172c:	fa02 f303 	lsl.w	r3, r2, r3
 8001730:	61fb      	str	r3, [r7, #28]
 8001732:	683b      	ldr	r3, [r7, #0]
 8001734:	681b      	ldr	r3, [r3, #0]
 8001736:	69fa      	ldr	r2, [r7, #28]
 8001738:	4013      	ands	r3, r2
 800173a:	61bb      	str	r3, [r7, #24]
 800173c:	69ba      	ldr	r2, [r7, #24]
 800173e:	69fb      	ldr	r3, [r7, #28]
 8001740:	429a      	cmp	r2, r3
 8001742:	f040 8158 	bne.w	80019f6 <HAL_GPIO_Init+0x2e2>
 8001746:	683b      	ldr	r3, [r7, #0]
 8001748:	685b      	ldr	r3, [r3, #4]
 800174a:	4a9a      	ldr	r2, [pc, #616]	; (80019b4 <HAL_GPIO_Init+0x2a0>)
 800174c:	4293      	cmp	r3, r2
 800174e:	d05e      	beq.n	800180e <HAL_GPIO_Init+0xfa>
 8001750:	4a98      	ldr	r2, [pc, #608]	; (80019b4 <HAL_GPIO_Init+0x2a0>)
 8001752:	4293      	cmp	r3, r2
 8001754:	d875      	bhi.n	8001842 <HAL_GPIO_Init+0x12e>
 8001756:	4a98      	ldr	r2, [pc, #608]	; (80019b8 <HAL_GPIO_Init+0x2a4>)
 8001758:	4293      	cmp	r3, r2
 800175a:	d058      	beq.n	800180e <HAL_GPIO_Init+0xfa>
 800175c:	4a96      	ldr	r2, [pc, #600]	; (80019b8 <HAL_GPIO_Init+0x2a4>)
 800175e:	4293      	cmp	r3, r2
 8001760:	d86f      	bhi.n	8001842 <HAL_GPIO_Init+0x12e>
 8001762:	4a96      	ldr	r2, [pc, #600]	; (80019bc <HAL_GPIO_Init+0x2a8>)
 8001764:	4293      	cmp	r3, r2
 8001766:	d052      	beq.n	800180e <HAL_GPIO_Init+0xfa>
 8001768:	4a94      	ldr	r2, [pc, #592]	; (80019bc <HAL_GPIO_Init+0x2a8>)
 800176a:	4293      	cmp	r3, r2
 800176c:	d869      	bhi.n	8001842 <HAL_GPIO_Init+0x12e>
 800176e:	4a94      	ldr	r2, [pc, #592]	; (80019c0 <HAL_GPIO_Init+0x2ac>)
 8001770:	4293      	cmp	r3, r2
 8001772:	d04c      	beq.n	800180e <HAL_GPIO_Init+0xfa>
 8001774:	4a92      	ldr	r2, [pc, #584]	; (80019c0 <HAL_GPIO_Init+0x2ac>)
 8001776:	4293      	cmp	r3, r2
 8001778:	d863      	bhi.n	8001842 <HAL_GPIO_Init+0x12e>
 800177a:	4a92      	ldr	r2, [pc, #584]	; (80019c4 <HAL_GPIO_Init+0x2b0>)
 800177c:	4293      	cmp	r3, r2
 800177e:	d046      	beq.n	800180e <HAL_GPIO_Init+0xfa>
 8001780:	4a90      	ldr	r2, [pc, #576]	; (80019c4 <HAL_GPIO_Init+0x2b0>)
 8001782:	4293      	cmp	r3, r2
 8001784:	d85d      	bhi.n	8001842 <HAL_GPIO_Init+0x12e>
 8001786:	2b12      	cmp	r3, #18
 8001788:	d82a      	bhi.n	80017e0 <HAL_GPIO_Init+0xcc>
 800178a:	2b12      	cmp	r3, #18
 800178c:	d859      	bhi.n	8001842 <HAL_GPIO_Init+0x12e>
 800178e:	a201      	add	r2, pc, #4	; (adr r2, 8001794 <HAL_GPIO_Init+0x80>)
 8001790:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001794:	0800180f 	.word	0x0800180f
 8001798:	080017e9 	.word	0x080017e9
 800179c:	080017fb 	.word	0x080017fb
 80017a0:	0800183d 	.word	0x0800183d
 80017a4:	08001843 	.word	0x08001843
 80017a8:	08001843 	.word	0x08001843
 80017ac:	08001843 	.word	0x08001843
 80017b0:	08001843 	.word	0x08001843
 80017b4:	08001843 	.word	0x08001843
 80017b8:	08001843 	.word	0x08001843
 80017bc:	08001843 	.word	0x08001843
 80017c0:	08001843 	.word	0x08001843
 80017c4:	08001843 	.word	0x08001843
 80017c8:	08001843 	.word	0x08001843
 80017cc:	08001843 	.word	0x08001843
 80017d0:	08001843 	.word	0x08001843
 80017d4:	08001843 	.word	0x08001843
 80017d8:	080017f1 	.word	0x080017f1
 80017dc:	08001805 	.word	0x08001805
 80017e0:	4a79      	ldr	r2, [pc, #484]	; (80019c8 <HAL_GPIO_Init+0x2b4>)
 80017e2:	4293      	cmp	r3, r2
 80017e4:	d013      	beq.n	800180e <HAL_GPIO_Init+0xfa>
 80017e6:	e02c      	b.n	8001842 <HAL_GPIO_Init+0x12e>
 80017e8:	683b      	ldr	r3, [r7, #0]
 80017ea:	68db      	ldr	r3, [r3, #12]
 80017ec:	623b      	str	r3, [r7, #32]
 80017ee:	e029      	b.n	8001844 <HAL_GPIO_Init+0x130>
 80017f0:	683b      	ldr	r3, [r7, #0]
 80017f2:	68db      	ldr	r3, [r3, #12]
 80017f4:	3304      	adds	r3, #4
 80017f6:	623b      	str	r3, [r7, #32]
 80017f8:	e024      	b.n	8001844 <HAL_GPIO_Init+0x130>
 80017fa:	683b      	ldr	r3, [r7, #0]
 80017fc:	68db      	ldr	r3, [r3, #12]
 80017fe:	3308      	adds	r3, #8
 8001800:	623b      	str	r3, [r7, #32]
 8001802:	e01f      	b.n	8001844 <HAL_GPIO_Init+0x130>
 8001804:	683b      	ldr	r3, [r7, #0]
 8001806:	68db      	ldr	r3, [r3, #12]
 8001808:	330c      	adds	r3, #12
 800180a:	623b      	str	r3, [r7, #32]
 800180c:	e01a      	b.n	8001844 <HAL_GPIO_Init+0x130>
 800180e:	683b      	ldr	r3, [r7, #0]
 8001810:	689b      	ldr	r3, [r3, #8]
 8001812:	2b00      	cmp	r3, #0
 8001814:	d102      	bne.n	800181c <HAL_GPIO_Init+0x108>
 8001816:	2304      	movs	r3, #4
 8001818:	623b      	str	r3, [r7, #32]
 800181a:	e013      	b.n	8001844 <HAL_GPIO_Init+0x130>
 800181c:	683b      	ldr	r3, [r7, #0]
 800181e:	689b      	ldr	r3, [r3, #8]
 8001820:	2b01      	cmp	r3, #1
 8001822:	d105      	bne.n	8001830 <HAL_GPIO_Init+0x11c>
 8001824:	2308      	movs	r3, #8
 8001826:	623b      	str	r3, [r7, #32]
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	69fa      	ldr	r2, [r7, #28]
 800182c:	611a      	str	r2, [r3, #16]
 800182e:	e009      	b.n	8001844 <HAL_GPIO_Init+0x130>
 8001830:	2308      	movs	r3, #8
 8001832:	623b      	str	r3, [r7, #32]
 8001834:	687b      	ldr	r3, [r7, #4]
 8001836:	69fa      	ldr	r2, [r7, #28]
 8001838:	615a      	str	r2, [r3, #20]
 800183a:	e003      	b.n	8001844 <HAL_GPIO_Init+0x130>
 800183c:	2300      	movs	r3, #0
 800183e:	623b      	str	r3, [r7, #32]
 8001840:	e000      	b.n	8001844 <HAL_GPIO_Init+0x130>
 8001842:	bf00      	nop
 8001844:	69bb      	ldr	r3, [r7, #24]
 8001846:	2bff      	cmp	r3, #255	; 0xff
 8001848:	d801      	bhi.n	800184e <HAL_GPIO_Init+0x13a>
 800184a:	687b      	ldr	r3, [r7, #4]
 800184c:	e001      	b.n	8001852 <HAL_GPIO_Init+0x13e>
 800184e:	687b      	ldr	r3, [r7, #4]
 8001850:	3304      	adds	r3, #4
 8001852:	617b      	str	r3, [r7, #20]
 8001854:	69bb      	ldr	r3, [r7, #24]
 8001856:	2bff      	cmp	r3, #255	; 0xff
 8001858:	d802      	bhi.n	8001860 <HAL_GPIO_Init+0x14c>
 800185a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800185c:	009b      	lsls	r3, r3, #2
 800185e:	e002      	b.n	8001866 <HAL_GPIO_Init+0x152>
 8001860:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001862:	3b08      	subs	r3, #8
 8001864:	009b      	lsls	r3, r3, #2
 8001866:	613b      	str	r3, [r7, #16]
 8001868:	697b      	ldr	r3, [r7, #20]
 800186a:	681a      	ldr	r2, [r3, #0]
 800186c:	210f      	movs	r1, #15
 800186e:	693b      	ldr	r3, [r7, #16]
 8001870:	fa01 f303 	lsl.w	r3, r1, r3
 8001874:	43db      	mvns	r3, r3
 8001876:	401a      	ands	r2, r3
 8001878:	6a39      	ldr	r1, [r7, #32]
 800187a:	693b      	ldr	r3, [r7, #16]
 800187c:	fa01 f303 	lsl.w	r3, r1, r3
 8001880:	431a      	orrs	r2, r3
 8001882:	697b      	ldr	r3, [r7, #20]
 8001884:	601a      	str	r2, [r3, #0]
 8001886:	683b      	ldr	r3, [r7, #0]
 8001888:	685b      	ldr	r3, [r3, #4]
 800188a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800188e:	2b00      	cmp	r3, #0
 8001890:	f000 80b1 	beq.w	80019f6 <HAL_GPIO_Init+0x2e2>
 8001894:	4b4d      	ldr	r3, [pc, #308]	; (80019cc <HAL_GPIO_Init+0x2b8>)
 8001896:	699b      	ldr	r3, [r3, #24]
 8001898:	4a4c      	ldr	r2, [pc, #304]	; (80019cc <HAL_GPIO_Init+0x2b8>)
 800189a:	f043 0301 	orr.w	r3, r3, #1
 800189e:	6193      	str	r3, [r2, #24]
 80018a0:	4b4a      	ldr	r3, [pc, #296]	; (80019cc <HAL_GPIO_Init+0x2b8>)
 80018a2:	699b      	ldr	r3, [r3, #24]
 80018a4:	f003 0301 	and.w	r3, r3, #1
 80018a8:	60bb      	str	r3, [r7, #8]
 80018aa:	68bb      	ldr	r3, [r7, #8]
 80018ac:	4a48      	ldr	r2, [pc, #288]	; (80019d0 <HAL_GPIO_Init+0x2bc>)
 80018ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018b0:	089b      	lsrs	r3, r3, #2
 80018b2:	3302      	adds	r3, #2
 80018b4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80018b8:	60fb      	str	r3, [r7, #12]
 80018ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80018bc:	f003 0303 	and.w	r3, r3, #3
 80018c0:	009b      	lsls	r3, r3, #2
 80018c2:	220f      	movs	r2, #15
 80018c4:	fa02 f303 	lsl.w	r3, r2, r3
 80018c8:	43db      	mvns	r3, r3
 80018ca:	68fa      	ldr	r2, [r7, #12]
 80018cc:	4013      	ands	r3, r2
 80018ce:	60fb      	str	r3, [r7, #12]
 80018d0:	687b      	ldr	r3, [r7, #4]
 80018d2:	4a40      	ldr	r2, [pc, #256]	; (80019d4 <HAL_GPIO_Init+0x2c0>)
 80018d4:	4293      	cmp	r3, r2
 80018d6:	d013      	beq.n	8001900 <HAL_GPIO_Init+0x1ec>
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	4a3f      	ldr	r2, [pc, #252]	; (80019d8 <HAL_GPIO_Init+0x2c4>)
 80018dc:	4293      	cmp	r3, r2
 80018de:	d00d      	beq.n	80018fc <HAL_GPIO_Init+0x1e8>
 80018e0:	687b      	ldr	r3, [r7, #4]
 80018e2:	4a3e      	ldr	r2, [pc, #248]	; (80019dc <HAL_GPIO_Init+0x2c8>)
 80018e4:	4293      	cmp	r3, r2
 80018e6:	d007      	beq.n	80018f8 <HAL_GPIO_Init+0x1e4>
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	4a3d      	ldr	r2, [pc, #244]	; (80019e0 <HAL_GPIO_Init+0x2cc>)
 80018ec:	4293      	cmp	r3, r2
 80018ee:	d101      	bne.n	80018f4 <HAL_GPIO_Init+0x1e0>
 80018f0:	2303      	movs	r3, #3
 80018f2:	e006      	b.n	8001902 <HAL_GPIO_Init+0x1ee>
 80018f4:	2304      	movs	r3, #4
 80018f6:	e004      	b.n	8001902 <HAL_GPIO_Init+0x1ee>
 80018f8:	2302      	movs	r3, #2
 80018fa:	e002      	b.n	8001902 <HAL_GPIO_Init+0x1ee>
 80018fc:	2301      	movs	r3, #1
 80018fe:	e000      	b.n	8001902 <HAL_GPIO_Init+0x1ee>
 8001900:	2300      	movs	r3, #0
 8001902:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001904:	f002 0203 	and.w	r2, r2, #3
 8001908:	0092      	lsls	r2, r2, #2
 800190a:	4093      	lsls	r3, r2
 800190c:	68fa      	ldr	r2, [r7, #12]
 800190e:	4313      	orrs	r3, r2
 8001910:	60fb      	str	r3, [r7, #12]
 8001912:	492f      	ldr	r1, [pc, #188]	; (80019d0 <HAL_GPIO_Init+0x2bc>)
 8001914:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001916:	089b      	lsrs	r3, r3, #2
 8001918:	3302      	adds	r3, #2
 800191a:	68fa      	ldr	r2, [r7, #12]
 800191c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001920:	683b      	ldr	r3, [r7, #0]
 8001922:	685b      	ldr	r3, [r3, #4]
 8001924:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001928:	2b00      	cmp	r3, #0
 800192a:	d006      	beq.n	800193a <HAL_GPIO_Init+0x226>
 800192c:	4b2d      	ldr	r3, [pc, #180]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 800192e:	681a      	ldr	r2, [r3, #0]
 8001930:	492c      	ldr	r1, [pc, #176]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 8001932:	69bb      	ldr	r3, [r7, #24]
 8001934:	4313      	orrs	r3, r2
 8001936:	600b      	str	r3, [r1, #0]
 8001938:	e006      	b.n	8001948 <HAL_GPIO_Init+0x234>
 800193a:	4b2a      	ldr	r3, [pc, #168]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 800193c:	681a      	ldr	r2, [r3, #0]
 800193e:	69bb      	ldr	r3, [r7, #24]
 8001940:	43db      	mvns	r3, r3
 8001942:	4928      	ldr	r1, [pc, #160]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 8001944:	4013      	ands	r3, r2
 8001946:	600b      	str	r3, [r1, #0]
 8001948:	683b      	ldr	r3, [r7, #0]
 800194a:	685b      	ldr	r3, [r3, #4]
 800194c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001950:	2b00      	cmp	r3, #0
 8001952:	d006      	beq.n	8001962 <HAL_GPIO_Init+0x24e>
 8001954:	4b23      	ldr	r3, [pc, #140]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 8001956:	685a      	ldr	r2, [r3, #4]
 8001958:	4922      	ldr	r1, [pc, #136]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 800195a:	69bb      	ldr	r3, [r7, #24]
 800195c:	4313      	orrs	r3, r2
 800195e:	604b      	str	r3, [r1, #4]
 8001960:	e006      	b.n	8001970 <HAL_GPIO_Init+0x25c>
 8001962:	4b20      	ldr	r3, [pc, #128]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 8001964:	685a      	ldr	r2, [r3, #4]
 8001966:	69bb      	ldr	r3, [r7, #24]
 8001968:	43db      	mvns	r3, r3
 800196a:	491e      	ldr	r1, [pc, #120]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 800196c:	4013      	ands	r3, r2
 800196e:	604b      	str	r3, [r1, #4]
 8001970:	683b      	ldr	r3, [r7, #0]
 8001972:	685b      	ldr	r3, [r3, #4]
 8001974:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001978:	2b00      	cmp	r3, #0
 800197a:	d006      	beq.n	800198a <HAL_GPIO_Init+0x276>
 800197c:	4b19      	ldr	r3, [pc, #100]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 800197e:	689a      	ldr	r2, [r3, #8]
 8001980:	4918      	ldr	r1, [pc, #96]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 8001982:	69bb      	ldr	r3, [r7, #24]
 8001984:	4313      	orrs	r3, r2
 8001986:	608b      	str	r3, [r1, #8]
 8001988:	e006      	b.n	8001998 <HAL_GPIO_Init+0x284>
 800198a:	4b16      	ldr	r3, [pc, #88]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 800198c:	689a      	ldr	r2, [r3, #8]
 800198e:	69bb      	ldr	r3, [r7, #24]
 8001990:	43db      	mvns	r3, r3
 8001992:	4914      	ldr	r1, [pc, #80]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 8001994:	4013      	ands	r3, r2
 8001996:	608b      	str	r3, [r1, #8]
 8001998:	683b      	ldr	r3, [r7, #0]
 800199a:	685b      	ldr	r3, [r3, #4]
 800199c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80019a0:	2b00      	cmp	r3, #0
 80019a2:	d021      	beq.n	80019e8 <HAL_GPIO_Init+0x2d4>
 80019a4:	4b0f      	ldr	r3, [pc, #60]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 80019a6:	68da      	ldr	r2, [r3, #12]
 80019a8:	490e      	ldr	r1, [pc, #56]	; (80019e4 <HAL_GPIO_Init+0x2d0>)
 80019aa:	69bb      	ldr	r3, [r7, #24]
 80019ac:	4313      	orrs	r3, r2
 80019ae:	60cb      	str	r3, [r1, #12]
 80019b0:	e021      	b.n	80019f6 <HAL_GPIO_Init+0x2e2>
 80019b2:	bf00      	nop
 80019b4:	10320000 	.word	0x10320000
 80019b8:	10310000 	.word	0x10310000
 80019bc:	10220000 	.word	0x10220000
 80019c0:	10210000 	.word	0x10210000
 80019c4:	10120000 	.word	0x10120000
 80019c8:	10110000 	.word	0x10110000
 80019cc:	40021000 	.word	0x40021000
 80019d0:	40010000 	.word	0x40010000
 80019d4:	40010800 	.word	0x40010800
 80019d8:	40010c00 	.word	0x40010c00
 80019dc:	40011000 	.word	0x40011000
 80019e0:	40011400 	.word	0x40011400
 80019e4:	40010400 	.word	0x40010400
 80019e8:	4b0b      	ldr	r3, [pc, #44]	; (8001a18 <HAL_GPIO_Init+0x304>)
 80019ea:	68da      	ldr	r2, [r3, #12]
 80019ec:	69bb      	ldr	r3, [r7, #24]
 80019ee:	43db      	mvns	r3, r3
 80019f0:	4909      	ldr	r1, [pc, #36]	; (8001a18 <HAL_GPIO_Init+0x304>)
 80019f2:	4013      	ands	r3, r2
 80019f4:	60cb      	str	r3, [r1, #12]
 80019f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019f8:	3301      	adds	r3, #1
 80019fa:	627b      	str	r3, [r7, #36]	; 0x24
 80019fc:	683b      	ldr	r3, [r7, #0]
 80019fe:	681a      	ldr	r2, [r3, #0]
 8001a00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a02:	fa22 f303 	lsr.w	r3, r2, r3
 8001a06:	2b00      	cmp	r3, #0
 8001a08:	f47f ae8e 	bne.w	8001728 <HAL_GPIO_Init+0x14>
 8001a0c:	bf00      	nop
 8001a0e:	bf00      	nop
 8001a10:	372c      	adds	r7, #44	; 0x2c
 8001a12:	46bd      	mov	sp, r7
 8001a14:	bc80      	pop	{r7}
 8001a16:	4770      	bx	lr
 8001a18:	40010400 	.word	0x40010400

08001a1c <HAL_GPIO_WritePin>:
 8001a1c:	b480      	push	{r7}
 8001a1e:	b083      	sub	sp, #12
 8001a20:	af00      	add	r7, sp, #0
 8001a22:	6078      	str	r0, [r7, #4]
 8001a24:	460b      	mov	r3, r1
 8001a26:	807b      	strh	r3, [r7, #2]
 8001a28:	4613      	mov	r3, r2
 8001a2a:	707b      	strb	r3, [r7, #1]
 8001a2c:	787b      	ldrb	r3, [r7, #1]
 8001a2e:	2b00      	cmp	r3, #0
 8001a30:	d003      	beq.n	8001a3a <HAL_GPIO_WritePin+0x1e>
 8001a32:	887a      	ldrh	r2, [r7, #2]
 8001a34:	687b      	ldr	r3, [r7, #4]
 8001a36:	611a      	str	r2, [r3, #16]
 8001a38:	e003      	b.n	8001a42 <HAL_GPIO_WritePin+0x26>
 8001a3a:	887b      	ldrh	r3, [r7, #2]
 8001a3c:	041a      	lsls	r2, r3, #16
 8001a3e:	687b      	ldr	r3, [r7, #4]
 8001a40:	611a      	str	r2, [r3, #16]
 8001a42:	bf00      	nop
 8001a44:	370c      	adds	r7, #12
 8001a46:	46bd      	mov	sp, r7
 8001a48:	bc80      	pop	{r7}
 8001a4a:	4770      	bx	lr

08001a4c <HAL_I2C_Init>:
 8001a4c:	b580      	push	{r7, lr}
 8001a4e:	b084      	sub	sp, #16
 8001a50:	af00      	add	r7, sp, #0
 8001a52:	6078      	str	r0, [r7, #4]
 8001a54:	687b      	ldr	r3, [r7, #4]
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	d101      	bne.n	8001a5e <HAL_I2C_Init+0x12>
 8001a5a:	2301      	movs	r3, #1
 8001a5c:	e12b      	b.n	8001cb6 <HAL_I2C_Init+0x26a>
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001a64:	b2db      	uxtb	r3, r3
 8001a66:	2b00      	cmp	r3, #0
 8001a68:	d106      	bne.n	8001a78 <HAL_I2C_Init+0x2c>
 8001a6a:	687b      	ldr	r3, [r7, #4]
 8001a6c:	2200      	movs	r2, #0
 8001a6e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001a72:	6878      	ldr	r0, [r7, #4]
 8001a74:	f7ff f93a 	bl	8000cec <HAL_I2C_MspInit>
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	2224      	movs	r2, #36	; 0x24
 8001a7c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001a80:	687b      	ldr	r3, [r7, #4]
 8001a82:	681b      	ldr	r3, [r3, #0]
 8001a84:	681a      	ldr	r2, [r3, #0]
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	681b      	ldr	r3, [r3, #0]
 8001a8a:	f022 0201 	bic.w	r2, r2, #1
 8001a8e:	601a      	str	r2, [r3, #0]
 8001a90:	687b      	ldr	r3, [r7, #4]
 8001a92:	681b      	ldr	r3, [r3, #0]
 8001a94:	681a      	ldr	r2, [r3, #0]
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001a9e:	601a      	str	r2, [r3, #0]
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	681b      	ldr	r3, [r3, #0]
 8001aa4:	681a      	ldr	r2, [r3, #0]
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8001aae:	601a      	str	r2, [r3, #0]
 8001ab0:	f001 fc9c 	bl	80033ec <HAL_RCC_GetPCLK1Freq>
 8001ab4:	60f8      	str	r0, [r7, #12]
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	685b      	ldr	r3, [r3, #4]
 8001aba:	4a81      	ldr	r2, [pc, #516]	; (8001cc0 <HAL_I2C_Init+0x274>)
 8001abc:	4293      	cmp	r3, r2
 8001abe:	d807      	bhi.n	8001ad0 <HAL_I2C_Init+0x84>
 8001ac0:	68fb      	ldr	r3, [r7, #12]
 8001ac2:	4a80      	ldr	r2, [pc, #512]	; (8001cc4 <HAL_I2C_Init+0x278>)
 8001ac4:	4293      	cmp	r3, r2
 8001ac6:	bf94      	ite	ls
 8001ac8:	2301      	movls	r3, #1
 8001aca:	2300      	movhi	r3, #0
 8001acc:	b2db      	uxtb	r3, r3
 8001ace:	e006      	b.n	8001ade <HAL_I2C_Init+0x92>
 8001ad0:	68fb      	ldr	r3, [r7, #12]
 8001ad2:	4a7d      	ldr	r2, [pc, #500]	; (8001cc8 <HAL_I2C_Init+0x27c>)
 8001ad4:	4293      	cmp	r3, r2
 8001ad6:	bf94      	ite	ls
 8001ad8:	2301      	movls	r3, #1
 8001ada:	2300      	movhi	r3, #0
 8001adc:	b2db      	uxtb	r3, r3
 8001ade:	2b00      	cmp	r3, #0
 8001ae0:	d001      	beq.n	8001ae6 <HAL_I2C_Init+0x9a>
 8001ae2:	2301      	movs	r3, #1
 8001ae4:	e0e7      	b.n	8001cb6 <HAL_I2C_Init+0x26a>
 8001ae6:	68fb      	ldr	r3, [r7, #12]
 8001ae8:	4a78      	ldr	r2, [pc, #480]	; (8001ccc <HAL_I2C_Init+0x280>)
 8001aea:	fba2 2303 	umull	r2, r3, r2, r3
 8001aee:	0c9b      	lsrs	r3, r3, #18
 8001af0:	60bb      	str	r3, [r7, #8]
 8001af2:	687b      	ldr	r3, [r7, #4]
 8001af4:	681b      	ldr	r3, [r3, #0]
 8001af6:	685b      	ldr	r3, [r3, #4]
 8001af8:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001afc:	687b      	ldr	r3, [r7, #4]
 8001afe:	681b      	ldr	r3, [r3, #0]
 8001b00:	68ba      	ldr	r2, [r7, #8]
 8001b02:	430a      	orrs	r2, r1
 8001b04:	605a      	str	r2, [r3, #4]
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	681b      	ldr	r3, [r3, #0]
 8001b0a:	6a1b      	ldr	r3, [r3, #32]
 8001b0c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001b10:	687b      	ldr	r3, [r7, #4]
 8001b12:	685b      	ldr	r3, [r3, #4]
 8001b14:	4a6a      	ldr	r2, [pc, #424]	; (8001cc0 <HAL_I2C_Init+0x274>)
 8001b16:	4293      	cmp	r3, r2
 8001b18:	d802      	bhi.n	8001b20 <HAL_I2C_Init+0xd4>
 8001b1a:	68bb      	ldr	r3, [r7, #8]
 8001b1c:	3301      	adds	r3, #1
 8001b1e:	e009      	b.n	8001b34 <HAL_I2C_Init+0xe8>
 8001b20:	68bb      	ldr	r3, [r7, #8]
 8001b22:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001b26:	fb02 f303 	mul.w	r3, r2, r3
 8001b2a:	4a69      	ldr	r2, [pc, #420]	; (8001cd0 <HAL_I2C_Init+0x284>)
 8001b2c:	fba2 2303 	umull	r2, r3, r2, r3
 8001b30:	099b      	lsrs	r3, r3, #6
 8001b32:	3301      	adds	r3, #1
 8001b34:	687a      	ldr	r2, [r7, #4]
 8001b36:	6812      	ldr	r2, [r2, #0]
 8001b38:	430b      	orrs	r3, r1
 8001b3a:	6213      	str	r3, [r2, #32]
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	69db      	ldr	r3, [r3, #28]
 8001b42:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8001b46:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8001b4a:	687b      	ldr	r3, [r7, #4]
 8001b4c:	685b      	ldr	r3, [r3, #4]
 8001b4e:	495c      	ldr	r1, [pc, #368]	; (8001cc0 <HAL_I2C_Init+0x274>)
 8001b50:	428b      	cmp	r3, r1
 8001b52:	d819      	bhi.n	8001b88 <HAL_I2C_Init+0x13c>
 8001b54:	68fb      	ldr	r3, [r7, #12]
 8001b56:	1e59      	subs	r1, r3, #1
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	685b      	ldr	r3, [r3, #4]
 8001b5c:	005b      	lsls	r3, r3, #1
 8001b5e:	fbb1 f3f3 	udiv	r3, r1, r3
 8001b62:	1c59      	adds	r1, r3, #1
 8001b64:	f640 73fc 	movw	r3, #4092	; 0xffc
 8001b68:	400b      	ands	r3, r1
 8001b6a:	2b00      	cmp	r3, #0
 8001b6c:	d00a      	beq.n	8001b84 <HAL_I2C_Init+0x138>
 8001b6e:	68fb      	ldr	r3, [r7, #12]
 8001b70:	1e59      	subs	r1, r3, #1
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	685b      	ldr	r3, [r3, #4]
 8001b76:	005b      	lsls	r3, r3, #1
 8001b78:	fbb1 f3f3 	udiv	r3, r1, r3
 8001b7c:	3301      	adds	r3, #1
 8001b7e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001b82:	e051      	b.n	8001c28 <HAL_I2C_Init+0x1dc>
 8001b84:	2304      	movs	r3, #4
 8001b86:	e04f      	b.n	8001c28 <HAL_I2C_Init+0x1dc>
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	689b      	ldr	r3, [r3, #8]
 8001b8c:	2b00      	cmp	r3, #0
 8001b8e:	d111      	bne.n	8001bb4 <HAL_I2C_Init+0x168>
 8001b90:	68fb      	ldr	r3, [r7, #12]
 8001b92:	1e58      	subs	r0, r3, #1
 8001b94:	687b      	ldr	r3, [r7, #4]
 8001b96:	6859      	ldr	r1, [r3, #4]
 8001b98:	460b      	mov	r3, r1
 8001b9a:	005b      	lsls	r3, r3, #1
 8001b9c:	440b      	add	r3, r1
 8001b9e:	fbb0 f3f3 	udiv	r3, r0, r3
 8001ba2:	3301      	adds	r3, #1
 8001ba4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001ba8:	2b00      	cmp	r3, #0
 8001baa:	bf0c      	ite	eq
 8001bac:	2301      	moveq	r3, #1
 8001bae:	2300      	movne	r3, #0
 8001bb0:	b2db      	uxtb	r3, r3
 8001bb2:	e012      	b.n	8001bda <HAL_I2C_Init+0x18e>
 8001bb4:	68fb      	ldr	r3, [r7, #12]
 8001bb6:	1e58      	subs	r0, r3, #1
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	6859      	ldr	r1, [r3, #4]
 8001bbc:	460b      	mov	r3, r1
 8001bbe:	009b      	lsls	r3, r3, #2
 8001bc0:	440b      	add	r3, r1
 8001bc2:	0099      	lsls	r1, r3, #2
 8001bc4:	440b      	add	r3, r1
 8001bc6:	fbb0 f3f3 	udiv	r3, r0, r3
 8001bca:	3301      	adds	r3, #1
 8001bcc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001bd0:	2b00      	cmp	r3, #0
 8001bd2:	bf0c      	ite	eq
 8001bd4:	2301      	moveq	r3, #1
 8001bd6:	2300      	movne	r3, #0
 8001bd8:	b2db      	uxtb	r3, r3
 8001bda:	2b00      	cmp	r3, #0
 8001bdc:	d001      	beq.n	8001be2 <HAL_I2C_Init+0x196>
 8001bde:	2301      	movs	r3, #1
 8001be0:	e022      	b.n	8001c28 <HAL_I2C_Init+0x1dc>
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	689b      	ldr	r3, [r3, #8]
 8001be6:	2b00      	cmp	r3, #0
 8001be8:	d10e      	bne.n	8001c08 <HAL_I2C_Init+0x1bc>
 8001bea:	68fb      	ldr	r3, [r7, #12]
 8001bec:	1e58      	subs	r0, r3, #1
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	6859      	ldr	r1, [r3, #4]
 8001bf2:	460b      	mov	r3, r1
 8001bf4:	005b      	lsls	r3, r3, #1
 8001bf6:	440b      	add	r3, r1
 8001bf8:	fbb0 f3f3 	udiv	r3, r0, r3
 8001bfc:	3301      	adds	r3, #1
 8001bfe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001c02:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001c06:	e00f      	b.n	8001c28 <HAL_I2C_Init+0x1dc>
 8001c08:	68fb      	ldr	r3, [r7, #12]
 8001c0a:	1e58      	subs	r0, r3, #1
 8001c0c:	687b      	ldr	r3, [r7, #4]
 8001c0e:	6859      	ldr	r1, [r3, #4]
 8001c10:	460b      	mov	r3, r1
 8001c12:	009b      	lsls	r3, r3, #2
 8001c14:	440b      	add	r3, r1
 8001c16:	0099      	lsls	r1, r3, #2
 8001c18:	440b      	add	r3, r1
 8001c1a:	fbb0 f3f3 	udiv	r3, r0, r3
 8001c1e:	3301      	adds	r3, #1
 8001c20:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001c24:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001c28:	6879      	ldr	r1, [r7, #4]
 8001c2a:	6809      	ldr	r1, [r1, #0]
 8001c2c:	4313      	orrs	r3, r2
 8001c2e:	61cb      	str	r3, [r1, #28]
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	681b      	ldr	r3, [r3, #0]
 8001c34:	681b      	ldr	r3, [r3, #0]
 8001c36:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	69da      	ldr	r2, [r3, #28]
 8001c3e:	687b      	ldr	r3, [r7, #4]
 8001c40:	6a1b      	ldr	r3, [r3, #32]
 8001c42:	431a      	orrs	r2, r3
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	681b      	ldr	r3, [r3, #0]
 8001c48:	430a      	orrs	r2, r1
 8001c4a:	601a      	str	r2, [r3, #0]
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	681b      	ldr	r3, [r3, #0]
 8001c50:	689b      	ldr	r3, [r3, #8]
 8001c52:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8001c56:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8001c5a:	687a      	ldr	r2, [r7, #4]
 8001c5c:	6911      	ldr	r1, [r2, #16]
 8001c5e:	687a      	ldr	r2, [r7, #4]
 8001c60:	68d2      	ldr	r2, [r2, #12]
 8001c62:	4311      	orrs	r1, r2
 8001c64:	687a      	ldr	r2, [r7, #4]
 8001c66:	6812      	ldr	r2, [r2, #0]
 8001c68:	430b      	orrs	r3, r1
 8001c6a:	6093      	str	r3, [r2, #8]
 8001c6c:	687b      	ldr	r3, [r7, #4]
 8001c6e:	681b      	ldr	r3, [r3, #0]
 8001c70:	68db      	ldr	r3, [r3, #12]
 8001c72:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	695a      	ldr	r2, [r3, #20]
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	699b      	ldr	r3, [r3, #24]
 8001c7e:	431a      	orrs	r2, r3
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	430a      	orrs	r2, r1
 8001c86:	60da      	str	r2, [r3, #12]
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	681b      	ldr	r3, [r3, #0]
 8001c8c:	681a      	ldr	r2, [r3, #0]
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	681b      	ldr	r3, [r3, #0]
 8001c92:	f042 0201 	orr.w	r2, r2, #1
 8001c96:	601a      	str	r2, [r3, #0]
 8001c98:	687b      	ldr	r3, [r7, #4]
 8001c9a:	2200      	movs	r2, #0
 8001c9c:	641a      	str	r2, [r3, #64]	; 0x40
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	2220      	movs	r2, #32
 8001ca2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	2200      	movs	r2, #0
 8001caa:	631a      	str	r2, [r3, #48]	; 0x30
 8001cac:	687b      	ldr	r3, [r7, #4]
 8001cae:	2200      	movs	r2, #0
 8001cb0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001cb4:	2300      	movs	r3, #0
 8001cb6:	4618      	mov	r0, r3
 8001cb8:	3710      	adds	r7, #16
 8001cba:	46bd      	mov	sp, r7
 8001cbc:	bd80      	pop	{r7, pc}
 8001cbe:	bf00      	nop
 8001cc0:	000186a0 	.word	0x000186a0
 8001cc4:	001e847f 	.word	0x001e847f
 8001cc8:	003d08ff 	.word	0x003d08ff
 8001ccc:	431bde83 	.word	0x431bde83
 8001cd0:	10624dd3 	.word	0x10624dd3

08001cd4 <HAL_I2C_Master_Transmit>:
 8001cd4:	b580      	push	{r7, lr}
 8001cd6:	b088      	sub	sp, #32
 8001cd8:	af02      	add	r7, sp, #8
 8001cda:	60f8      	str	r0, [r7, #12]
 8001cdc:	607a      	str	r2, [r7, #4]
 8001cde:	461a      	mov	r2, r3
 8001ce0:	460b      	mov	r3, r1
 8001ce2:	817b      	strh	r3, [r7, #10]
 8001ce4:	4613      	mov	r3, r2
 8001ce6:	813b      	strh	r3, [r7, #8]
 8001ce8:	f7ff fb28 	bl	800133c <HAL_GetTick>
 8001cec:	6178      	str	r0, [r7, #20]
 8001cee:	68fb      	ldr	r3, [r7, #12]
 8001cf0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001cf4:	b2db      	uxtb	r3, r3
 8001cf6:	2b20      	cmp	r3, #32
 8001cf8:	f040 80e0 	bne.w	8001ebc <HAL_I2C_Master_Transmit+0x1e8>
 8001cfc:	697b      	ldr	r3, [r7, #20]
 8001cfe:	9300      	str	r3, [sp, #0]
 8001d00:	2319      	movs	r3, #25
 8001d02:	2201      	movs	r2, #1
 8001d04:	4970      	ldr	r1, [pc, #448]	; (8001ec8 <HAL_I2C_Master_Transmit+0x1f4>)
 8001d06:	68f8      	ldr	r0, [r7, #12]
 8001d08:	f000 fdc0 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 8001d0c:	4603      	mov	r3, r0
 8001d0e:	2b00      	cmp	r3, #0
 8001d10:	d001      	beq.n	8001d16 <HAL_I2C_Master_Transmit+0x42>
 8001d12:	2302      	movs	r3, #2
 8001d14:	e0d3      	b.n	8001ebe <HAL_I2C_Master_Transmit+0x1ea>
 8001d16:	68fb      	ldr	r3, [r7, #12]
 8001d18:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001d1c:	2b01      	cmp	r3, #1
 8001d1e:	d101      	bne.n	8001d24 <HAL_I2C_Master_Transmit+0x50>
 8001d20:	2302      	movs	r3, #2
 8001d22:	e0cc      	b.n	8001ebe <HAL_I2C_Master_Transmit+0x1ea>
 8001d24:	68fb      	ldr	r3, [r7, #12]
 8001d26:	2201      	movs	r2, #1
 8001d28:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001d2c:	68fb      	ldr	r3, [r7, #12]
 8001d2e:	681b      	ldr	r3, [r3, #0]
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	f003 0301 	and.w	r3, r3, #1
 8001d36:	2b01      	cmp	r3, #1
 8001d38:	d007      	beq.n	8001d4a <HAL_I2C_Master_Transmit+0x76>
 8001d3a:	68fb      	ldr	r3, [r7, #12]
 8001d3c:	681b      	ldr	r3, [r3, #0]
 8001d3e:	681a      	ldr	r2, [r3, #0]
 8001d40:	68fb      	ldr	r3, [r7, #12]
 8001d42:	681b      	ldr	r3, [r3, #0]
 8001d44:	f042 0201 	orr.w	r2, r2, #1
 8001d48:	601a      	str	r2, [r3, #0]
 8001d4a:	68fb      	ldr	r3, [r7, #12]
 8001d4c:	681b      	ldr	r3, [r3, #0]
 8001d4e:	681a      	ldr	r2, [r3, #0]
 8001d50:	68fb      	ldr	r3, [r7, #12]
 8001d52:	681b      	ldr	r3, [r3, #0]
 8001d54:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001d58:	601a      	str	r2, [r3, #0]
 8001d5a:	68fb      	ldr	r3, [r7, #12]
 8001d5c:	2221      	movs	r2, #33	; 0x21
 8001d5e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001d62:	68fb      	ldr	r3, [r7, #12]
 8001d64:	2210      	movs	r2, #16
 8001d66:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	2200      	movs	r2, #0
 8001d6e:	641a      	str	r2, [r3, #64]	; 0x40
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	687a      	ldr	r2, [r7, #4]
 8001d74:	625a      	str	r2, [r3, #36]	; 0x24
 8001d76:	68fb      	ldr	r3, [r7, #12]
 8001d78:	893a      	ldrh	r2, [r7, #8]
 8001d7a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001d7c:	68fb      	ldr	r3, [r7, #12]
 8001d7e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001d80:	b29a      	uxth	r2, r3
 8001d82:	68fb      	ldr	r3, [r7, #12]
 8001d84:	851a      	strh	r2, [r3, #40]	; 0x28
 8001d86:	68fb      	ldr	r3, [r7, #12]
 8001d88:	4a50      	ldr	r2, [pc, #320]	; (8001ecc <HAL_I2C_Master_Transmit+0x1f8>)
 8001d8a:	62da      	str	r2, [r3, #44]	; 0x2c
 8001d8c:	8979      	ldrh	r1, [r7, #10]
 8001d8e:	697b      	ldr	r3, [r7, #20]
 8001d90:	6a3a      	ldr	r2, [r7, #32]
 8001d92:	68f8      	ldr	r0, [r7, #12]
 8001d94:	f000 fc2a 	bl	80025ec <I2C_MasterRequestWrite>
 8001d98:	4603      	mov	r3, r0
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	d001      	beq.n	8001da2 <HAL_I2C_Master_Transmit+0xce>
 8001d9e:	2301      	movs	r3, #1
 8001da0:	e08d      	b.n	8001ebe <HAL_I2C_Master_Transmit+0x1ea>
 8001da2:	2300      	movs	r3, #0
 8001da4:	613b      	str	r3, [r7, #16]
 8001da6:	68fb      	ldr	r3, [r7, #12]
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	695b      	ldr	r3, [r3, #20]
 8001dac:	613b      	str	r3, [r7, #16]
 8001dae:	68fb      	ldr	r3, [r7, #12]
 8001db0:	681b      	ldr	r3, [r3, #0]
 8001db2:	699b      	ldr	r3, [r3, #24]
 8001db4:	613b      	str	r3, [r7, #16]
 8001db6:	693b      	ldr	r3, [r7, #16]
 8001db8:	e066      	b.n	8001e88 <HAL_I2C_Master_Transmit+0x1b4>
 8001dba:	697a      	ldr	r2, [r7, #20]
 8001dbc:	6a39      	ldr	r1, [r7, #32]
 8001dbe:	68f8      	ldr	r0, [r7, #12]
 8001dc0:	f000 fe3a 	bl	8002a38 <I2C_WaitOnTXEFlagUntilTimeout>
 8001dc4:	4603      	mov	r3, r0
 8001dc6:	2b00      	cmp	r3, #0
 8001dc8:	d00d      	beq.n	8001de6 <HAL_I2C_Master_Transmit+0x112>
 8001dca:	68fb      	ldr	r3, [r7, #12]
 8001dcc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001dce:	2b04      	cmp	r3, #4
 8001dd0:	d107      	bne.n	8001de2 <HAL_I2C_Master_Transmit+0x10e>
 8001dd2:	68fb      	ldr	r3, [r7, #12]
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	681a      	ldr	r2, [r3, #0]
 8001dd8:	68fb      	ldr	r3, [r7, #12]
 8001dda:	681b      	ldr	r3, [r3, #0]
 8001ddc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001de0:	601a      	str	r2, [r3, #0]
 8001de2:	2301      	movs	r3, #1
 8001de4:	e06b      	b.n	8001ebe <HAL_I2C_Master_Transmit+0x1ea>
 8001de6:	68fb      	ldr	r3, [r7, #12]
 8001de8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001dea:	781a      	ldrb	r2, [r3, #0]
 8001dec:	68fb      	ldr	r3, [r7, #12]
 8001dee:	681b      	ldr	r3, [r3, #0]
 8001df0:	611a      	str	r2, [r3, #16]
 8001df2:	68fb      	ldr	r3, [r7, #12]
 8001df4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001df6:	1c5a      	adds	r2, r3, #1
 8001df8:	68fb      	ldr	r3, [r7, #12]
 8001dfa:	625a      	str	r2, [r3, #36]	; 0x24
 8001dfc:	68fb      	ldr	r3, [r7, #12]
 8001dfe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001e00:	b29b      	uxth	r3, r3
 8001e02:	3b01      	subs	r3, #1
 8001e04:	b29a      	uxth	r2, r3
 8001e06:	68fb      	ldr	r3, [r7, #12]
 8001e08:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001e0a:	68fb      	ldr	r3, [r7, #12]
 8001e0c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001e0e:	3b01      	subs	r3, #1
 8001e10:	b29a      	uxth	r2, r3
 8001e12:	68fb      	ldr	r3, [r7, #12]
 8001e14:	851a      	strh	r2, [r3, #40]	; 0x28
 8001e16:	68fb      	ldr	r3, [r7, #12]
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	695b      	ldr	r3, [r3, #20]
 8001e1c:	f003 0304 	and.w	r3, r3, #4
 8001e20:	2b04      	cmp	r3, #4
 8001e22:	d11b      	bne.n	8001e5c <HAL_I2C_Master_Transmit+0x188>
 8001e24:	68fb      	ldr	r3, [r7, #12]
 8001e26:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001e28:	2b00      	cmp	r3, #0
 8001e2a:	d017      	beq.n	8001e5c <HAL_I2C_Master_Transmit+0x188>
 8001e2c:	68fb      	ldr	r3, [r7, #12]
 8001e2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e30:	781a      	ldrb	r2, [r3, #0]
 8001e32:	68fb      	ldr	r3, [r7, #12]
 8001e34:	681b      	ldr	r3, [r3, #0]
 8001e36:	611a      	str	r2, [r3, #16]
 8001e38:	68fb      	ldr	r3, [r7, #12]
 8001e3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001e3c:	1c5a      	adds	r2, r3, #1
 8001e3e:	68fb      	ldr	r3, [r7, #12]
 8001e40:	625a      	str	r2, [r3, #36]	; 0x24
 8001e42:	68fb      	ldr	r3, [r7, #12]
 8001e44:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001e46:	b29b      	uxth	r3, r3
 8001e48:	3b01      	subs	r3, #1
 8001e4a:	b29a      	uxth	r2, r3
 8001e4c:	68fb      	ldr	r3, [r7, #12]
 8001e4e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001e50:	68fb      	ldr	r3, [r7, #12]
 8001e52:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001e54:	3b01      	subs	r3, #1
 8001e56:	b29a      	uxth	r2, r3
 8001e58:	68fb      	ldr	r3, [r7, #12]
 8001e5a:	851a      	strh	r2, [r3, #40]	; 0x28
 8001e5c:	697a      	ldr	r2, [r7, #20]
 8001e5e:	6a39      	ldr	r1, [r7, #32]
 8001e60:	68f8      	ldr	r0, [r7, #12]
 8001e62:	f000 fe2a 	bl	8002aba <I2C_WaitOnBTFFlagUntilTimeout>
 8001e66:	4603      	mov	r3, r0
 8001e68:	2b00      	cmp	r3, #0
 8001e6a:	d00d      	beq.n	8001e88 <HAL_I2C_Master_Transmit+0x1b4>
 8001e6c:	68fb      	ldr	r3, [r7, #12]
 8001e6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e70:	2b04      	cmp	r3, #4
 8001e72:	d107      	bne.n	8001e84 <HAL_I2C_Master_Transmit+0x1b0>
 8001e74:	68fb      	ldr	r3, [r7, #12]
 8001e76:	681b      	ldr	r3, [r3, #0]
 8001e78:	681a      	ldr	r2, [r3, #0]
 8001e7a:	68fb      	ldr	r3, [r7, #12]
 8001e7c:	681b      	ldr	r3, [r3, #0]
 8001e7e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001e82:	601a      	str	r2, [r3, #0]
 8001e84:	2301      	movs	r3, #1
 8001e86:	e01a      	b.n	8001ebe <HAL_I2C_Master_Transmit+0x1ea>
 8001e88:	68fb      	ldr	r3, [r7, #12]
 8001e8a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001e8c:	2b00      	cmp	r3, #0
 8001e8e:	d194      	bne.n	8001dba <HAL_I2C_Master_Transmit+0xe6>
 8001e90:	68fb      	ldr	r3, [r7, #12]
 8001e92:	681b      	ldr	r3, [r3, #0]
 8001e94:	681a      	ldr	r2, [r3, #0]
 8001e96:	68fb      	ldr	r3, [r7, #12]
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001e9e:	601a      	str	r2, [r3, #0]
 8001ea0:	68fb      	ldr	r3, [r7, #12]
 8001ea2:	2220      	movs	r2, #32
 8001ea4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001ea8:	68fb      	ldr	r3, [r7, #12]
 8001eaa:	2200      	movs	r2, #0
 8001eac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001eb0:	68fb      	ldr	r3, [r7, #12]
 8001eb2:	2200      	movs	r2, #0
 8001eb4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001eb8:	2300      	movs	r3, #0
 8001eba:	e000      	b.n	8001ebe <HAL_I2C_Master_Transmit+0x1ea>
 8001ebc:	2302      	movs	r3, #2
 8001ebe:	4618      	mov	r0, r3
 8001ec0:	3718      	adds	r7, #24
 8001ec2:	46bd      	mov	sp, r7
 8001ec4:	bd80      	pop	{r7, pc}
 8001ec6:	bf00      	nop
 8001ec8:	00100002 	.word	0x00100002
 8001ecc:	ffff0000 	.word	0xffff0000

08001ed0 <HAL_I2C_Master_Receive>:
 8001ed0:	b580      	push	{r7, lr}
 8001ed2:	b08c      	sub	sp, #48	; 0x30
 8001ed4:	af02      	add	r7, sp, #8
 8001ed6:	60f8      	str	r0, [r7, #12]
 8001ed8:	607a      	str	r2, [r7, #4]
 8001eda:	461a      	mov	r2, r3
 8001edc:	460b      	mov	r3, r1
 8001ede:	817b      	strh	r3, [r7, #10]
 8001ee0:	4613      	mov	r3, r2
 8001ee2:	813b      	strh	r3, [r7, #8]
 8001ee4:	2300      	movs	r3, #0
 8001ee6:	623b      	str	r3, [r7, #32]
 8001ee8:	f7ff fa28 	bl	800133c <HAL_GetTick>
 8001eec:	6278      	str	r0, [r7, #36]	; 0x24
 8001eee:	68fb      	ldr	r3, [r7, #12]
 8001ef0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001ef4:	b2db      	uxtb	r3, r3
 8001ef6:	2b20      	cmp	r3, #32
 8001ef8:	f040 823f 	bne.w	800237a <HAL_I2C_Master_Receive+0x4aa>
 8001efc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001efe:	9300      	str	r3, [sp, #0]
 8001f00:	2319      	movs	r3, #25
 8001f02:	2201      	movs	r2, #1
 8001f04:	497f      	ldr	r1, [pc, #508]	; (8002104 <HAL_I2C_Master_Receive+0x234>)
 8001f06:	68f8      	ldr	r0, [r7, #12]
 8001f08:	f000 fcc0 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 8001f0c:	4603      	mov	r3, r0
 8001f0e:	2b00      	cmp	r3, #0
 8001f10:	d001      	beq.n	8001f16 <HAL_I2C_Master_Receive+0x46>
 8001f12:	2302      	movs	r3, #2
 8001f14:	e232      	b.n	800237c <HAL_I2C_Master_Receive+0x4ac>
 8001f16:	68fb      	ldr	r3, [r7, #12]
 8001f18:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001f1c:	2b01      	cmp	r3, #1
 8001f1e:	d101      	bne.n	8001f24 <HAL_I2C_Master_Receive+0x54>
 8001f20:	2302      	movs	r3, #2
 8001f22:	e22b      	b.n	800237c <HAL_I2C_Master_Receive+0x4ac>
 8001f24:	68fb      	ldr	r3, [r7, #12]
 8001f26:	2201      	movs	r2, #1
 8001f28:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001f2c:	68fb      	ldr	r3, [r7, #12]
 8001f2e:	681b      	ldr	r3, [r3, #0]
 8001f30:	681b      	ldr	r3, [r3, #0]
 8001f32:	f003 0301 	and.w	r3, r3, #1
 8001f36:	2b01      	cmp	r3, #1
 8001f38:	d007      	beq.n	8001f4a <HAL_I2C_Master_Receive+0x7a>
 8001f3a:	68fb      	ldr	r3, [r7, #12]
 8001f3c:	681b      	ldr	r3, [r3, #0]
 8001f3e:	681a      	ldr	r2, [r3, #0]
 8001f40:	68fb      	ldr	r3, [r7, #12]
 8001f42:	681b      	ldr	r3, [r3, #0]
 8001f44:	f042 0201 	orr.w	r2, r2, #1
 8001f48:	601a      	str	r2, [r3, #0]
 8001f4a:	68fb      	ldr	r3, [r7, #12]
 8001f4c:	681b      	ldr	r3, [r3, #0]
 8001f4e:	681a      	ldr	r2, [r3, #0]
 8001f50:	68fb      	ldr	r3, [r7, #12]
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001f58:	601a      	str	r2, [r3, #0]
 8001f5a:	68fb      	ldr	r3, [r7, #12]
 8001f5c:	2222      	movs	r2, #34	; 0x22
 8001f5e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001f62:	68fb      	ldr	r3, [r7, #12]
 8001f64:	2210      	movs	r2, #16
 8001f66:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001f6a:	68fb      	ldr	r3, [r7, #12]
 8001f6c:	2200      	movs	r2, #0
 8001f6e:	641a      	str	r2, [r3, #64]	; 0x40
 8001f70:	68fb      	ldr	r3, [r7, #12]
 8001f72:	687a      	ldr	r2, [r7, #4]
 8001f74:	625a      	str	r2, [r3, #36]	; 0x24
 8001f76:	68fb      	ldr	r3, [r7, #12]
 8001f78:	893a      	ldrh	r2, [r7, #8]
 8001f7a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8001f7c:	68fb      	ldr	r3, [r7, #12]
 8001f7e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8001f80:	b29a      	uxth	r2, r3
 8001f82:	68fb      	ldr	r3, [r7, #12]
 8001f84:	851a      	strh	r2, [r3, #40]	; 0x28
 8001f86:	68fb      	ldr	r3, [r7, #12]
 8001f88:	4a5f      	ldr	r2, [pc, #380]	; (8002108 <HAL_I2C_Master_Receive+0x238>)
 8001f8a:	62da      	str	r2, [r3, #44]	; 0x2c
 8001f8c:	8979      	ldrh	r1, [r7, #10]
 8001f8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f90:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8001f92:	68f8      	ldr	r0, [r7, #12]
 8001f94:	f000 fbac 	bl	80026f0 <I2C_MasterRequestRead>
 8001f98:	4603      	mov	r3, r0
 8001f9a:	2b00      	cmp	r3, #0
 8001f9c:	d001      	beq.n	8001fa2 <HAL_I2C_Master_Receive+0xd2>
 8001f9e:	2301      	movs	r3, #1
 8001fa0:	e1ec      	b.n	800237c <HAL_I2C_Master_Receive+0x4ac>
 8001fa2:	68fb      	ldr	r3, [r7, #12]
 8001fa4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001fa6:	2b00      	cmp	r3, #0
 8001fa8:	d113      	bne.n	8001fd2 <HAL_I2C_Master_Receive+0x102>
 8001faa:	2300      	movs	r3, #0
 8001fac:	61fb      	str	r3, [r7, #28]
 8001fae:	68fb      	ldr	r3, [r7, #12]
 8001fb0:	681b      	ldr	r3, [r3, #0]
 8001fb2:	695b      	ldr	r3, [r3, #20]
 8001fb4:	61fb      	str	r3, [r7, #28]
 8001fb6:	68fb      	ldr	r3, [r7, #12]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	699b      	ldr	r3, [r3, #24]
 8001fbc:	61fb      	str	r3, [r7, #28]
 8001fbe:	69fb      	ldr	r3, [r7, #28]
 8001fc0:	68fb      	ldr	r3, [r7, #12]
 8001fc2:	681b      	ldr	r3, [r3, #0]
 8001fc4:	681a      	ldr	r2, [r3, #0]
 8001fc6:	68fb      	ldr	r3, [r7, #12]
 8001fc8:	681b      	ldr	r3, [r3, #0]
 8001fca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001fce:	601a      	str	r2, [r3, #0]
 8001fd0:	e1c0      	b.n	8002354 <HAL_I2C_Master_Receive+0x484>
 8001fd2:	68fb      	ldr	r3, [r7, #12]
 8001fd4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8001fd6:	2b01      	cmp	r3, #1
 8001fd8:	d11e      	bne.n	8002018 <HAL_I2C_Master_Receive+0x148>
 8001fda:	68fb      	ldr	r3, [r7, #12]
 8001fdc:	681b      	ldr	r3, [r3, #0]
 8001fde:	681a      	ldr	r2, [r3, #0]
 8001fe0:	68fb      	ldr	r3, [r7, #12]
 8001fe2:	681b      	ldr	r3, [r3, #0]
 8001fe4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8001fe8:	601a      	str	r2, [r3, #0]
 8001fea:	b672      	cpsid	i
 8001fec:	bf00      	nop
 8001fee:	2300      	movs	r3, #0
 8001ff0:	61bb      	str	r3, [r7, #24]
 8001ff2:	68fb      	ldr	r3, [r7, #12]
 8001ff4:	681b      	ldr	r3, [r3, #0]
 8001ff6:	695b      	ldr	r3, [r3, #20]
 8001ff8:	61bb      	str	r3, [r7, #24]
 8001ffa:	68fb      	ldr	r3, [r7, #12]
 8001ffc:	681b      	ldr	r3, [r3, #0]
 8001ffe:	699b      	ldr	r3, [r3, #24]
 8002000:	61bb      	str	r3, [r7, #24]
 8002002:	69bb      	ldr	r3, [r7, #24]
 8002004:	68fb      	ldr	r3, [r7, #12]
 8002006:	681b      	ldr	r3, [r3, #0]
 8002008:	681a      	ldr	r2, [r3, #0]
 800200a:	68fb      	ldr	r3, [r7, #12]
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002012:	601a      	str	r2, [r3, #0]
 8002014:	b662      	cpsie	i
 8002016:	e035      	b.n	8002084 <HAL_I2C_Master_Receive+0x1b4>
 8002018:	68fb      	ldr	r3, [r7, #12]
 800201a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800201c:	2b02      	cmp	r3, #2
 800201e:	d11e      	bne.n	800205e <HAL_I2C_Master_Receive+0x18e>
 8002020:	68fb      	ldr	r3, [r7, #12]
 8002022:	681b      	ldr	r3, [r3, #0]
 8002024:	681a      	ldr	r2, [r3, #0]
 8002026:	68fb      	ldr	r3, [r7, #12]
 8002028:	681b      	ldr	r3, [r3, #0]
 800202a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800202e:	601a      	str	r2, [r3, #0]
 8002030:	b672      	cpsid	i
 8002032:	bf00      	nop
 8002034:	2300      	movs	r3, #0
 8002036:	617b      	str	r3, [r7, #20]
 8002038:	68fb      	ldr	r3, [r7, #12]
 800203a:	681b      	ldr	r3, [r3, #0]
 800203c:	695b      	ldr	r3, [r3, #20]
 800203e:	617b      	str	r3, [r7, #20]
 8002040:	68fb      	ldr	r3, [r7, #12]
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	699b      	ldr	r3, [r3, #24]
 8002046:	617b      	str	r3, [r7, #20]
 8002048:	697b      	ldr	r3, [r7, #20]
 800204a:	68fb      	ldr	r3, [r7, #12]
 800204c:	681b      	ldr	r3, [r3, #0]
 800204e:	681a      	ldr	r2, [r3, #0]
 8002050:	68fb      	ldr	r3, [r7, #12]
 8002052:	681b      	ldr	r3, [r3, #0]
 8002054:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002058:	601a      	str	r2, [r3, #0]
 800205a:	b662      	cpsie	i
 800205c:	e012      	b.n	8002084 <HAL_I2C_Master_Receive+0x1b4>
 800205e:	68fb      	ldr	r3, [r7, #12]
 8002060:	681b      	ldr	r3, [r3, #0]
 8002062:	681a      	ldr	r2, [r3, #0]
 8002064:	68fb      	ldr	r3, [r7, #12]
 8002066:	681b      	ldr	r3, [r3, #0]
 8002068:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800206c:	601a      	str	r2, [r3, #0]
 800206e:	2300      	movs	r3, #0
 8002070:	613b      	str	r3, [r7, #16]
 8002072:	68fb      	ldr	r3, [r7, #12]
 8002074:	681b      	ldr	r3, [r3, #0]
 8002076:	695b      	ldr	r3, [r3, #20]
 8002078:	613b      	str	r3, [r7, #16]
 800207a:	68fb      	ldr	r3, [r7, #12]
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	699b      	ldr	r3, [r3, #24]
 8002080:	613b      	str	r3, [r7, #16]
 8002082:	693b      	ldr	r3, [r7, #16]
 8002084:	e166      	b.n	8002354 <HAL_I2C_Master_Receive+0x484>
 8002086:	68fb      	ldr	r3, [r7, #12]
 8002088:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800208a:	2b03      	cmp	r3, #3
 800208c:	f200 811f 	bhi.w	80022ce <HAL_I2C_Master_Receive+0x3fe>
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002094:	2b01      	cmp	r3, #1
 8002096:	d123      	bne.n	80020e0 <HAL_I2C_Master_Receive+0x210>
 8002098:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800209a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800209c:	68f8      	ldr	r0, [r7, #12]
 800209e:	f000 fd4d 	bl	8002b3c <I2C_WaitOnRXNEFlagUntilTimeout>
 80020a2:	4603      	mov	r3, r0
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d001      	beq.n	80020ac <HAL_I2C_Master_Receive+0x1dc>
 80020a8:	2301      	movs	r3, #1
 80020aa:	e167      	b.n	800237c <HAL_I2C_Master_Receive+0x4ac>
 80020ac:	68fb      	ldr	r3, [r7, #12]
 80020ae:	681b      	ldr	r3, [r3, #0]
 80020b0:	691a      	ldr	r2, [r3, #16]
 80020b2:	68fb      	ldr	r3, [r7, #12]
 80020b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020b6:	b2d2      	uxtb	r2, r2
 80020b8:	701a      	strb	r2, [r3, #0]
 80020ba:	68fb      	ldr	r3, [r7, #12]
 80020bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020be:	1c5a      	adds	r2, r3, #1
 80020c0:	68fb      	ldr	r3, [r7, #12]
 80020c2:	625a      	str	r2, [r3, #36]	; 0x24
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80020c8:	3b01      	subs	r3, #1
 80020ca:	b29a      	uxth	r2, r3
 80020cc:	68fb      	ldr	r3, [r7, #12]
 80020ce:	851a      	strh	r2, [r3, #40]	; 0x28
 80020d0:	68fb      	ldr	r3, [r7, #12]
 80020d2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80020d4:	b29b      	uxth	r3, r3
 80020d6:	3b01      	subs	r3, #1
 80020d8:	b29a      	uxth	r2, r3
 80020da:	68fb      	ldr	r3, [r7, #12]
 80020dc:	855a      	strh	r2, [r3, #42]	; 0x2a
 80020de:	e139      	b.n	8002354 <HAL_I2C_Master_Receive+0x484>
 80020e0:	68fb      	ldr	r3, [r7, #12]
 80020e2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80020e4:	2b02      	cmp	r3, #2
 80020e6:	d152      	bne.n	800218e <HAL_I2C_Master_Receive+0x2be>
 80020e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80020ea:	9300      	str	r3, [sp, #0]
 80020ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80020ee:	2200      	movs	r2, #0
 80020f0:	4906      	ldr	r1, [pc, #24]	; (800210c <HAL_I2C_Master_Receive+0x23c>)
 80020f2:	68f8      	ldr	r0, [r7, #12]
 80020f4:	f000 fbca 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 80020f8:	4603      	mov	r3, r0
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d008      	beq.n	8002110 <HAL_I2C_Master_Receive+0x240>
 80020fe:	2301      	movs	r3, #1
 8002100:	e13c      	b.n	800237c <HAL_I2C_Master_Receive+0x4ac>
 8002102:	bf00      	nop
 8002104:	00100002 	.word	0x00100002
 8002108:	ffff0000 	.word	0xffff0000
 800210c:	00010004 	.word	0x00010004
 8002110:	b672      	cpsid	i
 8002112:	bf00      	nop
 8002114:	68fb      	ldr	r3, [r7, #12]
 8002116:	681b      	ldr	r3, [r3, #0]
 8002118:	681a      	ldr	r2, [r3, #0]
 800211a:	68fb      	ldr	r3, [r7, #12]
 800211c:	681b      	ldr	r3, [r3, #0]
 800211e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002122:	601a      	str	r2, [r3, #0]
 8002124:	68fb      	ldr	r3, [r7, #12]
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	691a      	ldr	r2, [r3, #16]
 800212a:	68fb      	ldr	r3, [r7, #12]
 800212c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800212e:	b2d2      	uxtb	r2, r2
 8002130:	701a      	strb	r2, [r3, #0]
 8002132:	68fb      	ldr	r3, [r7, #12]
 8002134:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002136:	1c5a      	adds	r2, r3, #1
 8002138:	68fb      	ldr	r3, [r7, #12]
 800213a:	625a      	str	r2, [r3, #36]	; 0x24
 800213c:	68fb      	ldr	r3, [r7, #12]
 800213e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002140:	3b01      	subs	r3, #1
 8002142:	b29a      	uxth	r2, r3
 8002144:	68fb      	ldr	r3, [r7, #12]
 8002146:	851a      	strh	r2, [r3, #40]	; 0x28
 8002148:	68fb      	ldr	r3, [r7, #12]
 800214a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800214c:	b29b      	uxth	r3, r3
 800214e:	3b01      	subs	r3, #1
 8002150:	b29a      	uxth	r2, r3
 8002152:	68fb      	ldr	r3, [r7, #12]
 8002154:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002156:	b662      	cpsie	i
 8002158:	bf00      	nop
 800215a:	68fb      	ldr	r3, [r7, #12]
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	691a      	ldr	r2, [r3, #16]
 8002160:	68fb      	ldr	r3, [r7, #12]
 8002162:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002164:	b2d2      	uxtb	r2, r2
 8002166:	701a      	strb	r2, [r3, #0]
 8002168:	68fb      	ldr	r3, [r7, #12]
 800216a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800216c:	1c5a      	adds	r2, r3, #1
 800216e:	68fb      	ldr	r3, [r7, #12]
 8002170:	625a      	str	r2, [r3, #36]	; 0x24
 8002172:	68fb      	ldr	r3, [r7, #12]
 8002174:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002176:	3b01      	subs	r3, #1
 8002178:	b29a      	uxth	r2, r3
 800217a:	68fb      	ldr	r3, [r7, #12]
 800217c:	851a      	strh	r2, [r3, #40]	; 0x28
 800217e:	68fb      	ldr	r3, [r7, #12]
 8002180:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002182:	b29b      	uxth	r3, r3
 8002184:	3b01      	subs	r3, #1
 8002186:	b29a      	uxth	r2, r3
 8002188:	68fb      	ldr	r3, [r7, #12]
 800218a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800218c:	e0e2      	b.n	8002354 <HAL_I2C_Master_Receive+0x484>
 800218e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002190:	9300      	str	r3, [sp, #0]
 8002192:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002194:	2200      	movs	r2, #0
 8002196:	497b      	ldr	r1, [pc, #492]	; (8002384 <HAL_I2C_Master_Receive+0x4b4>)
 8002198:	68f8      	ldr	r0, [r7, #12]
 800219a:	f000 fb77 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 800219e:	4603      	mov	r3, r0
 80021a0:	2b00      	cmp	r3, #0
 80021a2:	d001      	beq.n	80021a8 <HAL_I2C_Master_Receive+0x2d8>
 80021a4:	2301      	movs	r3, #1
 80021a6:	e0e9      	b.n	800237c <HAL_I2C_Master_Receive+0x4ac>
 80021a8:	68fb      	ldr	r3, [r7, #12]
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	681a      	ldr	r2, [r3, #0]
 80021ae:	68fb      	ldr	r3, [r7, #12]
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80021b6:	601a      	str	r2, [r3, #0]
 80021b8:	b672      	cpsid	i
 80021ba:	bf00      	nop
 80021bc:	68fb      	ldr	r3, [r7, #12]
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	691a      	ldr	r2, [r3, #16]
 80021c2:	68fb      	ldr	r3, [r7, #12]
 80021c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021c6:	b2d2      	uxtb	r2, r2
 80021c8:	701a      	strb	r2, [r3, #0]
 80021ca:	68fb      	ldr	r3, [r7, #12]
 80021cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021ce:	1c5a      	adds	r2, r3, #1
 80021d0:	68fb      	ldr	r3, [r7, #12]
 80021d2:	625a      	str	r2, [r3, #36]	; 0x24
 80021d4:	68fb      	ldr	r3, [r7, #12]
 80021d6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80021d8:	3b01      	subs	r3, #1
 80021da:	b29a      	uxth	r2, r3
 80021dc:	68fb      	ldr	r3, [r7, #12]
 80021de:	851a      	strh	r2, [r3, #40]	; 0x28
 80021e0:	68fb      	ldr	r3, [r7, #12]
 80021e2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80021e4:	b29b      	uxth	r3, r3
 80021e6:	3b01      	subs	r3, #1
 80021e8:	b29a      	uxth	r2, r3
 80021ea:	68fb      	ldr	r3, [r7, #12]
 80021ec:	855a      	strh	r2, [r3, #42]	; 0x2a
 80021ee:	4b66      	ldr	r3, [pc, #408]	; (8002388 <HAL_I2C_Master_Receive+0x4b8>)
 80021f0:	681b      	ldr	r3, [r3, #0]
 80021f2:	08db      	lsrs	r3, r3, #3
 80021f4:	4a65      	ldr	r2, [pc, #404]	; (800238c <HAL_I2C_Master_Receive+0x4bc>)
 80021f6:	fba2 2303 	umull	r2, r3, r2, r3
 80021fa:	0a1a      	lsrs	r2, r3, #8
 80021fc:	4613      	mov	r3, r2
 80021fe:	009b      	lsls	r3, r3, #2
 8002200:	4413      	add	r3, r2
 8002202:	00da      	lsls	r2, r3, #3
 8002204:	1ad3      	subs	r3, r2, r3
 8002206:	623b      	str	r3, [r7, #32]
 8002208:	6a3b      	ldr	r3, [r7, #32]
 800220a:	3b01      	subs	r3, #1
 800220c:	623b      	str	r3, [r7, #32]
 800220e:	6a3b      	ldr	r3, [r7, #32]
 8002210:	2b00      	cmp	r3, #0
 8002212:	d118      	bne.n	8002246 <HAL_I2C_Master_Receive+0x376>
 8002214:	68fb      	ldr	r3, [r7, #12]
 8002216:	2200      	movs	r2, #0
 8002218:	631a      	str	r2, [r3, #48]	; 0x30
 800221a:	68fb      	ldr	r3, [r7, #12]
 800221c:	2220      	movs	r2, #32
 800221e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002222:	68fb      	ldr	r3, [r7, #12]
 8002224:	2200      	movs	r2, #0
 8002226:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800222a:	68fb      	ldr	r3, [r7, #12]
 800222c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800222e:	f043 0220 	orr.w	r2, r3, #32
 8002232:	68fb      	ldr	r3, [r7, #12]
 8002234:	641a      	str	r2, [r3, #64]	; 0x40
 8002236:	b662      	cpsie	i
 8002238:	bf00      	nop
 800223a:	68fb      	ldr	r3, [r7, #12]
 800223c:	2200      	movs	r2, #0
 800223e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002242:	2301      	movs	r3, #1
 8002244:	e09a      	b.n	800237c <HAL_I2C_Master_Receive+0x4ac>
 8002246:	68fb      	ldr	r3, [r7, #12]
 8002248:	681b      	ldr	r3, [r3, #0]
 800224a:	695b      	ldr	r3, [r3, #20]
 800224c:	f003 0304 	and.w	r3, r3, #4
 8002250:	2b04      	cmp	r3, #4
 8002252:	d1d9      	bne.n	8002208 <HAL_I2C_Master_Receive+0x338>
 8002254:	68fb      	ldr	r3, [r7, #12]
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	681a      	ldr	r2, [r3, #0]
 800225a:	68fb      	ldr	r3, [r7, #12]
 800225c:	681b      	ldr	r3, [r3, #0]
 800225e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002262:	601a      	str	r2, [r3, #0]
 8002264:	68fb      	ldr	r3, [r7, #12]
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	691a      	ldr	r2, [r3, #16]
 800226a:	68fb      	ldr	r3, [r7, #12]
 800226c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800226e:	b2d2      	uxtb	r2, r2
 8002270:	701a      	strb	r2, [r3, #0]
 8002272:	68fb      	ldr	r3, [r7, #12]
 8002274:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002276:	1c5a      	adds	r2, r3, #1
 8002278:	68fb      	ldr	r3, [r7, #12]
 800227a:	625a      	str	r2, [r3, #36]	; 0x24
 800227c:	68fb      	ldr	r3, [r7, #12]
 800227e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002280:	3b01      	subs	r3, #1
 8002282:	b29a      	uxth	r2, r3
 8002284:	68fb      	ldr	r3, [r7, #12]
 8002286:	851a      	strh	r2, [r3, #40]	; 0x28
 8002288:	68fb      	ldr	r3, [r7, #12]
 800228a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800228c:	b29b      	uxth	r3, r3
 800228e:	3b01      	subs	r3, #1
 8002290:	b29a      	uxth	r2, r3
 8002292:	68fb      	ldr	r3, [r7, #12]
 8002294:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002296:	b662      	cpsie	i
 8002298:	bf00      	nop
 800229a:	68fb      	ldr	r3, [r7, #12]
 800229c:	681b      	ldr	r3, [r3, #0]
 800229e:	691a      	ldr	r2, [r3, #16]
 80022a0:	68fb      	ldr	r3, [r7, #12]
 80022a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022a4:	b2d2      	uxtb	r2, r2
 80022a6:	701a      	strb	r2, [r3, #0]
 80022a8:	68fb      	ldr	r3, [r7, #12]
 80022aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022ac:	1c5a      	adds	r2, r3, #1
 80022ae:	68fb      	ldr	r3, [r7, #12]
 80022b0:	625a      	str	r2, [r3, #36]	; 0x24
 80022b2:	68fb      	ldr	r3, [r7, #12]
 80022b4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80022b6:	3b01      	subs	r3, #1
 80022b8:	b29a      	uxth	r2, r3
 80022ba:	68fb      	ldr	r3, [r7, #12]
 80022bc:	851a      	strh	r2, [r3, #40]	; 0x28
 80022be:	68fb      	ldr	r3, [r7, #12]
 80022c0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80022c2:	b29b      	uxth	r3, r3
 80022c4:	3b01      	subs	r3, #1
 80022c6:	b29a      	uxth	r2, r3
 80022c8:	68fb      	ldr	r3, [r7, #12]
 80022ca:	855a      	strh	r2, [r3, #42]	; 0x2a
 80022cc:	e042      	b.n	8002354 <HAL_I2C_Master_Receive+0x484>
 80022ce:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80022d0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80022d2:	68f8      	ldr	r0, [r7, #12]
 80022d4:	f000 fc32 	bl	8002b3c <I2C_WaitOnRXNEFlagUntilTimeout>
 80022d8:	4603      	mov	r3, r0
 80022da:	2b00      	cmp	r3, #0
 80022dc:	d001      	beq.n	80022e2 <HAL_I2C_Master_Receive+0x412>
 80022de:	2301      	movs	r3, #1
 80022e0:	e04c      	b.n	800237c <HAL_I2C_Master_Receive+0x4ac>
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	691a      	ldr	r2, [r3, #16]
 80022e8:	68fb      	ldr	r3, [r7, #12]
 80022ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022ec:	b2d2      	uxtb	r2, r2
 80022ee:	701a      	strb	r2, [r3, #0]
 80022f0:	68fb      	ldr	r3, [r7, #12]
 80022f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022f4:	1c5a      	adds	r2, r3, #1
 80022f6:	68fb      	ldr	r3, [r7, #12]
 80022f8:	625a      	str	r2, [r3, #36]	; 0x24
 80022fa:	68fb      	ldr	r3, [r7, #12]
 80022fc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80022fe:	3b01      	subs	r3, #1
 8002300:	b29a      	uxth	r2, r3
 8002302:	68fb      	ldr	r3, [r7, #12]
 8002304:	851a      	strh	r2, [r3, #40]	; 0x28
 8002306:	68fb      	ldr	r3, [r7, #12]
 8002308:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800230a:	b29b      	uxth	r3, r3
 800230c:	3b01      	subs	r3, #1
 800230e:	b29a      	uxth	r2, r3
 8002310:	68fb      	ldr	r3, [r7, #12]
 8002312:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002314:	68fb      	ldr	r3, [r7, #12]
 8002316:	681b      	ldr	r3, [r3, #0]
 8002318:	695b      	ldr	r3, [r3, #20]
 800231a:	f003 0304 	and.w	r3, r3, #4
 800231e:	2b04      	cmp	r3, #4
 8002320:	d118      	bne.n	8002354 <HAL_I2C_Master_Receive+0x484>
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	691a      	ldr	r2, [r3, #16]
 8002328:	68fb      	ldr	r3, [r7, #12]
 800232a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800232c:	b2d2      	uxtb	r2, r2
 800232e:	701a      	strb	r2, [r3, #0]
 8002330:	68fb      	ldr	r3, [r7, #12]
 8002332:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002334:	1c5a      	adds	r2, r3, #1
 8002336:	68fb      	ldr	r3, [r7, #12]
 8002338:	625a      	str	r2, [r3, #36]	; 0x24
 800233a:	68fb      	ldr	r3, [r7, #12]
 800233c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800233e:	3b01      	subs	r3, #1
 8002340:	b29a      	uxth	r2, r3
 8002342:	68fb      	ldr	r3, [r7, #12]
 8002344:	851a      	strh	r2, [r3, #40]	; 0x28
 8002346:	68fb      	ldr	r3, [r7, #12]
 8002348:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800234a:	b29b      	uxth	r3, r3
 800234c:	3b01      	subs	r3, #1
 800234e:	b29a      	uxth	r2, r3
 8002350:	68fb      	ldr	r3, [r7, #12]
 8002352:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002354:	68fb      	ldr	r3, [r7, #12]
 8002356:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002358:	2b00      	cmp	r3, #0
 800235a:	f47f ae94 	bne.w	8002086 <HAL_I2C_Master_Receive+0x1b6>
 800235e:	68fb      	ldr	r3, [r7, #12]
 8002360:	2220      	movs	r2, #32
 8002362:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002366:	68fb      	ldr	r3, [r7, #12]
 8002368:	2200      	movs	r2, #0
 800236a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800236e:	68fb      	ldr	r3, [r7, #12]
 8002370:	2200      	movs	r2, #0
 8002372:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002376:	2300      	movs	r3, #0
 8002378:	e000      	b.n	800237c <HAL_I2C_Master_Receive+0x4ac>
 800237a:	2302      	movs	r3, #2
 800237c:	4618      	mov	r0, r3
 800237e:	3728      	adds	r7, #40	; 0x28
 8002380:	46bd      	mov	sp, r7
 8002382:	bd80      	pop	{r7, pc}
 8002384:	00010004 	.word	0x00010004
 8002388:	20000000 	.word	0x20000000
 800238c:	14f8b589 	.word	0x14f8b589

08002390 <HAL_I2C_IsDeviceReady>:
 8002390:	b580      	push	{r7, lr}
 8002392:	b08a      	sub	sp, #40	; 0x28
 8002394:	af02      	add	r7, sp, #8
 8002396:	60f8      	str	r0, [r7, #12]
 8002398:	607a      	str	r2, [r7, #4]
 800239a:	603b      	str	r3, [r7, #0]
 800239c:	460b      	mov	r3, r1
 800239e:	817b      	strh	r3, [r7, #10]
 80023a0:	f7fe ffcc 	bl	800133c <HAL_GetTick>
 80023a4:	61f8      	str	r0, [r7, #28]
 80023a6:	2301      	movs	r3, #1
 80023a8:	61bb      	str	r3, [r7, #24]
 80023aa:	68fb      	ldr	r3, [r7, #12]
 80023ac:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80023b0:	b2db      	uxtb	r3, r3
 80023b2:	2b20      	cmp	r3, #32
 80023b4:	f040 8111 	bne.w	80025da <HAL_I2C_IsDeviceReady+0x24a>
 80023b8:	69fb      	ldr	r3, [r7, #28]
 80023ba:	9300      	str	r3, [sp, #0]
 80023bc:	2319      	movs	r3, #25
 80023be:	2201      	movs	r2, #1
 80023c0:	4988      	ldr	r1, [pc, #544]	; (80025e4 <HAL_I2C_IsDeviceReady+0x254>)
 80023c2:	68f8      	ldr	r0, [r7, #12]
 80023c4:	f000 fa62 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 80023c8:	4603      	mov	r3, r0
 80023ca:	2b00      	cmp	r3, #0
 80023cc:	d001      	beq.n	80023d2 <HAL_I2C_IsDeviceReady+0x42>
 80023ce:	2302      	movs	r3, #2
 80023d0:	e104      	b.n	80025dc <HAL_I2C_IsDeviceReady+0x24c>
 80023d2:	68fb      	ldr	r3, [r7, #12]
 80023d4:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80023d8:	2b01      	cmp	r3, #1
 80023da:	d101      	bne.n	80023e0 <HAL_I2C_IsDeviceReady+0x50>
 80023dc:	2302      	movs	r3, #2
 80023de:	e0fd      	b.n	80025dc <HAL_I2C_IsDeviceReady+0x24c>
 80023e0:	68fb      	ldr	r3, [r7, #12]
 80023e2:	2201      	movs	r2, #1
 80023e4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80023e8:	68fb      	ldr	r3, [r7, #12]
 80023ea:	681b      	ldr	r3, [r3, #0]
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	f003 0301 	and.w	r3, r3, #1
 80023f2:	2b01      	cmp	r3, #1
 80023f4:	d007      	beq.n	8002406 <HAL_I2C_IsDeviceReady+0x76>
 80023f6:	68fb      	ldr	r3, [r7, #12]
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	681a      	ldr	r2, [r3, #0]
 80023fc:	68fb      	ldr	r3, [r7, #12]
 80023fe:	681b      	ldr	r3, [r3, #0]
 8002400:	f042 0201 	orr.w	r2, r2, #1
 8002404:	601a      	str	r2, [r3, #0]
 8002406:	68fb      	ldr	r3, [r7, #12]
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	681a      	ldr	r2, [r3, #0]
 800240c:	68fb      	ldr	r3, [r7, #12]
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002414:	601a      	str	r2, [r3, #0]
 8002416:	68fb      	ldr	r3, [r7, #12]
 8002418:	2224      	movs	r2, #36	; 0x24
 800241a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800241e:	68fb      	ldr	r3, [r7, #12]
 8002420:	2200      	movs	r2, #0
 8002422:	641a      	str	r2, [r3, #64]	; 0x40
 8002424:	68fb      	ldr	r3, [r7, #12]
 8002426:	4a70      	ldr	r2, [pc, #448]	; (80025e8 <HAL_I2C_IsDeviceReady+0x258>)
 8002428:	62da      	str	r2, [r3, #44]	; 0x2c
 800242a:	68fb      	ldr	r3, [r7, #12]
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	681a      	ldr	r2, [r3, #0]
 8002430:	68fb      	ldr	r3, [r7, #12]
 8002432:	681b      	ldr	r3, [r3, #0]
 8002434:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002438:	601a      	str	r2, [r3, #0]
 800243a:	69fb      	ldr	r3, [r7, #28]
 800243c:	9300      	str	r3, [sp, #0]
 800243e:	683b      	ldr	r3, [r7, #0]
 8002440:	2200      	movs	r2, #0
 8002442:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002446:	68f8      	ldr	r0, [r7, #12]
 8002448:	f000 fa20 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 800244c:	4603      	mov	r3, r0
 800244e:	2b00      	cmp	r3, #0
 8002450:	d00d      	beq.n	800246e <HAL_I2C_IsDeviceReady+0xde>
 8002452:	68fb      	ldr	r3, [r7, #12]
 8002454:	681b      	ldr	r3, [r3, #0]
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800245c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002460:	d103      	bne.n	800246a <HAL_I2C_IsDeviceReady+0xda>
 8002462:	68fb      	ldr	r3, [r7, #12]
 8002464:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002468:	641a      	str	r2, [r3, #64]	; 0x40
 800246a:	2303      	movs	r3, #3
 800246c:	e0b6      	b.n	80025dc <HAL_I2C_IsDeviceReady+0x24c>
 800246e:	897b      	ldrh	r3, [r7, #10]
 8002470:	b2db      	uxtb	r3, r3
 8002472:	461a      	mov	r2, r3
 8002474:	68fb      	ldr	r3, [r7, #12]
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800247c:	611a      	str	r2, [r3, #16]
 800247e:	f7fe ff5d 	bl	800133c <HAL_GetTick>
 8002482:	61f8      	str	r0, [r7, #28]
 8002484:	68fb      	ldr	r3, [r7, #12]
 8002486:	681b      	ldr	r3, [r3, #0]
 8002488:	695b      	ldr	r3, [r3, #20]
 800248a:	f003 0302 	and.w	r3, r3, #2
 800248e:	2b02      	cmp	r3, #2
 8002490:	bf0c      	ite	eq
 8002492:	2301      	moveq	r3, #1
 8002494:	2300      	movne	r3, #0
 8002496:	b2db      	uxtb	r3, r3
 8002498:	75fb      	strb	r3, [r7, #23]
 800249a:	68fb      	ldr	r3, [r7, #12]
 800249c:	681b      	ldr	r3, [r3, #0]
 800249e:	695b      	ldr	r3, [r3, #20]
 80024a0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80024a4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80024a8:	bf0c      	ite	eq
 80024aa:	2301      	moveq	r3, #1
 80024ac:	2300      	movne	r3, #0
 80024ae:	b2db      	uxtb	r3, r3
 80024b0:	75bb      	strb	r3, [r7, #22]
 80024b2:	e025      	b.n	8002500 <HAL_I2C_IsDeviceReady+0x170>
 80024b4:	f7fe ff42 	bl	800133c <HAL_GetTick>
 80024b8:	4602      	mov	r2, r0
 80024ba:	69fb      	ldr	r3, [r7, #28]
 80024bc:	1ad3      	subs	r3, r2, r3
 80024be:	683a      	ldr	r2, [r7, #0]
 80024c0:	429a      	cmp	r2, r3
 80024c2:	d302      	bcc.n	80024ca <HAL_I2C_IsDeviceReady+0x13a>
 80024c4:	683b      	ldr	r3, [r7, #0]
 80024c6:	2b00      	cmp	r3, #0
 80024c8:	d103      	bne.n	80024d2 <HAL_I2C_IsDeviceReady+0x142>
 80024ca:	68fb      	ldr	r3, [r7, #12]
 80024cc:	22a0      	movs	r2, #160	; 0xa0
 80024ce:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80024d2:	68fb      	ldr	r3, [r7, #12]
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	695b      	ldr	r3, [r3, #20]
 80024d8:	f003 0302 	and.w	r3, r3, #2
 80024dc:	2b02      	cmp	r3, #2
 80024de:	bf0c      	ite	eq
 80024e0:	2301      	moveq	r3, #1
 80024e2:	2300      	movne	r3, #0
 80024e4:	b2db      	uxtb	r3, r3
 80024e6:	75fb      	strb	r3, [r7, #23]
 80024e8:	68fb      	ldr	r3, [r7, #12]
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	695b      	ldr	r3, [r3, #20]
 80024ee:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80024f2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80024f6:	bf0c      	ite	eq
 80024f8:	2301      	moveq	r3, #1
 80024fa:	2300      	movne	r3, #0
 80024fc:	b2db      	uxtb	r3, r3
 80024fe:	75bb      	strb	r3, [r7, #22]
 8002500:	68fb      	ldr	r3, [r7, #12]
 8002502:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002506:	b2db      	uxtb	r3, r3
 8002508:	2ba0      	cmp	r3, #160	; 0xa0
 800250a:	d005      	beq.n	8002518 <HAL_I2C_IsDeviceReady+0x188>
 800250c:	7dfb      	ldrb	r3, [r7, #23]
 800250e:	2b00      	cmp	r3, #0
 8002510:	d102      	bne.n	8002518 <HAL_I2C_IsDeviceReady+0x188>
 8002512:	7dbb      	ldrb	r3, [r7, #22]
 8002514:	2b00      	cmp	r3, #0
 8002516:	d0cd      	beq.n	80024b4 <HAL_I2C_IsDeviceReady+0x124>
 8002518:	68fb      	ldr	r3, [r7, #12]
 800251a:	2220      	movs	r2, #32
 800251c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002520:	68fb      	ldr	r3, [r7, #12]
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	695b      	ldr	r3, [r3, #20]
 8002526:	f003 0302 	and.w	r3, r3, #2
 800252a:	2b02      	cmp	r3, #2
 800252c:	d129      	bne.n	8002582 <HAL_I2C_IsDeviceReady+0x1f2>
 800252e:	68fb      	ldr	r3, [r7, #12]
 8002530:	681b      	ldr	r3, [r3, #0]
 8002532:	681a      	ldr	r2, [r3, #0]
 8002534:	68fb      	ldr	r3, [r7, #12]
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800253c:	601a      	str	r2, [r3, #0]
 800253e:	2300      	movs	r3, #0
 8002540:	613b      	str	r3, [r7, #16]
 8002542:	68fb      	ldr	r3, [r7, #12]
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	695b      	ldr	r3, [r3, #20]
 8002548:	613b      	str	r3, [r7, #16]
 800254a:	68fb      	ldr	r3, [r7, #12]
 800254c:	681b      	ldr	r3, [r3, #0]
 800254e:	699b      	ldr	r3, [r3, #24]
 8002550:	613b      	str	r3, [r7, #16]
 8002552:	693b      	ldr	r3, [r7, #16]
 8002554:	69fb      	ldr	r3, [r7, #28]
 8002556:	9300      	str	r3, [sp, #0]
 8002558:	2319      	movs	r3, #25
 800255a:	2201      	movs	r2, #1
 800255c:	4921      	ldr	r1, [pc, #132]	; (80025e4 <HAL_I2C_IsDeviceReady+0x254>)
 800255e:	68f8      	ldr	r0, [r7, #12]
 8002560:	f000 f994 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 8002564:	4603      	mov	r3, r0
 8002566:	2b00      	cmp	r3, #0
 8002568:	d001      	beq.n	800256e <HAL_I2C_IsDeviceReady+0x1de>
 800256a:	2301      	movs	r3, #1
 800256c:	e036      	b.n	80025dc <HAL_I2C_IsDeviceReady+0x24c>
 800256e:	68fb      	ldr	r3, [r7, #12]
 8002570:	2220      	movs	r2, #32
 8002572:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002576:	68fb      	ldr	r3, [r7, #12]
 8002578:	2200      	movs	r2, #0
 800257a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800257e:	2300      	movs	r3, #0
 8002580:	e02c      	b.n	80025dc <HAL_I2C_IsDeviceReady+0x24c>
 8002582:	68fb      	ldr	r3, [r7, #12]
 8002584:	681b      	ldr	r3, [r3, #0]
 8002586:	681a      	ldr	r2, [r3, #0]
 8002588:	68fb      	ldr	r3, [r7, #12]
 800258a:	681b      	ldr	r3, [r3, #0]
 800258c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002590:	601a      	str	r2, [r3, #0]
 8002592:	68fb      	ldr	r3, [r7, #12]
 8002594:	681b      	ldr	r3, [r3, #0]
 8002596:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800259a:	615a      	str	r2, [r3, #20]
 800259c:	69fb      	ldr	r3, [r7, #28]
 800259e:	9300      	str	r3, [sp, #0]
 80025a0:	2319      	movs	r3, #25
 80025a2:	2201      	movs	r2, #1
 80025a4:	490f      	ldr	r1, [pc, #60]	; (80025e4 <HAL_I2C_IsDeviceReady+0x254>)
 80025a6:	68f8      	ldr	r0, [r7, #12]
 80025a8:	f000 f970 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 80025ac:	4603      	mov	r3, r0
 80025ae:	2b00      	cmp	r3, #0
 80025b0:	d001      	beq.n	80025b6 <HAL_I2C_IsDeviceReady+0x226>
 80025b2:	2301      	movs	r3, #1
 80025b4:	e012      	b.n	80025dc <HAL_I2C_IsDeviceReady+0x24c>
 80025b6:	69bb      	ldr	r3, [r7, #24]
 80025b8:	3301      	adds	r3, #1
 80025ba:	61bb      	str	r3, [r7, #24]
 80025bc:	69ba      	ldr	r2, [r7, #24]
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	429a      	cmp	r2, r3
 80025c2:	f4ff af32 	bcc.w	800242a <HAL_I2C_IsDeviceReady+0x9a>
 80025c6:	68fb      	ldr	r3, [r7, #12]
 80025c8:	2220      	movs	r2, #32
 80025ca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80025ce:	68fb      	ldr	r3, [r7, #12]
 80025d0:	2200      	movs	r2, #0
 80025d2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80025d6:	2301      	movs	r3, #1
 80025d8:	e000      	b.n	80025dc <HAL_I2C_IsDeviceReady+0x24c>
 80025da:	2302      	movs	r3, #2
 80025dc:	4618      	mov	r0, r3
 80025de:	3720      	adds	r7, #32
 80025e0:	46bd      	mov	sp, r7
 80025e2:	bd80      	pop	{r7, pc}
 80025e4:	00100002 	.word	0x00100002
 80025e8:	ffff0000 	.word	0xffff0000

080025ec <I2C_MasterRequestWrite>:
 80025ec:	b580      	push	{r7, lr}
 80025ee:	b088      	sub	sp, #32
 80025f0:	af02      	add	r7, sp, #8
 80025f2:	60f8      	str	r0, [r7, #12]
 80025f4:	607a      	str	r2, [r7, #4]
 80025f6:	603b      	str	r3, [r7, #0]
 80025f8:	460b      	mov	r3, r1
 80025fa:	817b      	strh	r3, [r7, #10]
 80025fc:	68fb      	ldr	r3, [r7, #12]
 80025fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002600:	617b      	str	r3, [r7, #20]
 8002602:	697b      	ldr	r3, [r7, #20]
 8002604:	2b08      	cmp	r3, #8
 8002606:	d006      	beq.n	8002616 <I2C_MasterRequestWrite+0x2a>
 8002608:	697b      	ldr	r3, [r7, #20]
 800260a:	2b01      	cmp	r3, #1
 800260c:	d003      	beq.n	8002616 <I2C_MasterRequestWrite+0x2a>
 800260e:	697b      	ldr	r3, [r7, #20]
 8002610:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8002614:	d108      	bne.n	8002628 <I2C_MasterRequestWrite+0x3c>
 8002616:	68fb      	ldr	r3, [r7, #12]
 8002618:	681b      	ldr	r3, [r3, #0]
 800261a:	681a      	ldr	r2, [r3, #0]
 800261c:	68fb      	ldr	r3, [r7, #12]
 800261e:	681b      	ldr	r3, [r3, #0]
 8002620:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002624:	601a      	str	r2, [r3, #0]
 8002626:	e00b      	b.n	8002640 <I2C_MasterRequestWrite+0x54>
 8002628:	68fb      	ldr	r3, [r7, #12]
 800262a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800262c:	2b12      	cmp	r3, #18
 800262e:	d107      	bne.n	8002640 <I2C_MasterRequestWrite+0x54>
 8002630:	68fb      	ldr	r3, [r7, #12]
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	681a      	ldr	r2, [r3, #0]
 8002636:	68fb      	ldr	r3, [r7, #12]
 8002638:	681b      	ldr	r3, [r3, #0]
 800263a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800263e:	601a      	str	r2, [r3, #0]
 8002640:	683b      	ldr	r3, [r7, #0]
 8002642:	9300      	str	r3, [sp, #0]
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	2200      	movs	r2, #0
 8002648:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800264c:	68f8      	ldr	r0, [r7, #12]
 800264e:	f000 f91d 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 8002652:	4603      	mov	r3, r0
 8002654:	2b00      	cmp	r3, #0
 8002656:	d00d      	beq.n	8002674 <I2C_MasterRequestWrite+0x88>
 8002658:	68fb      	ldr	r3, [r7, #12]
 800265a:	681b      	ldr	r3, [r3, #0]
 800265c:	681b      	ldr	r3, [r3, #0]
 800265e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002662:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002666:	d103      	bne.n	8002670 <I2C_MasterRequestWrite+0x84>
 8002668:	68fb      	ldr	r3, [r7, #12]
 800266a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800266e:	641a      	str	r2, [r3, #64]	; 0x40
 8002670:	2303      	movs	r3, #3
 8002672:	e035      	b.n	80026e0 <I2C_MasterRequestWrite+0xf4>
 8002674:	68fb      	ldr	r3, [r7, #12]
 8002676:	691b      	ldr	r3, [r3, #16]
 8002678:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800267c:	d108      	bne.n	8002690 <I2C_MasterRequestWrite+0xa4>
 800267e:	897b      	ldrh	r3, [r7, #10]
 8002680:	b2db      	uxtb	r3, r3
 8002682:	461a      	mov	r2, r3
 8002684:	68fb      	ldr	r3, [r7, #12]
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800268c:	611a      	str	r2, [r3, #16]
 800268e:	e01b      	b.n	80026c8 <I2C_MasterRequestWrite+0xdc>
 8002690:	897b      	ldrh	r3, [r7, #10]
 8002692:	11db      	asrs	r3, r3, #7
 8002694:	b2db      	uxtb	r3, r3
 8002696:	f003 0306 	and.w	r3, r3, #6
 800269a:	b2db      	uxtb	r3, r3
 800269c:	f063 030f 	orn	r3, r3, #15
 80026a0:	b2da      	uxtb	r2, r3
 80026a2:	68fb      	ldr	r3, [r7, #12]
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	611a      	str	r2, [r3, #16]
 80026a8:	683b      	ldr	r3, [r7, #0]
 80026aa:	687a      	ldr	r2, [r7, #4]
 80026ac:	490e      	ldr	r1, [pc, #56]	; (80026e8 <I2C_MasterRequestWrite+0xfc>)
 80026ae:	68f8      	ldr	r0, [r7, #12]
 80026b0:	f000 f943 	bl	800293a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80026b4:	4603      	mov	r3, r0
 80026b6:	2b00      	cmp	r3, #0
 80026b8:	d001      	beq.n	80026be <I2C_MasterRequestWrite+0xd2>
 80026ba:	2301      	movs	r3, #1
 80026bc:	e010      	b.n	80026e0 <I2C_MasterRequestWrite+0xf4>
 80026be:	897b      	ldrh	r3, [r7, #10]
 80026c0:	b2da      	uxtb	r2, r3
 80026c2:	68fb      	ldr	r3, [r7, #12]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	611a      	str	r2, [r3, #16]
 80026c8:	683b      	ldr	r3, [r7, #0]
 80026ca:	687a      	ldr	r2, [r7, #4]
 80026cc:	4907      	ldr	r1, [pc, #28]	; (80026ec <I2C_MasterRequestWrite+0x100>)
 80026ce:	68f8      	ldr	r0, [r7, #12]
 80026d0:	f000 f933 	bl	800293a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80026d4:	4603      	mov	r3, r0
 80026d6:	2b00      	cmp	r3, #0
 80026d8:	d001      	beq.n	80026de <I2C_MasterRequestWrite+0xf2>
 80026da:	2301      	movs	r3, #1
 80026dc:	e000      	b.n	80026e0 <I2C_MasterRequestWrite+0xf4>
 80026de:	2300      	movs	r3, #0
 80026e0:	4618      	mov	r0, r3
 80026e2:	3718      	adds	r7, #24
 80026e4:	46bd      	mov	sp, r7
 80026e6:	bd80      	pop	{r7, pc}
 80026e8:	00010008 	.word	0x00010008
 80026ec:	00010002 	.word	0x00010002

080026f0 <I2C_MasterRequestRead>:
 80026f0:	b580      	push	{r7, lr}
 80026f2:	b088      	sub	sp, #32
 80026f4:	af02      	add	r7, sp, #8
 80026f6:	60f8      	str	r0, [r7, #12]
 80026f8:	607a      	str	r2, [r7, #4]
 80026fa:	603b      	str	r3, [r7, #0]
 80026fc:	460b      	mov	r3, r1
 80026fe:	817b      	strh	r3, [r7, #10]
 8002700:	68fb      	ldr	r3, [r7, #12]
 8002702:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002704:	617b      	str	r3, [r7, #20]
 8002706:	68fb      	ldr	r3, [r7, #12]
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	681a      	ldr	r2, [r3, #0]
 800270c:	68fb      	ldr	r3, [r7, #12]
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002714:	601a      	str	r2, [r3, #0]
 8002716:	697b      	ldr	r3, [r7, #20]
 8002718:	2b08      	cmp	r3, #8
 800271a:	d006      	beq.n	800272a <I2C_MasterRequestRead+0x3a>
 800271c:	697b      	ldr	r3, [r7, #20]
 800271e:	2b01      	cmp	r3, #1
 8002720:	d003      	beq.n	800272a <I2C_MasterRequestRead+0x3a>
 8002722:	697b      	ldr	r3, [r7, #20]
 8002724:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8002728:	d108      	bne.n	800273c <I2C_MasterRequestRead+0x4c>
 800272a:	68fb      	ldr	r3, [r7, #12]
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	681a      	ldr	r2, [r3, #0]
 8002730:	68fb      	ldr	r3, [r7, #12]
 8002732:	681b      	ldr	r3, [r3, #0]
 8002734:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002738:	601a      	str	r2, [r3, #0]
 800273a:	e00b      	b.n	8002754 <I2C_MasterRequestRead+0x64>
 800273c:	68fb      	ldr	r3, [r7, #12]
 800273e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002740:	2b11      	cmp	r3, #17
 8002742:	d107      	bne.n	8002754 <I2C_MasterRequestRead+0x64>
 8002744:	68fb      	ldr	r3, [r7, #12]
 8002746:	681b      	ldr	r3, [r3, #0]
 8002748:	681a      	ldr	r2, [r3, #0]
 800274a:	68fb      	ldr	r3, [r7, #12]
 800274c:	681b      	ldr	r3, [r3, #0]
 800274e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002752:	601a      	str	r2, [r3, #0]
 8002754:	683b      	ldr	r3, [r7, #0]
 8002756:	9300      	str	r3, [sp, #0]
 8002758:	687b      	ldr	r3, [r7, #4]
 800275a:	2200      	movs	r2, #0
 800275c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002760:	68f8      	ldr	r0, [r7, #12]
 8002762:	f000 f893 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 8002766:	4603      	mov	r3, r0
 8002768:	2b00      	cmp	r3, #0
 800276a:	d00d      	beq.n	8002788 <I2C_MasterRequestRead+0x98>
 800276c:	68fb      	ldr	r3, [r7, #12]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	681b      	ldr	r3, [r3, #0]
 8002772:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002776:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800277a:	d103      	bne.n	8002784 <I2C_MasterRequestRead+0x94>
 800277c:	68fb      	ldr	r3, [r7, #12]
 800277e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002782:	641a      	str	r2, [r3, #64]	; 0x40
 8002784:	2303      	movs	r3, #3
 8002786:	e079      	b.n	800287c <I2C_MasterRequestRead+0x18c>
 8002788:	68fb      	ldr	r3, [r7, #12]
 800278a:	691b      	ldr	r3, [r3, #16]
 800278c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002790:	d108      	bne.n	80027a4 <I2C_MasterRequestRead+0xb4>
 8002792:	897b      	ldrh	r3, [r7, #10]
 8002794:	b2db      	uxtb	r3, r3
 8002796:	f043 0301 	orr.w	r3, r3, #1
 800279a:	b2da      	uxtb	r2, r3
 800279c:	68fb      	ldr	r3, [r7, #12]
 800279e:	681b      	ldr	r3, [r3, #0]
 80027a0:	611a      	str	r2, [r3, #16]
 80027a2:	e05f      	b.n	8002864 <I2C_MasterRequestRead+0x174>
 80027a4:	897b      	ldrh	r3, [r7, #10]
 80027a6:	11db      	asrs	r3, r3, #7
 80027a8:	b2db      	uxtb	r3, r3
 80027aa:	f003 0306 	and.w	r3, r3, #6
 80027ae:	b2db      	uxtb	r3, r3
 80027b0:	f063 030f 	orn	r3, r3, #15
 80027b4:	b2da      	uxtb	r2, r3
 80027b6:	68fb      	ldr	r3, [r7, #12]
 80027b8:	681b      	ldr	r3, [r3, #0]
 80027ba:	611a      	str	r2, [r3, #16]
 80027bc:	683b      	ldr	r3, [r7, #0]
 80027be:	687a      	ldr	r2, [r7, #4]
 80027c0:	4930      	ldr	r1, [pc, #192]	; (8002884 <I2C_MasterRequestRead+0x194>)
 80027c2:	68f8      	ldr	r0, [r7, #12]
 80027c4:	f000 f8b9 	bl	800293a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80027c8:	4603      	mov	r3, r0
 80027ca:	2b00      	cmp	r3, #0
 80027cc:	d001      	beq.n	80027d2 <I2C_MasterRequestRead+0xe2>
 80027ce:	2301      	movs	r3, #1
 80027d0:	e054      	b.n	800287c <I2C_MasterRequestRead+0x18c>
 80027d2:	897b      	ldrh	r3, [r7, #10]
 80027d4:	b2da      	uxtb	r2, r3
 80027d6:	68fb      	ldr	r3, [r7, #12]
 80027d8:	681b      	ldr	r3, [r3, #0]
 80027da:	611a      	str	r2, [r3, #16]
 80027dc:	683b      	ldr	r3, [r7, #0]
 80027de:	687a      	ldr	r2, [r7, #4]
 80027e0:	4929      	ldr	r1, [pc, #164]	; (8002888 <I2C_MasterRequestRead+0x198>)
 80027e2:	68f8      	ldr	r0, [r7, #12]
 80027e4:	f000 f8a9 	bl	800293a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80027e8:	4603      	mov	r3, r0
 80027ea:	2b00      	cmp	r3, #0
 80027ec:	d001      	beq.n	80027f2 <I2C_MasterRequestRead+0x102>
 80027ee:	2301      	movs	r3, #1
 80027f0:	e044      	b.n	800287c <I2C_MasterRequestRead+0x18c>
 80027f2:	2300      	movs	r3, #0
 80027f4:	613b      	str	r3, [r7, #16]
 80027f6:	68fb      	ldr	r3, [r7, #12]
 80027f8:	681b      	ldr	r3, [r3, #0]
 80027fa:	695b      	ldr	r3, [r3, #20]
 80027fc:	613b      	str	r3, [r7, #16]
 80027fe:	68fb      	ldr	r3, [r7, #12]
 8002800:	681b      	ldr	r3, [r3, #0]
 8002802:	699b      	ldr	r3, [r3, #24]
 8002804:	613b      	str	r3, [r7, #16]
 8002806:	693b      	ldr	r3, [r7, #16]
 8002808:	68fb      	ldr	r3, [r7, #12]
 800280a:	681b      	ldr	r3, [r3, #0]
 800280c:	681a      	ldr	r2, [r3, #0]
 800280e:	68fb      	ldr	r3, [r7, #12]
 8002810:	681b      	ldr	r3, [r3, #0]
 8002812:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002816:	601a      	str	r2, [r3, #0]
 8002818:	683b      	ldr	r3, [r7, #0]
 800281a:	9300      	str	r3, [sp, #0]
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	2200      	movs	r2, #0
 8002820:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002824:	68f8      	ldr	r0, [r7, #12]
 8002826:	f000 f831 	bl	800288c <I2C_WaitOnFlagUntilTimeout>
 800282a:	4603      	mov	r3, r0
 800282c:	2b00      	cmp	r3, #0
 800282e:	d00d      	beq.n	800284c <I2C_MasterRequestRead+0x15c>
 8002830:	68fb      	ldr	r3, [r7, #12]
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800283a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800283e:	d103      	bne.n	8002848 <I2C_MasterRequestRead+0x158>
 8002840:	68fb      	ldr	r3, [r7, #12]
 8002842:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002846:	641a      	str	r2, [r3, #64]	; 0x40
 8002848:	2303      	movs	r3, #3
 800284a:	e017      	b.n	800287c <I2C_MasterRequestRead+0x18c>
 800284c:	897b      	ldrh	r3, [r7, #10]
 800284e:	11db      	asrs	r3, r3, #7
 8002850:	b2db      	uxtb	r3, r3
 8002852:	f003 0306 	and.w	r3, r3, #6
 8002856:	b2db      	uxtb	r3, r3
 8002858:	f063 030e 	orn	r3, r3, #14
 800285c:	b2da      	uxtb	r2, r3
 800285e:	68fb      	ldr	r3, [r7, #12]
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	611a      	str	r2, [r3, #16]
 8002864:	683b      	ldr	r3, [r7, #0]
 8002866:	687a      	ldr	r2, [r7, #4]
 8002868:	4907      	ldr	r1, [pc, #28]	; (8002888 <I2C_MasterRequestRead+0x198>)
 800286a:	68f8      	ldr	r0, [r7, #12]
 800286c:	f000 f865 	bl	800293a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002870:	4603      	mov	r3, r0
 8002872:	2b00      	cmp	r3, #0
 8002874:	d001      	beq.n	800287a <I2C_MasterRequestRead+0x18a>
 8002876:	2301      	movs	r3, #1
 8002878:	e000      	b.n	800287c <I2C_MasterRequestRead+0x18c>
 800287a:	2300      	movs	r3, #0
 800287c:	4618      	mov	r0, r3
 800287e:	3718      	adds	r7, #24
 8002880:	46bd      	mov	sp, r7
 8002882:	bd80      	pop	{r7, pc}
 8002884:	00010008 	.word	0x00010008
 8002888:	00010002 	.word	0x00010002

0800288c <I2C_WaitOnFlagUntilTimeout>:
 800288c:	b580      	push	{r7, lr}
 800288e:	b084      	sub	sp, #16
 8002890:	af00      	add	r7, sp, #0
 8002892:	60f8      	str	r0, [r7, #12]
 8002894:	60b9      	str	r1, [r7, #8]
 8002896:	603b      	str	r3, [r7, #0]
 8002898:	4613      	mov	r3, r2
 800289a:	71fb      	strb	r3, [r7, #7]
 800289c:	e025      	b.n	80028ea <I2C_WaitOnFlagUntilTimeout+0x5e>
 800289e:	683b      	ldr	r3, [r7, #0]
 80028a0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80028a4:	d021      	beq.n	80028ea <I2C_WaitOnFlagUntilTimeout+0x5e>
 80028a6:	f7fe fd49 	bl	800133c <HAL_GetTick>
 80028aa:	4602      	mov	r2, r0
 80028ac:	69bb      	ldr	r3, [r7, #24]
 80028ae:	1ad3      	subs	r3, r2, r3
 80028b0:	683a      	ldr	r2, [r7, #0]
 80028b2:	429a      	cmp	r2, r3
 80028b4:	d302      	bcc.n	80028bc <I2C_WaitOnFlagUntilTimeout+0x30>
 80028b6:	683b      	ldr	r3, [r7, #0]
 80028b8:	2b00      	cmp	r3, #0
 80028ba:	d116      	bne.n	80028ea <I2C_WaitOnFlagUntilTimeout+0x5e>
 80028bc:	68fb      	ldr	r3, [r7, #12]
 80028be:	2200      	movs	r2, #0
 80028c0:	631a      	str	r2, [r3, #48]	; 0x30
 80028c2:	68fb      	ldr	r3, [r7, #12]
 80028c4:	2220      	movs	r2, #32
 80028c6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80028ca:	68fb      	ldr	r3, [r7, #12]
 80028cc:	2200      	movs	r2, #0
 80028ce:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80028d2:	68fb      	ldr	r3, [r7, #12]
 80028d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80028d6:	f043 0220 	orr.w	r2, r3, #32
 80028da:	68fb      	ldr	r3, [r7, #12]
 80028dc:	641a      	str	r2, [r3, #64]	; 0x40
 80028de:	68fb      	ldr	r3, [r7, #12]
 80028e0:	2200      	movs	r2, #0
 80028e2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80028e6:	2301      	movs	r3, #1
 80028e8:	e023      	b.n	8002932 <I2C_WaitOnFlagUntilTimeout+0xa6>
 80028ea:	68bb      	ldr	r3, [r7, #8]
 80028ec:	0c1b      	lsrs	r3, r3, #16
 80028ee:	b2db      	uxtb	r3, r3
 80028f0:	2b01      	cmp	r3, #1
 80028f2:	d10d      	bne.n	8002910 <I2C_WaitOnFlagUntilTimeout+0x84>
 80028f4:	68fb      	ldr	r3, [r7, #12]
 80028f6:	681b      	ldr	r3, [r3, #0]
 80028f8:	695b      	ldr	r3, [r3, #20]
 80028fa:	43da      	mvns	r2, r3
 80028fc:	68bb      	ldr	r3, [r7, #8]
 80028fe:	4013      	ands	r3, r2
 8002900:	b29b      	uxth	r3, r3
 8002902:	2b00      	cmp	r3, #0
 8002904:	bf0c      	ite	eq
 8002906:	2301      	moveq	r3, #1
 8002908:	2300      	movne	r3, #0
 800290a:	b2db      	uxtb	r3, r3
 800290c:	461a      	mov	r2, r3
 800290e:	e00c      	b.n	800292a <I2C_WaitOnFlagUntilTimeout+0x9e>
 8002910:	68fb      	ldr	r3, [r7, #12]
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	699b      	ldr	r3, [r3, #24]
 8002916:	43da      	mvns	r2, r3
 8002918:	68bb      	ldr	r3, [r7, #8]
 800291a:	4013      	ands	r3, r2
 800291c:	b29b      	uxth	r3, r3
 800291e:	2b00      	cmp	r3, #0
 8002920:	bf0c      	ite	eq
 8002922:	2301      	moveq	r3, #1
 8002924:	2300      	movne	r3, #0
 8002926:	b2db      	uxtb	r3, r3
 8002928:	461a      	mov	r2, r3
 800292a:	79fb      	ldrb	r3, [r7, #7]
 800292c:	429a      	cmp	r2, r3
 800292e:	d0b6      	beq.n	800289e <I2C_WaitOnFlagUntilTimeout+0x12>
 8002930:	2300      	movs	r3, #0
 8002932:	4618      	mov	r0, r3
 8002934:	3710      	adds	r7, #16
 8002936:	46bd      	mov	sp, r7
 8002938:	bd80      	pop	{r7, pc}

0800293a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 800293a:	b580      	push	{r7, lr}
 800293c:	b084      	sub	sp, #16
 800293e:	af00      	add	r7, sp, #0
 8002940:	60f8      	str	r0, [r7, #12]
 8002942:	60b9      	str	r1, [r7, #8]
 8002944:	607a      	str	r2, [r7, #4]
 8002946:	603b      	str	r3, [r7, #0]
 8002948:	e051      	b.n	80029ee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800294a:	68fb      	ldr	r3, [r7, #12]
 800294c:	681b      	ldr	r3, [r3, #0]
 800294e:	695b      	ldr	r3, [r3, #20]
 8002950:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002954:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002958:	d123      	bne.n	80029a2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800295a:	68fb      	ldr	r3, [r7, #12]
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	681a      	ldr	r2, [r3, #0]
 8002960:	68fb      	ldr	r3, [r7, #12]
 8002962:	681b      	ldr	r3, [r3, #0]
 8002964:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002968:	601a      	str	r2, [r3, #0]
 800296a:	68fb      	ldr	r3, [r7, #12]
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002972:	615a      	str	r2, [r3, #20]
 8002974:	68fb      	ldr	r3, [r7, #12]
 8002976:	2200      	movs	r2, #0
 8002978:	631a      	str	r2, [r3, #48]	; 0x30
 800297a:	68fb      	ldr	r3, [r7, #12]
 800297c:	2220      	movs	r2, #32
 800297e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002982:	68fb      	ldr	r3, [r7, #12]
 8002984:	2200      	movs	r2, #0
 8002986:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800298a:	68fb      	ldr	r3, [r7, #12]
 800298c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800298e:	f043 0204 	orr.w	r2, r3, #4
 8002992:	68fb      	ldr	r3, [r7, #12]
 8002994:	641a      	str	r2, [r3, #64]	; 0x40
 8002996:	68fb      	ldr	r3, [r7, #12]
 8002998:	2200      	movs	r2, #0
 800299a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800299e:	2301      	movs	r3, #1
 80029a0:	e046      	b.n	8002a30 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80029a8:	d021      	beq.n	80029ee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80029aa:	f7fe fcc7 	bl	800133c <HAL_GetTick>
 80029ae:	4602      	mov	r2, r0
 80029b0:	683b      	ldr	r3, [r7, #0]
 80029b2:	1ad3      	subs	r3, r2, r3
 80029b4:	687a      	ldr	r2, [r7, #4]
 80029b6:	429a      	cmp	r2, r3
 80029b8:	d302      	bcc.n	80029c0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	2b00      	cmp	r3, #0
 80029be:	d116      	bne.n	80029ee <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80029c0:	68fb      	ldr	r3, [r7, #12]
 80029c2:	2200      	movs	r2, #0
 80029c4:	631a      	str	r2, [r3, #48]	; 0x30
 80029c6:	68fb      	ldr	r3, [r7, #12]
 80029c8:	2220      	movs	r2, #32
 80029ca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80029ce:	68fb      	ldr	r3, [r7, #12]
 80029d0:	2200      	movs	r2, #0
 80029d2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80029d6:	68fb      	ldr	r3, [r7, #12]
 80029d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029da:	f043 0220 	orr.w	r2, r3, #32
 80029de:	68fb      	ldr	r3, [r7, #12]
 80029e0:	641a      	str	r2, [r3, #64]	; 0x40
 80029e2:	68fb      	ldr	r3, [r7, #12]
 80029e4:	2200      	movs	r2, #0
 80029e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80029ea:	2301      	movs	r3, #1
 80029ec:	e020      	b.n	8002a30 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 80029ee:	68bb      	ldr	r3, [r7, #8]
 80029f0:	0c1b      	lsrs	r3, r3, #16
 80029f2:	b2db      	uxtb	r3, r3
 80029f4:	2b01      	cmp	r3, #1
 80029f6:	d10c      	bne.n	8002a12 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 80029f8:	68fb      	ldr	r3, [r7, #12]
 80029fa:	681b      	ldr	r3, [r3, #0]
 80029fc:	695b      	ldr	r3, [r3, #20]
 80029fe:	43da      	mvns	r2, r3
 8002a00:	68bb      	ldr	r3, [r7, #8]
 8002a02:	4013      	ands	r3, r2
 8002a04:	b29b      	uxth	r3, r3
 8002a06:	2b00      	cmp	r3, #0
 8002a08:	bf14      	ite	ne
 8002a0a:	2301      	movne	r3, #1
 8002a0c:	2300      	moveq	r3, #0
 8002a0e:	b2db      	uxtb	r3, r3
 8002a10:	e00b      	b.n	8002a2a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8002a12:	68fb      	ldr	r3, [r7, #12]
 8002a14:	681b      	ldr	r3, [r3, #0]
 8002a16:	699b      	ldr	r3, [r3, #24]
 8002a18:	43da      	mvns	r2, r3
 8002a1a:	68bb      	ldr	r3, [r7, #8]
 8002a1c:	4013      	ands	r3, r2
 8002a1e:	b29b      	uxth	r3, r3
 8002a20:	2b00      	cmp	r3, #0
 8002a22:	bf14      	ite	ne
 8002a24:	2301      	movne	r3, #1
 8002a26:	2300      	moveq	r3, #0
 8002a28:	b2db      	uxtb	r3, r3
 8002a2a:	2b00      	cmp	r3, #0
 8002a2c:	d18d      	bne.n	800294a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8002a2e:	2300      	movs	r3, #0
 8002a30:	4618      	mov	r0, r3
 8002a32:	3710      	adds	r7, #16
 8002a34:	46bd      	mov	sp, r7
 8002a36:	bd80      	pop	{r7, pc}

08002a38 <I2C_WaitOnTXEFlagUntilTimeout>:
 8002a38:	b580      	push	{r7, lr}
 8002a3a:	b084      	sub	sp, #16
 8002a3c:	af00      	add	r7, sp, #0
 8002a3e:	60f8      	str	r0, [r7, #12]
 8002a40:	60b9      	str	r1, [r7, #8]
 8002a42:	607a      	str	r2, [r7, #4]
 8002a44:	e02d      	b.n	8002aa2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8002a46:	68f8      	ldr	r0, [r7, #12]
 8002a48:	f000 f8ce 	bl	8002be8 <I2C_IsAcknowledgeFailed>
 8002a4c:	4603      	mov	r3, r0
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	d001      	beq.n	8002a56 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8002a52:	2301      	movs	r3, #1
 8002a54:	e02d      	b.n	8002ab2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8002a56:	68bb      	ldr	r3, [r7, #8]
 8002a58:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a5c:	d021      	beq.n	8002aa2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8002a5e:	f7fe fc6d 	bl	800133c <HAL_GetTick>
 8002a62:	4602      	mov	r2, r0
 8002a64:	687b      	ldr	r3, [r7, #4]
 8002a66:	1ad3      	subs	r3, r2, r3
 8002a68:	68ba      	ldr	r2, [r7, #8]
 8002a6a:	429a      	cmp	r2, r3
 8002a6c:	d302      	bcc.n	8002a74 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8002a6e:	68bb      	ldr	r3, [r7, #8]
 8002a70:	2b00      	cmp	r3, #0
 8002a72:	d116      	bne.n	8002aa2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8002a74:	68fb      	ldr	r3, [r7, #12]
 8002a76:	2200      	movs	r2, #0
 8002a78:	631a      	str	r2, [r3, #48]	; 0x30
 8002a7a:	68fb      	ldr	r3, [r7, #12]
 8002a7c:	2220      	movs	r2, #32
 8002a7e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002a82:	68fb      	ldr	r3, [r7, #12]
 8002a84:	2200      	movs	r2, #0
 8002a86:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002a8a:	68fb      	ldr	r3, [r7, #12]
 8002a8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a8e:	f043 0220 	orr.w	r2, r3, #32
 8002a92:	68fb      	ldr	r3, [r7, #12]
 8002a94:	641a      	str	r2, [r3, #64]	; 0x40
 8002a96:	68fb      	ldr	r3, [r7, #12]
 8002a98:	2200      	movs	r2, #0
 8002a9a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002a9e:	2301      	movs	r3, #1
 8002aa0:	e007      	b.n	8002ab2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	681b      	ldr	r3, [r3, #0]
 8002aa6:	695b      	ldr	r3, [r3, #20]
 8002aa8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002aac:	2b80      	cmp	r3, #128	; 0x80
 8002aae:	d1ca      	bne.n	8002a46 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8002ab0:	2300      	movs	r3, #0
 8002ab2:	4618      	mov	r0, r3
 8002ab4:	3710      	adds	r7, #16
 8002ab6:	46bd      	mov	sp, r7
 8002ab8:	bd80      	pop	{r7, pc}

08002aba <I2C_WaitOnBTFFlagUntilTimeout>:
 8002aba:	b580      	push	{r7, lr}
 8002abc:	b084      	sub	sp, #16
 8002abe:	af00      	add	r7, sp, #0
 8002ac0:	60f8      	str	r0, [r7, #12]
 8002ac2:	60b9      	str	r1, [r7, #8]
 8002ac4:	607a      	str	r2, [r7, #4]
 8002ac6:	e02d      	b.n	8002b24 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8002ac8:	68f8      	ldr	r0, [r7, #12]
 8002aca:	f000 f88d 	bl	8002be8 <I2C_IsAcknowledgeFailed>
 8002ace:	4603      	mov	r3, r0
 8002ad0:	2b00      	cmp	r3, #0
 8002ad2:	d001      	beq.n	8002ad8 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8002ad4:	2301      	movs	r3, #1
 8002ad6:	e02d      	b.n	8002b34 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8002ad8:	68bb      	ldr	r3, [r7, #8]
 8002ada:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ade:	d021      	beq.n	8002b24 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8002ae0:	f7fe fc2c 	bl	800133c <HAL_GetTick>
 8002ae4:	4602      	mov	r2, r0
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	1ad3      	subs	r3, r2, r3
 8002aea:	68ba      	ldr	r2, [r7, #8]
 8002aec:	429a      	cmp	r2, r3
 8002aee:	d302      	bcc.n	8002af6 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8002af0:	68bb      	ldr	r3, [r7, #8]
 8002af2:	2b00      	cmp	r3, #0
 8002af4:	d116      	bne.n	8002b24 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8002af6:	68fb      	ldr	r3, [r7, #12]
 8002af8:	2200      	movs	r2, #0
 8002afa:	631a      	str	r2, [r3, #48]	; 0x30
 8002afc:	68fb      	ldr	r3, [r7, #12]
 8002afe:	2220      	movs	r2, #32
 8002b00:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b04:	68fb      	ldr	r3, [r7, #12]
 8002b06:	2200      	movs	r2, #0
 8002b08:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b0c:	68fb      	ldr	r3, [r7, #12]
 8002b0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b10:	f043 0220 	orr.w	r2, r3, #32
 8002b14:	68fb      	ldr	r3, [r7, #12]
 8002b16:	641a      	str	r2, [r3, #64]	; 0x40
 8002b18:	68fb      	ldr	r3, [r7, #12]
 8002b1a:	2200      	movs	r2, #0
 8002b1c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b20:	2301      	movs	r3, #1
 8002b22:	e007      	b.n	8002b34 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8002b24:	68fb      	ldr	r3, [r7, #12]
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	695b      	ldr	r3, [r3, #20]
 8002b2a:	f003 0304 	and.w	r3, r3, #4
 8002b2e:	2b04      	cmp	r3, #4
 8002b30:	d1ca      	bne.n	8002ac8 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8002b32:	2300      	movs	r3, #0
 8002b34:	4618      	mov	r0, r3
 8002b36:	3710      	adds	r7, #16
 8002b38:	46bd      	mov	sp, r7
 8002b3a:	bd80      	pop	{r7, pc}

08002b3c <I2C_WaitOnRXNEFlagUntilTimeout>:
 8002b3c:	b580      	push	{r7, lr}
 8002b3e:	b084      	sub	sp, #16
 8002b40:	af00      	add	r7, sp, #0
 8002b42:	60f8      	str	r0, [r7, #12]
 8002b44:	60b9      	str	r1, [r7, #8]
 8002b46:	607a      	str	r2, [r7, #4]
 8002b48:	e042      	b.n	8002bd0 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8002b4a:	68fb      	ldr	r3, [r7, #12]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	695b      	ldr	r3, [r3, #20]
 8002b50:	f003 0310 	and.w	r3, r3, #16
 8002b54:	2b10      	cmp	r3, #16
 8002b56:	d119      	bne.n	8002b8c <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8002b58:	68fb      	ldr	r3, [r7, #12]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	f06f 0210 	mvn.w	r2, #16
 8002b60:	615a      	str	r2, [r3, #20]
 8002b62:	68fb      	ldr	r3, [r7, #12]
 8002b64:	2200      	movs	r2, #0
 8002b66:	631a      	str	r2, [r3, #48]	; 0x30
 8002b68:	68fb      	ldr	r3, [r7, #12]
 8002b6a:	2220      	movs	r2, #32
 8002b6c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	2200      	movs	r2, #0
 8002b74:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b78:	68fb      	ldr	r3, [r7, #12]
 8002b7a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002b7c:	68fb      	ldr	r3, [r7, #12]
 8002b7e:	641a      	str	r2, [r3, #64]	; 0x40
 8002b80:	68fb      	ldr	r3, [r7, #12]
 8002b82:	2200      	movs	r2, #0
 8002b84:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b88:	2301      	movs	r3, #1
 8002b8a:	e029      	b.n	8002be0 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8002b8c:	f7fe fbd6 	bl	800133c <HAL_GetTick>
 8002b90:	4602      	mov	r2, r0
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	1ad3      	subs	r3, r2, r3
 8002b96:	68ba      	ldr	r2, [r7, #8]
 8002b98:	429a      	cmp	r2, r3
 8002b9a:	d302      	bcc.n	8002ba2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8002b9c:	68bb      	ldr	r3, [r7, #8]
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d116      	bne.n	8002bd0 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8002ba2:	68fb      	ldr	r3, [r7, #12]
 8002ba4:	2200      	movs	r2, #0
 8002ba6:	631a      	str	r2, [r3, #48]	; 0x30
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	2220      	movs	r2, #32
 8002bac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002bb0:	68fb      	ldr	r3, [r7, #12]
 8002bb2:	2200      	movs	r2, #0
 8002bb4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002bb8:	68fb      	ldr	r3, [r7, #12]
 8002bba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bbc:	f043 0220 	orr.w	r2, r3, #32
 8002bc0:	68fb      	ldr	r3, [r7, #12]
 8002bc2:	641a      	str	r2, [r3, #64]	; 0x40
 8002bc4:	68fb      	ldr	r3, [r7, #12]
 8002bc6:	2200      	movs	r2, #0
 8002bc8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002bcc:	2301      	movs	r3, #1
 8002bce:	e007      	b.n	8002be0 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8002bd0:	68fb      	ldr	r3, [r7, #12]
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	695b      	ldr	r3, [r3, #20]
 8002bd6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002bda:	2b40      	cmp	r3, #64	; 0x40
 8002bdc:	d1b5      	bne.n	8002b4a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8002bde:	2300      	movs	r3, #0
 8002be0:	4618      	mov	r0, r3
 8002be2:	3710      	adds	r7, #16
 8002be4:	46bd      	mov	sp, r7
 8002be6:	bd80      	pop	{r7, pc}

08002be8 <I2C_IsAcknowledgeFailed>:
 8002be8:	b480      	push	{r7}
 8002bea:	b083      	sub	sp, #12
 8002bec:	af00      	add	r7, sp, #0
 8002bee:	6078      	str	r0, [r7, #4]
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	695b      	ldr	r3, [r3, #20]
 8002bf6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002bfa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002bfe:	d11b      	bne.n	8002c38 <I2C_IsAcknowledgeFailed+0x50>
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002c08:	615a      	str	r2, [r3, #20]
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	2200      	movs	r2, #0
 8002c0e:	631a      	str	r2, [r3, #48]	; 0x30
 8002c10:	687b      	ldr	r3, [r7, #4]
 8002c12:	2220      	movs	r2, #32
 8002c14:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	2200      	movs	r2, #0
 8002c1c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c24:	f043 0204 	orr.w	r2, r3, #4
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	641a      	str	r2, [r3, #64]	; 0x40
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	2200      	movs	r2, #0
 8002c30:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c34:	2301      	movs	r3, #1
 8002c36:	e000      	b.n	8002c3a <I2C_IsAcknowledgeFailed+0x52>
 8002c38:	2300      	movs	r3, #0
 8002c3a:	4618      	mov	r0, r3
 8002c3c:	370c      	adds	r7, #12
 8002c3e:	46bd      	mov	sp, r7
 8002c40:	bc80      	pop	{r7}
 8002c42:	4770      	bx	lr

08002c44 <HAL_RCC_OscConfig>:
 8002c44:	b580      	push	{r7, lr}
 8002c46:	b086      	sub	sp, #24
 8002c48:	af00      	add	r7, sp, #0
 8002c4a:	6078      	str	r0, [r7, #4]
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d101      	bne.n	8002c56 <HAL_RCC_OscConfig+0x12>
 8002c52:	2301      	movs	r3, #1
 8002c54:	e272      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	f003 0301 	and.w	r3, r3, #1
 8002c5e:	2b00      	cmp	r3, #0
 8002c60:	f000 8087 	beq.w	8002d72 <HAL_RCC_OscConfig+0x12e>
 8002c64:	4b92      	ldr	r3, [pc, #584]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002c66:	685b      	ldr	r3, [r3, #4]
 8002c68:	f003 030c 	and.w	r3, r3, #12
 8002c6c:	2b04      	cmp	r3, #4
 8002c6e:	d00c      	beq.n	8002c8a <HAL_RCC_OscConfig+0x46>
 8002c70:	4b8f      	ldr	r3, [pc, #572]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002c72:	685b      	ldr	r3, [r3, #4]
 8002c74:	f003 030c 	and.w	r3, r3, #12
 8002c78:	2b08      	cmp	r3, #8
 8002c7a:	d112      	bne.n	8002ca2 <HAL_RCC_OscConfig+0x5e>
 8002c7c:	4b8c      	ldr	r3, [pc, #560]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002c7e:	685b      	ldr	r3, [r3, #4]
 8002c80:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002c84:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002c88:	d10b      	bne.n	8002ca2 <HAL_RCC_OscConfig+0x5e>
 8002c8a:	4b89      	ldr	r3, [pc, #548]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002c92:	2b00      	cmp	r3, #0
 8002c94:	d06c      	beq.n	8002d70 <HAL_RCC_OscConfig+0x12c>
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	685b      	ldr	r3, [r3, #4]
 8002c9a:	2b00      	cmp	r3, #0
 8002c9c:	d168      	bne.n	8002d70 <HAL_RCC_OscConfig+0x12c>
 8002c9e:	2301      	movs	r3, #1
 8002ca0:	e24c      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	685b      	ldr	r3, [r3, #4]
 8002ca6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002caa:	d106      	bne.n	8002cba <HAL_RCC_OscConfig+0x76>
 8002cac:	4b80      	ldr	r3, [pc, #512]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	4a7f      	ldr	r2, [pc, #508]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002cb2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002cb6:	6013      	str	r3, [r2, #0]
 8002cb8:	e02e      	b.n	8002d18 <HAL_RCC_OscConfig+0xd4>
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	685b      	ldr	r3, [r3, #4]
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d10c      	bne.n	8002cdc <HAL_RCC_OscConfig+0x98>
 8002cc2:	4b7b      	ldr	r3, [pc, #492]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	4a7a      	ldr	r2, [pc, #488]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002cc8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002ccc:	6013      	str	r3, [r2, #0]
 8002cce:	4b78      	ldr	r3, [pc, #480]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002cd0:	681b      	ldr	r3, [r3, #0]
 8002cd2:	4a77      	ldr	r2, [pc, #476]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002cd4:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002cd8:	6013      	str	r3, [r2, #0]
 8002cda:	e01d      	b.n	8002d18 <HAL_RCC_OscConfig+0xd4>
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	685b      	ldr	r3, [r3, #4]
 8002ce0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002ce4:	d10c      	bne.n	8002d00 <HAL_RCC_OscConfig+0xbc>
 8002ce6:	4b72      	ldr	r3, [pc, #456]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002ce8:	681b      	ldr	r3, [r3, #0]
 8002cea:	4a71      	ldr	r2, [pc, #452]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002cec:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002cf0:	6013      	str	r3, [r2, #0]
 8002cf2:	4b6f      	ldr	r3, [pc, #444]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	4a6e      	ldr	r2, [pc, #440]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002cf8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002cfc:	6013      	str	r3, [r2, #0]
 8002cfe:	e00b      	b.n	8002d18 <HAL_RCC_OscConfig+0xd4>
 8002d00:	4b6b      	ldr	r3, [pc, #428]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	4a6a      	ldr	r2, [pc, #424]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002d06:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002d0a:	6013      	str	r3, [r2, #0]
 8002d0c:	4b68      	ldr	r3, [pc, #416]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002d0e:	681b      	ldr	r3, [r3, #0]
 8002d10:	4a67      	ldr	r2, [pc, #412]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002d12:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002d16:	6013      	str	r3, [r2, #0]
 8002d18:	687b      	ldr	r3, [r7, #4]
 8002d1a:	685b      	ldr	r3, [r3, #4]
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d013      	beq.n	8002d48 <HAL_RCC_OscConfig+0x104>
 8002d20:	f7fe fb0c 	bl	800133c <HAL_GetTick>
 8002d24:	6138      	str	r0, [r7, #16]
 8002d26:	e008      	b.n	8002d3a <HAL_RCC_OscConfig+0xf6>
 8002d28:	f7fe fb08 	bl	800133c <HAL_GetTick>
 8002d2c:	4602      	mov	r2, r0
 8002d2e:	693b      	ldr	r3, [r7, #16]
 8002d30:	1ad3      	subs	r3, r2, r3
 8002d32:	2b64      	cmp	r3, #100	; 0x64
 8002d34:	d901      	bls.n	8002d3a <HAL_RCC_OscConfig+0xf6>
 8002d36:	2303      	movs	r3, #3
 8002d38:	e200      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002d3a:	4b5d      	ldr	r3, [pc, #372]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002d3c:	681b      	ldr	r3, [r3, #0]
 8002d3e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002d42:	2b00      	cmp	r3, #0
 8002d44:	d0f0      	beq.n	8002d28 <HAL_RCC_OscConfig+0xe4>
 8002d46:	e014      	b.n	8002d72 <HAL_RCC_OscConfig+0x12e>
 8002d48:	f7fe faf8 	bl	800133c <HAL_GetTick>
 8002d4c:	6138      	str	r0, [r7, #16]
 8002d4e:	e008      	b.n	8002d62 <HAL_RCC_OscConfig+0x11e>
 8002d50:	f7fe faf4 	bl	800133c <HAL_GetTick>
 8002d54:	4602      	mov	r2, r0
 8002d56:	693b      	ldr	r3, [r7, #16]
 8002d58:	1ad3      	subs	r3, r2, r3
 8002d5a:	2b64      	cmp	r3, #100	; 0x64
 8002d5c:	d901      	bls.n	8002d62 <HAL_RCC_OscConfig+0x11e>
 8002d5e:	2303      	movs	r3, #3
 8002d60:	e1ec      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002d62:	4b53      	ldr	r3, [pc, #332]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002d64:	681b      	ldr	r3, [r3, #0]
 8002d66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d1f0      	bne.n	8002d50 <HAL_RCC_OscConfig+0x10c>
 8002d6e:	e000      	b.n	8002d72 <HAL_RCC_OscConfig+0x12e>
 8002d70:	bf00      	nop
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	681b      	ldr	r3, [r3, #0]
 8002d76:	f003 0302 	and.w	r3, r3, #2
 8002d7a:	2b00      	cmp	r3, #0
 8002d7c:	d063      	beq.n	8002e46 <HAL_RCC_OscConfig+0x202>
 8002d7e:	4b4c      	ldr	r3, [pc, #304]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002d80:	685b      	ldr	r3, [r3, #4]
 8002d82:	f003 030c 	and.w	r3, r3, #12
 8002d86:	2b00      	cmp	r3, #0
 8002d88:	d00b      	beq.n	8002da2 <HAL_RCC_OscConfig+0x15e>
 8002d8a:	4b49      	ldr	r3, [pc, #292]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002d8c:	685b      	ldr	r3, [r3, #4]
 8002d8e:	f003 030c 	and.w	r3, r3, #12
 8002d92:	2b08      	cmp	r3, #8
 8002d94:	d11c      	bne.n	8002dd0 <HAL_RCC_OscConfig+0x18c>
 8002d96:	4b46      	ldr	r3, [pc, #280]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002d98:	685b      	ldr	r3, [r3, #4]
 8002d9a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002d9e:	2b00      	cmp	r3, #0
 8002da0:	d116      	bne.n	8002dd0 <HAL_RCC_OscConfig+0x18c>
 8002da2:	4b43      	ldr	r3, [pc, #268]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002da4:	681b      	ldr	r3, [r3, #0]
 8002da6:	f003 0302 	and.w	r3, r3, #2
 8002daa:	2b00      	cmp	r3, #0
 8002dac:	d005      	beq.n	8002dba <HAL_RCC_OscConfig+0x176>
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	691b      	ldr	r3, [r3, #16]
 8002db2:	2b01      	cmp	r3, #1
 8002db4:	d001      	beq.n	8002dba <HAL_RCC_OscConfig+0x176>
 8002db6:	2301      	movs	r3, #1
 8002db8:	e1c0      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002dba:	4b3d      	ldr	r3, [pc, #244]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002dbc:	681b      	ldr	r3, [r3, #0]
 8002dbe:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	695b      	ldr	r3, [r3, #20]
 8002dc6:	00db      	lsls	r3, r3, #3
 8002dc8:	4939      	ldr	r1, [pc, #228]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002dca:	4313      	orrs	r3, r2
 8002dcc:	600b      	str	r3, [r1, #0]
 8002dce:	e03a      	b.n	8002e46 <HAL_RCC_OscConfig+0x202>
 8002dd0:	687b      	ldr	r3, [r7, #4]
 8002dd2:	691b      	ldr	r3, [r3, #16]
 8002dd4:	2b00      	cmp	r3, #0
 8002dd6:	d020      	beq.n	8002e1a <HAL_RCC_OscConfig+0x1d6>
 8002dd8:	4b36      	ldr	r3, [pc, #216]	; (8002eb4 <HAL_RCC_OscConfig+0x270>)
 8002dda:	2201      	movs	r2, #1
 8002ddc:	601a      	str	r2, [r3, #0]
 8002dde:	f7fe faad 	bl	800133c <HAL_GetTick>
 8002de2:	6138      	str	r0, [r7, #16]
 8002de4:	e008      	b.n	8002df8 <HAL_RCC_OscConfig+0x1b4>
 8002de6:	f7fe faa9 	bl	800133c <HAL_GetTick>
 8002dea:	4602      	mov	r2, r0
 8002dec:	693b      	ldr	r3, [r7, #16]
 8002dee:	1ad3      	subs	r3, r2, r3
 8002df0:	2b02      	cmp	r3, #2
 8002df2:	d901      	bls.n	8002df8 <HAL_RCC_OscConfig+0x1b4>
 8002df4:	2303      	movs	r3, #3
 8002df6:	e1a1      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002df8:	4b2d      	ldr	r3, [pc, #180]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002dfa:	681b      	ldr	r3, [r3, #0]
 8002dfc:	f003 0302 	and.w	r3, r3, #2
 8002e00:	2b00      	cmp	r3, #0
 8002e02:	d0f0      	beq.n	8002de6 <HAL_RCC_OscConfig+0x1a2>
 8002e04:	4b2a      	ldr	r3, [pc, #168]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002e0c:	687b      	ldr	r3, [r7, #4]
 8002e0e:	695b      	ldr	r3, [r3, #20]
 8002e10:	00db      	lsls	r3, r3, #3
 8002e12:	4927      	ldr	r1, [pc, #156]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002e14:	4313      	orrs	r3, r2
 8002e16:	600b      	str	r3, [r1, #0]
 8002e18:	e015      	b.n	8002e46 <HAL_RCC_OscConfig+0x202>
 8002e1a:	4b26      	ldr	r3, [pc, #152]	; (8002eb4 <HAL_RCC_OscConfig+0x270>)
 8002e1c:	2200      	movs	r2, #0
 8002e1e:	601a      	str	r2, [r3, #0]
 8002e20:	f7fe fa8c 	bl	800133c <HAL_GetTick>
 8002e24:	6138      	str	r0, [r7, #16]
 8002e26:	e008      	b.n	8002e3a <HAL_RCC_OscConfig+0x1f6>
 8002e28:	f7fe fa88 	bl	800133c <HAL_GetTick>
 8002e2c:	4602      	mov	r2, r0
 8002e2e:	693b      	ldr	r3, [r7, #16]
 8002e30:	1ad3      	subs	r3, r2, r3
 8002e32:	2b02      	cmp	r3, #2
 8002e34:	d901      	bls.n	8002e3a <HAL_RCC_OscConfig+0x1f6>
 8002e36:	2303      	movs	r3, #3
 8002e38:	e180      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002e3a:	4b1d      	ldr	r3, [pc, #116]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002e3c:	681b      	ldr	r3, [r3, #0]
 8002e3e:	f003 0302 	and.w	r3, r3, #2
 8002e42:	2b00      	cmp	r3, #0
 8002e44:	d1f0      	bne.n	8002e28 <HAL_RCC_OscConfig+0x1e4>
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	f003 0308 	and.w	r3, r3, #8
 8002e4e:	2b00      	cmp	r3, #0
 8002e50:	d03a      	beq.n	8002ec8 <HAL_RCC_OscConfig+0x284>
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	699b      	ldr	r3, [r3, #24]
 8002e56:	2b00      	cmp	r3, #0
 8002e58:	d019      	beq.n	8002e8e <HAL_RCC_OscConfig+0x24a>
 8002e5a:	4b17      	ldr	r3, [pc, #92]	; (8002eb8 <HAL_RCC_OscConfig+0x274>)
 8002e5c:	2201      	movs	r2, #1
 8002e5e:	601a      	str	r2, [r3, #0]
 8002e60:	f7fe fa6c 	bl	800133c <HAL_GetTick>
 8002e64:	6138      	str	r0, [r7, #16]
 8002e66:	e008      	b.n	8002e7a <HAL_RCC_OscConfig+0x236>
 8002e68:	f7fe fa68 	bl	800133c <HAL_GetTick>
 8002e6c:	4602      	mov	r2, r0
 8002e6e:	693b      	ldr	r3, [r7, #16]
 8002e70:	1ad3      	subs	r3, r2, r3
 8002e72:	2b02      	cmp	r3, #2
 8002e74:	d901      	bls.n	8002e7a <HAL_RCC_OscConfig+0x236>
 8002e76:	2303      	movs	r3, #3
 8002e78:	e160      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002e7a:	4b0d      	ldr	r3, [pc, #52]	; (8002eb0 <HAL_RCC_OscConfig+0x26c>)
 8002e7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e7e:	f003 0302 	and.w	r3, r3, #2
 8002e82:	2b00      	cmp	r3, #0
 8002e84:	d0f0      	beq.n	8002e68 <HAL_RCC_OscConfig+0x224>
 8002e86:	2001      	movs	r0, #1
 8002e88:	f000 fad8 	bl	800343c <RCC_Delay>
 8002e8c:	e01c      	b.n	8002ec8 <HAL_RCC_OscConfig+0x284>
 8002e8e:	4b0a      	ldr	r3, [pc, #40]	; (8002eb8 <HAL_RCC_OscConfig+0x274>)
 8002e90:	2200      	movs	r2, #0
 8002e92:	601a      	str	r2, [r3, #0]
 8002e94:	f7fe fa52 	bl	800133c <HAL_GetTick>
 8002e98:	6138      	str	r0, [r7, #16]
 8002e9a:	e00f      	b.n	8002ebc <HAL_RCC_OscConfig+0x278>
 8002e9c:	f7fe fa4e 	bl	800133c <HAL_GetTick>
 8002ea0:	4602      	mov	r2, r0
 8002ea2:	693b      	ldr	r3, [r7, #16]
 8002ea4:	1ad3      	subs	r3, r2, r3
 8002ea6:	2b02      	cmp	r3, #2
 8002ea8:	d908      	bls.n	8002ebc <HAL_RCC_OscConfig+0x278>
 8002eaa:	2303      	movs	r3, #3
 8002eac:	e146      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002eae:	bf00      	nop
 8002eb0:	40021000 	.word	0x40021000
 8002eb4:	42420000 	.word	0x42420000
 8002eb8:	42420480 	.word	0x42420480
 8002ebc:	4b92      	ldr	r3, [pc, #584]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002ebe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ec0:	f003 0302 	and.w	r3, r3, #2
 8002ec4:	2b00      	cmp	r3, #0
 8002ec6:	d1e9      	bne.n	8002e9c <HAL_RCC_OscConfig+0x258>
 8002ec8:	687b      	ldr	r3, [r7, #4]
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	f003 0304 	and.w	r3, r3, #4
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	f000 80a6 	beq.w	8003022 <HAL_RCC_OscConfig+0x3de>
 8002ed6:	2300      	movs	r3, #0
 8002ed8:	75fb      	strb	r3, [r7, #23]
 8002eda:	4b8b      	ldr	r3, [pc, #556]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002edc:	69db      	ldr	r3, [r3, #28]
 8002ede:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	d10d      	bne.n	8002f02 <HAL_RCC_OscConfig+0x2be>
 8002ee6:	4b88      	ldr	r3, [pc, #544]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002ee8:	69db      	ldr	r3, [r3, #28]
 8002eea:	4a87      	ldr	r2, [pc, #540]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002eec:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002ef0:	61d3      	str	r3, [r2, #28]
 8002ef2:	4b85      	ldr	r3, [pc, #532]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002ef4:	69db      	ldr	r3, [r3, #28]
 8002ef6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002efa:	60bb      	str	r3, [r7, #8]
 8002efc:	68bb      	ldr	r3, [r7, #8]
 8002efe:	2301      	movs	r3, #1
 8002f00:	75fb      	strb	r3, [r7, #23]
 8002f02:	4b82      	ldr	r3, [pc, #520]	; (800310c <HAL_RCC_OscConfig+0x4c8>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d118      	bne.n	8002f40 <HAL_RCC_OscConfig+0x2fc>
 8002f0e:	4b7f      	ldr	r3, [pc, #508]	; (800310c <HAL_RCC_OscConfig+0x4c8>)
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	4a7e      	ldr	r2, [pc, #504]	; (800310c <HAL_RCC_OscConfig+0x4c8>)
 8002f14:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002f18:	6013      	str	r3, [r2, #0]
 8002f1a:	f7fe fa0f 	bl	800133c <HAL_GetTick>
 8002f1e:	6138      	str	r0, [r7, #16]
 8002f20:	e008      	b.n	8002f34 <HAL_RCC_OscConfig+0x2f0>
 8002f22:	f7fe fa0b 	bl	800133c <HAL_GetTick>
 8002f26:	4602      	mov	r2, r0
 8002f28:	693b      	ldr	r3, [r7, #16]
 8002f2a:	1ad3      	subs	r3, r2, r3
 8002f2c:	2b64      	cmp	r3, #100	; 0x64
 8002f2e:	d901      	bls.n	8002f34 <HAL_RCC_OscConfig+0x2f0>
 8002f30:	2303      	movs	r3, #3
 8002f32:	e103      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002f34:	4b75      	ldr	r3, [pc, #468]	; (800310c <HAL_RCC_OscConfig+0x4c8>)
 8002f36:	681b      	ldr	r3, [r3, #0]
 8002f38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002f3c:	2b00      	cmp	r3, #0
 8002f3e:	d0f0      	beq.n	8002f22 <HAL_RCC_OscConfig+0x2de>
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	68db      	ldr	r3, [r3, #12]
 8002f44:	2b01      	cmp	r3, #1
 8002f46:	d106      	bne.n	8002f56 <HAL_RCC_OscConfig+0x312>
 8002f48:	4b6f      	ldr	r3, [pc, #444]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f4a:	6a1b      	ldr	r3, [r3, #32]
 8002f4c:	4a6e      	ldr	r2, [pc, #440]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f4e:	f043 0301 	orr.w	r3, r3, #1
 8002f52:	6213      	str	r3, [r2, #32]
 8002f54:	e02d      	b.n	8002fb2 <HAL_RCC_OscConfig+0x36e>
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	68db      	ldr	r3, [r3, #12]
 8002f5a:	2b00      	cmp	r3, #0
 8002f5c:	d10c      	bne.n	8002f78 <HAL_RCC_OscConfig+0x334>
 8002f5e:	4b6a      	ldr	r3, [pc, #424]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f60:	6a1b      	ldr	r3, [r3, #32]
 8002f62:	4a69      	ldr	r2, [pc, #420]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f64:	f023 0301 	bic.w	r3, r3, #1
 8002f68:	6213      	str	r3, [r2, #32]
 8002f6a:	4b67      	ldr	r3, [pc, #412]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f6c:	6a1b      	ldr	r3, [r3, #32]
 8002f6e:	4a66      	ldr	r2, [pc, #408]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f70:	f023 0304 	bic.w	r3, r3, #4
 8002f74:	6213      	str	r3, [r2, #32]
 8002f76:	e01c      	b.n	8002fb2 <HAL_RCC_OscConfig+0x36e>
 8002f78:	687b      	ldr	r3, [r7, #4]
 8002f7a:	68db      	ldr	r3, [r3, #12]
 8002f7c:	2b05      	cmp	r3, #5
 8002f7e:	d10c      	bne.n	8002f9a <HAL_RCC_OscConfig+0x356>
 8002f80:	4b61      	ldr	r3, [pc, #388]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f82:	6a1b      	ldr	r3, [r3, #32]
 8002f84:	4a60      	ldr	r2, [pc, #384]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f86:	f043 0304 	orr.w	r3, r3, #4
 8002f8a:	6213      	str	r3, [r2, #32]
 8002f8c:	4b5e      	ldr	r3, [pc, #376]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f8e:	6a1b      	ldr	r3, [r3, #32]
 8002f90:	4a5d      	ldr	r2, [pc, #372]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f92:	f043 0301 	orr.w	r3, r3, #1
 8002f96:	6213      	str	r3, [r2, #32]
 8002f98:	e00b      	b.n	8002fb2 <HAL_RCC_OscConfig+0x36e>
 8002f9a:	4b5b      	ldr	r3, [pc, #364]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002f9c:	6a1b      	ldr	r3, [r3, #32]
 8002f9e:	4a5a      	ldr	r2, [pc, #360]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002fa0:	f023 0301 	bic.w	r3, r3, #1
 8002fa4:	6213      	str	r3, [r2, #32]
 8002fa6:	4b58      	ldr	r3, [pc, #352]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002fa8:	6a1b      	ldr	r3, [r3, #32]
 8002faa:	4a57      	ldr	r2, [pc, #348]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002fac:	f023 0304 	bic.w	r3, r3, #4
 8002fb0:	6213      	str	r3, [r2, #32]
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	68db      	ldr	r3, [r3, #12]
 8002fb6:	2b00      	cmp	r3, #0
 8002fb8:	d015      	beq.n	8002fe6 <HAL_RCC_OscConfig+0x3a2>
 8002fba:	f7fe f9bf 	bl	800133c <HAL_GetTick>
 8002fbe:	6138      	str	r0, [r7, #16]
 8002fc0:	e00a      	b.n	8002fd8 <HAL_RCC_OscConfig+0x394>
 8002fc2:	f7fe f9bb 	bl	800133c <HAL_GetTick>
 8002fc6:	4602      	mov	r2, r0
 8002fc8:	693b      	ldr	r3, [r7, #16]
 8002fca:	1ad3      	subs	r3, r2, r3
 8002fcc:	f241 3288 	movw	r2, #5000	; 0x1388
 8002fd0:	4293      	cmp	r3, r2
 8002fd2:	d901      	bls.n	8002fd8 <HAL_RCC_OscConfig+0x394>
 8002fd4:	2303      	movs	r3, #3
 8002fd6:	e0b1      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8002fd8:	4b4b      	ldr	r3, [pc, #300]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8002fda:	6a1b      	ldr	r3, [r3, #32]
 8002fdc:	f003 0302 	and.w	r3, r3, #2
 8002fe0:	2b00      	cmp	r3, #0
 8002fe2:	d0ee      	beq.n	8002fc2 <HAL_RCC_OscConfig+0x37e>
 8002fe4:	e014      	b.n	8003010 <HAL_RCC_OscConfig+0x3cc>
 8002fe6:	f7fe f9a9 	bl	800133c <HAL_GetTick>
 8002fea:	6138      	str	r0, [r7, #16]
 8002fec:	e00a      	b.n	8003004 <HAL_RCC_OscConfig+0x3c0>
 8002fee:	f7fe f9a5 	bl	800133c <HAL_GetTick>
 8002ff2:	4602      	mov	r2, r0
 8002ff4:	693b      	ldr	r3, [r7, #16]
 8002ff6:	1ad3      	subs	r3, r2, r3
 8002ff8:	f241 3288 	movw	r2, #5000	; 0x1388
 8002ffc:	4293      	cmp	r3, r2
 8002ffe:	d901      	bls.n	8003004 <HAL_RCC_OscConfig+0x3c0>
 8003000:	2303      	movs	r3, #3
 8003002:	e09b      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8003004:	4b40      	ldr	r3, [pc, #256]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8003006:	6a1b      	ldr	r3, [r3, #32]
 8003008:	f003 0302 	and.w	r3, r3, #2
 800300c:	2b00      	cmp	r3, #0
 800300e:	d1ee      	bne.n	8002fee <HAL_RCC_OscConfig+0x3aa>
 8003010:	7dfb      	ldrb	r3, [r7, #23]
 8003012:	2b01      	cmp	r3, #1
 8003014:	d105      	bne.n	8003022 <HAL_RCC_OscConfig+0x3de>
 8003016:	4b3c      	ldr	r3, [pc, #240]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8003018:	69db      	ldr	r3, [r3, #28]
 800301a:	4a3b      	ldr	r2, [pc, #236]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 800301c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003020:	61d3      	str	r3, [r2, #28]
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	69db      	ldr	r3, [r3, #28]
 8003026:	2b00      	cmp	r3, #0
 8003028:	f000 8087 	beq.w	800313a <HAL_RCC_OscConfig+0x4f6>
 800302c:	4b36      	ldr	r3, [pc, #216]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 800302e:	685b      	ldr	r3, [r3, #4]
 8003030:	f003 030c 	and.w	r3, r3, #12
 8003034:	2b08      	cmp	r3, #8
 8003036:	d061      	beq.n	80030fc <HAL_RCC_OscConfig+0x4b8>
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	69db      	ldr	r3, [r3, #28]
 800303c:	2b02      	cmp	r3, #2
 800303e:	d146      	bne.n	80030ce <HAL_RCC_OscConfig+0x48a>
 8003040:	4b33      	ldr	r3, [pc, #204]	; (8003110 <HAL_RCC_OscConfig+0x4cc>)
 8003042:	2200      	movs	r2, #0
 8003044:	601a      	str	r2, [r3, #0]
 8003046:	f7fe f979 	bl	800133c <HAL_GetTick>
 800304a:	6138      	str	r0, [r7, #16]
 800304c:	e008      	b.n	8003060 <HAL_RCC_OscConfig+0x41c>
 800304e:	f7fe f975 	bl	800133c <HAL_GetTick>
 8003052:	4602      	mov	r2, r0
 8003054:	693b      	ldr	r3, [r7, #16]
 8003056:	1ad3      	subs	r3, r2, r3
 8003058:	2b02      	cmp	r3, #2
 800305a:	d901      	bls.n	8003060 <HAL_RCC_OscConfig+0x41c>
 800305c:	2303      	movs	r3, #3
 800305e:	e06d      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8003060:	4b29      	ldr	r3, [pc, #164]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003068:	2b00      	cmp	r3, #0
 800306a:	d1f0      	bne.n	800304e <HAL_RCC_OscConfig+0x40a>
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	6a1b      	ldr	r3, [r3, #32]
 8003070:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003074:	d108      	bne.n	8003088 <HAL_RCC_OscConfig+0x444>
 8003076:	4b24      	ldr	r3, [pc, #144]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8003078:	685b      	ldr	r3, [r3, #4]
 800307a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800307e:	687b      	ldr	r3, [r7, #4]
 8003080:	689b      	ldr	r3, [r3, #8]
 8003082:	4921      	ldr	r1, [pc, #132]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 8003084:	4313      	orrs	r3, r2
 8003086:	604b      	str	r3, [r1, #4]
 8003088:	4b1f      	ldr	r3, [pc, #124]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 800308a:	685b      	ldr	r3, [r3, #4]
 800308c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8003090:	687b      	ldr	r3, [r7, #4]
 8003092:	6a19      	ldr	r1, [r3, #32]
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003098:	430b      	orrs	r3, r1
 800309a:	491b      	ldr	r1, [pc, #108]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 800309c:	4313      	orrs	r3, r2
 800309e:	604b      	str	r3, [r1, #4]
 80030a0:	4b1b      	ldr	r3, [pc, #108]	; (8003110 <HAL_RCC_OscConfig+0x4cc>)
 80030a2:	2201      	movs	r2, #1
 80030a4:	601a      	str	r2, [r3, #0]
 80030a6:	f7fe f949 	bl	800133c <HAL_GetTick>
 80030aa:	6138      	str	r0, [r7, #16]
 80030ac:	e008      	b.n	80030c0 <HAL_RCC_OscConfig+0x47c>
 80030ae:	f7fe f945 	bl	800133c <HAL_GetTick>
 80030b2:	4602      	mov	r2, r0
 80030b4:	693b      	ldr	r3, [r7, #16]
 80030b6:	1ad3      	subs	r3, r2, r3
 80030b8:	2b02      	cmp	r3, #2
 80030ba:	d901      	bls.n	80030c0 <HAL_RCC_OscConfig+0x47c>
 80030bc:	2303      	movs	r3, #3
 80030be:	e03d      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 80030c0:	4b11      	ldr	r3, [pc, #68]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80030c8:	2b00      	cmp	r3, #0
 80030ca:	d0f0      	beq.n	80030ae <HAL_RCC_OscConfig+0x46a>
 80030cc:	e035      	b.n	800313a <HAL_RCC_OscConfig+0x4f6>
 80030ce:	4b10      	ldr	r3, [pc, #64]	; (8003110 <HAL_RCC_OscConfig+0x4cc>)
 80030d0:	2200      	movs	r2, #0
 80030d2:	601a      	str	r2, [r3, #0]
 80030d4:	f7fe f932 	bl	800133c <HAL_GetTick>
 80030d8:	6138      	str	r0, [r7, #16]
 80030da:	e008      	b.n	80030ee <HAL_RCC_OscConfig+0x4aa>
 80030dc:	f7fe f92e 	bl	800133c <HAL_GetTick>
 80030e0:	4602      	mov	r2, r0
 80030e2:	693b      	ldr	r3, [r7, #16]
 80030e4:	1ad3      	subs	r3, r2, r3
 80030e6:	2b02      	cmp	r3, #2
 80030e8:	d901      	bls.n	80030ee <HAL_RCC_OscConfig+0x4aa>
 80030ea:	2303      	movs	r3, #3
 80030ec:	e026      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 80030ee:	4b06      	ldr	r3, [pc, #24]	; (8003108 <HAL_RCC_OscConfig+0x4c4>)
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80030f6:	2b00      	cmp	r3, #0
 80030f8:	d1f0      	bne.n	80030dc <HAL_RCC_OscConfig+0x498>
 80030fa:	e01e      	b.n	800313a <HAL_RCC_OscConfig+0x4f6>
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	69db      	ldr	r3, [r3, #28]
 8003100:	2b01      	cmp	r3, #1
 8003102:	d107      	bne.n	8003114 <HAL_RCC_OscConfig+0x4d0>
 8003104:	2301      	movs	r3, #1
 8003106:	e019      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 8003108:	40021000 	.word	0x40021000
 800310c:	40007000 	.word	0x40007000
 8003110:	42420060 	.word	0x42420060
 8003114:	4b0b      	ldr	r3, [pc, #44]	; (8003144 <HAL_RCC_OscConfig+0x500>)
 8003116:	685b      	ldr	r3, [r3, #4]
 8003118:	60fb      	str	r3, [r7, #12]
 800311a:	68fb      	ldr	r3, [r7, #12]
 800311c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	6a1b      	ldr	r3, [r3, #32]
 8003124:	429a      	cmp	r2, r3
 8003126:	d106      	bne.n	8003136 <HAL_RCC_OscConfig+0x4f2>
 8003128:	68fb      	ldr	r3, [r7, #12]
 800312a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003132:	429a      	cmp	r2, r3
 8003134:	d001      	beq.n	800313a <HAL_RCC_OscConfig+0x4f6>
 8003136:	2301      	movs	r3, #1
 8003138:	e000      	b.n	800313c <HAL_RCC_OscConfig+0x4f8>
 800313a:	2300      	movs	r3, #0
 800313c:	4618      	mov	r0, r3
 800313e:	3718      	adds	r7, #24
 8003140:	46bd      	mov	sp, r7
 8003142:	bd80      	pop	{r7, pc}
 8003144:	40021000 	.word	0x40021000

08003148 <HAL_RCC_ClockConfig>:
 8003148:	b580      	push	{r7, lr}
 800314a:	b084      	sub	sp, #16
 800314c:	af00      	add	r7, sp, #0
 800314e:	6078      	str	r0, [r7, #4]
 8003150:	6039      	str	r1, [r7, #0]
 8003152:	687b      	ldr	r3, [r7, #4]
 8003154:	2b00      	cmp	r3, #0
 8003156:	d101      	bne.n	800315c <HAL_RCC_ClockConfig+0x14>
 8003158:	2301      	movs	r3, #1
 800315a:	e0d0      	b.n	80032fe <HAL_RCC_ClockConfig+0x1b6>
 800315c:	4b6a      	ldr	r3, [pc, #424]	; (8003308 <HAL_RCC_ClockConfig+0x1c0>)
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	f003 0307 	and.w	r3, r3, #7
 8003164:	683a      	ldr	r2, [r7, #0]
 8003166:	429a      	cmp	r2, r3
 8003168:	d910      	bls.n	800318c <HAL_RCC_ClockConfig+0x44>
 800316a:	4b67      	ldr	r3, [pc, #412]	; (8003308 <HAL_RCC_ClockConfig+0x1c0>)
 800316c:	681b      	ldr	r3, [r3, #0]
 800316e:	f023 0207 	bic.w	r2, r3, #7
 8003172:	4965      	ldr	r1, [pc, #404]	; (8003308 <HAL_RCC_ClockConfig+0x1c0>)
 8003174:	683b      	ldr	r3, [r7, #0]
 8003176:	4313      	orrs	r3, r2
 8003178:	600b      	str	r3, [r1, #0]
 800317a:	4b63      	ldr	r3, [pc, #396]	; (8003308 <HAL_RCC_ClockConfig+0x1c0>)
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	f003 0307 	and.w	r3, r3, #7
 8003182:	683a      	ldr	r2, [r7, #0]
 8003184:	429a      	cmp	r2, r3
 8003186:	d001      	beq.n	800318c <HAL_RCC_ClockConfig+0x44>
 8003188:	2301      	movs	r3, #1
 800318a:	e0b8      	b.n	80032fe <HAL_RCC_ClockConfig+0x1b6>
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	f003 0302 	and.w	r3, r3, #2
 8003194:	2b00      	cmp	r3, #0
 8003196:	d020      	beq.n	80031da <HAL_RCC_ClockConfig+0x92>
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	f003 0304 	and.w	r3, r3, #4
 80031a0:	2b00      	cmp	r3, #0
 80031a2:	d005      	beq.n	80031b0 <HAL_RCC_ClockConfig+0x68>
 80031a4:	4b59      	ldr	r3, [pc, #356]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80031a6:	685b      	ldr	r3, [r3, #4]
 80031a8:	4a58      	ldr	r2, [pc, #352]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80031aa:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80031ae:	6053      	str	r3, [r2, #4]
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	681b      	ldr	r3, [r3, #0]
 80031b4:	f003 0308 	and.w	r3, r3, #8
 80031b8:	2b00      	cmp	r3, #0
 80031ba:	d005      	beq.n	80031c8 <HAL_RCC_ClockConfig+0x80>
 80031bc:	4b53      	ldr	r3, [pc, #332]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80031be:	685b      	ldr	r3, [r3, #4]
 80031c0:	4a52      	ldr	r2, [pc, #328]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80031c2:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80031c6:	6053      	str	r3, [r2, #4]
 80031c8:	4b50      	ldr	r3, [pc, #320]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80031ca:	685b      	ldr	r3, [r3, #4]
 80031cc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	689b      	ldr	r3, [r3, #8]
 80031d4:	494d      	ldr	r1, [pc, #308]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80031d6:	4313      	orrs	r3, r2
 80031d8:	604b      	str	r3, [r1, #4]
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	681b      	ldr	r3, [r3, #0]
 80031de:	f003 0301 	and.w	r3, r3, #1
 80031e2:	2b00      	cmp	r3, #0
 80031e4:	d040      	beq.n	8003268 <HAL_RCC_ClockConfig+0x120>
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	685b      	ldr	r3, [r3, #4]
 80031ea:	2b01      	cmp	r3, #1
 80031ec:	d107      	bne.n	80031fe <HAL_RCC_ClockConfig+0xb6>
 80031ee:	4b47      	ldr	r3, [pc, #284]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80031f6:	2b00      	cmp	r3, #0
 80031f8:	d115      	bne.n	8003226 <HAL_RCC_ClockConfig+0xde>
 80031fa:	2301      	movs	r3, #1
 80031fc:	e07f      	b.n	80032fe <HAL_RCC_ClockConfig+0x1b6>
 80031fe:	687b      	ldr	r3, [r7, #4]
 8003200:	685b      	ldr	r3, [r3, #4]
 8003202:	2b02      	cmp	r3, #2
 8003204:	d107      	bne.n	8003216 <HAL_RCC_ClockConfig+0xce>
 8003206:	4b41      	ldr	r3, [pc, #260]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 8003208:	681b      	ldr	r3, [r3, #0]
 800320a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800320e:	2b00      	cmp	r3, #0
 8003210:	d109      	bne.n	8003226 <HAL_RCC_ClockConfig+0xde>
 8003212:	2301      	movs	r3, #1
 8003214:	e073      	b.n	80032fe <HAL_RCC_ClockConfig+0x1b6>
 8003216:	4b3d      	ldr	r3, [pc, #244]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 8003218:	681b      	ldr	r3, [r3, #0]
 800321a:	f003 0302 	and.w	r3, r3, #2
 800321e:	2b00      	cmp	r3, #0
 8003220:	d101      	bne.n	8003226 <HAL_RCC_ClockConfig+0xde>
 8003222:	2301      	movs	r3, #1
 8003224:	e06b      	b.n	80032fe <HAL_RCC_ClockConfig+0x1b6>
 8003226:	4b39      	ldr	r3, [pc, #228]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 8003228:	685b      	ldr	r3, [r3, #4]
 800322a:	f023 0203 	bic.w	r2, r3, #3
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	685b      	ldr	r3, [r3, #4]
 8003232:	4936      	ldr	r1, [pc, #216]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 8003234:	4313      	orrs	r3, r2
 8003236:	604b      	str	r3, [r1, #4]
 8003238:	f7fe f880 	bl	800133c <HAL_GetTick>
 800323c:	60f8      	str	r0, [r7, #12]
 800323e:	e00a      	b.n	8003256 <HAL_RCC_ClockConfig+0x10e>
 8003240:	f7fe f87c 	bl	800133c <HAL_GetTick>
 8003244:	4602      	mov	r2, r0
 8003246:	68fb      	ldr	r3, [r7, #12]
 8003248:	1ad3      	subs	r3, r2, r3
 800324a:	f241 3288 	movw	r2, #5000	; 0x1388
 800324e:	4293      	cmp	r3, r2
 8003250:	d901      	bls.n	8003256 <HAL_RCC_ClockConfig+0x10e>
 8003252:	2303      	movs	r3, #3
 8003254:	e053      	b.n	80032fe <HAL_RCC_ClockConfig+0x1b6>
 8003256:	4b2d      	ldr	r3, [pc, #180]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 8003258:	685b      	ldr	r3, [r3, #4]
 800325a:	f003 020c 	and.w	r2, r3, #12
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	685b      	ldr	r3, [r3, #4]
 8003262:	009b      	lsls	r3, r3, #2
 8003264:	429a      	cmp	r2, r3
 8003266:	d1eb      	bne.n	8003240 <HAL_RCC_ClockConfig+0xf8>
 8003268:	4b27      	ldr	r3, [pc, #156]	; (8003308 <HAL_RCC_ClockConfig+0x1c0>)
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	f003 0307 	and.w	r3, r3, #7
 8003270:	683a      	ldr	r2, [r7, #0]
 8003272:	429a      	cmp	r2, r3
 8003274:	d210      	bcs.n	8003298 <HAL_RCC_ClockConfig+0x150>
 8003276:	4b24      	ldr	r3, [pc, #144]	; (8003308 <HAL_RCC_ClockConfig+0x1c0>)
 8003278:	681b      	ldr	r3, [r3, #0]
 800327a:	f023 0207 	bic.w	r2, r3, #7
 800327e:	4922      	ldr	r1, [pc, #136]	; (8003308 <HAL_RCC_ClockConfig+0x1c0>)
 8003280:	683b      	ldr	r3, [r7, #0]
 8003282:	4313      	orrs	r3, r2
 8003284:	600b      	str	r3, [r1, #0]
 8003286:	4b20      	ldr	r3, [pc, #128]	; (8003308 <HAL_RCC_ClockConfig+0x1c0>)
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	f003 0307 	and.w	r3, r3, #7
 800328e:	683a      	ldr	r2, [r7, #0]
 8003290:	429a      	cmp	r2, r3
 8003292:	d001      	beq.n	8003298 <HAL_RCC_ClockConfig+0x150>
 8003294:	2301      	movs	r3, #1
 8003296:	e032      	b.n	80032fe <HAL_RCC_ClockConfig+0x1b6>
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	f003 0304 	and.w	r3, r3, #4
 80032a0:	2b00      	cmp	r3, #0
 80032a2:	d008      	beq.n	80032b6 <HAL_RCC_ClockConfig+0x16e>
 80032a4:	4b19      	ldr	r3, [pc, #100]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80032a6:	685b      	ldr	r3, [r3, #4]
 80032a8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80032ac:	687b      	ldr	r3, [r7, #4]
 80032ae:	68db      	ldr	r3, [r3, #12]
 80032b0:	4916      	ldr	r1, [pc, #88]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80032b2:	4313      	orrs	r3, r2
 80032b4:	604b      	str	r3, [r1, #4]
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	681b      	ldr	r3, [r3, #0]
 80032ba:	f003 0308 	and.w	r3, r3, #8
 80032be:	2b00      	cmp	r3, #0
 80032c0:	d009      	beq.n	80032d6 <HAL_RCC_ClockConfig+0x18e>
 80032c2:	4b12      	ldr	r3, [pc, #72]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80032c4:	685b      	ldr	r3, [r3, #4]
 80032c6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	691b      	ldr	r3, [r3, #16]
 80032ce:	00db      	lsls	r3, r3, #3
 80032d0:	490e      	ldr	r1, [pc, #56]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80032d2:	4313      	orrs	r3, r2
 80032d4:	604b      	str	r3, [r1, #4]
 80032d6:	f000 f821 	bl	800331c <HAL_RCC_GetSysClockFreq>
 80032da:	4602      	mov	r2, r0
 80032dc:	4b0b      	ldr	r3, [pc, #44]	; (800330c <HAL_RCC_ClockConfig+0x1c4>)
 80032de:	685b      	ldr	r3, [r3, #4]
 80032e0:	091b      	lsrs	r3, r3, #4
 80032e2:	f003 030f 	and.w	r3, r3, #15
 80032e6:	490a      	ldr	r1, [pc, #40]	; (8003310 <HAL_RCC_ClockConfig+0x1c8>)
 80032e8:	5ccb      	ldrb	r3, [r1, r3]
 80032ea:	fa22 f303 	lsr.w	r3, r2, r3
 80032ee:	4a09      	ldr	r2, [pc, #36]	; (8003314 <HAL_RCC_ClockConfig+0x1cc>)
 80032f0:	6013      	str	r3, [r2, #0]
 80032f2:	4b09      	ldr	r3, [pc, #36]	; (8003318 <HAL_RCC_ClockConfig+0x1d0>)
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	4618      	mov	r0, r3
 80032f8:	f7fd ffde 	bl	80012b8 <HAL_InitTick>
 80032fc:	2300      	movs	r3, #0
 80032fe:	4618      	mov	r0, r3
 8003300:	3710      	adds	r7, #16
 8003302:	46bd      	mov	sp, r7
 8003304:	bd80      	pop	{r7, pc}
 8003306:	bf00      	nop
 8003308:	40022000 	.word	0x40022000
 800330c:	40021000 	.word	0x40021000
 8003310:	08005178 	.word	0x08005178
 8003314:	20000000 	.word	0x20000000
 8003318:	20000004 	.word	0x20000004

0800331c <HAL_RCC_GetSysClockFreq>:
 800331c:	b490      	push	{r4, r7}
 800331e:	b08a      	sub	sp, #40	; 0x28
 8003320:	af00      	add	r7, sp, #0
 8003322:	4b29      	ldr	r3, [pc, #164]	; (80033c8 <HAL_RCC_GetSysClockFreq+0xac>)
 8003324:	1d3c      	adds	r4, r7, #4
 8003326:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8003328:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800332c:	f240 2301 	movw	r3, #513	; 0x201
 8003330:	803b      	strh	r3, [r7, #0]
 8003332:	2300      	movs	r3, #0
 8003334:	61fb      	str	r3, [r7, #28]
 8003336:	2300      	movs	r3, #0
 8003338:	61bb      	str	r3, [r7, #24]
 800333a:	2300      	movs	r3, #0
 800333c:	627b      	str	r3, [r7, #36]	; 0x24
 800333e:	2300      	movs	r3, #0
 8003340:	617b      	str	r3, [r7, #20]
 8003342:	2300      	movs	r3, #0
 8003344:	623b      	str	r3, [r7, #32]
 8003346:	4b21      	ldr	r3, [pc, #132]	; (80033cc <HAL_RCC_GetSysClockFreq+0xb0>)
 8003348:	685b      	ldr	r3, [r3, #4]
 800334a:	61fb      	str	r3, [r7, #28]
 800334c:	69fb      	ldr	r3, [r7, #28]
 800334e:	f003 030c 	and.w	r3, r3, #12
 8003352:	2b04      	cmp	r3, #4
 8003354:	d002      	beq.n	800335c <HAL_RCC_GetSysClockFreq+0x40>
 8003356:	2b08      	cmp	r3, #8
 8003358:	d003      	beq.n	8003362 <HAL_RCC_GetSysClockFreq+0x46>
 800335a:	e02b      	b.n	80033b4 <HAL_RCC_GetSysClockFreq+0x98>
 800335c:	4b1c      	ldr	r3, [pc, #112]	; (80033d0 <HAL_RCC_GetSysClockFreq+0xb4>)
 800335e:	623b      	str	r3, [r7, #32]
 8003360:	e02b      	b.n	80033ba <HAL_RCC_GetSysClockFreq+0x9e>
 8003362:	69fb      	ldr	r3, [r7, #28]
 8003364:	0c9b      	lsrs	r3, r3, #18
 8003366:	f003 030f 	and.w	r3, r3, #15
 800336a:	3328      	adds	r3, #40	; 0x28
 800336c:	443b      	add	r3, r7
 800336e:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8003372:	617b      	str	r3, [r7, #20]
 8003374:	69fb      	ldr	r3, [r7, #28]
 8003376:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800337a:	2b00      	cmp	r3, #0
 800337c:	d012      	beq.n	80033a4 <HAL_RCC_GetSysClockFreq+0x88>
 800337e:	4b13      	ldr	r3, [pc, #76]	; (80033cc <HAL_RCC_GetSysClockFreq+0xb0>)
 8003380:	685b      	ldr	r3, [r3, #4]
 8003382:	0c5b      	lsrs	r3, r3, #17
 8003384:	f003 0301 	and.w	r3, r3, #1
 8003388:	3328      	adds	r3, #40	; 0x28
 800338a:	443b      	add	r3, r7
 800338c:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8003390:	61bb      	str	r3, [r7, #24]
 8003392:	697b      	ldr	r3, [r7, #20]
 8003394:	4a0e      	ldr	r2, [pc, #56]	; (80033d0 <HAL_RCC_GetSysClockFreq+0xb4>)
 8003396:	fb03 f202 	mul.w	r2, r3, r2
 800339a:	69bb      	ldr	r3, [r7, #24]
 800339c:	fbb2 f3f3 	udiv	r3, r2, r3
 80033a0:	627b      	str	r3, [r7, #36]	; 0x24
 80033a2:	e004      	b.n	80033ae <HAL_RCC_GetSysClockFreq+0x92>
 80033a4:	697b      	ldr	r3, [r7, #20]
 80033a6:	4a0b      	ldr	r2, [pc, #44]	; (80033d4 <HAL_RCC_GetSysClockFreq+0xb8>)
 80033a8:	fb02 f303 	mul.w	r3, r2, r3
 80033ac:	627b      	str	r3, [r7, #36]	; 0x24
 80033ae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80033b0:	623b      	str	r3, [r7, #32]
 80033b2:	e002      	b.n	80033ba <HAL_RCC_GetSysClockFreq+0x9e>
 80033b4:	4b06      	ldr	r3, [pc, #24]	; (80033d0 <HAL_RCC_GetSysClockFreq+0xb4>)
 80033b6:	623b      	str	r3, [r7, #32]
 80033b8:	bf00      	nop
 80033ba:	6a3b      	ldr	r3, [r7, #32]
 80033bc:	4618      	mov	r0, r3
 80033be:	3728      	adds	r7, #40	; 0x28
 80033c0:	46bd      	mov	sp, r7
 80033c2:	bc90      	pop	{r4, r7}
 80033c4:	4770      	bx	lr
 80033c6:	bf00      	nop
 80033c8:	08005168 	.word	0x08005168
 80033cc:	40021000 	.word	0x40021000
 80033d0:	007a1200 	.word	0x007a1200
 80033d4:	003d0900 	.word	0x003d0900

080033d8 <HAL_RCC_GetHCLKFreq>:
 80033d8:	b480      	push	{r7}
 80033da:	af00      	add	r7, sp, #0
 80033dc:	4b02      	ldr	r3, [pc, #8]	; (80033e8 <HAL_RCC_GetHCLKFreq+0x10>)
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	4618      	mov	r0, r3
 80033e2:	46bd      	mov	sp, r7
 80033e4:	bc80      	pop	{r7}
 80033e6:	4770      	bx	lr
 80033e8:	20000000 	.word	0x20000000

080033ec <HAL_RCC_GetPCLK1Freq>:
 80033ec:	b580      	push	{r7, lr}
 80033ee:	af00      	add	r7, sp, #0
 80033f0:	f7ff fff2 	bl	80033d8 <HAL_RCC_GetHCLKFreq>
 80033f4:	4602      	mov	r2, r0
 80033f6:	4b05      	ldr	r3, [pc, #20]	; (800340c <HAL_RCC_GetPCLK1Freq+0x20>)
 80033f8:	685b      	ldr	r3, [r3, #4]
 80033fa:	0a1b      	lsrs	r3, r3, #8
 80033fc:	f003 0307 	and.w	r3, r3, #7
 8003400:	4903      	ldr	r1, [pc, #12]	; (8003410 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003402:	5ccb      	ldrb	r3, [r1, r3]
 8003404:	fa22 f303 	lsr.w	r3, r2, r3
 8003408:	4618      	mov	r0, r3
 800340a:	bd80      	pop	{r7, pc}
 800340c:	40021000 	.word	0x40021000
 8003410:	08005188 	.word	0x08005188

08003414 <HAL_RCC_GetPCLK2Freq>:
 8003414:	b580      	push	{r7, lr}
 8003416:	af00      	add	r7, sp, #0
 8003418:	f7ff ffde 	bl	80033d8 <HAL_RCC_GetHCLKFreq>
 800341c:	4602      	mov	r2, r0
 800341e:	4b05      	ldr	r3, [pc, #20]	; (8003434 <HAL_RCC_GetPCLK2Freq+0x20>)
 8003420:	685b      	ldr	r3, [r3, #4]
 8003422:	0adb      	lsrs	r3, r3, #11
 8003424:	f003 0307 	and.w	r3, r3, #7
 8003428:	4903      	ldr	r1, [pc, #12]	; (8003438 <HAL_RCC_GetPCLK2Freq+0x24>)
 800342a:	5ccb      	ldrb	r3, [r1, r3]
 800342c:	fa22 f303 	lsr.w	r3, r2, r3
 8003430:	4618      	mov	r0, r3
 8003432:	bd80      	pop	{r7, pc}
 8003434:	40021000 	.word	0x40021000
 8003438:	08005188 	.word	0x08005188

0800343c <RCC_Delay>:
 800343c:	b480      	push	{r7}
 800343e:	b085      	sub	sp, #20
 8003440:	af00      	add	r7, sp, #0
 8003442:	6078      	str	r0, [r7, #4]
 8003444:	4b0a      	ldr	r3, [pc, #40]	; (8003470 <RCC_Delay+0x34>)
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	4a0a      	ldr	r2, [pc, #40]	; (8003474 <RCC_Delay+0x38>)
 800344a:	fba2 2303 	umull	r2, r3, r2, r3
 800344e:	0a5b      	lsrs	r3, r3, #9
 8003450:	687a      	ldr	r2, [r7, #4]
 8003452:	fb02 f303 	mul.w	r3, r2, r3
 8003456:	60fb      	str	r3, [r7, #12]
 8003458:	bf00      	nop
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	1e5a      	subs	r2, r3, #1
 800345e:	60fa      	str	r2, [r7, #12]
 8003460:	2b00      	cmp	r3, #0
 8003462:	d1f9      	bne.n	8003458 <RCC_Delay+0x1c>
 8003464:	bf00      	nop
 8003466:	bf00      	nop
 8003468:	3714      	adds	r7, #20
 800346a:	46bd      	mov	sp, r7
 800346c:	bc80      	pop	{r7}
 800346e:	4770      	bx	lr
 8003470:	20000000 	.word	0x20000000
 8003474:	10624dd3 	.word	0x10624dd3

08003478 <HAL_TIM_Base_Init>:
 8003478:	b580      	push	{r7, lr}
 800347a:	b082      	sub	sp, #8
 800347c:	af00      	add	r7, sp, #0
 800347e:	6078      	str	r0, [r7, #4]
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	2b00      	cmp	r3, #0
 8003484:	d101      	bne.n	800348a <HAL_TIM_Base_Init+0x12>
 8003486:	2301      	movs	r3, #1
 8003488:	e041      	b.n	800350e <HAL_TIM_Base_Init+0x96>
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003490:	b2db      	uxtb	r3, r3
 8003492:	2b00      	cmp	r3, #0
 8003494:	d106      	bne.n	80034a4 <HAL_TIM_Base_Init+0x2c>
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	2200      	movs	r2, #0
 800349a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800349e:	6878      	ldr	r0, [r7, #4]
 80034a0:	f7fd fc74 	bl	8000d8c <HAL_TIM_Base_MspInit>
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	2202      	movs	r2, #2
 80034a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	681a      	ldr	r2, [r3, #0]
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	3304      	adds	r3, #4
 80034b4:	4619      	mov	r1, r3
 80034b6:	4610      	mov	r0, r2
 80034b8:	f000 fa70 	bl	800399c <TIM_Base_SetConfig>
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	2201      	movs	r2, #1
 80034c0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80034c4:	687b      	ldr	r3, [r7, #4]
 80034c6:	2201      	movs	r2, #1
 80034c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80034cc:	687b      	ldr	r3, [r7, #4]
 80034ce:	2201      	movs	r2, #1
 80034d0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	2201      	movs	r2, #1
 80034d8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	2201      	movs	r2, #1
 80034e0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80034e4:	687b      	ldr	r3, [r7, #4]
 80034e6:	2201      	movs	r2, #1
 80034e8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	2201      	movs	r2, #1
 80034f0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	2201      	movs	r2, #1
 80034f8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	2201      	movs	r2, #1
 8003500:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	2201      	movs	r2, #1
 8003508:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800350c:	2300      	movs	r3, #0
 800350e:	4618      	mov	r0, r3
 8003510:	3708      	adds	r7, #8
 8003512:	46bd      	mov	sp, r7
 8003514:	bd80      	pop	{r7, pc}
	...

08003518 <HAL_TIM_Base_Start_IT>:
 8003518:	b480      	push	{r7}
 800351a:	b085      	sub	sp, #20
 800351c:	af00      	add	r7, sp, #0
 800351e:	6078      	str	r0, [r7, #4]
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003526:	b2db      	uxtb	r3, r3
 8003528:	2b01      	cmp	r3, #1
 800352a:	d001      	beq.n	8003530 <HAL_TIM_Base_Start_IT+0x18>
 800352c:	2301      	movs	r3, #1
 800352e:	e03a      	b.n	80035a6 <HAL_TIM_Base_Start_IT+0x8e>
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	2202      	movs	r2, #2
 8003534:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	681b      	ldr	r3, [r3, #0]
 800353c:	68da      	ldr	r2, [r3, #12]
 800353e:	687b      	ldr	r3, [r7, #4]
 8003540:	681b      	ldr	r3, [r3, #0]
 8003542:	f042 0201 	orr.w	r2, r2, #1
 8003546:	60da      	str	r2, [r3, #12]
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	681b      	ldr	r3, [r3, #0]
 800354c:	4a18      	ldr	r2, [pc, #96]	; (80035b0 <HAL_TIM_Base_Start_IT+0x98>)
 800354e:	4293      	cmp	r3, r2
 8003550:	d00e      	beq.n	8003570 <HAL_TIM_Base_Start_IT+0x58>
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800355a:	d009      	beq.n	8003570 <HAL_TIM_Base_Start_IT+0x58>
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	681b      	ldr	r3, [r3, #0]
 8003560:	4a14      	ldr	r2, [pc, #80]	; (80035b4 <HAL_TIM_Base_Start_IT+0x9c>)
 8003562:	4293      	cmp	r3, r2
 8003564:	d004      	beq.n	8003570 <HAL_TIM_Base_Start_IT+0x58>
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	4a13      	ldr	r2, [pc, #76]	; (80035b8 <HAL_TIM_Base_Start_IT+0xa0>)
 800356c:	4293      	cmp	r3, r2
 800356e:	d111      	bne.n	8003594 <HAL_TIM_Base_Start_IT+0x7c>
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	681b      	ldr	r3, [r3, #0]
 8003574:	689b      	ldr	r3, [r3, #8]
 8003576:	f003 0307 	and.w	r3, r3, #7
 800357a:	60fb      	str	r3, [r7, #12]
 800357c:	68fb      	ldr	r3, [r7, #12]
 800357e:	2b06      	cmp	r3, #6
 8003580:	d010      	beq.n	80035a4 <HAL_TIM_Base_Start_IT+0x8c>
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	681b      	ldr	r3, [r3, #0]
 8003586:	681a      	ldr	r2, [r3, #0]
 8003588:	687b      	ldr	r3, [r7, #4]
 800358a:	681b      	ldr	r3, [r3, #0]
 800358c:	f042 0201 	orr.w	r2, r2, #1
 8003590:	601a      	str	r2, [r3, #0]
 8003592:	e007      	b.n	80035a4 <HAL_TIM_Base_Start_IT+0x8c>
 8003594:	687b      	ldr	r3, [r7, #4]
 8003596:	681b      	ldr	r3, [r3, #0]
 8003598:	681a      	ldr	r2, [r3, #0]
 800359a:	687b      	ldr	r3, [r7, #4]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	f042 0201 	orr.w	r2, r2, #1
 80035a2:	601a      	str	r2, [r3, #0]
 80035a4:	2300      	movs	r3, #0
 80035a6:	4618      	mov	r0, r3
 80035a8:	3714      	adds	r7, #20
 80035aa:	46bd      	mov	sp, r7
 80035ac:	bc80      	pop	{r7}
 80035ae:	4770      	bx	lr
 80035b0:	40012c00 	.word	0x40012c00
 80035b4:	40000400 	.word	0x40000400
 80035b8:	40000800 	.word	0x40000800

080035bc <HAL_TIM_IRQHandler>:
 80035bc:	b580      	push	{r7, lr}
 80035be:	b082      	sub	sp, #8
 80035c0:	af00      	add	r7, sp, #0
 80035c2:	6078      	str	r0, [r7, #4]
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	691b      	ldr	r3, [r3, #16]
 80035ca:	f003 0302 	and.w	r3, r3, #2
 80035ce:	2b02      	cmp	r3, #2
 80035d0:	d122      	bne.n	8003618 <HAL_TIM_IRQHandler+0x5c>
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	681b      	ldr	r3, [r3, #0]
 80035d6:	68db      	ldr	r3, [r3, #12]
 80035d8:	f003 0302 	and.w	r3, r3, #2
 80035dc:	2b02      	cmp	r3, #2
 80035de:	d11b      	bne.n	8003618 <HAL_TIM_IRQHandler+0x5c>
 80035e0:	687b      	ldr	r3, [r7, #4]
 80035e2:	681b      	ldr	r3, [r3, #0]
 80035e4:	f06f 0202 	mvn.w	r2, #2
 80035e8:	611a      	str	r2, [r3, #16]
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	2201      	movs	r2, #1
 80035ee:	771a      	strb	r2, [r3, #28]
 80035f0:	687b      	ldr	r3, [r7, #4]
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	699b      	ldr	r3, [r3, #24]
 80035f6:	f003 0303 	and.w	r3, r3, #3
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	d003      	beq.n	8003606 <HAL_TIM_IRQHandler+0x4a>
 80035fe:	6878      	ldr	r0, [r7, #4]
 8003600:	f000 f9b1 	bl	8003966 <HAL_TIM_IC_CaptureCallback>
 8003604:	e005      	b.n	8003612 <HAL_TIM_IRQHandler+0x56>
 8003606:	6878      	ldr	r0, [r7, #4]
 8003608:	f000 f9a4 	bl	8003954 <HAL_TIM_OC_DelayElapsedCallback>
 800360c:	6878      	ldr	r0, [r7, #4]
 800360e:	f000 f9b3 	bl	8003978 <HAL_TIM_PWM_PulseFinishedCallback>
 8003612:	687b      	ldr	r3, [r7, #4]
 8003614:	2200      	movs	r2, #0
 8003616:	771a      	strb	r2, [r3, #28]
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	691b      	ldr	r3, [r3, #16]
 800361e:	f003 0304 	and.w	r3, r3, #4
 8003622:	2b04      	cmp	r3, #4
 8003624:	d122      	bne.n	800366c <HAL_TIM_IRQHandler+0xb0>
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	68db      	ldr	r3, [r3, #12]
 800362c:	f003 0304 	and.w	r3, r3, #4
 8003630:	2b04      	cmp	r3, #4
 8003632:	d11b      	bne.n	800366c <HAL_TIM_IRQHandler+0xb0>
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	f06f 0204 	mvn.w	r2, #4
 800363c:	611a      	str	r2, [r3, #16]
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	2202      	movs	r2, #2
 8003642:	771a      	strb	r2, [r3, #28]
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	681b      	ldr	r3, [r3, #0]
 8003648:	699b      	ldr	r3, [r3, #24]
 800364a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800364e:	2b00      	cmp	r3, #0
 8003650:	d003      	beq.n	800365a <HAL_TIM_IRQHandler+0x9e>
 8003652:	6878      	ldr	r0, [r7, #4]
 8003654:	f000 f987 	bl	8003966 <HAL_TIM_IC_CaptureCallback>
 8003658:	e005      	b.n	8003666 <HAL_TIM_IRQHandler+0xaa>
 800365a:	6878      	ldr	r0, [r7, #4]
 800365c:	f000 f97a 	bl	8003954 <HAL_TIM_OC_DelayElapsedCallback>
 8003660:	6878      	ldr	r0, [r7, #4]
 8003662:	f000 f989 	bl	8003978 <HAL_TIM_PWM_PulseFinishedCallback>
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	2200      	movs	r2, #0
 800366a:	771a      	strb	r2, [r3, #28]
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	691b      	ldr	r3, [r3, #16]
 8003672:	f003 0308 	and.w	r3, r3, #8
 8003676:	2b08      	cmp	r3, #8
 8003678:	d122      	bne.n	80036c0 <HAL_TIM_IRQHandler+0x104>
 800367a:	687b      	ldr	r3, [r7, #4]
 800367c:	681b      	ldr	r3, [r3, #0]
 800367e:	68db      	ldr	r3, [r3, #12]
 8003680:	f003 0308 	and.w	r3, r3, #8
 8003684:	2b08      	cmp	r3, #8
 8003686:	d11b      	bne.n	80036c0 <HAL_TIM_IRQHandler+0x104>
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	f06f 0208 	mvn.w	r2, #8
 8003690:	611a      	str	r2, [r3, #16]
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	2204      	movs	r2, #4
 8003696:	771a      	strb	r2, [r3, #28]
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	681b      	ldr	r3, [r3, #0]
 800369c:	69db      	ldr	r3, [r3, #28]
 800369e:	f003 0303 	and.w	r3, r3, #3
 80036a2:	2b00      	cmp	r3, #0
 80036a4:	d003      	beq.n	80036ae <HAL_TIM_IRQHandler+0xf2>
 80036a6:	6878      	ldr	r0, [r7, #4]
 80036a8:	f000 f95d 	bl	8003966 <HAL_TIM_IC_CaptureCallback>
 80036ac:	e005      	b.n	80036ba <HAL_TIM_IRQHandler+0xfe>
 80036ae:	6878      	ldr	r0, [r7, #4]
 80036b0:	f000 f950 	bl	8003954 <HAL_TIM_OC_DelayElapsedCallback>
 80036b4:	6878      	ldr	r0, [r7, #4]
 80036b6:	f000 f95f 	bl	8003978 <HAL_TIM_PWM_PulseFinishedCallback>
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	2200      	movs	r2, #0
 80036be:	771a      	strb	r2, [r3, #28]
 80036c0:	687b      	ldr	r3, [r7, #4]
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	691b      	ldr	r3, [r3, #16]
 80036c6:	f003 0310 	and.w	r3, r3, #16
 80036ca:	2b10      	cmp	r3, #16
 80036cc:	d122      	bne.n	8003714 <HAL_TIM_IRQHandler+0x158>
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	68db      	ldr	r3, [r3, #12]
 80036d4:	f003 0310 	and.w	r3, r3, #16
 80036d8:	2b10      	cmp	r3, #16
 80036da:	d11b      	bne.n	8003714 <HAL_TIM_IRQHandler+0x158>
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	f06f 0210 	mvn.w	r2, #16
 80036e4:	611a      	str	r2, [r3, #16]
 80036e6:	687b      	ldr	r3, [r7, #4]
 80036e8:	2208      	movs	r2, #8
 80036ea:	771a      	strb	r2, [r3, #28]
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	69db      	ldr	r3, [r3, #28]
 80036f2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80036f6:	2b00      	cmp	r3, #0
 80036f8:	d003      	beq.n	8003702 <HAL_TIM_IRQHandler+0x146>
 80036fa:	6878      	ldr	r0, [r7, #4]
 80036fc:	f000 f933 	bl	8003966 <HAL_TIM_IC_CaptureCallback>
 8003700:	e005      	b.n	800370e <HAL_TIM_IRQHandler+0x152>
 8003702:	6878      	ldr	r0, [r7, #4]
 8003704:	f000 f926 	bl	8003954 <HAL_TIM_OC_DelayElapsedCallback>
 8003708:	6878      	ldr	r0, [r7, #4]
 800370a:	f000 f935 	bl	8003978 <HAL_TIM_PWM_PulseFinishedCallback>
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	2200      	movs	r2, #0
 8003712:	771a      	strb	r2, [r3, #28]
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	681b      	ldr	r3, [r3, #0]
 8003718:	691b      	ldr	r3, [r3, #16]
 800371a:	f003 0301 	and.w	r3, r3, #1
 800371e:	2b01      	cmp	r3, #1
 8003720:	d10e      	bne.n	8003740 <HAL_TIM_IRQHandler+0x184>
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	68db      	ldr	r3, [r3, #12]
 8003728:	f003 0301 	and.w	r3, r3, #1
 800372c:	2b01      	cmp	r3, #1
 800372e:	d107      	bne.n	8003740 <HAL_TIM_IRQHandler+0x184>
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	681b      	ldr	r3, [r3, #0]
 8003734:	f06f 0201 	mvn.w	r2, #1
 8003738:	611a      	str	r2, [r3, #16]
 800373a:	6878      	ldr	r0, [r7, #4]
 800373c:	f7fd f970 	bl	8000a20 <HAL_TIM_PeriodElapsedCallback>
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	681b      	ldr	r3, [r3, #0]
 8003744:	691b      	ldr	r3, [r3, #16]
 8003746:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800374a:	2b80      	cmp	r3, #128	; 0x80
 800374c:	d10e      	bne.n	800376c <HAL_TIM_IRQHandler+0x1b0>
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	68db      	ldr	r3, [r3, #12]
 8003754:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8003758:	2b80      	cmp	r3, #128	; 0x80
 800375a:	d107      	bne.n	800376c <HAL_TIM_IRQHandler+0x1b0>
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	681b      	ldr	r3, [r3, #0]
 8003760:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8003764:	611a      	str	r2, [r3, #16]
 8003766:	6878      	ldr	r0, [r7, #4]
 8003768:	f000 fa77 	bl	8003c5a <HAL_TIMEx_BreakCallback>
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	681b      	ldr	r3, [r3, #0]
 8003770:	691b      	ldr	r3, [r3, #16]
 8003772:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003776:	2b40      	cmp	r3, #64	; 0x40
 8003778:	d10e      	bne.n	8003798 <HAL_TIM_IRQHandler+0x1dc>
 800377a:	687b      	ldr	r3, [r7, #4]
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	68db      	ldr	r3, [r3, #12]
 8003780:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003784:	2b40      	cmp	r3, #64	; 0x40
 8003786:	d107      	bne.n	8003798 <HAL_TIM_IRQHandler+0x1dc>
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8003790:	611a      	str	r2, [r3, #16]
 8003792:	6878      	ldr	r0, [r7, #4]
 8003794:	f000 f8f9 	bl	800398a <HAL_TIM_TriggerCallback>
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	681b      	ldr	r3, [r3, #0]
 800379c:	691b      	ldr	r3, [r3, #16]
 800379e:	f003 0320 	and.w	r3, r3, #32
 80037a2:	2b20      	cmp	r3, #32
 80037a4:	d10e      	bne.n	80037c4 <HAL_TIM_IRQHandler+0x208>
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	681b      	ldr	r3, [r3, #0]
 80037aa:	68db      	ldr	r3, [r3, #12]
 80037ac:	f003 0320 	and.w	r3, r3, #32
 80037b0:	2b20      	cmp	r3, #32
 80037b2:	d107      	bne.n	80037c4 <HAL_TIM_IRQHandler+0x208>
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	f06f 0220 	mvn.w	r2, #32
 80037bc:	611a      	str	r2, [r3, #16]
 80037be:	6878      	ldr	r0, [r7, #4]
 80037c0:	f000 fa42 	bl	8003c48 <HAL_TIMEx_CommutCallback>
 80037c4:	bf00      	nop
 80037c6:	3708      	adds	r7, #8
 80037c8:	46bd      	mov	sp, r7
 80037ca:	bd80      	pop	{r7, pc}

080037cc <HAL_TIM_ConfigClockSource>:
 80037cc:	b580      	push	{r7, lr}
 80037ce:	b084      	sub	sp, #16
 80037d0:	af00      	add	r7, sp, #0
 80037d2:	6078      	str	r0, [r7, #4]
 80037d4:	6039      	str	r1, [r7, #0]
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80037dc:	2b01      	cmp	r3, #1
 80037de:	d101      	bne.n	80037e4 <HAL_TIM_ConfigClockSource+0x18>
 80037e0:	2302      	movs	r3, #2
 80037e2:	e0b3      	b.n	800394c <HAL_TIM_ConfigClockSource+0x180>
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	2201      	movs	r2, #1
 80037e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	2202      	movs	r2, #2
 80037f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	689b      	ldr	r3, [r3, #8]
 80037fa:	60fb      	str	r3, [r7, #12]
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8003802:	60fb      	str	r3, [r7, #12]
 8003804:	68fb      	ldr	r3, [r7, #12]
 8003806:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800380a:	60fb      	str	r3, [r7, #12]
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	681b      	ldr	r3, [r3, #0]
 8003810:	68fa      	ldr	r2, [r7, #12]
 8003812:	609a      	str	r2, [r3, #8]
 8003814:	683b      	ldr	r3, [r7, #0]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800381c:	d03e      	beq.n	800389c <HAL_TIM_ConfigClockSource+0xd0>
 800381e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003822:	f200 8087 	bhi.w	8003934 <HAL_TIM_ConfigClockSource+0x168>
 8003826:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800382a:	f000 8085 	beq.w	8003938 <HAL_TIM_ConfigClockSource+0x16c>
 800382e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003832:	d87f      	bhi.n	8003934 <HAL_TIM_ConfigClockSource+0x168>
 8003834:	2b70      	cmp	r3, #112	; 0x70
 8003836:	d01a      	beq.n	800386e <HAL_TIM_ConfigClockSource+0xa2>
 8003838:	2b70      	cmp	r3, #112	; 0x70
 800383a:	d87b      	bhi.n	8003934 <HAL_TIM_ConfigClockSource+0x168>
 800383c:	2b60      	cmp	r3, #96	; 0x60
 800383e:	d050      	beq.n	80038e2 <HAL_TIM_ConfigClockSource+0x116>
 8003840:	2b60      	cmp	r3, #96	; 0x60
 8003842:	d877      	bhi.n	8003934 <HAL_TIM_ConfigClockSource+0x168>
 8003844:	2b50      	cmp	r3, #80	; 0x50
 8003846:	d03c      	beq.n	80038c2 <HAL_TIM_ConfigClockSource+0xf6>
 8003848:	2b50      	cmp	r3, #80	; 0x50
 800384a:	d873      	bhi.n	8003934 <HAL_TIM_ConfigClockSource+0x168>
 800384c:	2b40      	cmp	r3, #64	; 0x40
 800384e:	d058      	beq.n	8003902 <HAL_TIM_ConfigClockSource+0x136>
 8003850:	2b40      	cmp	r3, #64	; 0x40
 8003852:	d86f      	bhi.n	8003934 <HAL_TIM_ConfigClockSource+0x168>
 8003854:	2b30      	cmp	r3, #48	; 0x30
 8003856:	d064      	beq.n	8003922 <HAL_TIM_ConfigClockSource+0x156>
 8003858:	2b30      	cmp	r3, #48	; 0x30
 800385a:	d86b      	bhi.n	8003934 <HAL_TIM_ConfigClockSource+0x168>
 800385c:	2b20      	cmp	r3, #32
 800385e:	d060      	beq.n	8003922 <HAL_TIM_ConfigClockSource+0x156>
 8003860:	2b20      	cmp	r3, #32
 8003862:	d867      	bhi.n	8003934 <HAL_TIM_ConfigClockSource+0x168>
 8003864:	2b00      	cmp	r3, #0
 8003866:	d05c      	beq.n	8003922 <HAL_TIM_ConfigClockSource+0x156>
 8003868:	2b10      	cmp	r3, #16
 800386a:	d05a      	beq.n	8003922 <HAL_TIM_ConfigClockSource+0x156>
 800386c:	e062      	b.n	8003934 <HAL_TIM_ConfigClockSource+0x168>
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	6818      	ldr	r0, [r3, #0]
 8003872:	683b      	ldr	r3, [r7, #0]
 8003874:	6899      	ldr	r1, [r3, #8]
 8003876:	683b      	ldr	r3, [r7, #0]
 8003878:	685a      	ldr	r2, [r3, #4]
 800387a:	683b      	ldr	r3, [r7, #0]
 800387c:	68db      	ldr	r3, [r3, #12]
 800387e:	f000 f966 	bl	8003b4e <TIM_ETR_SetConfig>
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	689b      	ldr	r3, [r3, #8]
 8003888:	60fb      	str	r3, [r7, #12]
 800388a:	68fb      	ldr	r3, [r7, #12]
 800388c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003890:	60fb      	str	r3, [r7, #12]
 8003892:	687b      	ldr	r3, [r7, #4]
 8003894:	681b      	ldr	r3, [r3, #0]
 8003896:	68fa      	ldr	r2, [r7, #12]
 8003898:	609a      	str	r2, [r3, #8]
 800389a:	e04e      	b.n	800393a <HAL_TIM_ConfigClockSource+0x16e>
 800389c:	687b      	ldr	r3, [r7, #4]
 800389e:	6818      	ldr	r0, [r3, #0]
 80038a0:	683b      	ldr	r3, [r7, #0]
 80038a2:	6899      	ldr	r1, [r3, #8]
 80038a4:	683b      	ldr	r3, [r7, #0]
 80038a6:	685a      	ldr	r2, [r3, #4]
 80038a8:	683b      	ldr	r3, [r7, #0]
 80038aa:	68db      	ldr	r3, [r3, #12]
 80038ac:	f000 f94f 	bl	8003b4e <TIM_ETR_SetConfig>
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	689a      	ldr	r2, [r3, #8]
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	681b      	ldr	r3, [r3, #0]
 80038ba:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80038be:	609a      	str	r2, [r3, #8]
 80038c0:	e03b      	b.n	800393a <HAL_TIM_ConfigClockSource+0x16e>
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	6818      	ldr	r0, [r3, #0]
 80038c6:	683b      	ldr	r3, [r7, #0]
 80038c8:	6859      	ldr	r1, [r3, #4]
 80038ca:	683b      	ldr	r3, [r7, #0]
 80038cc:	68db      	ldr	r3, [r3, #12]
 80038ce:	461a      	mov	r2, r3
 80038d0:	f000 f8c6 	bl	8003a60 <TIM_TI1_ConfigInputStage>
 80038d4:	687b      	ldr	r3, [r7, #4]
 80038d6:	681b      	ldr	r3, [r3, #0]
 80038d8:	2150      	movs	r1, #80	; 0x50
 80038da:	4618      	mov	r0, r3
 80038dc:	f000 f91d 	bl	8003b1a <TIM_ITRx_SetConfig>
 80038e0:	e02b      	b.n	800393a <HAL_TIM_ConfigClockSource+0x16e>
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	6818      	ldr	r0, [r3, #0]
 80038e6:	683b      	ldr	r3, [r7, #0]
 80038e8:	6859      	ldr	r1, [r3, #4]
 80038ea:	683b      	ldr	r3, [r7, #0]
 80038ec:	68db      	ldr	r3, [r3, #12]
 80038ee:	461a      	mov	r2, r3
 80038f0:	f000 f8e4 	bl	8003abc <TIM_TI2_ConfigInputStage>
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	2160      	movs	r1, #96	; 0x60
 80038fa:	4618      	mov	r0, r3
 80038fc:	f000 f90d 	bl	8003b1a <TIM_ITRx_SetConfig>
 8003900:	e01b      	b.n	800393a <HAL_TIM_ConfigClockSource+0x16e>
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	6818      	ldr	r0, [r3, #0]
 8003906:	683b      	ldr	r3, [r7, #0]
 8003908:	6859      	ldr	r1, [r3, #4]
 800390a:	683b      	ldr	r3, [r7, #0]
 800390c:	68db      	ldr	r3, [r3, #12]
 800390e:	461a      	mov	r2, r3
 8003910:	f000 f8a6 	bl	8003a60 <TIM_TI1_ConfigInputStage>
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	2140      	movs	r1, #64	; 0x40
 800391a:	4618      	mov	r0, r3
 800391c:	f000 f8fd 	bl	8003b1a <TIM_ITRx_SetConfig>
 8003920:	e00b      	b.n	800393a <HAL_TIM_ConfigClockSource+0x16e>
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	681a      	ldr	r2, [r3, #0]
 8003926:	683b      	ldr	r3, [r7, #0]
 8003928:	681b      	ldr	r3, [r3, #0]
 800392a:	4619      	mov	r1, r3
 800392c:	4610      	mov	r0, r2
 800392e:	f000 f8f4 	bl	8003b1a <TIM_ITRx_SetConfig>
 8003932:	e002      	b.n	800393a <HAL_TIM_ConfigClockSource+0x16e>
 8003934:	bf00      	nop
 8003936:	e000      	b.n	800393a <HAL_TIM_ConfigClockSource+0x16e>
 8003938:	bf00      	nop
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	2201      	movs	r2, #1
 800393e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	2200      	movs	r2, #0
 8003946:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800394a:	2300      	movs	r3, #0
 800394c:	4618      	mov	r0, r3
 800394e:	3710      	adds	r7, #16
 8003950:	46bd      	mov	sp, r7
 8003952:	bd80      	pop	{r7, pc}

08003954 <HAL_TIM_OC_DelayElapsedCallback>:
 8003954:	b480      	push	{r7}
 8003956:	b083      	sub	sp, #12
 8003958:	af00      	add	r7, sp, #0
 800395a:	6078      	str	r0, [r7, #4]
 800395c:	bf00      	nop
 800395e:	370c      	adds	r7, #12
 8003960:	46bd      	mov	sp, r7
 8003962:	bc80      	pop	{r7}
 8003964:	4770      	bx	lr

08003966 <HAL_TIM_IC_CaptureCallback>:
 8003966:	b480      	push	{r7}
 8003968:	b083      	sub	sp, #12
 800396a:	af00      	add	r7, sp, #0
 800396c:	6078      	str	r0, [r7, #4]
 800396e:	bf00      	nop
 8003970:	370c      	adds	r7, #12
 8003972:	46bd      	mov	sp, r7
 8003974:	bc80      	pop	{r7}
 8003976:	4770      	bx	lr

08003978 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003978:	b480      	push	{r7}
 800397a:	b083      	sub	sp, #12
 800397c:	af00      	add	r7, sp, #0
 800397e:	6078      	str	r0, [r7, #4]
 8003980:	bf00      	nop
 8003982:	370c      	adds	r7, #12
 8003984:	46bd      	mov	sp, r7
 8003986:	bc80      	pop	{r7}
 8003988:	4770      	bx	lr

0800398a <HAL_TIM_TriggerCallback>:
 800398a:	b480      	push	{r7}
 800398c:	b083      	sub	sp, #12
 800398e:	af00      	add	r7, sp, #0
 8003990:	6078      	str	r0, [r7, #4]
 8003992:	bf00      	nop
 8003994:	370c      	adds	r7, #12
 8003996:	46bd      	mov	sp, r7
 8003998:	bc80      	pop	{r7}
 800399a:	4770      	bx	lr

0800399c <TIM_Base_SetConfig>:
 800399c:	b480      	push	{r7}
 800399e:	b085      	sub	sp, #20
 80039a0:	af00      	add	r7, sp, #0
 80039a2:	6078      	str	r0, [r7, #4]
 80039a4:	6039      	str	r1, [r7, #0]
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	681b      	ldr	r3, [r3, #0]
 80039aa:	60fb      	str	r3, [r7, #12]
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	4a29      	ldr	r2, [pc, #164]	; (8003a54 <TIM_Base_SetConfig+0xb8>)
 80039b0:	4293      	cmp	r3, r2
 80039b2:	d00b      	beq.n	80039cc <TIM_Base_SetConfig+0x30>
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80039ba:	d007      	beq.n	80039cc <TIM_Base_SetConfig+0x30>
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	4a26      	ldr	r2, [pc, #152]	; (8003a58 <TIM_Base_SetConfig+0xbc>)
 80039c0:	4293      	cmp	r3, r2
 80039c2:	d003      	beq.n	80039cc <TIM_Base_SetConfig+0x30>
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	4a25      	ldr	r2, [pc, #148]	; (8003a5c <TIM_Base_SetConfig+0xc0>)
 80039c8:	4293      	cmp	r3, r2
 80039ca:	d108      	bne.n	80039de <TIM_Base_SetConfig+0x42>
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80039d2:	60fb      	str	r3, [r7, #12]
 80039d4:	683b      	ldr	r3, [r7, #0]
 80039d6:	685b      	ldr	r3, [r3, #4]
 80039d8:	68fa      	ldr	r2, [r7, #12]
 80039da:	4313      	orrs	r3, r2
 80039dc:	60fb      	str	r3, [r7, #12]
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	4a1c      	ldr	r2, [pc, #112]	; (8003a54 <TIM_Base_SetConfig+0xb8>)
 80039e2:	4293      	cmp	r3, r2
 80039e4:	d00b      	beq.n	80039fe <TIM_Base_SetConfig+0x62>
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80039ec:	d007      	beq.n	80039fe <TIM_Base_SetConfig+0x62>
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	4a19      	ldr	r2, [pc, #100]	; (8003a58 <TIM_Base_SetConfig+0xbc>)
 80039f2:	4293      	cmp	r3, r2
 80039f4:	d003      	beq.n	80039fe <TIM_Base_SetConfig+0x62>
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	4a18      	ldr	r2, [pc, #96]	; (8003a5c <TIM_Base_SetConfig+0xc0>)
 80039fa:	4293      	cmp	r3, r2
 80039fc:	d108      	bne.n	8003a10 <TIM_Base_SetConfig+0x74>
 80039fe:	68fb      	ldr	r3, [r7, #12]
 8003a00:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003a04:	60fb      	str	r3, [r7, #12]
 8003a06:	683b      	ldr	r3, [r7, #0]
 8003a08:	68db      	ldr	r3, [r3, #12]
 8003a0a:	68fa      	ldr	r2, [r7, #12]
 8003a0c:	4313      	orrs	r3, r2
 8003a0e:	60fb      	str	r3, [r7, #12]
 8003a10:	68fb      	ldr	r3, [r7, #12]
 8003a12:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003a16:	683b      	ldr	r3, [r7, #0]
 8003a18:	695b      	ldr	r3, [r3, #20]
 8003a1a:	4313      	orrs	r3, r2
 8003a1c:	60fb      	str	r3, [r7, #12]
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	68fa      	ldr	r2, [r7, #12]
 8003a22:	601a      	str	r2, [r3, #0]
 8003a24:	683b      	ldr	r3, [r7, #0]
 8003a26:	689a      	ldr	r2, [r3, #8]
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	62da      	str	r2, [r3, #44]	; 0x2c
 8003a2c:	683b      	ldr	r3, [r7, #0]
 8003a2e:	681a      	ldr	r2, [r3, #0]
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	629a      	str	r2, [r3, #40]	; 0x28
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	4a07      	ldr	r2, [pc, #28]	; (8003a54 <TIM_Base_SetConfig+0xb8>)
 8003a38:	4293      	cmp	r3, r2
 8003a3a:	d103      	bne.n	8003a44 <TIM_Base_SetConfig+0xa8>
 8003a3c:	683b      	ldr	r3, [r7, #0]
 8003a3e:	691a      	ldr	r2, [r3, #16]
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	631a      	str	r2, [r3, #48]	; 0x30
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	2201      	movs	r2, #1
 8003a48:	615a      	str	r2, [r3, #20]
 8003a4a:	bf00      	nop
 8003a4c:	3714      	adds	r7, #20
 8003a4e:	46bd      	mov	sp, r7
 8003a50:	bc80      	pop	{r7}
 8003a52:	4770      	bx	lr
 8003a54:	40012c00 	.word	0x40012c00
 8003a58:	40000400 	.word	0x40000400
 8003a5c:	40000800 	.word	0x40000800

08003a60 <TIM_TI1_ConfigInputStage>:
 8003a60:	b480      	push	{r7}
 8003a62:	b087      	sub	sp, #28
 8003a64:	af00      	add	r7, sp, #0
 8003a66:	60f8      	str	r0, [r7, #12]
 8003a68:	60b9      	str	r1, [r7, #8]
 8003a6a:	607a      	str	r2, [r7, #4]
 8003a6c:	68fb      	ldr	r3, [r7, #12]
 8003a6e:	6a1b      	ldr	r3, [r3, #32]
 8003a70:	617b      	str	r3, [r7, #20]
 8003a72:	68fb      	ldr	r3, [r7, #12]
 8003a74:	6a1b      	ldr	r3, [r3, #32]
 8003a76:	f023 0201 	bic.w	r2, r3, #1
 8003a7a:	68fb      	ldr	r3, [r7, #12]
 8003a7c:	621a      	str	r2, [r3, #32]
 8003a7e:	68fb      	ldr	r3, [r7, #12]
 8003a80:	699b      	ldr	r3, [r3, #24]
 8003a82:	613b      	str	r3, [r7, #16]
 8003a84:	693b      	ldr	r3, [r7, #16]
 8003a86:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003a8a:	613b      	str	r3, [r7, #16]
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	011b      	lsls	r3, r3, #4
 8003a90:	693a      	ldr	r2, [r7, #16]
 8003a92:	4313      	orrs	r3, r2
 8003a94:	613b      	str	r3, [r7, #16]
 8003a96:	697b      	ldr	r3, [r7, #20]
 8003a98:	f023 030a 	bic.w	r3, r3, #10
 8003a9c:	617b      	str	r3, [r7, #20]
 8003a9e:	697a      	ldr	r2, [r7, #20]
 8003aa0:	68bb      	ldr	r3, [r7, #8]
 8003aa2:	4313      	orrs	r3, r2
 8003aa4:	617b      	str	r3, [r7, #20]
 8003aa6:	68fb      	ldr	r3, [r7, #12]
 8003aa8:	693a      	ldr	r2, [r7, #16]
 8003aaa:	619a      	str	r2, [r3, #24]
 8003aac:	68fb      	ldr	r3, [r7, #12]
 8003aae:	697a      	ldr	r2, [r7, #20]
 8003ab0:	621a      	str	r2, [r3, #32]
 8003ab2:	bf00      	nop
 8003ab4:	371c      	adds	r7, #28
 8003ab6:	46bd      	mov	sp, r7
 8003ab8:	bc80      	pop	{r7}
 8003aba:	4770      	bx	lr

08003abc <TIM_TI2_ConfigInputStage>:
 8003abc:	b480      	push	{r7}
 8003abe:	b087      	sub	sp, #28
 8003ac0:	af00      	add	r7, sp, #0
 8003ac2:	60f8      	str	r0, [r7, #12]
 8003ac4:	60b9      	str	r1, [r7, #8]
 8003ac6:	607a      	str	r2, [r7, #4]
 8003ac8:	68fb      	ldr	r3, [r7, #12]
 8003aca:	6a1b      	ldr	r3, [r3, #32]
 8003acc:	f023 0210 	bic.w	r2, r3, #16
 8003ad0:	68fb      	ldr	r3, [r7, #12]
 8003ad2:	621a      	str	r2, [r3, #32]
 8003ad4:	68fb      	ldr	r3, [r7, #12]
 8003ad6:	699b      	ldr	r3, [r3, #24]
 8003ad8:	617b      	str	r3, [r7, #20]
 8003ada:	68fb      	ldr	r3, [r7, #12]
 8003adc:	6a1b      	ldr	r3, [r3, #32]
 8003ade:	613b      	str	r3, [r7, #16]
 8003ae0:	697b      	ldr	r3, [r7, #20]
 8003ae2:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003ae6:	617b      	str	r3, [r7, #20]
 8003ae8:	687b      	ldr	r3, [r7, #4]
 8003aea:	031b      	lsls	r3, r3, #12
 8003aec:	697a      	ldr	r2, [r7, #20]
 8003aee:	4313      	orrs	r3, r2
 8003af0:	617b      	str	r3, [r7, #20]
 8003af2:	693b      	ldr	r3, [r7, #16]
 8003af4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003af8:	613b      	str	r3, [r7, #16]
 8003afa:	68bb      	ldr	r3, [r7, #8]
 8003afc:	011b      	lsls	r3, r3, #4
 8003afe:	693a      	ldr	r2, [r7, #16]
 8003b00:	4313      	orrs	r3, r2
 8003b02:	613b      	str	r3, [r7, #16]
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	697a      	ldr	r2, [r7, #20]
 8003b08:	619a      	str	r2, [r3, #24]
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	693a      	ldr	r2, [r7, #16]
 8003b0e:	621a      	str	r2, [r3, #32]
 8003b10:	bf00      	nop
 8003b12:	371c      	adds	r7, #28
 8003b14:	46bd      	mov	sp, r7
 8003b16:	bc80      	pop	{r7}
 8003b18:	4770      	bx	lr

08003b1a <TIM_ITRx_SetConfig>:
 8003b1a:	b480      	push	{r7}
 8003b1c:	b085      	sub	sp, #20
 8003b1e:	af00      	add	r7, sp, #0
 8003b20:	6078      	str	r0, [r7, #4]
 8003b22:	6039      	str	r1, [r7, #0]
 8003b24:	687b      	ldr	r3, [r7, #4]
 8003b26:	689b      	ldr	r3, [r3, #8]
 8003b28:	60fb      	str	r3, [r7, #12]
 8003b2a:	68fb      	ldr	r3, [r7, #12]
 8003b2c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003b30:	60fb      	str	r3, [r7, #12]
 8003b32:	683a      	ldr	r2, [r7, #0]
 8003b34:	68fb      	ldr	r3, [r7, #12]
 8003b36:	4313      	orrs	r3, r2
 8003b38:	f043 0307 	orr.w	r3, r3, #7
 8003b3c:	60fb      	str	r3, [r7, #12]
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	68fa      	ldr	r2, [r7, #12]
 8003b42:	609a      	str	r2, [r3, #8]
 8003b44:	bf00      	nop
 8003b46:	3714      	adds	r7, #20
 8003b48:	46bd      	mov	sp, r7
 8003b4a:	bc80      	pop	{r7}
 8003b4c:	4770      	bx	lr

08003b4e <TIM_ETR_SetConfig>:
 8003b4e:	b480      	push	{r7}
 8003b50:	b087      	sub	sp, #28
 8003b52:	af00      	add	r7, sp, #0
 8003b54:	60f8      	str	r0, [r7, #12]
 8003b56:	60b9      	str	r1, [r7, #8]
 8003b58:	607a      	str	r2, [r7, #4]
 8003b5a:	603b      	str	r3, [r7, #0]
 8003b5c:	68fb      	ldr	r3, [r7, #12]
 8003b5e:	689b      	ldr	r3, [r3, #8]
 8003b60:	617b      	str	r3, [r7, #20]
 8003b62:	697b      	ldr	r3, [r7, #20]
 8003b64:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003b68:	617b      	str	r3, [r7, #20]
 8003b6a:	683b      	ldr	r3, [r7, #0]
 8003b6c:	021a      	lsls	r2, r3, #8
 8003b6e:	687b      	ldr	r3, [r7, #4]
 8003b70:	431a      	orrs	r2, r3
 8003b72:	68bb      	ldr	r3, [r7, #8]
 8003b74:	4313      	orrs	r3, r2
 8003b76:	697a      	ldr	r2, [r7, #20]
 8003b78:	4313      	orrs	r3, r2
 8003b7a:	617b      	str	r3, [r7, #20]
 8003b7c:	68fb      	ldr	r3, [r7, #12]
 8003b7e:	697a      	ldr	r2, [r7, #20]
 8003b80:	609a      	str	r2, [r3, #8]
 8003b82:	bf00      	nop
 8003b84:	371c      	adds	r7, #28
 8003b86:	46bd      	mov	sp, r7
 8003b88:	bc80      	pop	{r7}
 8003b8a:	4770      	bx	lr

08003b8c <HAL_TIMEx_MasterConfigSynchronization>:
 8003b8c:	b480      	push	{r7}
 8003b8e:	b085      	sub	sp, #20
 8003b90:	af00      	add	r7, sp, #0
 8003b92:	6078      	str	r0, [r7, #4]
 8003b94:	6039      	str	r1, [r7, #0]
 8003b96:	687b      	ldr	r3, [r7, #4]
 8003b98:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003b9c:	2b01      	cmp	r3, #1
 8003b9e:	d101      	bne.n	8003ba4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003ba0:	2302      	movs	r3, #2
 8003ba2:	e046      	b.n	8003c32 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	2201      	movs	r2, #1
 8003ba8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	2202      	movs	r2, #2
 8003bb0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	681b      	ldr	r3, [r3, #0]
 8003bb8:	685b      	ldr	r3, [r3, #4]
 8003bba:	60fb      	str	r3, [r7, #12]
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	681b      	ldr	r3, [r3, #0]
 8003bc0:	689b      	ldr	r3, [r3, #8]
 8003bc2:	60bb      	str	r3, [r7, #8]
 8003bc4:	68fb      	ldr	r3, [r7, #12]
 8003bc6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003bca:	60fb      	str	r3, [r7, #12]
 8003bcc:	683b      	ldr	r3, [r7, #0]
 8003bce:	681b      	ldr	r3, [r3, #0]
 8003bd0:	68fa      	ldr	r2, [r7, #12]
 8003bd2:	4313      	orrs	r3, r2
 8003bd4:	60fb      	str	r3, [r7, #12]
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	681b      	ldr	r3, [r3, #0]
 8003bda:	68fa      	ldr	r2, [r7, #12]
 8003bdc:	605a      	str	r2, [r3, #4]
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	4a16      	ldr	r2, [pc, #88]	; (8003c3c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003be4:	4293      	cmp	r3, r2
 8003be6:	d00e      	beq.n	8003c06 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003be8:	687b      	ldr	r3, [r7, #4]
 8003bea:	681b      	ldr	r3, [r3, #0]
 8003bec:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003bf0:	d009      	beq.n	8003c06 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	4a12      	ldr	r2, [pc, #72]	; (8003c40 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003bf8:	4293      	cmp	r3, r2
 8003bfa:	d004      	beq.n	8003c06 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	4a10      	ldr	r2, [pc, #64]	; (8003c44 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003c02:	4293      	cmp	r3, r2
 8003c04:	d10c      	bne.n	8003c20 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003c06:	68bb      	ldr	r3, [r7, #8]
 8003c08:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003c0c:	60bb      	str	r3, [r7, #8]
 8003c0e:	683b      	ldr	r3, [r7, #0]
 8003c10:	685b      	ldr	r3, [r3, #4]
 8003c12:	68ba      	ldr	r2, [r7, #8]
 8003c14:	4313      	orrs	r3, r2
 8003c16:	60bb      	str	r3, [r7, #8]
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	681b      	ldr	r3, [r3, #0]
 8003c1c:	68ba      	ldr	r2, [r7, #8]
 8003c1e:	609a      	str	r2, [r3, #8]
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	2201      	movs	r2, #1
 8003c24:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	2200      	movs	r2, #0
 8003c2c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003c30:	2300      	movs	r3, #0
 8003c32:	4618      	mov	r0, r3
 8003c34:	3714      	adds	r7, #20
 8003c36:	46bd      	mov	sp, r7
 8003c38:	bc80      	pop	{r7}
 8003c3a:	4770      	bx	lr
 8003c3c:	40012c00 	.word	0x40012c00
 8003c40:	40000400 	.word	0x40000400
 8003c44:	40000800 	.word	0x40000800

08003c48 <HAL_TIMEx_CommutCallback>:
 8003c48:	b480      	push	{r7}
 8003c4a:	b083      	sub	sp, #12
 8003c4c:	af00      	add	r7, sp, #0
 8003c4e:	6078      	str	r0, [r7, #4]
 8003c50:	bf00      	nop
 8003c52:	370c      	adds	r7, #12
 8003c54:	46bd      	mov	sp, r7
 8003c56:	bc80      	pop	{r7}
 8003c58:	4770      	bx	lr

08003c5a <HAL_TIMEx_BreakCallback>:
 8003c5a:	b480      	push	{r7}
 8003c5c:	b083      	sub	sp, #12
 8003c5e:	af00      	add	r7, sp, #0
 8003c60:	6078      	str	r0, [r7, #4]
 8003c62:	bf00      	nop
 8003c64:	370c      	adds	r7, #12
 8003c66:	46bd      	mov	sp, r7
 8003c68:	bc80      	pop	{r7}
 8003c6a:	4770      	bx	lr

08003c6c <HAL_UART_Init>:
 8003c6c:	b580      	push	{r7, lr}
 8003c6e:	b082      	sub	sp, #8
 8003c70:	af00      	add	r7, sp, #0
 8003c72:	6078      	str	r0, [r7, #4]
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	2b00      	cmp	r3, #0
 8003c78:	d101      	bne.n	8003c7e <HAL_UART_Init+0x12>
 8003c7a:	2301      	movs	r3, #1
 8003c7c:	e03f      	b.n	8003cfe <HAL_UART_Init+0x92>
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003c84:	b2db      	uxtb	r3, r3
 8003c86:	2b00      	cmp	r3, #0
 8003c88:	d106      	bne.n	8003c98 <HAL_UART_Init+0x2c>
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	2200      	movs	r2, #0
 8003c8e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003c92:	6878      	ldr	r0, [r7, #4]
 8003c94:	f7fd f89e 	bl	8000dd4 <HAL_UART_MspInit>
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	2224      	movs	r2, #36	; 0x24
 8003c9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	681b      	ldr	r3, [r3, #0]
 8003ca4:	68da      	ldr	r2, [r3, #12]
 8003ca6:	687b      	ldr	r3, [r7, #4]
 8003ca8:	681b      	ldr	r3, [r3, #0]
 8003caa:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003cae:	60da      	str	r2, [r3, #12]
 8003cb0:	6878      	ldr	r0, [r7, #4]
 8003cb2:	f000 fc85 	bl	80045c0 <UART_SetConfig>
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	691a      	ldr	r2, [r3, #16]
 8003cbc:	687b      	ldr	r3, [r7, #4]
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003cc4:	611a      	str	r2, [r3, #16]
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	681b      	ldr	r3, [r3, #0]
 8003cca:	695a      	ldr	r2, [r3, #20]
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	681b      	ldr	r3, [r3, #0]
 8003cd0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003cd4:	615a      	str	r2, [r3, #20]
 8003cd6:	687b      	ldr	r3, [r7, #4]
 8003cd8:	681b      	ldr	r3, [r3, #0]
 8003cda:	68da      	ldr	r2, [r3, #12]
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003ce4:	60da      	str	r2, [r3, #12]
 8003ce6:	687b      	ldr	r3, [r7, #4]
 8003ce8:	2200      	movs	r2, #0
 8003cea:	641a      	str	r2, [r3, #64]	; 0x40
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	2220      	movs	r2, #32
 8003cf0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	2220      	movs	r2, #32
 8003cf8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003cfc:	2300      	movs	r3, #0
 8003cfe:	4618      	mov	r0, r3
 8003d00:	3708      	adds	r7, #8
 8003d02:	46bd      	mov	sp, r7
 8003d04:	bd80      	pop	{r7, pc}

08003d06 <HAL_UART_Transmit>:
 8003d06:	b580      	push	{r7, lr}
 8003d08:	b08a      	sub	sp, #40	; 0x28
 8003d0a:	af02      	add	r7, sp, #8
 8003d0c:	60f8      	str	r0, [r7, #12]
 8003d0e:	60b9      	str	r1, [r7, #8]
 8003d10:	603b      	str	r3, [r7, #0]
 8003d12:	4613      	mov	r3, r2
 8003d14:	80fb      	strh	r3, [r7, #6]
 8003d16:	2300      	movs	r3, #0
 8003d18:	617b      	str	r3, [r7, #20]
 8003d1a:	68fb      	ldr	r3, [r7, #12]
 8003d1c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003d20:	b2db      	uxtb	r3, r3
 8003d22:	2b20      	cmp	r3, #32
 8003d24:	d17c      	bne.n	8003e20 <HAL_UART_Transmit+0x11a>
 8003d26:	68bb      	ldr	r3, [r7, #8]
 8003d28:	2b00      	cmp	r3, #0
 8003d2a:	d002      	beq.n	8003d32 <HAL_UART_Transmit+0x2c>
 8003d2c:	88fb      	ldrh	r3, [r7, #6]
 8003d2e:	2b00      	cmp	r3, #0
 8003d30:	d101      	bne.n	8003d36 <HAL_UART_Transmit+0x30>
 8003d32:	2301      	movs	r3, #1
 8003d34:	e075      	b.n	8003e22 <HAL_UART_Transmit+0x11c>
 8003d36:	68fb      	ldr	r3, [r7, #12]
 8003d38:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003d3c:	2b01      	cmp	r3, #1
 8003d3e:	d101      	bne.n	8003d44 <HAL_UART_Transmit+0x3e>
 8003d40:	2302      	movs	r3, #2
 8003d42:	e06e      	b.n	8003e22 <HAL_UART_Transmit+0x11c>
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	2201      	movs	r2, #1
 8003d48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003d4c:	68fb      	ldr	r3, [r7, #12]
 8003d4e:	2200      	movs	r2, #0
 8003d50:	641a      	str	r2, [r3, #64]	; 0x40
 8003d52:	68fb      	ldr	r3, [r7, #12]
 8003d54:	2221      	movs	r2, #33	; 0x21
 8003d56:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003d5a:	f7fd faef 	bl	800133c <HAL_GetTick>
 8003d5e:	6178      	str	r0, [r7, #20]
 8003d60:	68fb      	ldr	r3, [r7, #12]
 8003d62:	88fa      	ldrh	r2, [r7, #6]
 8003d64:	849a      	strh	r2, [r3, #36]	; 0x24
 8003d66:	68fb      	ldr	r3, [r7, #12]
 8003d68:	88fa      	ldrh	r2, [r7, #6]
 8003d6a:	84da      	strh	r2, [r3, #38]	; 0x26
 8003d6c:	68fb      	ldr	r3, [r7, #12]
 8003d6e:	689b      	ldr	r3, [r3, #8]
 8003d70:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003d74:	d108      	bne.n	8003d88 <HAL_UART_Transmit+0x82>
 8003d76:	68fb      	ldr	r3, [r7, #12]
 8003d78:	691b      	ldr	r3, [r3, #16]
 8003d7a:	2b00      	cmp	r3, #0
 8003d7c:	d104      	bne.n	8003d88 <HAL_UART_Transmit+0x82>
 8003d7e:	2300      	movs	r3, #0
 8003d80:	61fb      	str	r3, [r7, #28]
 8003d82:	68bb      	ldr	r3, [r7, #8]
 8003d84:	61bb      	str	r3, [r7, #24]
 8003d86:	e003      	b.n	8003d90 <HAL_UART_Transmit+0x8a>
 8003d88:	68bb      	ldr	r3, [r7, #8]
 8003d8a:	61fb      	str	r3, [r7, #28]
 8003d8c:	2300      	movs	r3, #0
 8003d8e:	61bb      	str	r3, [r7, #24]
 8003d90:	68fb      	ldr	r3, [r7, #12]
 8003d92:	2200      	movs	r2, #0
 8003d94:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003d98:	e02a      	b.n	8003df0 <HAL_UART_Transmit+0xea>
 8003d9a:	683b      	ldr	r3, [r7, #0]
 8003d9c:	9300      	str	r3, [sp, #0]
 8003d9e:	697b      	ldr	r3, [r7, #20]
 8003da0:	2200      	movs	r2, #0
 8003da2:	2180      	movs	r1, #128	; 0x80
 8003da4:	68f8      	ldr	r0, [r7, #12]
 8003da6:	f000 fa38 	bl	800421a <UART_WaitOnFlagUntilTimeout>
 8003daa:	4603      	mov	r3, r0
 8003dac:	2b00      	cmp	r3, #0
 8003dae:	d001      	beq.n	8003db4 <HAL_UART_Transmit+0xae>
 8003db0:	2303      	movs	r3, #3
 8003db2:	e036      	b.n	8003e22 <HAL_UART_Transmit+0x11c>
 8003db4:	69fb      	ldr	r3, [r7, #28]
 8003db6:	2b00      	cmp	r3, #0
 8003db8:	d10b      	bne.n	8003dd2 <HAL_UART_Transmit+0xcc>
 8003dba:	69bb      	ldr	r3, [r7, #24]
 8003dbc:	881b      	ldrh	r3, [r3, #0]
 8003dbe:	461a      	mov	r2, r3
 8003dc0:	68fb      	ldr	r3, [r7, #12]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003dc8:	605a      	str	r2, [r3, #4]
 8003dca:	69bb      	ldr	r3, [r7, #24]
 8003dcc:	3302      	adds	r3, #2
 8003dce:	61bb      	str	r3, [r7, #24]
 8003dd0:	e007      	b.n	8003de2 <HAL_UART_Transmit+0xdc>
 8003dd2:	69fb      	ldr	r3, [r7, #28]
 8003dd4:	781a      	ldrb	r2, [r3, #0]
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	605a      	str	r2, [r3, #4]
 8003ddc:	69fb      	ldr	r3, [r7, #28]
 8003dde:	3301      	adds	r3, #1
 8003de0:	61fb      	str	r3, [r7, #28]
 8003de2:	68fb      	ldr	r3, [r7, #12]
 8003de4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003de6:	b29b      	uxth	r3, r3
 8003de8:	3b01      	subs	r3, #1
 8003dea:	b29a      	uxth	r2, r3
 8003dec:	68fb      	ldr	r3, [r7, #12]
 8003dee:	84da      	strh	r2, [r3, #38]	; 0x26
 8003df0:	68fb      	ldr	r3, [r7, #12]
 8003df2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003df4:	b29b      	uxth	r3, r3
 8003df6:	2b00      	cmp	r3, #0
 8003df8:	d1cf      	bne.n	8003d9a <HAL_UART_Transmit+0x94>
 8003dfa:	683b      	ldr	r3, [r7, #0]
 8003dfc:	9300      	str	r3, [sp, #0]
 8003dfe:	697b      	ldr	r3, [r7, #20]
 8003e00:	2200      	movs	r2, #0
 8003e02:	2140      	movs	r1, #64	; 0x40
 8003e04:	68f8      	ldr	r0, [r7, #12]
 8003e06:	f000 fa08 	bl	800421a <UART_WaitOnFlagUntilTimeout>
 8003e0a:	4603      	mov	r3, r0
 8003e0c:	2b00      	cmp	r3, #0
 8003e0e:	d001      	beq.n	8003e14 <HAL_UART_Transmit+0x10e>
 8003e10:	2303      	movs	r3, #3
 8003e12:	e006      	b.n	8003e22 <HAL_UART_Transmit+0x11c>
 8003e14:	68fb      	ldr	r3, [r7, #12]
 8003e16:	2220      	movs	r2, #32
 8003e18:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003e1c:	2300      	movs	r3, #0
 8003e1e:	e000      	b.n	8003e22 <HAL_UART_Transmit+0x11c>
 8003e20:	2302      	movs	r3, #2
 8003e22:	4618      	mov	r0, r3
 8003e24:	3720      	adds	r7, #32
 8003e26:	46bd      	mov	sp, r7
 8003e28:	bd80      	pop	{r7, pc}

08003e2a <HAL_UART_Receive_IT>:
 8003e2a:	b580      	push	{r7, lr}
 8003e2c:	b084      	sub	sp, #16
 8003e2e:	af00      	add	r7, sp, #0
 8003e30:	60f8      	str	r0, [r7, #12]
 8003e32:	60b9      	str	r1, [r7, #8]
 8003e34:	4613      	mov	r3, r2
 8003e36:	80fb      	strh	r3, [r7, #6]
 8003e38:	68fb      	ldr	r3, [r7, #12]
 8003e3a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8003e3e:	b2db      	uxtb	r3, r3
 8003e40:	2b20      	cmp	r3, #32
 8003e42:	d11d      	bne.n	8003e80 <HAL_UART_Receive_IT+0x56>
 8003e44:	68bb      	ldr	r3, [r7, #8]
 8003e46:	2b00      	cmp	r3, #0
 8003e48:	d002      	beq.n	8003e50 <HAL_UART_Receive_IT+0x26>
 8003e4a:	88fb      	ldrh	r3, [r7, #6]
 8003e4c:	2b00      	cmp	r3, #0
 8003e4e:	d101      	bne.n	8003e54 <HAL_UART_Receive_IT+0x2a>
 8003e50:	2301      	movs	r3, #1
 8003e52:	e016      	b.n	8003e82 <HAL_UART_Receive_IT+0x58>
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003e5a:	2b01      	cmp	r3, #1
 8003e5c:	d101      	bne.n	8003e62 <HAL_UART_Receive_IT+0x38>
 8003e5e:	2302      	movs	r3, #2
 8003e60:	e00f      	b.n	8003e82 <HAL_UART_Receive_IT+0x58>
 8003e62:	68fb      	ldr	r3, [r7, #12]
 8003e64:	2201      	movs	r2, #1
 8003e66:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003e6a:	68fb      	ldr	r3, [r7, #12]
 8003e6c:	2200      	movs	r2, #0
 8003e6e:	631a      	str	r2, [r3, #48]	; 0x30
 8003e70:	88fb      	ldrh	r3, [r7, #6]
 8003e72:	461a      	mov	r2, r3
 8003e74:	68b9      	ldr	r1, [r7, #8]
 8003e76:	68f8      	ldr	r0, [r7, #12]
 8003e78:	f000 fa19 	bl	80042ae <UART_Start_Receive_IT>
 8003e7c:	4603      	mov	r3, r0
 8003e7e:	e000      	b.n	8003e82 <HAL_UART_Receive_IT+0x58>
 8003e80:	2302      	movs	r3, #2
 8003e82:	4618      	mov	r0, r3
 8003e84:	3710      	adds	r7, #16
 8003e86:	46bd      	mov	sp, r7
 8003e88:	bd80      	pop	{r7, pc}
	...

08003e8c <HAL_UART_IRQHandler>:
 8003e8c:	b580      	push	{r7, lr}
 8003e8e:	b08a      	sub	sp, #40	; 0x28
 8003e90:	af00      	add	r7, sp, #0
 8003e92:	6078      	str	r0, [r7, #4]
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	627b      	str	r3, [r7, #36]	; 0x24
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	68db      	ldr	r3, [r3, #12]
 8003ea2:	623b      	str	r3, [r7, #32]
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	695b      	ldr	r3, [r3, #20]
 8003eaa:	61fb      	str	r3, [r7, #28]
 8003eac:	2300      	movs	r3, #0
 8003eae:	61bb      	str	r3, [r7, #24]
 8003eb0:	2300      	movs	r3, #0
 8003eb2:	617b      	str	r3, [r7, #20]
 8003eb4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003eb6:	f003 030f 	and.w	r3, r3, #15
 8003eba:	61bb      	str	r3, [r7, #24]
 8003ebc:	69bb      	ldr	r3, [r7, #24]
 8003ebe:	2b00      	cmp	r3, #0
 8003ec0:	d10d      	bne.n	8003ede <HAL_UART_IRQHandler+0x52>
 8003ec2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ec4:	f003 0320 	and.w	r3, r3, #32
 8003ec8:	2b00      	cmp	r3, #0
 8003eca:	d008      	beq.n	8003ede <HAL_UART_IRQHandler+0x52>
 8003ecc:	6a3b      	ldr	r3, [r7, #32]
 8003ece:	f003 0320 	and.w	r3, r3, #32
 8003ed2:	2b00      	cmp	r3, #0
 8003ed4:	d003      	beq.n	8003ede <HAL_UART_IRQHandler+0x52>
 8003ed6:	6878      	ldr	r0, [r7, #4]
 8003ed8:	f000 fac9 	bl	800446e <UART_Receive_IT>
 8003edc:	e17b      	b.n	80041d6 <HAL_UART_IRQHandler+0x34a>
 8003ede:	69bb      	ldr	r3, [r7, #24]
 8003ee0:	2b00      	cmp	r3, #0
 8003ee2:	f000 80b1 	beq.w	8004048 <HAL_UART_IRQHandler+0x1bc>
 8003ee6:	69fb      	ldr	r3, [r7, #28]
 8003ee8:	f003 0301 	and.w	r3, r3, #1
 8003eec:	2b00      	cmp	r3, #0
 8003eee:	d105      	bne.n	8003efc <HAL_UART_IRQHandler+0x70>
 8003ef0:	6a3b      	ldr	r3, [r7, #32]
 8003ef2:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	f000 80a6 	beq.w	8004048 <HAL_UART_IRQHandler+0x1bc>
 8003efc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003efe:	f003 0301 	and.w	r3, r3, #1
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	d00a      	beq.n	8003f1c <HAL_UART_IRQHandler+0x90>
 8003f06:	6a3b      	ldr	r3, [r7, #32]
 8003f08:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003f0c:	2b00      	cmp	r3, #0
 8003f0e:	d005      	beq.n	8003f1c <HAL_UART_IRQHandler+0x90>
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f14:	f043 0201 	orr.w	r2, r3, #1
 8003f18:	687b      	ldr	r3, [r7, #4]
 8003f1a:	641a      	str	r2, [r3, #64]	; 0x40
 8003f1c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f1e:	f003 0304 	and.w	r3, r3, #4
 8003f22:	2b00      	cmp	r3, #0
 8003f24:	d00a      	beq.n	8003f3c <HAL_UART_IRQHandler+0xb0>
 8003f26:	69fb      	ldr	r3, [r7, #28]
 8003f28:	f003 0301 	and.w	r3, r3, #1
 8003f2c:	2b00      	cmp	r3, #0
 8003f2e:	d005      	beq.n	8003f3c <HAL_UART_IRQHandler+0xb0>
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f34:	f043 0202 	orr.w	r2, r3, #2
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	641a      	str	r2, [r3, #64]	; 0x40
 8003f3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f3e:	f003 0302 	and.w	r3, r3, #2
 8003f42:	2b00      	cmp	r3, #0
 8003f44:	d00a      	beq.n	8003f5c <HAL_UART_IRQHandler+0xd0>
 8003f46:	69fb      	ldr	r3, [r7, #28]
 8003f48:	f003 0301 	and.w	r3, r3, #1
 8003f4c:	2b00      	cmp	r3, #0
 8003f4e:	d005      	beq.n	8003f5c <HAL_UART_IRQHandler+0xd0>
 8003f50:	687b      	ldr	r3, [r7, #4]
 8003f52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f54:	f043 0204 	orr.w	r2, r3, #4
 8003f58:	687b      	ldr	r3, [r7, #4]
 8003f5a:	641a      	str	r2, [r3, #64]	; 0x40
 8003f5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f5e:	f003 0308 	and.w	r3, r3, #8
 8003f62:	2b00      	cmp	r3, #0
 8003f64:	d00f      	beq.n	8003f86 <HAL_UART_IRQHandler+0xfa>
 8003f66:	6a3b      	ldr	r3, [r7, #32]
 8003f68:	f003 0320 	and.w	r3, r3, #32
 8003f6c:	2b00      	cmp	r3, #0
 8003f6e:	d104      	bne.n	8003f7a <HAL_UART_IRQHandler+0xee>
 8003f70:	69fb      	ldr	r3, [r7, #28]
 8003f72:	f003 0301 	and.w	r3, r3, #1
 8003f76:	2b00      	cmp	r3, #0
 8003f78:	d005      	beq.n	8003f86 <HAL_UART_IRQHandler+0xfa>
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f7e:	f043 0208 	orr.w	r2, r3, #8
 8003f82:	687b      	ldr	r3, [r7, #4]
 8003f84:	641a      	str	r2, [r3, #64]	; 0x40
 8003f86:	687b      	ldr	r3, [r7, #4]
 8003f88:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003f8a:	2b00      	cmp	r3, #0
 8003f8c:	f000 811e 	beq.w	80041cc <HAL_UART_IRQHandler+0x340>
 8003f90:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f92:	f003 0320 	and.w	r3, r3, #32
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d007      	beq.n	8003faa <HAL_UART_IRQHandler+0x11e>
 8003f9a:	6a3b      	ldr	r3, [r7, #32]
 8003f9c:	f003 0320 	and.w	r3, r3, #32
 8003fa0:	2b00      	cmp	r3, #0
 8003fa2:	d002      	beq.n	8003faa <HAL_UART_IRQHandler+0x11e>
 8003fa4:	6878      	ldr	r0, [r7, #4]
 8003fa6:	f000 fa62 	bl	800446e <UART_Receive_IT>
 8003faa:	687b      	ldr	r3, [r7, #4]
 8003fac:	681b      	ldr	r3, [r3, #0]
 8003fae:	695b      	ldr	r3, [r3, #20]
 8003fb0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003fb4:	2b00      	cmp	r3, #0
 8003fb6:	bf14      	ite	ne
 8003fb8:	2301      	movne	r3, #1
 8003fba:	2300      	moveq	r3, #0
 8003fbc:	b2db      	uxtb	r3, r3
 8003fbe:	617b      	str	r3, [r7, #20]
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003fc4:	f003 0308 	and.w	r3, r3, #8
 8003fc8:	2b00      	cmp	r3, #0
 8003fca:	d102      	bne.n	8003fd2 <HAL_UART_IRQHandler+0x146>
 8003fcc:	697b      	ldr	r3, [r7, #20]
 8003fce:	2b00      	cmp	r3, #0
 8003fd0:	d031      	beq.n	8004036 <HAL_UART_IRQHandler+0x1aa>
 8003fd2:	6878      	ldr	r0, [r7, #4]
 8003fd4:	f000 f9a4 	bl	8004320 <UART_EndRxTransfer>
 8003fd8:	687b      	ldr	r3, [r7, #4]
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	695b      	ldr	r3, [r3, #20]
 8003fde:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003fe2:	2b00      	cmp	r3, #0
 8003fe4:	d023      	beq.n	800402e <HAL_UART_IRQHandler+0x1a2>
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	681b      	ldr	r3, [r3, #0]
 8003fea:	695a      	ldr	r2, [r3, #20]
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	681b      	ldr	r3, [r3, #0]
 8003ff0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8003ff4:	615a      	str	r2, [r3, #20]
 8003ff6:	687b      	ldr	r3, [r7, #4]
 8003ff8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003ffa:	2b00      	cmp	r3, #0
 8003ffc:	d013      	beq.n	8004026 <HAL_UART_IRQHandler+0x19a>
 8003ffe:	687b      	ldr	r3, [r7, #4]
 8004000:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004002:	4a76      	ldr	r2, [pc, #472]	; (80041dc <HAL_UART_IRQHandler+0x350>)
 8004004:	635a      	str	r2, [r3, #52]	; 0x34
 8004006:	687b      	ldr	r3, [r7, #4]
 8004008:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800400a:	4618      	mov	r0, r3
 800400c:	f7fd fb0c 	bl	8001628 <HAL_DMA_Abort_IT>
 8004010:	4603      	mov	r3, r0
 8004012:	2b00      	cmp	r3, #0
 8004014:	d016      	beq.n	8004044 <HAL_UART_IRQHandler+0x1b8>
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800401a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800401c:	687a      	ldr	r2, [r7, #4]
 800401e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004020:	4610      	mov	r0, r2
 8004022:	4798      	blx	r3
 8004024:	e00e      	b.n	8004044 <HAL_UART_IRQHandler+0x1b8>
 8004026:	6878      	ldr	r0, [r7, #4]
 8004028:	f000 f8e3 	bl	80041f2 <HAL_UART_ErrorCallback>
 800402c:	e00a      	b.n	8004044 <HAL_UART_IRQHandler+0x1b8>
 800402e:	6878      	ldr	r0, [r7, #4]
 8004030:	f000 f8df 	bl	80041f2 <HAL_UART_ErrorCallback>
 8004034:	e006      	b.n	8004044 <HAL_UART_IRQHandler+0x1b8>
 8004036:	6878      	ldr	r0, [r7, #4]
 8004038:	f000 f8db 	bl	80041f2 <HAL_UART_ErrorCallback>
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	2200      	movs	r2, #0
 8004040:	641a      	str	r2, [r3, #64]	; 0x40
 8004042:	e0c3      	b.n	80041cc <HAL_UART_IRQHandler+0x340>
 8004044:	bf00      	nop
 8004046:	e0c1      	b.n	80041cc <HAL_UART_IRQHandler+0x340>
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800404c:	2b01      	cmp	r3, #1
 800404e:	f040 80a1 	bne.w	8004194 <HAL_UART_IRQHandler+0x308>
 8004052:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004054:	f003 0310 	and.w	r3, r3, #16
 8004058:	2b00      	cmp	r3, #0
 800405a:	f000 809b 	beq.w	8004194 <HAL_UART_IRQHandler+0x308>
 800405e:	6a3b      	ldr	r3, [r7, #32]
 8004060:	f003 0310 	and.w	r3, r3, #16
 8004064:	2b00      	cmp	r3, #0
 8004066:	f000 8095 	beq.w	8004194 <HAL_UART_IRQHandler+0x308>
 800406a:	2300      	movs	r3, #0
 800406c:	60fb      	str	r3, [r7, #12]
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	681b      	ldr	r3, [r3, #0]
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	60fb      	str	r3, [r7, #12]
 8004076:	687b      	ldr	r3, [r7, #4]
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	685b      	ldr	r3, [r3, #4]
 800407c:	60fb      	str	r3, [r7, #12]
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	687b      	ldr	r3, [r7, #4]
 8004082:	681b      	ldr	r3, [r3, #0]
 8004084:	695b      	ldr	r3, [r3, #20]
 8004086:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800408a:	2b00      	cmp	r3, #0
 800408c:	d04e      	beq.n	800412c <HAL_UART_IRQHandler+0x2a0>
 800408e:	687b      	ldr	r3, [r7, #4]
 8004090:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004092:	681b      	ldr	r3, [r3, #0]
 8004094:	685b      	ldr	r3, [r3, #4]
 8004096:	823b      	strh	r3, [r7, #16]
 8004098:	8a3b      	ldrh	r3, [r7, #16]
 800409a:	2b00      	cmp	r3, #0
 800409c:	f000 8098 	beq.w	80041d0 <HAL_UART_IRQHandler+0x344>
 80040a0:	687b      	ldr	r3, [r7, #4]
 80040a2:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80040a4:	8a3a      	ldrh	r2, [r7, #16]
 80040a6:	429a      	cmp	r2, r3
 80040a8:	f080 8092 	bcs.w	80041d0 <HAL_UART_IRQHandler+0x344>
 80040ac:	687b      	ldr	r3, [r7, #4]
 80040ae:	8a3a      	ldrh	r2, [r7, #16]
 80040b0:	85da      	strh	r2, [r3, #46]	; 0x2e
 80040b2:	687b      	ldr	r3, [r7, #4]
 80040b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80040b6:	699b      	ldr	r3, [r3, #24]
 80040b8:	2b20      	cmp	r3, #32
 80040ba:	d02b      	beq.n	8004114 <HAL_UART_IRQHandler+0x288>
 80040bc:	687b      	ldr	r3, [r7, #4]
 80040be:	681b      	ldr	r3, [r3, #0]
 80040c0:	68da      	ldr	r2, [r3, #12]
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80040ca:	60da      	str	r2, [r3, #12]
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	695a      	ldr	r2, [r3, #20]
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	681b      	ldr	r3, [r3, #0]
 80040d6:	f022 0201 	bic.w	r2, r2, #1
 80040da:	615a      	str	r2, [r3, #20]
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	681b      	ldr	r3, [r3, #0]
 80040e0:	695a      	ldr	r2, [r3, #20]
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	681b      	ldr	r3, [r3, #0]
 80040e6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80040ea:	615a      	str	r2, [r3, #20]
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	2220      	movs	r2, #32
 80040f0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	2200      	movs	r2, #0
 80040f8:	631a      	str	r2, [r3, #48]	; 0x30
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	681b      	ldr	r3, [r3, #0]
 80040fe:	68da      	ldr	r2, [r3, #12]
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	f022 0210 	bic.w	r2, r2, #16
 8004108:	60da      	str	r2, [r3, #12]
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800410e:	4618      	mov	r0, r3
 8004110:	f7fd fa4f 	bl	80015b2 <HAL_DMA_Abort>
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800411c:	b29b      	uxth	r3, r3
 800411e:	1ad3      	subs	r3, r2, r3
 8004120:	b29b      	uxth	r3, r3
 8004122:	4619      	mov	r1, r3
 8004124:	6878      	ldr	r0, [r7, #4]
 8004126:	f000 f86d 	bl	8004204 <HAL_UARTEx_RxEventCallback>
 800412a:	e051      	b.n	80041d0 <HAL_UART_IRQHandler+0x344>
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004134:	b29b      	uxth	r3, r3
 8004136:	1ad3      	subs	r3, r2, r3
 8004138:	827b      	strh	r3, [r7, #18]
 800413a:	687b      	ldr	r3, [r7, #4]
 800413c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800413e:	b29b      	uxth	r3, r3
 8004140:	2b00      	cmp	r3, #0
 8004142:	d047      	beq.n	80041d4 <HAL_UART_IRQHandler+0x348>
 8004144:	8a7b      	ldrh	r3, [r7, #18]
 8004146:	2b00      	cmp	r3, #0
 8004148:	d044      	beq.n	80041d4 <HAL_UART_IRQHandler+0x348>
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	68da      	ldr	r2, [r3, #12]
 8004150:	687b      	ldr	r3, [r7, #4]
 8004152:	681b      	ldr	r3, [r3, #0]
 8004154:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8004158:	60da      	str	r2, [r3, #12]
 800415a:	687b      	ldr	r3, [r7, #4]
 800415c:	681b      	ldr	r3, [r3, #0]
 800415e:	695a      	ldr	r2, [r3, #20]
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	681b      	ldr	r3, [r3, #0]
 8004164:	f022 0201 	bic.w	r2, r2, #1
 8004168:	615a      	str	r2, [r3, #20]
 800416a:	687b      	ldr	r3, [r7, #4]
 800416c:	2220      	movs	r2, #32
 800416e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	2200      	movs	r2, #0
 8004176:	631a      	str	r2, [r3, #48]	; 0x30
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	681b      	ldr	r3, [r3, #0]
 800417c:	68da      	ldr	r2, [r3, #12]
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	681b      	ldr	r3, [r3, #0]
 8004182:	f022 0210 	bic.w	r2, r2, #16
 8004186:	60da      	str	r2, [r3, #12]
 8004188:	8a7b      	ldrh	r3, [r7, #18]
 800418a:	4619      	mov	r1, r3
 800418c:	6878      	ldr	r0, [r7, #4]
 800418e:	f000 f839 	bl	8004204 <HAL_UARTEx_RxEventCallback>
 8004192:	e01f      	b.n	80041d4 <HAL_UART_IRQHandler+0x348>
 8004194:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004196:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800419a:	2b00      	cmp	r3, #0
 800419c:	d008      	beq.n	80041b0 <HAL_UART_IRQHandler+0x324>
 800419e:	6a3b      	ldr	r3, [r7, #32]
 80041a0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80041a4:	2b00      	cmp	r3, #0
 80041a6:	d003      	beq.n	80041b0 <HAL_UART_IRQHandler+0x324>
 80041a8:	6878      	ldr	r0, [r7, #4]
 80041aa:	f000 f8f9 	bl	80043a0 <UART_Transmit_IT>
 80041ae:	e012      	b.n	80041d6 <HAL_UART_IRQHandler+0x34a>
 80041b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041b2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80041b6:	2b00      	cmp	r3, #0
 80041b8:	d00d      	beq.n	80041d6 <HAL_UART_IRQHandler+0x34a>
 80041ba:	6a3b      	ldr	r3, [r7, #32]
 80041bc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80041c0:	2b00      	cmp	r3, #0
 80041c2:	d008      	beq.n	80041d6 <HAL_UART_IRQHandler+0x34a>
 80041c4:	6878      	ldr	r0, [r7, #4]
 80041c6:	f000 f93a 	bl	800443e <UART_EndTransmit_IT>
 80041ca:	e004      	b.n	80041d6 <HAL_UART_IRQHandler+0x34a>
 80041cc:	bf00      	nop
 80041ce:	e002      	b.n	80041d6 <HAL_UART_IRQHandler+0x34a>
 80041d0:	bf00      	nop
 80041d2:	e000      	b.n	80041d6 <HAL_UART_IRQHandler+0x34a>
 80041d4:	bf00      	nop
 80041d6:	3728      	adds	r7, #40	; 0x28
 80041d8:	46bd      	mov	sp, r7
 80041da:	bd80      	pop	{r7, pc}
 80041dc:	08004379 	.word	0x08004379

080041e0 <HAL_UART_TxCpltCallback>:
 80041e0:	b480      	push	{r7}
 80041e2:	b083      	sub	sp, #12
 80041e4:	af00      	add	r7, sp, #0
 80041e6:	6078      	str	r0, [r7, #4]
 80041e8:	bf00      	nop
 80041ea:	370c      	adds	r7, #12
 80041ec:	46bd      	mov	sp, r7
 80041ee:	bc80      	pop	{r7}
 80041f0:	4770      	bx	lr

080041f2 <HAL_UART_ErrorCallback>:
 80041f2:	b480      	push	{r7}
 80041f4:	b083      	sub	sp, #12
 80041f6:	af00      	add	r7, sp, #0
 80041f8:	6078      	str	r0, [r7, #4]
 80041fa:	bf00      	nop
 80041fc:	370c      	adds	r7, #12
 80041fe:	46bd      	mov	sp, r7
 8004200:	bc80      	pop	{r7}
 8004202:	4770      	bx	lr

08004204 <HAL_UARTEx_RxEventCallback>:
 8004204:	b480      	push	{r7}
 8004206:	b083      	sub	sp, #12
 8004208:	af00      	add	r7, sp, #0
 800420a:	6078      	str	r0, [r7, #4]
 800420c:	460b      	mov	r3, r1
 800420e:	807b      	strh	r3, [r7, #2]
 8004210:	bf00      	nop
 8004212:	370c      	adds	r7, #12
 8004214:	46bd      	mov	sp, r7
 8004216:	bc80      	pop	{r7}
 8004218:	4770      	bx	lr

0800421a <UART_WaitOnFlagUntilTimeout>:
 800421a:	b580      	push	{r7, lr}
 800421c:	b084      	sub	sp, #16
 800421e:	af00      	add	r7, sp, #0
 8004220:	60f8      	str	r0, [r7, #12]
 8004222:	60b9      	str	r1, [r7, #8]
 8004224:	603b      	str	r3, [r7, #0]
 8004226:	4613      	mov	r3, r2
 8004228:	71fb      	strb	r3, [r7, #7]
 800422a:	e02c      	b.n	8004286 <UART_WaitOnFlagUntilTimeout+0x6c>
 800422c:	69bb      	ldr	r3, [r7, #24]
 800422e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004232:	d028      	beq.n	8004286 <UART_WaitOnFlagUntilTimeout+0x6c>
 8004234:	69bb      	ldr	r3, [r7, #24]
 8004236:	2b00      	cmp	r3, #0
 8004238:	d007      	beq.n	800424a <UART_WaitOnFlagUntilTimeout+0x30>
 800423a:	f7fd f87f 	bl	800133c <HAL_GetTick>
 800423e:	4602      	mov	r2, r0
 8004240:	683b      	ldr	r3, [r7, #0]
 8004242:	1ad3      	subs	r3, r2, r3
 8004244:	69ba      	ldr	r2, [r7, #24]
 8004246:	429a      	cmp	r2, r3
 8004248:	d21d      	bcs.n	8004286 <UART_WaitOnFlagUntilTimeout+0x6c>
 800424a:	68fb      	ldr	r3, [r7, #12]
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	68da      	ldr	r2, [r3, #12]
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8004258:	60da      	str	r2, [r3, #12]
 800425a:	68fb      	ldr	r3, [r7, #12]
 800425c:	681b      	ldr	r3, [r3, #0]
 800425e:	695a      	ldr	r2, [r3, #20]
 8004260:	68fb      	ldr	r3, [r7, #12]
 8004262:	681b      	ldr	r3, [r3, #0]
 8004264:	f022 0201 	bic.w	r2, r2, #1
 8004268:	615a      	str	r2, [r3, #20]
 800426a:	68fb      	ldr	r3, [r7, #12]
 800426c:	2220      	movs	r2, #32
 800426e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004272:	68fb      	ldr	r3, [r7, #12]
 8004274:	2220      	movs	r2, #32
 8004276:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800427a:	68fb      	ldr	r3, [r7, #12]
 800427c:	2200      	movs	r2, #0
 800427e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004282:	2303      	movs	r3, #3
 8004284:	e00f      	b.n	80042a6 <UART_WaitOnFlagUntilTimeout+0x8c>
 8004286:	68fb      	ldr	r3, [r7, #12]
 8004288:	681b      	ldr	r3, [r3, #0]
 800428a:	681a      	ldr	r2, [r3, #0]
 800428c:	68bb      	ldr	r3, [r7, #8]
 800428e:	4013      	ands	r3, r2
 8004290:	68ba      	ldr	r2, [r7, #8]
 8004292:	429a      	cmp	r2, r3
 8004294:	bf0c      	ite	eq
 8004296:	2301      	moveq	r3, #1
 8004298:	2300      	movne	r3, #0
 800429a:	b2db      	uxtb	r3, r3
 800429c:	461a      	mov	r2, r3
 800429e:	79fb      	ldrb	r3, [r7, #7]
 80042a0:	429a      	cmp	r2, r3
 80042a2:	d0c3      	beq.n	800422c <UART_WaitOnFlagUntilTimeout+0x12>
 80042a4:	2300      	movs	r3, #0
 80042a6:	4618      	mov	r0, r3
 80042a8:	3710      	adds	r7, #16
 80042aa:	46bd      	mov	sp, r7
 80042ac:	bd80      	pop	{r7, pc}

080042ae <UART_Start_Receive_IT>:
 80042ae:	b480      	push	{r7}
 80042b0:	b085      	sub	sp, #20
 80042b2:	af00      	add	r7, sp, #0
 80042b4:	60f8      	str	r0, [r7, #12]
 80042b6:	60b9      	str	r1, [r7, #8]
 80042b8:	4613      	mov	r3, r2
 80042ba:	80fb      	strh	r3, [r7, #6]
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	68ba      	ldr	r2, [r7, #8]
 80042c0:	629a      	str	r2, [r3, #40]	; 0x28
 80042c2:	68fb      	ldr	r3, [r7, #12]
 80042c4:	88fa      	ldrh	r2, [r7, #6]
 80042c6:	859a      	strh	r2, [r3, #44]	; 0x2c
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	88fa      	ldrh	r2, [r7, #6]
 80042cc:	85da      	strh	r2, [r3, #46]	; 0x2e
 80042ce:	68fb      	ldr	r3, [r7, #12]
 80042d0:	2200      	movs	r2, #0
 80042d2:	641a      	str	r2, [r3, #64]	; 0x40
 80042d4:	68fb      	ldr	r3, [r7, #12]
 80042d6:	2222      	movs	r2, #34	; 0x22
 80042d8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80042dc:	68fb      	ldr	r3, [r7, #12]
 80042de:	2200      	movs	r2, #0
 80042e0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80042e4:	68fb      	ldr	r3, [r7, #12]
 80042e6:	681b      	ldr	r3, [r3, #0]
 80042e8:	68da      	ldr	r2, [r3, #12]
 80042ea:	68fb      	ldr	r3, [r7, #12]
 80042ec:	681b      	ldr	r3, [r3, #0]
 80042ee:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80042f2:	60da      	str	r2, [r3, #12]
 80042f4:	68fb      	ldr	r3, [r7, #12]
 80042f6:	681b      	ldr	r3, [r3, #0]
 80042f8:	695a      	ldr	r2, [r3, #20]
 80042fa:	68fb      	ldr	r3, [r7, #12]
 80042fc:	681b      	ldr	r3, [r3, #0]
 80042fe:	f042 0201 	orr.w	r2, r2, #1
 8004302:	615a      	str	r2, [r3, #20]
 8004304:	68fb      	ldr	r3, [r7, #12]
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	68da      	ldr	r2, [r3, #12]
 800430a:	68fb      	ldr	r3, [r7, #12]
 800430c:	681b      	ldr	r3, [r3, #0]
 800430e:	f042 0220 	orr.w	r2, r2, #32
 8004312:	60da      	str	r2, [r3, #12]
 8004314:	2300      	movs	r3, #0
 8004316:	4618      	mov	r0, r3
 8004318:	3714      	adds	r7, #20
 800431a:	46bd      	mov	sp, r7
 800431c:	bc80      	pop	{r7}
 800431e:	4770      	bx	lr

08004320 <UART_EndRxTransfer>:
 8004320:	b480      	push	{r7}
 8004322:	b083      	sub	sp, #12
 8004324:	af00      	add	r7, sp, #0
 8004326:	6078      	str	r0, [r7, #4]
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	681b      	ldr	r3, [r3, #0]
 800432c:	68da      	ldr	r2, [r3, #12]
 800432e:	687b      	ldr	r3, [r7, #4]
 8004330:	681b      	ldr	r3, [r3, #0]
 8004332:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8004336:	60da      	str	r2, [r3, #12]
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	681b      	ldr	r3, [r3, #0]
 800433c:	695a      	ldr	r2, [r3, #20]
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	f022 0201 	bic.w	r2, r2, #1
 8004346:	615a      	str	r2, [r3, #20]
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800434c:	2b01      	cmp	r3, #1
 800434e:	d107      	bne.n	8004360 <UART_EndRxTransfer+0x40>
 8004350:	687b      	ldr	r3, [r7, #4]
 8004352:	681b      	ldr	r3, [r3, #0]
 8004354:	68da      	ldr	r2, [r3, #12]
 8004356:	687b      	ldr	r3, [r7, #4]
 8004358:	681b      	ldr	r3, [r3, #0]
 800435a:	f022 0210 	bic.w	r2, r2, #16
 800435e:	60da      	str	r2, [r3, #12]
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	2220      	movs	r2, #32
 8004364:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	2200      	movs	r2, #0
 800436c:	631a      	str	r2, [r3, #48]	; 0x30
 800436e:	bf00      	nop
 8004370:	370c      	adds	r7, #12
 8004372:	46bd      	mov	sp, r7
 8004374:	bc80      	pop	{r7}
 8004376:	4770      	bx	lr

08004378 <UART_DMAAbortOnError>:
 8004378:	b580      	push	{r7, lr}
 800437a:	b084      	sub	sp, #16
 800437c:	af00      	add	r7, sp, #0
 800437e:	6078      	str	r0, [r7, #4]
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004384:	60fb      	str	r3, [r7, #12]
 8004386:	68fb      	ldr	r3, [r7, #12]
 8004388:	2200      	movs	r2, #0
 800438a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800438c:	68fb      	ldr	r3, [r7, #12]
 800438e:	2200      	movs	r2, #0
 8004390:	84da      	strh	r2, [r3, #38]	; 0x26
 8004392:	68f8      	ldr	r0, [r7, #12]
 8004394:	f7ff ff2d 	bl	80041f2 <HAL_UART_ErrorCallback>
 8004398:	bf00      	nop
 800439a:	3710      	adds	r7, #16
 800439c:	46bd      	mov	sp, r7
 800439e:	bd80      	pop	{r7, pc}

080043a0 <UART_Transmit_IT>:
 80043a0:	b480      	push	{r7}
 80043a2:	b085      	sub	sp, #20
 80043a4:	af00      	add	r7, sp, #0
 80043a6:	6078      	str	r0, [r7, #4]
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80043ae:	b2db      	uxtb	r3, r3
 80043b0:	2b21      	cmp	r3, #33	; 0x21
 80043b2:	d13e      	bne.n	8004432 <UART_Transmit_IT+0x92>
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	689b      	ldr	r3, [r3, #8]
 80043b8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80043bc:	d114      	bne.n	80043e8 <UART_Transmit_IT+0x48>
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	691b      	ldr	r3, [r3, #16]
 80043c2:	2b00      	cmp	r3, #0
 80043c4:	d110      	bne.n	80043e8 <UART_Transmit_IT+0x48>
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	6a1b      	ldr	r3, [r3, #32]
 80043ca:	60fb      	str	r3, [r7, #12]
 80043cc:	68fb      	ldr	r3, [r7, #12]
 80043ce:	881b      	ldrh	r3, [r3, #0]
 80043d0:	461a      	mov	r2, r3
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	681b      	ldr	r3, [r3, #0]
 80043d6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80043da:	605a      	str	r2, [r3, #4]
 80043dc:	687b      	ldr	r3, [r7, #4]
 80043de:	6a1b      	ldr	r3, [r3, #32]
 80043e0:	1c9a      	adds	r2, r3, #2
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	621a      	str	r2, [r3, #32]
 80043e6:	e008      	b.n	80043fa <UART_Transmit_IT+0x5a>
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	6a1b      	ldr	r3, [r3, #32]
 80043ec:	1c59      	adds	r1, r3, #1
 80043ee:	687a      	ldr	r2, [r7, #4]
 80043f0:	6211      	str	r1, [r2, #32]
 80043f2:	781a      	ldrb	r2, [r3, #0]
 80043f4:	687b      	ldr	r3, [r7, #4]
 80043f6:	681b      	ldr	r3, [r3, #0]
 80043f8:	605a      	str	r2, [r3, #4]
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80043fe:	b29b      	uxth	r3, r3
 8004400:	3b01      	subs	r3, #1
 8004402:	b29b      	uxth	r3, r3
 8004404:	687a      	ldr	r2, [r7, #4]
 8004406:	4619      	mov	r1, r3
 8004408:	84d1      	strh	r1, [r2, #38]	; 0x26
 800440a:	2b00      	cmp	r3, #0
 800440c:	d10f      	bne.n	800442e <UART_Transmit_IT+0x8e>
 800440e:	687b      	ldr	r3, [r7, #4]
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	68da      	ldr	r2, [r3, #12]
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	681b      	ldr	r3, [r3, #0]
 8004418:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800441c:	60da      	str	r2, [r3, #12]
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	68da      	ldr	r2, [r3, #12]
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	681b      	ldr	r3, [r3, #0]
 8004428:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800442c:	60da      	str	r2, [r3, #12]
 800442e:	2300      	movs	r3, #0
 8004430:	e000      	b.n	8004434 <UART_Transmit_IT+0x94>
 8004432:	2302      	movs	r3, #2
 8004434:	4618      	mov	r0, r3
 8004436:	3714      	adds	r7, #20
 8004438:	46bd      	mov	sp, r7
 800443a:	bc80      	pop	{r7}
 800443c:	4770      	bx	lr

0800443e <UART_EndTransmit_IT>:
 800443e:	b580      	push	{r7, lr}
 8004440:	b082      	sub	sp, #8
 8004442:	af00      	add	r7, sp, #0
 8004444:	6078      	str	r0, [r7, #4]
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	681b      	ldr	r3, [r3, #0]
 800444a:	68da      	ldr	r2, [r3, #12]
 800444c:	687b      	ldr	r3, [r7, #4]
 800444e:	681b      	ldr	r3, [r3, #0]
 8004450:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004454:	60da      	str	r2, [r3, #12]
 8004456:	687b      	ldr	r3, [r7, #4]
 8004458:	2220      	movs	r2, #32
 800445a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800445e:	6878      	ldr	r0, [r7, #4]
 8004460:	f7ff febe 	bl	80041e0 <HAL_UART_TxCpltCallback>
 8004464:	2300      	movs	r3, #0
 8004466:	4618      	mov	r0, r3
 8004468:	3708      	adds	r7, #8
 800446a:	46bd      	mov	sp, r7
 800446c:	bd80      	pop	{r7, pc}

0800446e <UART_Receive_IT>:
 800446e:	b580      	push	{r7, lr}
 8004470:	b086      	sub	sp, #24
 8004472:	af00      	add	r7, sp, #0
 8004474:	6078      	str	r0, [r7, #4]
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800447c:	b2db      	uxtb	r3, r3
 800447e:	2b22      	cmp	r3, #34	; 0x22
 8004480:	f040 8099 	bne.w	80045b6 <UART_Receive_IT+0x148>
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	689b      	ldr	r3, [r3, #8]
 8004488:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800448c:	d117      	bne.n	80044be <UART_Receive_IT+0x50>
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	691b      	ldr	r3, [r3, #16]
 8004492:	2b00      	cmp	r3, #0
 8004494:	d113      	bne.n	80044be <UART_Receive_IT+0x50>
 8004496:	2300      	movs	r3, #0
 8004498:	617b      	str	r3, [r7, #20]
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800449e:	613b      	str	r3, [r7, #16]
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	681b      	ldr	r3, [r3, #0]
 80044a4:	685b      	ldr	r3, [r3, #4]
 80044a6:	b29b      	uxth	r3, r3
 80044a8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80044ac:	b29a      	uxth	r2, r3
 80044ae:	693b      	ldr	r3, [r7, #16]
 80044b0:	801a      	strh	r2, [r3, #0]
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80044b6:	1c9a      	adds	r2, r3, #2
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	629a      	str	r2, [r3, #40]	; 0x28
 80044bc:	e026      	b.n	800450c <UART_Receive_IT+0x9e>
 80044be:	687b      	ldr	r3, [r7, #4]
 80044c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80044c2:	617b      	str	r3, [r7, #20]
 80044c4:	2300      	movs	r3, #0
 80044c6:	613b      	str	r3, [r7, #16]
 80044c8:	687b      	ldr	r3, [r7, #4]
 80044ca:	689b      	ldr	r3, [r3, #8]
 80044cc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80044d0:	d007      	beq.n	80044e2 <UART_Receive_IT+0x74>
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	689b      	ldr	r3, [r3, #8]
 80044d6:	2b00      	cmp	r3, #0
 80044d8:	d10a      	bne.n	80044f0 <UART_Receive_IT+0x82>
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	691b      	ldr	r3, [r3, #16]
 80044de:	2b00      	cmp	r3, #0
 80044e0:	d106      	bne.n	80044f0 <UART_Receive_IT+0x82>
 80044e2:	687b      	ldr	r3, [r7, #4]
 80044e4:	681b      	ldr	r3, [r3, #0]
 80044e6:	685b      	ldr	r3, [r3, #4]
 80044e8:	b2da      	uxtb	r2, r3
 80044ea:	697b      	ldr	r3, [r7, #20]
 80044ec:	701a      	strb	r2, [r3, #0]
 80044ee:	e008      	b.n	8004502 <UART_Receive_IT+0x94>
 80044f0:	687b      	ldr	r3, [r7, #4]
 80044f2:	681b      	ldr	r3, [r3, #0]
 80044f4:	685b      	ldr	r3, [r3, #4]
 80044f6:	b2db      	uxtb	r3, r3
 80044f8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80044fc:	b2da      	uxtb	r2, r3
 80044fe:	697b      	ldr	r3, [r7, #20]
 8004500:	701a      	strb	r2, [r3, #0]
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004506:	1c5a      	adds	r2, r3, #1
 8004508:	687b      	ldr	r3, [r7, #4]
 800450a:	629a      	str	r2, [r3, #40]	; 0x28
 800450c:	687b      	ldr	r3, [r7, #4]
 800450e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004510:	b29b      	uxth	r3, r3
 8004512:	3b01      	subs	r3, #1
 8004514:	b29b      	uxth	r3, r3
 8004516:	687a      	ldr	r2, [r7, #4]
 8004518:	4619      	mov	r1, r3
 800451a:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800451c:	2b00      	cmp	r3, #0
 800451e:	d148      	bne.n	80045b2 <UART_Receive_IT+0x144>
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	68da      	ldr	r2, [r3, #12]
 8004526:	687b      	ldr	r3, [r7, #4]
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	f022 0220 	bic.w	r2, r2, #32
 800452e:	60da      	str	r2, [r3, #12]
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	68da      	ldr	r2, [r3, #12]
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	681b      	ldr	r3, [r3, #0]
 800453a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800453e:	60da      	str	r2, [r3, #12]
 8004540:	687b      	ldr	r3, [r7, #4]
 8004542:	681b      	ldr	r3, [r3, #0]
 8004544:	695a      	ldr	r2, [r3, #20]
 8004546:	687b      	ldr	r3, [r7, #4]
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	f022 0201 	bic.w	r2, r2, #1
 800454e:	615a      	str	r2, [r3, #20]
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	2220      	movs	r2, #32
 8004554:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800455c:	2b01      	cmp	r3, #1
 800455e:	d123      	bne.n	80045a8 <UART_Receive_IT+0x13a>
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	2200      	movs	r2, #0
 8004564:	631a      	str	r2, [r3, #48]	; 0x30
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	68da      	ldr	r2, [r3, #12]
 800456c:	687b      	ldr	r3, [r7, #4]
 800456e:	681b      	ldr	r3, [r3, #0]
 8004570:	f022 0210 	bic.w	r2, r2, #16
 8004574:	60da      	str	r2, [r3, #12]
 8004576:	687b      	ldr	r3, [r7, #4]
 8004578:	681b      	ldr	r3, [r3, #0]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	f003 0310 	and.w	r3, r3, #16
 8004580:	2b10      	cmp	r3, #16
 8004582:	d10a      	bne.n	800459a <UART_Receive_IT+0x12c>
 8004584:	2300      	movs	r3, #0
 8004586:	60fb      	str	r3, [r7, #12]
 8004588:	687b      	ldr	r3, [r7, #4]
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	60fb      	str	r3, [r7, #12]
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	685b      	ldr	r3, [r3, #4]
 8004596:	60fb      	str	r3, [r7, #12]
 8004598:	68fb      	ldr	r3, [r7, #12]
 800459a:	687b      	ldr	r3, [r7, #4]
 800459c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800459e:	4619      	mov	r1, r3
 80045a0:	6878      	ldr	r0, [r7, #4]
 80045a2:	f7ff fe2f 	bl	8004204 <HAL_UARTEx_RxEventCallback>
 80045a6:	e002      	b.n	80045ae <UART_Receive_IT+0x140>
 80045a8:	6878      	ldr	r0, [r7, #4]
 80045aa:	f7fc f887 	bl	80006bc <HAL_UART_RxCpltCallback>
 80045ae:	2300      	movs	r3, #0
 80045b0:	e002      	b.n	80045b8 <UART_Receive_IT+0x14a>
 80045b2:	2300      	movs	r3, #0
 80045b4:	e000      	b.n	80045b8 <UART_Receive_IT+0x14a>
 80045b6:	2302      	movs	r3, #2
 80045b8:	4618      	mov	r0, r3
 80045ba:	3718      	adds	r7, #24
 80045bc:	46bd      	mov	sp, r7
 80045be:	bd80      	pop	{r7, pc}

080045c0 <UART_SetConfig>:
 80045c0:	b580      	push	{r7, lr}
 80045c2:	b084      	sub	sp, #16
 80045c4:	af00      	add	r7, sp, #0
 80045c6:	6078      	str	r0, [r7, #4]
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	681b      	ldr	r3, [r3, #0]
 80045cc:	691b      	ldr	r3, [r3, #16]
 80045ce:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	68da      	ldr	r2, [r3, #12]
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	430a      	orrs	r2, r1
 80045dc:	611a      	str	r2, [r3, #16]
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	689a      	ldr	r2, [r3, #8]
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	691b      	ldr	r3, [r3, #16]
 80045e6:	431a      	orrs	r2, r3
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	695b      	ldr	r3, [r3, #20]
 80045ec:	4313      	orrs	r3, r2
 80045ee:	60bb      	str	r3, [r7, #8]
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	681b      	ldr	r3, [r3, #0]
 80045f4:	68db      	ldr	r3, [r3, #12]
 80045f6:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 80045fa:	f023 030c 	bic.w	r3, r3, #12
 80045fe:	687a      	ldr	r2, [r7, #4]
 8004600:	6812      	ldr	r2, [r2, #0]
 8004602:	68b9      	ldr	r1, [r7, #8]
 8004604:	430b      	orrs	r3, r1
 8004606:	60d3      	str	r3, [r2, #12]
 8004608:	687b      	ldr	r3, [r7, #4]
 800460a:	681b      	ldr	r3, [r3, #0]
 800460c:	695b      	ldr	r3, [r3, #20]
 800460e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	699a      	ldr	r2, [r3, #24]
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	681b      	ldr	r3, [r3, #0]
 800461a:	430a      	orrs	r2, r1
 800461c:	615a      	str	r2, [r3, #20]
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	4a2c      	ldr	r2, [pc, #176]	; (80046d4 <UART_SetConfig+0x114>)
 8004624:	4293      	cmp	r3, r2
 8004626:	d103      	bne.n	8004630 <UART_SetConfig+0x70>
 8004628:	f7fe fef4 	bl	8003414 <HAL_RCC_GetPCLK2Freq>
 800462c:	60f8      	str	r0, [r7, #12]
 800462e:	e002      	b.n	8004636 <UART_SetConfig+0x76>
 8004630:	f7fe fedc 	bl	80033ec <HAL_RCC_GetPCLK1Freq>
 8004634:	60f8      	str	r0, [r7, #12]
 8004636:	68fa      	ldr	r2, [r7, #12]
 8004638:	4613      	mov	r3, r2
 800463a:	009b      	lsls	r3, r3, #2
 800463c:	4413      	add	r3, r2
 800463e:	009a      	lsls	r2, r3, #2
 8004640:	441a      	add	r2, r3
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	685b      	ldr	r3, [r3, #4]
 8004646:	009b      	lsls	r3, r3, #2
 8004648:	fbb2 f3f3 	udiv	r3, r2, r3
 800464c:	4a22      	ldr	r2, [pc, #136]	; (80046d8 <UART_SetConfig+0x118>)
 800464e:	fba2 2303 	umull	r2, r3, r2, r3
 8004652:	095b      	lsrs	r3, r3, #5
 8004654:	0119      	lsls	r1, r3, #4
 8004656:	68fa      	ldr	r2, [r7, #12]
 8004658:	4613      	mov	r3, r2
 800465a:	009b      	lsls	r3, r3, #2
 800465c:	4413      	add	r3, r2
 800465e:	009a      	lsls	r2, r3, #2
 8004660:	441a      	add	r2, r3
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	685b      	ldr	r3, [r3, #4]
 8004666:	009b      	lsls	r3, r3, #2
 8004668:	fbb2 f2f3 	udiv	r2, r2, r3
 800466c:	4b1a      	ldr	r3, [pc, #104]	; (80046d8 <UART_SetConfig+0x118>)
 800466e:	fba3 0302 	umull	r0, r3, r3, r2
 8004672:	095b      	lsrs	r3, r3, #5
 8004674:	2064      	movs	r0, #100	; 0x64
 8004676:	fb00 f303 	mul.w	r3, r0, r3
 800467a:	1ad3      	subs	r3, r2, r3
 800467c:	011b      	lsls	r3, r3, #4
 800467e:	3332      	adds	r3, #50	; 0x32
 8004680:	4a15      	ldr	r2, [pc, #84]	; (80046d8 <UART_SetConfig+0x118>)
 8004682:	fba2 2303 	umull	r2, r3, r2, r3
 8004686:	095b      	lsrs	r3, r3, #5
 8004688:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800468c:	4419      	add	r1, r3
 800468e:	68fa      	ldr	r2, [r7, #12]
 8004690:	4613      	mov	r3, r2
 8004692:	009b      	lsls	r3, r3, #2
 8004694:	4413      	add	r3, r2
 8004696:	009a      	lsls	r2, r3, #2
 8004698:	441a      	add	r2, r3
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	685b      	ldr	r3, [r3, #4]
 800469e:	009b      	lsls	r3, r3, #2
 80046a0:	fbb2 f2f3 	udiv	r2, r2, r3
 80046a4:	4b0c      	ldr	r3, [pc, #48]	; (80046d8 <UART_SetConfig+0x118>)
 80046a6:	fba3 0302 	umull	r0, r3, r3, r2
 80046aa:	095b      	lsrs	r3, r3, #5
 80046ac:	2064      	movs	r0, #100	; 0x64
 80046ae:	fb00 f303 	mul.w	r3, r0, r3
 80046b2:	1ad3      	subs	r3, r2, r3
 80046b4:	011b      	lsls	r3, r3, #4
 80046b6:	3332      	adds	r3, #50	; 0x32
 80046b8:	4a07      	ldr	r2, [pc, #28]	; (80046d8 <UART_SetConfig+0x118>)
 80046ba:	fba2 2303 	umull	r2, r3, r2, r3
 80046be:	095b      	lsrs	r3, r3, #5
 80046c0:	f003 020f 	and.w	r2, r3, #15
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	681b      	ldr	r3, [r3, #0]
 80046c8:	440a      	add	r2, r1
 80046ca:	609a      	str	r2, [r3, #8]
 80046cc:	bf00      	nop
 80046ce:	3710      	adds	r7, #16
 80046d0:	46bd      	mov	sp, r7
 80046d2:	bd80      	pop	{r7, pc}
 80046d4:	40013800 	.word	0x40013800
 80046d8:	51eb851f 	.word	0x51eb851f

080046dc <__errno>:
 80046dc:	4b01      	ldr	r3, [pc, #4]	; (80046e4 <__errno+0x8>)
 80046de:	6818      	ldr	r0, [r3, #0]
 80046e0:	4770      	bx	lr
 80046e2:	bf00      	nop
 80046e4:	2000000c 	.word	0x2000000c

080046e8 <__libc_init_array>:
 80046e8:	b570      	push	{r4, r5, r6, lr}
 80046ea:	2600      	movs	r6, #0
 80046ec:	4d0c      	ldr	r5, [pc, #48]	; (8004720 <__libc_init_array+0x38>)
 80046ee:	4c0d      	ldr	r4, [pc, #52]	; (8004724 <__libc_init_array+0x3c>)
 80046f0:	1b64      	subs	r4, r4, r5
 80046f2:	10a4      	asrs	r4, r4, #2
 80046f4:	42a6      	cmp	r6, r4
 80046f6:	d109      	bne.n	800470c <__libc_init_array+0x24>
 80046f8:	f000 fcd0 	bl	800509c <_init>
 80046fc:	2600      	movs	r6, #0
 80046fe:	4d0a      	ldr	r5, [pc, #40]	; (8004728 <__libc_init_array+0x40>)
 8004700:	4c0a      	ldr	r4, [pc, #40]	; (800472c <__libc_init_array+0x44>)
 8004702:	1b64      	subs	r4, r4, r5
 8004704:	10a4      	asrs	r4, r4, #2
 8004706:	42a6      	cmp	r6, r4
 8004708:	d105      	bne.n	8004716 <__libc_init_array+0x2e>
 800470a:	bd70      	pop	{r4, r5, r6, pc}
 800470c:	f855 3b04 	ldr.w	r3, [r5], #4
 8004710:	4798      	blx	r3
 8004712:	3601      	adds	r6, #1
 8004714:	e7ee      	b.n	80046f4 <__libc_init_array+0xc>
 8004716:	f855 3b04 	ldr.w	r3, [r5], #4
 800471a:	4798      	blx	r3
 800471c:	3601      	adds	r6, #1
 800471e:	e7f2      	b.n	8004706 <__libc_init_array+0x1e>
 8004720:	080051c4 	.word	0x080051c4
 8004724:	080051c4 	.word	0x080051c4
 8004728:	080051c4 	.word	0x080051c4
 800472c:	080051c8 	.word	0x080051c8

08004730 <memset>:
 8004730:	4603      	mov	r3, r0
 8004732:	4402      	add	r2, r0
 8004734:	4293      	cmp	r3, r2
 8004736:	d100      	bne.n	800473a <memset+0xa>
 8004738:	4770      	bx	lr
 800473a:	f803 1b01 	strb.w	r1, [r3], #1
 800473e:	e7f9      	b.n	8004734 <memset+0x4>

08004740 <sniprintf>:
 8004740:	b40c      	push	{r2, r3}
 8004742:	b530      	push	{r4, r5, lr}
 8004744:	4b17      	ldr	r3, [pc, #92]	; (80047a4 <sniprintf+0x64>)
 8004746:	1e0c      	subs	r4, r1, #0
 8004748:	681d      	ldr	r5, [r3, #0]
 800474a:	b09d      	sub	sp, #116	; 0x74
 800474c:	da08      	bge.n	8004760 <sniprintf+0x20>
 800474e:	238b      	movs	r3, #139	; 0x8b
 8004750:	f04f 30ff 	mov.w	r0, #4294967295
 8004754:	602b      	str	r3, [r5, #0]
 8004756:	b01d      	add	sp, #116	; 0x74
 8004758:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800475c:	b002      	add	sp, #8
 800475e:	4770      	bx	lr
 8004760:	f44f 7302 	mov.w	r3, #520	; 0x208
 8004764:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004768:	bf0c      	ite	eq
 800476a:	4623      	moveq	r3, r4
 800476c:	f104 33ff 	addne.w	r3, r4, #4294967295
 8004770:	9304      	str	r3, [sp, #16]
 8004772:	9307      	str	r3, [sp, #28]
 8004774:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004778:	9002      	str	r0, [sp, #8]
 800477a:	9006      	str	r0, [sp, #24]
 800477c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8004780:	4628      	mov	r0, r5
 8004782:	ab21      	add	r3, sp, #132	; 0x84
 8004784:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004786:	a902      	add	r1, sp, #8
 8004788:	9301      	str	r3, [sp, #4]
 800478a:	f000 f889 	bl	80048a0 <_svfiprintf_r>
 800478e:	1c43      	adds	r3, r0, #1
 8004790:	bfbc      	itt	lt
 8004792:	238b      	movlt	r3, #139	; 0x8b
 8004794:	602b      	strlt	r3, [r5, #0]
 8004796:	2c00      	cmp	r4, #0
 8004798:	d0dd      	beq.n	8004756 <sniprintf+0x16>
 800479a:	2200      	movs	r2, #0
 800479c:	9b02      	ldr	r3, [sp, #8]
 800479e:	701a      	strb	r2, [r3, #0]
 80047a0:	e7d9      	b.n	8004756 <sniprintf+0x16>
 80047a2:	bf00      	nop
 80047a4:	2000000c 	.word	0x2000000c

080047a8 <siprintf>:
 80047a8:	b40e      	push	{r1, r2, r3}
 80047aa:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80047ae:	b500      	push	{lr}
 80047b0:	b09c      	sub	sp, #112	; 0x70
 80047b2:	ab1d      	add	r3, sp, #116	; 0x74
 80047b4:	9002      	str	r0, [sp, #8]
 80047b6:	9006      	str	r0, [sp, #24]
 80047b8:	9107      	str	r1, [sp, #28]
 80047ba:	9104      	str	r1, [sp, #16]
 80047bc:	4808      	ldr	r0, [pc, #32]	; (80047e0 <siprintf+0x38>)
 80047be:	4909      	ldr	r1, [pc, #36]	; (80047e4 <siprintf+0x3c>)
 80047c0:	f853 2b04 	ldr.w	r2, [r3], #4
 80047c4:	9105      	str	r1, [sp, #20]
 80047c6:	6800      	ldr	r0, [r0, #0]
 80047c8:	a902      	add	r1, sp, #8
 80047ca:	9301      	str	r3, [sp, #4]
 80047cc:	f000 f868 	bl	80048a0 <_svfiprintf_r>
 80047d0:	2200      	movs	r2, #0
 80047d2:	9b02      	ldr	r3, [sp, #8]
 80047d4:	701a      	strb	r2, [r3, #0]
 80047d6:	b01c      	add	sp, #112	; 0x70
 80047d8:	f85d eb04 	ldr.w	lr, [sp], #4
 80047dc:	b003      	add	sp, #12
 80047de:	4770      	bx	lr
 80047e0:	2000000c 	.word	0x2000000c
 80047e4:	ffff0208 	.word	0xffff0208

080047e8 <__ssputs_r>:
 80047e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80047ec:	688e      	ldr	r6, [r1, #8]
 80047ee:	4682      	mov	sl, r0
 80047f0:	429e      	cmp	r6, r3
 80047f2:	460c      	mov	r4, r1
 80047f4:	4690      	mov	r8, r2
 80047f6:	461f      	mov	r7, r3
 80047f8:	d838      	bhi.n	800486c <__ssputs_r+0x84>
 80047fa:	898a      	ldrh	r2, [r1, #12]
 80047fc:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004800:	d032      	beq.n	8004868 <__ssputs_r+0x80>
 8004802:	6825      	ldr	r5, [r4, #0]
 8004804:	6909      	ldr	r1, [r1, #16]
 8004806:	3301      	adds	r3, #1
 8004808:	eba5 0901 	sub.w	r9, r5, r1
 800480c:	6965      	ldr	r5, [r4, #20]
 800480e:	444b      	add	r3, r9
 8004810:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004814:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004818:	106d      	asrs	r5, r5, #1
 800481a:	429d      	cmp	r5, r3
 800481c:	bf38      	it	cc
 800481e:	461d      	movcc	r5, r3
 8004820:	0553      	lsls	r3, r2, #21
 8004822:	d531      	bpl.n	8004888 <__ssputs_r+0xa0>
 8004824:	4629      	mov	r1, r5
 8004826:	f000 fb6f 	bl	8004f08 <_malloc_r>
 800482a:	4606      	mov	r6, r0
 800482c:	b950      	cbnz	r0, 8004844 <__ssputs_r+0x5c>
 800482e:	230c      	movs	r3, #12
 8004830:	f04f 30ff 	mov.w	r0, #4294967295
 8004834:	f8ca 3000 	str.w	r3, [sl]
 8004838:	89a3      	ldrh	r3, [r4, #12]
 800483a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800483e:	81a3      	strh	r3, [r4, #12]
 8004840:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004844:	464a      	mov	r2, r9
 8004846:	6921      	ldr	r1, [r4, #16]
 8004848:	f000 face 	bl	8004de8 <memcpy>
 800484c:	89a3      	ldrh	r3, [r4, #12]
 800484e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004852:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004856:	81a3      	strh	r3, [r4, #12]
 8004858:	6126      	str	r6, [r4, #16]
 800485a:	444e      	add	r6, r9
 800485c:	6026      	str	r6, [r4, #0]
 800485e:	463e      	mov	r6, r7
 8004860:	6165      	str	r5, [r4, #20]
 8004862:	eba5 0509 	sub.w	r5, r5, r9
 8004866:	60a5      	str	r5, [r4, #8]
 8004868:	42be      	cmp	r6, r7
 800486a:	d900      	bls.n	800486e <__ssputs_r+0x86>
 800486c:	463e      	mov	r6, r7
 800486e:	4632      	mov	r2, r6
 8004870:	4641      	mov	r1, r8
 8004872:	6820      	ldr	r0, [r4, #0]
 8004874:	f000 fac6 	bl	8004e04 <memmove>
 8004878:	68a3      	ldr	r3, [r4, #8]
 800487a:	2000      	movs	r0, #0
 800487c:	1b9b      	subs	r3, r3, r6
 800487e:	60a3      	str	r3, [r4, #8]
 8004880:	6823      	ldr	r3, [r4, #0]
 8004882:	4433      	add	r3, r6
 8004884:	6023      	str	r3, [r4, #0]
 8004886:	e7db      	b.n	8004840 <__ssputs_r+0x58>
 8004888:	462a      	mov	r2, r5
 800488a:	f000 fbb1 	bl	8004ff0 <_realloc_r>
 800488e:	4606      	mov	r6, r0
 8004890:	2800      	cmp	r0, #0
 8004892:	d1e1      	bne.n	8004858 <__ssputs_r+0x70>
 8004894:	4650      	mov	r0, sl
 8004896:	6921      	ldr	r1, [r4, #16]
 8004898:	f000 face 	bl	8004e38 <_free_r>
 800489c:	e7c7      	b.n	800482e <__ssputs_r+0x46>
	...

080048a0 <_svfiprintf_r>:
 80048a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048a4:	4698      	mov	r8, r3
 80048a6:	898b      	ldrh	r3, [r1, #12]
 80048a8:	4607      	mov	r7, r0
 80048aa:	061b      	lsls	r3, r3, #24
 80048ac:	460d      	mov	r5, r1
 80048ae:	4614      	mov	r4, r2
 80048b0:	b09d      	sub	sp, #116	; 0x74
 80048b2:	d50e      	bpl.n	80048d2 <_svfiprintf_r+0x32>
 80048b4:	690b      	ldr	r3, [r1, #16]
 80048b6:	b963      	cbnz	r3, 80048d2 <_svfiprintf_r+0x32>
 80048b8:	2140      	movs	r1, #64	; 0x40
 80048ba:	f000 fb25 	bl	8004f08 <_malloc_r>
 80048be:	6028      	str	r0, [r5, #0]
 80048c0:	6128      	str	r0, [r5, #16]
 80048c2:	b920      	cbnz	r0, 80048ce <_svfiprintf_r+0x2e>
 80048c4:	230c      	movs	r3, #12
 80048c6:	603b      	str	r3, [r7, #0]
 80048c8:	f04f 30ff 	mov.w	r0, #4294967295
 80048cc:	e0d1      	b.n	8004a72 <_svfiprintf_r+0x1d2>
 80048ce:	2340      	movs	r3, #64	; 0x40
 80048d0:	616b      	str	r3, [r5, #20]
 80048d2:	2300      	movs	r3, #0
 80048d4:	9309      	str	r3, [sp, #36]	; 0x24
 80048d6:	2320      	movs	r3, #32
 80048d8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80048dc:	2330      	movs	r3, #48	; 0x30
 80048de:	f04f 0901 	mov.w	r9, #1
 80048e2:	f8cd 800c 	str.w	r8, [sp, #12]
 80048e6:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004a8c <_svfiprintf_r+0x1ec>
 80048ea:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80048ee:	4623      	mov	r3, r4
 80048f0:	469a      	mov	sl, r3
 80048f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80048f6:	b10a      	cbz	r2, 80048fc <_svfiprintf_r+0x5c>
 80048f8:	2a25      	cmp	r2, #37	; 0x25
 80048fa:	d1f9      	bne.n	80048f0 <_svfiprintf_r+0x50>
 80048fc:	ebba 0b04 	subs.w	fp, sl, r4
 8004900:	d00b      	beq.n	800491a <_svfiprintf_r+0x7a>
 8004902:	465b      	mov	r3, fp
 8004904:	4622      	mov	r2, r4
 8004906:	4629      	mov	r1, r5
 8004908:	4638      	mov	r0, r7
 800490a:	f7ff ff6d 	bl	80047e8 <__ssputs_r>
 800490e:	3001      	adds	r0, #1
 8004910:	f000 80aa 	beq.w	8004a68 <_svfiprintf_r+0x1c8>
 8004914:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004916:	445a      	add	r2, fp
 8004918:	9209      	str	r2, [sp, #36]	; 0x24
 800491a:	f89a 3000 	ldrb.w	r3, [sl]
 800491e:	2b00      	cmp	r3, #0
 8004920:	f000 80a2 	beq.w	8004a68 <_svfiprintf_r+0x1c8>
 8004924:	2300      	movs	r3, #0
 8004926:	f04f 32ff 	mov.w	r2, #4294967295
 800492a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800492e:	f10a 0a01 	add.w	sl, sl, #1
 8004932:	9304      	str	r3, [sp, #16]
 8004934:	9307      	str	r3, [sp, #28]
 8004936:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800493a:	931a      	str	r3, [sp, #104]	; 0x68
 800493c:	4654      	mov	r4, sl
 800493e:	2205      	movs	r2, #5
 8004940:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004944:	4851      	ldr	r0, [pc, #324]	; (8004a8c <_svfiprintf_r+0x1ec>)
 8004946:	f000 fa41 	bl	8004dcc <memchr>
 800494a:	9a04      	ldr	r2, [sp, #16]
 800494c:	b9d8      	cbnz	r0, 8004986 <_svfiprintf_r+0xe6>
 800494e:	06d0      	lsls	r0, r2, #27
 8004950:	bf44      	itt	mi
 8004952:	2320      	movmi	r3, #32
 8004954:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004958:	0711      	lsls	r1, r2, #28
 800495a:	bf44      	itt	mi
 800495c:	232b      	movmi	r3, #43	; 0x2b
 800495e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004962:	f89a 3000 	ldrb.w	r3, [sl]
 8004966:	2b2a      	cmp	r3, #42	; 0x2a
 8004968:	d015      	beq.n	8004996 <_svfiprintf_r+0xf6>
 800496a:	4654      	mov	r4, sl
 800496c:	2000      	movs	r0, #0
 800496e:	f04f 0c0a 	mov.w	ip, #10
 8004972:	9a07      	ldr	r2, [sp, #28]
 8004974:	4621      	mov	r1, r4
 8004976:	f811 3b01 	ldrb.w	r3, [r1], #1
 800497a:	3b30      	subs	r3, #48	; 0x30
 800497c:	2b09      	cmp	r3, #9
 800497e:	d94e      	bls.n	8004a1e <_svfiprintf_r+0x17e>
 8004980:	b1b0      	cbz	r0, 80049b0 <_svfiprintf_r+0x110>
 8004982:	9207      	str	r2, [sp, #28]
 8004984:	e014      	b.n	80049b0 <_svfiprintf_r+0x110>
 8004986:	eba0 0308 	sub.w	r3, r0, r8
 800498a:	fa09 f303 	lsl.w	r3, r9, r3
 800498e:	4313      	orrs	r3, r2
 8004990:	46a2      	mov	sl, r4
 8004992:	9304      	str	r3, [sp, #16]
 8004994:	e7d2      	b.n	800493c <_svfiprintf_r+0x9c>
 8004996:	9b03      	ldr	r3, [sp, #12]
 8004998:	1d19      	adds	r1, r3, #4
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	9103      	str	r1, [sp, #12]
 800499e:	2b00      	cmp	r3, #0
 80049a0:	bfbb      	ittet	lt
 80049a2:	425b      	neglt	r3, r3
 80049a4:	f042 0202 	orrlt.w	r2, r2, #2
 80049a8:	9307      	strge	r3, [sp, #28]
 80049aa:	9307      	strlt	r3, [sp, #28]
 80049ac:	bfb8      	it	lt
 80049ae:	9204      	strlt	r2, [sp, #16]
 80049b0:	7823      	ldrb	r3, [r4, #0]
 80049b2:	2b2e      	cmp	r3, #46	; 0x2e
 80049b4:	d10c      	bne.n	80049d0 <_svfiprintf_r+0x130>
 80049b6:	7863      	ldrb	r3, [r4, #1]
 80049b8:	2b2a      	cmp	r3, #42	; 0x2a
 80049ba:	d135      	bne.n	8004a28 <_svfiprintf_r+0x188>
 80049bc:	9b03      	ldr	r3, [sp, #12]
 80049be:	3402      	adds	r4, #2
 80049c0:	1d1a      	adds	r2, r3, #4
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	9203      	str	r2, [sp, #12]
 80049c6:	2b00      	cmp	r3, #0
 80049c8:	bfb8      	it	lt
 80049ca:	f04f 33ff 	movlt.w	r3, #4294967295
 80049ce:	9305      	str	r3, [sp, #20]
 80049d0:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8004a90 <_svfiprintf_r+0x1f0>
 80049d4:	2203      	movs	r2, #3
 80049d6:	4650      	mov	r0, sl
 80049d8:	7821      	ldrb	r1, [r4, #0]
 80049da:	f000 f9f7 	bl	8004dcc <memchr>
 80049de:	b140      	cbz	r0, 80049f2 <_svfiprintf_r+0x152>
 80049e0:	2340      	movs	r3, #64	; 0x40
 80049e2:	eba0 000a 	sub.w	r0, r0, sl
 80049e6:	fa03 f000 	lsl.w	r0, r3, r0
 80049ea:	9b04      	ldr	r3, [sp, #16]
 80049ec:	3401      	adds	r4, #1
 80049ee:	4303      	orrs	r3, r0
 80049f0:	9304      	str	r3, [sp, #16]
 80049f2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80049f6:	2206      	movs	r2, #6
 80049f8:	4826      	ldr	r0, [pc, #152]	; (8004a94 <_svfiprintf_r+0x1f4>)
 80049fa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80049fe:	f000 f9e5 	bl	8004dcc <memchr>
 8004a02:	2800      	cmp	r0, #0
 8004a04:	d038      	beq.n	8004a78 <_svfiprintf_r+0x1d8>
 8004a06:	4b24      	ldr	r3, [pc, #144]	; (8004a98 <_svfiprintf_r+0x1f8>)
 8004a08:	bb1b      	cbnz	r3, 8004a52 <_svfiprintf_r+0x1b2>
 8004a0a:	9b03      	ldr	r3, [sp, #12]
 8004a0c:	3307      	adds	r3, #7
 8004a0e:	f023 0307 	bic.w	r3, r3, #7
 8004a12:	3308      	adds	r3, #8
 8004a14:	9303      	str	r3, [sp, #12]
 8004a16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a18:	4433      	add	r3, r6
 8004a1a:	9309      	str	r3, [sp, #36]	; 0x24
 8004a1c:	e767      	b.n	80048ee <_svfiprintf_r+0x4e>
 8004a1e:	460c      	mov	r4, r1
 8004a20:	2001      	movs	r0, #1
 8004a22:	fb0c 3202 	mla	r2, ip, r2, r3
 8004a26:	e7a5      	b.n	8004974 <_svfiprintf_r+0xd4>
 8004a28:	2300      	movs	r3, #0
 8004a2a:	f04f 0c0a 	mov.w	ip, #10
 8004a2e:	4619      	mov	r1, r3
 8004a30:	3401      	adds	r4, #1
 8004a32:	9305      	str	r3, [sp, #20]
 8004a34:	4620      	mov	r0, r4
 8004a36:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004a3a:	3a30      	subs	r2, #48	; 0x30
 8004a3c:	2a09      	cmp	r2, #9
 8004a3e:	d903      	bls.n	8004a48 <_svfiprintf_r+0x1a8>
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d0c5      	beq.n	80049d0 <_svfiprintf_r+0x130>
 8004a44:	9105      	str	r1, [sp, #20]
 8004a46:	e7c3      	b.n	80049d0 <_svfiprintf_r+0x130>
 8004a48:	4604      	mov	r4, r0
 8004a4a:	2301      	movs	r3, #1
 8004a4c:	fb0c 2101 	mla	r1, ip, r1, r2
 8004a50:	e7f0      	b.n	8004a34 <_svfiprintf_r+0x194>
 8004a52:	ab03      	add	r3, sp, #12
 8004a54:	9300      	str	r3, [sp, #0]
 8004a56:	462a      	mov	r2, r5
 8004a58:	4638      	mov	r0, r7
 8004a5a:	4b10      	ldr	r3, [pc, #64]	; (8004a9c <_svfiprintf_r+0x1fc>)
 8004a5c:	a904      	add	r1, sp, #16
 8004a5e:	f3af 8000 	nop.w
 8004a62:	1c42      	adds	r2, r0, #1
 8004a64:	4606      	mov	r6, r0
 8004a66:	d1d6      	bne.n	8004a16 <_svfiprintf_r+0x176>
 8004a68:	89ab      	ldrh	r3, [r5, #12]
 8004a6a:	065b      	lsls	r3, r3, #25
 8004a6c:	f53f af2c 	bmi.w	80048c8 <_svfiprintf_r+0x28>
 8004a70:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004a72:	b01d      	add	sp, #116	; 0x74
 8004a74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004a78:	ab03      	add	r3, sp, #12
 8004a7a:	9300      	str	r3, [sp, #0]
 8004a7c:	462a      	mov	r2, r5
 8004a7e:	4638      	mov	r0, r7
 8004a80:	4b06      	ldr	r3, [pc, #24]	; (8004a9c <_svfiprintf_r+0x1fc>)
 8004a82:	a904      	add	r1, sp, #16
 8004a84:	f000 f87c 	bl	8004b80 <_printf_i>
 8004a88:	e7eb      	b.n	8004a62 <_svfiprintf_r+0x1c2>
 8004a8a:	bf00      	nop
 8004a8c:	08005190 	.word	0x08005190
 8004a90:	08005196 	.word	0x08005196
 8004a94:	0800519a 	.word	0x0800519a
 8004a98:	00000000 	.word	0x00000000
 8004a9c:	080047e9 	.word	0x080047e9

08004aa0 <_printf_common>:
 8004aa0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004aa4:	4616      	mov	r6, r2
 8004aa6:	4699      	mov	r9, r3
 8004aa8:	688a      	ldr	r2, [r1, #8]
 8004aaa:	690b      	ldr	r3, [r1, #16]
 8004aac:	4607      	mov	r7, r0
 8004aae:	4293      	cmp	r3, r2
 8004ab0:	bfb8      	it	lt
 8004ab2:	4613      	movlt	r3, r2
 8004ab4:	6033      	str	r3, [r6, #0]
 8004ab6:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004aba:	460c      	mov	r4, r1
 8004abc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004ac0:	b10a      	cbz	r2, 8004ac6 <_printf_common+0x26>
 8004ac2:	3301      	adds	r3, #1
 8004ac4:	6033      	str	r3, [r6, #0]
 8004ac6:	6823      	ldr	r3, [r4, #0]
 8004ac8:	0699      	lsls	r1, r3, #26
 8004aca:	bf42      	ittt	mi
 8004acc:	6833      	ldrmi	r3, [r6, #0]
 8004ace:	3302      	addmi	r3, #2
 8004ad0:	6033      	strmi	r3, [r6, #0]
 8004ad2:	6825      	ldr	r5, [r4, #0]
 8004ad4:	f015 0506 	ands.w	r5, r5, #6
 8004ad8:	d106      	bne.n	8004ae8 <_printf_common+0x48>
 8004ada:	f104 0a19 	add.w	sl, r4, #25
 8004ade:	68e3      	ldr	r3, [r4, #12]
 8004ae0:	6832      	ldr	r2, [r6, #0]
 8004ae2:	1a9b      	subs	r3, r3, r2
 8004ae4:	42ab      	cmp	r3, r5
 8004ae6:	dc28      	bgt.n	8004b3a <_printf_common+0x9a>
 8004ae8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004aec:	1e13      	subs	r3, r2, #0
 8004aee:	6822      	ldr	r2, [r4, #0]
 8004af0:	bf18      	it	ne
 8004af2:	2301      	movne	r3, #1
 8004af4:	0692      	lsls	r2, r2, #26
 8004af6:	d42d      	bmi.n	8004b54 <_printf_common+0xb4>
 8004af8:	4649      	mov	r1, r9
 8004afa:	4638      	mov	r0, r7
 8004afc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004b00:	47c0      	blx	r8
 8004b02:	3001      	adds	r0, #1
 8004b04:	d020      	beq.n	8004b48 <_printf_common+0xa8>
 8004b06:	6823      	ldr	r3, [r4, #0]
 8004b08:	68e5      	ldr	r5, [r4, #12]
 8004b0a:	f003 0306 	and.w	r3, r3, #6
 8004b0e:	2b04      	cmp	r3, #4
 8004b10:	bf18      	it	ne
 8004b12:	2500      	movne	r5, #0
 8004b14:	6832      	ldr	r2, [r6, #0]
 8004b16:	f04f 0600 	mov.w	r6, #0
 8004b1a:	68a3      	ldr	r3, [r4, #8]
 8004b1c:	bf08      	it	eq
 8004b1e:	1aad      	subeq	r5, r5, r2
 8004b20:	6922      	ldr	r2, [r4, #16]
 8004b22:	bf08      	it	eq
 8004b24:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004b28:	4293      	cmp	r3, r2
 8004b2a:	bfc4      	itt	gt
 8004b2c:	1a9b      	subgt	r3, r3, r2
 8004b2e:	18ed      	addgt	r5, r5, r3
 8004b30:	341a      	adds	r4, #26
 8004b32:	42b5      	cmp	r5, r6
 8004b34:	d11a      	bne.n	8004b6c <_printf_common+0xcc>
 8004b36:	2000      	movs	r0, #0
 8004b38:	e008      	b.n	8004b4c <_printf_common+0xac>
 8004b3a:	2301      	movs	r3, #1
 8004b3c:	4652      	mov	r2, sl
 8004b3e:	4649      	mov	r1, r9
 8004b40:	4638      	mov	r0, r7
 8004b42:	47c0      	blx	r8
 8004b44:	3001      	adds	r0, #1
 8004b46:	d103      	bne.n	8004b50 <_printf_common+0xb0>
 8004b48:	f04f 30ff 	mov.w	r0, #4294967295
 8004b4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004b50:	3501      	adds	r5, #1
 8004b52:	e7c4      	b.n	8004ade <_printf_common+0x3e>
 8004b54:	2030      	movs	r0, #48	; 0x30
 8004b56:	18e1      	adds	r1, r4, r3
 8004b58:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004b5c:	1c5a      	adds	r2, r3, #1
 8004b5e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004b62:	4422      	add	r2, r4
 8004b64:	3302      	adds	r3, #2
 8004b66:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004b6a:	e7c5      	b.n	8004af8 <_printf_common+0x58>
 8004b6c:	2301      	movs	r3, #1
 8004b6e:	4622      	mov	r2, r4
 8004b70:	4649      	mov	r1, r9
 8004b72:	4638      	mov	r0, r7
 8004b74:	47c0      	blx	r8
 8004b76:	3001      	adds	r0, #1
 8004b78:	d0e6      	beq.n	8004b48 <_printf_common+0xa8>
 8004b7a:	3601      	adds	r6, #1
 8004b7c:	e7d9      	b.n	8004b32 <_printf_common+0x92>
	...

08004b80 <_printf_i>:
 8004b80:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004b84:	7e0f      	ldrb	r7, [r1, #24]
 8004b86:	4691      	mov	r9, r2
 8004b88:	2f78      	cmp	r7, #120	; 0x78
 8004b8a:	4680      	mov	r8, r0
 8004b8c:	460c      	mov	r4, r1
 8004b8e:	469a      	mov	sl, r3
 8004b90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004b92:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8004b96:	d807      	bhi.n	8004ba8 <_printf_i+0x28>
 8004b98:	2f62      	cmp	r7, #98	; 0x62
 8004b9a:	d80a      	bhi.n	8004bb2 <_printf_i+0x32>
 8004b9c:	2f00      	cmp	r7, #0
 8004b9e:	f000 80d9 	beq.w	8004d54 <_printf_i+0x1d4>
 8004ba2:	2f58      	cmp	r7, #88	; 0x58
 8004ba4:	f000 80a4 	beq.w	8004cf0 <_printf_i+0x170>
 8004ba8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004bac:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004bb0:	e03a      	b.n	8004c28 <_printf_i+0xa8>
 8004bb2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004bb6:	2b15      	cmp	r3, #21
 8004bb8:	d8f6      	bhi.n	8004ba8 <_printf_i+0x28>
 8004bba:	a101      	add	r1, pc, #4	; (adr r1, 8004bc0 <_printf_i+0x40>)
 8004bbc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004bc0:	08004c19 	.word	0x08004c19
 8004bc4:	08004c2d 	.word	0x08004c2d
 8004bc8:	08004ba9 	.word	0x08004ba9
 8004bcc:	08004ba9 	.word	0x08004ba9
 8004bd0:	08004ba9 	.word	0x08004ba9
 8004bd4:	08004ba9 	.word	0x08004ba9
 8004bd8:	08004c2d 	.word	0x08004c2d
 8004bdc:	08004ba9 	.word	0x08004ba9
 8004be0:	08004ba9 	.word	0x08004ba9
 8004be4:	08004ba9 	.word	0x08004ba9
 8004be8:	08004ba9 	.word	0x08004ba9
 8004bec:	08004d3b 	.word	0x08004d3b
 8004bf0:	08004c5d 	.word	0x08004c5d
 8004bf4:	08004d1d 	.word	0x08004d1d
 8004bf8:	08004ba9 	.word	0x08004ba9
 8004bfc:	08004ba9 	.word	0x08004ba9
 8004c00:	08004d5d 	.word	0x08004d5d
 8004c04:	08004ba9 	.word	0x08004ba9
 8004c08:	08004c5d 	.word	0x08004c5d
 8004c0c:	08004ba9 	.word	0x08004ba9
 8004c10:	08004ba9 	.word	0x08004ba9
 8004c14:	08004d25 	.word	0x08004d25
 8004c18:	682b      	ldr	r3, [r5, #0]
 8004c1a:	1d1a      	adds	r2, r3, #4
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	602a      	str	r2, [r5, #0]
 8004c20:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004c24:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004c28:	2301      	movs	r3, #1
 8004c2a:	e0a4      	b.n	8004d76 <_printf_i+0x1f6>
 8004c2c:	6820      	ldr	r0, [r4, #0]
 8004c2e:	6829      	ldr	r1, [r5, #0]
 8004c30:	0606      	lsls	r6, r0, #24
 8004c32:	f101 0304 	add.w	r3, r1, #4
 8004c36:	d50a      	bpl.n	8004c4e <_printf_i+0xce>
 8004c38:	680e      	ldr	r6, [r1, #0]
 8004c3a:	602b      	str	r3, [r5, #0]
 8004c3c:	2e00      	cmp	r6, #0
 8004c3e:	da03      	bge.n	8004c48 <_printf_i+0xc8>
 8004c40:	232d      	movs	r3, #45	; 0x2d
 8004c42:	4276      	negs	r6, r6
 8004c44:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004c48:	230a      	movs	r3, #10
 8004c4a:	485e      	ldr	r0, [pc, #376]	; (8004dc4 <_printf_i+0x244>)
 8004c4c:	e019      	b.n	8004c82 <_printf_i+0x102>
 8004c4e:	680e      	ldr	r6, [r1, #0]
 8004c50:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004c54:	602b      	str	r3, [r5, #0]
 8004c56:	bf18      	it	ne
 8004c58:	b236      	sxthne	r6, r6
 8004c5a:	e7ef      	b.n	8004c3c <_printf_i+0xbc>
 8004c5c:	682b      	ldr	r3, [r5, #0]
 8004c5e:	6820      	ldr	r0, [r4, #0]
 8004c60:	1d19      	adds	r1, r3, #4
 8004c62:	6029      	str	r1, [r5, #0]
 8004c64:	0601      	lsls	r1, r0, #24
 8004c66:	d501      	bpl.n	8004c6c <_printf_i+0xec>
 8004c68:	681e      	ldr	r6, [r3, #0]
 8004c6a:	e002      	b.n	8004c72 <_printf_i+0xf2>
 8004c6c:	0646      	lsls	r6, r0, #25
 8004c6e:	d5fb      	bpl.n	8004c68 <_printf_i+0xe8>
 8004c70:	881e      	ldrh	r6, [r3, #0]
 8004c72:	2f6f      	cmp	r7, #111	; 0x6f
 8004c74:	bf0c      	ite	eq
 8004c76:	2308      	moveq	r3, #8
 8004c78:	230a      	movne	r3, #10
 8004c7a:	4852      	ldr	r0, [pc, #328]	; (8004dc4 <_printf_i+0x244>)
 8004c7c:	2100      	movs	r1, #0
 8004c7e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004c82:	6865      	ldr	r5, [r4, #4]
 8004c84:	2d00      	cmp	r5, #0
 8004c86:	bfa8      	it	ge
 8004c88:	6821      	ldrge	r1, [r4, #0]
 8004c8a:	60a5      	str	r5, [r4, #8]
 8004c8c:	bfa4      	itt	ge
 8004c8e:	f021 0104 	bicge.w	r1, r1, #4
 8004c92:	6021      	strge	r1, [r4, #0]
 8004c94:	b90e      	cbnz	r6, 8004c9a <_printf_i+0x11a>
 8004c96:	2d00      	cmp	r5, #0
 8004c98:	d04d      	beq.n	8004d36 <_printf_i+0x1b6>
 8004c9a:	4615      	mov	r5, r2
 8004c9c:	fbb6 f1f3 	udiv	r1, r6, r3
 8004ca0:	fb03 6711 	mls	r7, r3, r1, r6
 8004ca4:	5dc7      	ldrb	r7, [r0, r7]
 8004ca6:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004caa:	4637      	mov	r7, r6
 8004cac:	42bb      	cmp	r3, r7
 8004cae:	460e      	mov	r6, r1
 8004cb0:	d9f4      	bls.n	8004c9c <_printf_i+0x11c>
 8004cb2:	2b08      	cmp	r3, #8
 8004cb4:	d10b      	bne.n	8004cce <_printf_i+0x14e>
 8004cb6:	6823      	ldr	r3, [r4, #0]
 8004cb8:	07de      	lsls	r6, r3, #31
 8004cba:	d508      	bpl.n	8004cce <_printf_i+0x14e>
 8004cbc:	6923      	ldr	r3, [r4, #16]
 8004cbe:	6861      	ldr	r1, [r4, #4]
 8004cc0:	4299      	cmp	r1, r3
 8004cc2:	bfde      	ittt	le
 8004cc4:	2330      	movle	r3, #48	; 0x30
 8004cc6:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004cca:	f105 35ff 	addle.w	r5, r5, #4294967295
 8004cce:	1b52      	subs	r2, r2, r5
 8004cd0:	6122      	str	r2, [r4, #16]
 8004cd2:	464b      	mov	r3, r9
 8004cd4:	4621      	mov	r1, r4
 8004cd6:	4640      	mov	r0, r8
 8004cd8:	f8cd a000 	str.w	sl, [sp]
 8004cdc:	aa03      	add	r2, sp, #12
 8004cde:	f7ff fedf 	bl	8004aa0 <_printf_common>
 8004ce2:	3001      	adds	r0, #1
 8004ce4:	d14c      	bne.n	8004d80 <_printf_i+0x200>
 8004ce6:	f04f 30ff 	mov.w	r0, #4294967295
 8004cea:	b004      	add	sp, #16
 8004cec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004cf0:	4834      	ldr	r0, [pc, #208]	; (8004dc4 <_printf_i+0x244>)
 8004cf2:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8004cf6:	6829      	ldr	r1, [r5, #0]
 8004cf8:	6823      	ldr	r3, [r4, #0]
 8004cfa:	f851 6b04 	ldr.w	r6, [r1], #4
 8004cfe:	6029      	str	r1, [r5, #0]
 8004d00:	061d      	lsls	r5, r3, #24
 8004d02:	d514      	bpl.n	8004d2e <_printf_i+0x1ae>
 8004d04:	07df      	lsls	r7, r3, #31
 8004d06:	bf44      	itt	mi
 8004d08:	f043 0320 	orrmi.w	r3, r3, #32
 8004d0c:	6023      	strmi	r3, [r4, #0]
 8004d0e:	b91e      	cbnz	r6, 8004d18 <_printf_i+0x198>
 8004d10:	6823      	ldr	r3, [r4, #0]
 8004d12:	f023 0320 	bic.w	r3, r3, #32
 8004d16:	6023      	str	r3, [r4, #0]
 8004d18:	2310      	movs	r3, #16
 8004d1a:	e7af      	b.n	8004c7c <_printf_i+0xfc>
 8004d1c:	6823      	ldr	r3, [r4, #0]
 8004d1e:	f043 0320 	orr.w	r3, r3, #32
 8004d22:	6023      	str	r3, [r4, #0]
 8004d24:	2378      	movs	r3, #120	; 0x78
 8004d26:	4828      	ldr	r0, [pc, #160]	; (8004dc8 <_printf_i+0x248>)
 8004d28:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004d2c:	e7e3      	b.n	8004cf6 <_printf_i+0x176>
 8004d2e:	0659      	lsls	r1, r3, #25
 8004d30:	bf48      	it	mi
 8004d32:	b2b6      	uxthmi	r6, r6
 8004d34:	e7e6      	b.n	8004d04 <_printf_i+0x184>
 8004d36:	4615      	mov	r5, r2
 8004d38:	e7bb      	b.n	8004cb2 <_printf_i+0x132>
 8004d3a:	682b      	ldr	r3, [r5, #0]
 8004d3c:	6826      	ldr	r6, [r4, #0]
 8004d3e:	1d18      	adds	r0, r3, #4
 8004d40:	6961      	ldr	r1, [r4, #20]
 8004d42:	6028      	str	r0, [r5, #0]
 8004d44:	0635      	lsls	r5, r6, #24
 8004d46:	681b      	ldr	r3, [r3, #0]
 8004d48:	d501      	bpl.n	8004d4e <_printf_i+0x1ce>
 8004d4a:	6019      	str	r1, [r3, #0]
 8004d4c:	e002      	b.n	8004d54 <_printf_i+0x1d4>
 8004d4e:	0670      	lsls	r0, r6, #25
 8004d50:	d5fb      	bpl.n	8004d4a <_printf_i+0x1ca>
 8004d52:	8019      	strh	r1, [r3, #0]
 8004d54:	2300      	movs	r3, #0
 8004d56:	4615      	mov	r5, r2
 8004d58:	6123      	str	r3, [r4, #16]
 8004d5a:	e7ba      	b.n	8004cd2 <_printf_i+0x152>
 8004d5c:	682b      	ldr	r3, [r5, #0]
 8004d5e:	2100      	movs	r1, #0
 8004d60:	1d1a      	adds	r2, r3, #4
 8004d62:	602a      	str	r2, [r5, #0]
 8004d64:	681d      	ldr	r5, [r3, #0]
 8004d66:	6862      	ldr	r2, [r4, #4]
 8004d68:	4628      	mov	r0, r5
 8004d6a:	f000 f82f 	bl	8004dcc <memchr>
 8004d6e:	b108      	cbz	r0, 8004d74 <_printf_i+0x1f4>
 8004d70:	1b40      	subs	r0, r0, r5
 8004d72:	6060      	str	r0, [r4, #4]
 8004d74:	6863      	ldr	r3, [r4, #4]
 8004d76:	6123      	str	r3, [r4, #16]
 8004d78:	2300      	movs	r3, #0
 8004d7a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004d7e:	e7a8      	b.n	8004cd2 <_printf_i+0x152>
 8004d80:	462a      	mov	r2, r5
 8004d82:	4649      	mov	r1, r9
 8004d84:	4640      	mov	r0, r8
 8004d86:	6923      	ldr	r3, [r4, #16]
 8004d88:	47d0      	blx	sl
 8004d8a:	3001      	adds	r0, #1
 8004d8c:	d0ab      	beq.n	8004ce6 <_printf_i+0x166>
 8004d8e:	6823      	ldr	r3, [r4, #0]
 8004d90:	079b      	lsls	r3, r3, #30
 8004d92:	d413      	bmi.n	8004dbc <_printf_i+0x23c>
 8004d94:	68e0      	ldr	r0, [r4, #12]
 8004d96:	9b03      	ldr	r3, [sp, #12]
 8004d98:	4298      	cmp	r0, r3
 8004d9a:	bfb8      	it	lt
 8004d9c:	4618      	movlt	r0, r3
 8004d9e:	e7a4      	b.n	8004cea <_printf_i+0x16a>
 8004da0:	2301      	movs	r3, #1
 8004da2:	4632      	mov	r2, r6
 8004da4:	4649      	mov	r1, r9
 8004da6:	4640      	mov	r0, r8
 8004da8:	47d0      	blx	sl
 8004daa:	3001      	adds	r0, #1
 8004dac:	d09b      	beq.n	8004ce6 <_printf_i+0x166>
 8004dae:	3501      	adds	r5, #1
 8004db0:	68e3      	ldr	r3, [r4, #12]
 8004db2:	9903      	ldr	r1, [sp, #12]
 8004db4:	1a5b      	subs	r3, r3, r1
 8004db6:	42ab      	cmp	r3, r5
 8004db8:	dcf2      	bgt.n	8004da0 <_printf_i+0x220>
 8004dba:	e7eb      	b.n	8004d94 <_printf_i+0x214>
 8004dbc:	2500      	movs	r5, #0
 8004dbe:	f104 0619 	add.w	r6, r4, #25
 8004dc2:	e7f5      	b.n	8004db0 <_printf_i+0x230>
 8004dc4:	080051a1 	.word	0x080051a1
 8004dc8:	080051b2 	.word	0x080051b2

08004dcc <memchr>:
 8004dcc:	4603      	mov	r3, r0
 8004dce:	b510      	push	{r4, lr}
 8004dd0:	b2c9      	uxtb	r1, r1
 8004dd2:	4402      	add	r2, r0
 8004dd4:	4293      	cmp	r3, r2
 8004dd6:	4618      	mov	r0, r3
 8004dd8:	d101      	bne.n	8004dde <memchr+0x12>
 8004dda:	2000      	movs	r0, #0
 8004ddc:	e003      	b.n	8004de6 <memchr+0x1a>
 8004dde:	7804      	ldrb	r4, [r0, #0]
 8004de0:	3301      	adds	r3, #1
 8004de2:	428c      	cmp	r4, r1
 8004de4:	d1f6      	bne.n	8004dd4 <memchr+0x8>
 8004de6:	bd10      	pop	{r4, pc}

08004de8 <memcpy>:
 8004de8:	440a      	add	r2, r1
 8004dea:	4291      	cmp	r1, r2
 8004dec:	f100 33ff 	add.w	r3, r0, #4294967295
 8004df0:	d100      	bne.n	8004df4 <memcpy+0xc>
 8004df2:	4770      	bx	lr
 8004df4:	b510      	push	{r4, lr}
 8004df6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004dfa:	4291      	cmp	r1, r2
 8004dfc:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004e00:	d1f9      	bne.n	8004df6 <memcpy+0xe>
 8004e02:	bd10      	pop	{r4, pc}

08004e04 <memmove>:
 8004e04:	4288      	cmp	r0, r1
 8004e06:	b510      	push	{r4, lr}
 8004e08:	eb01 0402 	add.w	r4, r1, r2
 8004e0c:	d902      	bls.n	8004e14 <memmove+0x10>
 8004e0e:	4284      	cmp	r4, r0
 8004e10:	4623      	mov	r3, r4
 8004e12:	d807      	bhi.n	8004e24 <memmove+0x20>
 8004e14:	1e43      	subs	r3, r0, #1
 8004e16:	42a1      	cmp	r1, r4
 8004e18:	d008      	beq.n	8004e2c <memmove+0x28>
 8004e1a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8004e1e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004e22:	e7f8      	b.n	8004e16 <memmove+0x12>
 8004e24:	4601      	mov	r1, r0
 8004e26:	4402      	add	r2, r0
 8004e28:	428a      	cmp	r2, r1
 8004e2a:	d100      	bne.n	8004e2e <memmove+0x2a>
 8004e2c:	bd10      	pop	{r4, pc}
 8004e2e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004e32:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004e36:	e7f7      	b.n	8004e28 <memmove+0x24>

08004e38 <_free_r>:
 8004e38:	b538      	push	{r3, r4, r5, lr}
 8004e3a:	4605      	mov	r5, r0
 8004e3c:	2900      	cmp	r1, #0
 8004e3e:	d040      	beq.n	8004ec2 <_free_r+0x8a>
 8004e40:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004e44:	1f0c      	subs	r4, r1, #4
 8004e46:	2b00      	cmp	r3, #0
 8004e48:	bfb8      	it	lt
 8004e4a:	18e4      	addlt	r4, r4, r3
 8004e4c:	f000 f910 	bl	8005070 <__malloc_lock>
 8004e50:	4a1c      	ldr	r2, [pc, #112]	; (8004ec4 <_free_r+0x8c>)
 8004e52:	6813      	ldr	r3, [r2, #0]
 8004e54:	b933      	cbnz	r3, 8004e64 <_free_r+0x2c>
 8004e56:	6063      	str	r3, [r4, #4]
 8004e58:	6014      	str	r4, [r2, #0]
 8004e5a:	4628      	mov	r0, r5
 8004e5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004e60:	f000 b90c 	b.w	800507c <__malloc_unlock>
 8004e64:	42a3      	cmp	r3, r4
 8004e66:	d908      	bls.n	8004e7a <_free_r+0x42>
 8004e68:	6820      	ldr	r0, [r4, #0]
 8004e6a:	1821      	adds	r1, r4, r0
 8004e6c:	428b      	cmp	r3, r1
 8004e6e:	bf01      	itttt	eq
 8004e70:	6819      	ldreq	r1, [r3, #0]
 8004e72:	685b      	ldreq	r3, [r3, #4]
 8004e74:	1809      	addeq	r1, r1, r0
 8004e76:	6021      	streq	r1, [r4, #0]
 8004e78:	e7ed      	b.n	8004e56 <_free_r+0x1e>
 8004e7a:	461a      	mov	r2, r3
 8004e7c:	685b      	ldr	r3, [r3, #4]
 8004e7e:	b10b      	cbz	r3, 8004e84 <_free_r+0x4c>
 8004e80:	42a3      	cmp	r3, r4
 8004e82:	d9fa      	bls.n	8004e7a <_free_r+0x42>
 8004e84:	6811      	ldr	r1, [r2, #0]
 8004e86:	1850      	adds	r0, r2, r1
 8004e88:	42a0      	cmp	r0, r4
 8004e8a:	d10b      	bne.n	8004ea4 <_free_r+0x6c>
 8004e8c:	6820      	ldr	r0, [r4, #0]
 8004e8e:	4401      	add	r1, r0
 8004e90:	1850      	adds	r0, r2, r1
 8004e92:	4283      	cmp	r3, r0
 8004e94:	6011      	str	r1, [r2, #0]
 8004e96:	d1e0      	bne.n	8004e5a <_free_r+0x22>
 8004e98:	6818      	ldr	r0, [r3, #0]
 8004e9a:	685b      	ldr	r3, [r3, #4]
 8004e9c:	4401      	add	r1, r0
 8004e9e:	6011      	str	r1, [r2, #0]
 8004ea0:	6053      	str	r3, [r2, #4]
 8004ea2:	e7da      	b.n	8004e5a <_free_r+0x22>
 8004ea4:	d902      	bls.n	8004eac <_free_r+0x74>
 8004ea6:	230c      	movs	r3, #12
 8004ea8:	602b      	str	r3, [r5, #0]
 8004eaa:	e7d6      	b.n	8004e5a <_free_r+0x22>
 8004eac:	6820      	ldr	r0, [r4, #0]
 8004eae:	1821      	adds	r1, r4, r0
 8004eb0:	428b      	cmp	r3, r1
 8004eb2:	bf01      	itttt	eq
 8004eb4:	6819      	ldreq	r1, [r3, #0]
 8004eb6:	685b      	ldreq	r3, [r3, #4]
 8004eb8:	1809      	addeq	r1, r1, r0
 8004eba:	6021      	streq	r1, [r4, #0]
 8004ebc:	6063      	str	r3, [r4, #4]
 8004ebe:	6054      	str	r4, [r2, #4]
 8004ec0:	e7cb      	b.n	8004e5a <_free_r+0x22>
 8004ec2:	bd38      	pop	{r3, r4, r5, pc}
 8004ec4:	20000554 	.word	0x20000554

08004ec8 <sbrk_aligned>:
 8004ec8:	b570      	push	{r4, r5, r6, lr}
 8004eca:	4e0e      	ldr	r6, [pc, #56]	; (8004f04 <sbrk_aligned+0x3c>)
 8004ecc:	460c      	mov	r4, r1
 8004ece:	6831      	ldr	r1, [r6, #0]
 8004ed0:	4605      	mov	r5, r0
 8004ed2:	b911      	cbnz	r1, 8004eda <sbrk_aligned+0x12>
 8004ed4:	f000 f8bc 	bl	8005050 <_sbrk_r>
 8004ed8:	6030      	str	r0, [r6, #0]
 8004eda:	4621      	mov	r1, r4
 8004edc:	4628      	mov	r0, r5
 8004ede:	f000 f8b7 	bl	8005050 <_sbrk_r>
 8004ee2:	1c43      	adds	r3, r0, #1
 8004ee4:	d00a      	beq.n	8004efc <sbrk_aligned+0x34>
 8004ee6:	1cc4      	adds	r4, r0, #3
 8004ee8:	f024 0403 	bic.w	r4, r4, #3
 8004eec:	42a0      	cmp	r0, r4
 8004eee:	d007      	beq.n	8004f00 <sbrk_aligned+0x38>
 8004ef0:	1a21      	subs	r1, r4, r0
 8004ef2:	4628      	mov	r0, r5
 8004ef4:	f000 f8ac 	bl	8005050 <_sbrk_r>
 8004ef8:	3001      	adds	r0, #1
 8004efa:	d101      	bne.n	8004f00 <sbrk_aligned+0x38>
 8004efc:	f04f 34ff 	mov.w	r4, #4294967295
 8004f00:	4620      	mov	r0, r4
 8004f02:	bd70      	pop	{r4, r5, r6, pc}
 8004f04:	20000558 	.word	0x20000558

08004f08 <_malloc_r>:
 8004f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004f0c:	1ccd      	adds	r5, r1, #3
 8004f0e:	f025 0503 	bic.w	r5, r5, #3
 8004f12:	3508      	adds	r5, #8
 8004f14:	2d0c      	cmp	r5, #12
 8004f16:	bf38      	it	cc
 8004f18:	250c      	movcc	r5, #12
 8004f1a:	2d00      	cmp	r5, #0
 8004f1c:	4607      	mov	r7, r0
 8004f1e:	db01      	blt.n	8004f24 <_malloc_r+0x1c>
 8004f20:	42a9      	cmp	r1, r5
 8004f22:	d905      	bls.n	8004f30 <_malloc_r+0x28>
 8004f24:	230c      	movs	r3, #12
 8004f26:	2600      	movs	r6, #0
 8004f28:	603b      	str	r3, [r7, #0]
 8004f2a:	4630      	mov	r0, r6
 8004f2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004f30:	4e2e      	ldr	r6, [pc, #184]	; (8004fec <_malloc_r+0xe4>)
 8004f32:	f000 f89d 	bl	8005070 <__malloc_lock>
 8004f36:	6833      	ldr	r3, [r6, #0]
 8004f38:	461c      	mov	r4, r3
 8004f3a:	bb34      	cbnz	r4, 8004f8a <_malloc_r+0x82>
 8004f3c:	4629      	mov	r1, r5
 8004f3e:	4638      	mov	r0, r7
 8004f40:	f7ff ffc2 	bl	8004ec8 <sbrk_aligned>
 8004f44:	1c43      	adds	r3, r0, #1
 8004f46:	4604      	mov	r4, r0
 8004f48:	d14d      	bne.n	8004fe6 <_malloc_r+0xde>
 8004f4a:	6834      	ldr	r4, [r6, #0]
 8004f4c:	4626      	mov	r6, r4
 8004f4e:	2e00      	cmp	r6, #0
 8004f50:	d140      	bne.n	8004fd4 <_malloc_r+0xcc>
 8004f52:	6823      	ldr	r3, [r4, #0]
 8004f54:	4631      	mov	r1, r6
 8004f56:	4638      	mov	r0, r7
 8004f58:	eb04 0803 	add.w	r8, r4, r3
 8004f5c:	f000 f878 	bl	8005050 <_sbrk_r>
 8004f60:	4580      	cmp	r8, r0
 8004f62:	d13a      	bne.n	8004fda <_malloc_r+0xd2>
 8004f64:	6821      	ldr	r1, [r4, #0]
 8004f66:	3503      	adds	r5, #3
 8004f68:	1a6d      	subs	r5, r5, r1
 8004f6a:	f025 0503 	bic.w	r5, r5, #3
 8004f6e:	3508      	adds	r5, #8
 8004f70:	2d0c      	cmp	r5, #12
 8004f72:	bf38      	it	cc
 8004f74:	250c      	movcc	r5, #12
 8004f76:	4638      	mov	r0, r7
 8004f78:	4629      	mov	r1, r5
 8004f7a:	f7ff ffa5 	bl	8004ec8 <sbrk_aligned>
 8004f7e:	3001      	adds	r0, #1
 8004f80:	d02b      	beq.n	8004fda <_malloc_r+0xd2>
 8004f82:	6823      	ldr	r3, [r4, #0]
 8004f84:	442b      	add	r3, r5
 8004f86:	6023      	str	r3, [r4, #0]
 8004f88:	e00e      	b.n	8004fa8 <_malloc_r+0xa0>
 8004f8a:	6822      	ldr	r2, [r4, #0]
 8004f8c:	1b52      	subs	r2, r2, r5
 8004f8e:	d41e      	bmi.n	8004fce <_malloc_r+0xc6>
 8004f90:	2a0b      	cmp	r2, #11
 8004f92:	d916      	bls.n	8004fc2 <_malloc_r+0xba>
 8004f94:	1961      	adds	r1, r4, r5
 8004f96:	42a3      	cmp	r3, r4
 8004f98:	6025      	str	r5, [r4, #0]
 8004f9a:	bf18      	it	ne
 8004f9c:	6059      	strne	r1, [r3, #4]
 8004f9e:	6863      	ldr	r3, [r4, #4]
 8004fa0:	bf08      	it	eq
 8004fa2:	6031      	streq	r1, [r6, #0]
 8004fa4:	5162      	str	r2, [r4, r5]
 8004fa6:	604b      	str	r3, [r1, #4]
 8004fa8:	4638      	mov	r0, r7
 8004faa:	f104 060b 	add.w	r6, r4, #11
 8004fae:	f000 f865 	bl	800507c <__malloc_unlock>
 8004fb2:	f026 0607 	bic.w	r6, r6, #7
 8004fb6:	1d23      	adds	r3, r4, #4
 8004fb8:	1af2      	subs	r2, r6, r3
 8004fba:	d0b6      	beq.n	8004f2a <_malloc_r+0x22>
 8004fbc:	1b9b      	subs	r3, r3, r6
 8004fbe:	50a3      	str	r3, [r4, r2]
 8004fc0:	e7b3      	b.n	8004f2a <_malloc_r+0x22>
 8004fc2:	6862      	ldr	r2, [r4, #4]
 8004fc4:	42a3      	cmp	r3, r4
 8004fc6:	bf0c      	ite	eq
 8004fc8:	6032      	streq	r2, [r6, #0]
 8004fca:	605a      	strne	r2, [r3, #4]
 8004fcc:	e7ec      	b.n	8004fa8 <_malloc_r+0xa0>
 8004fce:	4623      	mov	r3, r4
 8004fd0:	6864      	ldr	r4, [r4, #4]
 8004fd2:	e7b2      	b.n	8004f3a <_malloc_r+0x32>
 8004fd4:	4634      	mov	r4, r6
 8004fd6:	6876      	ldr	r6, [r6, #4]
 8004fd8:	e7b9      	b.n	8004f4e <_malloc_r+0x46>
 8004fda:	230c      	movs	r3, #12
 8004fdc:	4638      	mov	r0, r7
 8004fde:	603b      	str	r3, [r7, #0]
 8004fe0:	f000 f84c 	bl	800507c <__malloc_unlock>
 8004fe4:	e7a1      	b.n	8004f2a <_malloc_r+0x22>
 8004fe6:	6025      	str	r5, [r4, #0]
 8004fe8:	e7de      	b.n	8004fa8 <_malloc_r+0xa0>
 8004fea:	bf00      	nop
 8004fec:	20000554 	.word	0x20000554

08004ff0 <_realloc_r>:
 8004ff0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ff4:	4680      	mov	r8, r0
 8004ff6:	4614      	mov	r4, r2
 8004ff8:	460e      	mov	r6, r1
 8004ffa:	b921      	cbnz	r1, 8005006 <_realloc_r+0x16>
 8004ffc:	4611      	mov	r1, r2
 8004ffe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005002:	f7ff bf81 	b.w	8004f08 <_malloc_r>
 8005006:	b92a      	cbnz	r2, 8005014 <_realloc_r+0x24>
 8005008:	f7ff ff16 	bl	8004e38 <_free_r>
 800500c:	4625      	mov	r5, r4
 800500e:	4628      	mov	r0, r5
 8005010:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005014:	f000 f838 	bl	8005088 <_malloc_usable_size_r>
 8005018:	4284      	cmp	r4, r0
 800501a:	4607      	mov	r7, r0
 800501c:	d802      	bhi.n	8005024 <_realloc_r+0x34>
 800501e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8005022:	d812      	bhi.n	800504a <_realloc_r+0x5a>
 8005024:	4621      	mov	r1, r4
 8005026:	4640      	mov	r0, r8
 8005028:	f7ff ff6e 	bl	8004f08 <_malloc_r>
 800502c:	4605      	mov	r5, r0
 800502e:	2800      	cmp	r0, #0
 8005030:	d0ed      	beq.n	800500e <_realloc_r+0x1e>
 8005032:	42bc      	cmp	r4, r7
 8005034:	4622      	mov	r2, r4
 8005036:	4631      	mov	r1, r6
 8005038:	bf28      	it	cs
 800503a:	463a      	movcs	r2, r7
 800503c:	f7ff fed4 	bl	8004de8 <memcpy>
 8005040:	4631      	mov	r1, r6
 8005042:	4640      	mov	r0, r8
 8005044:	f7ff fef8 	bl	8004e38 <_free_r>
 8005048:	e7e1      	b.n	800500e <_realloc_r+0x1e>
 800504a:	4635      	mov	r5, r6
 800504c:	e7df      	b.n	800500e <_realloc_r+0x1e>
	...

08005050 <_sbrk_r>:
 8005050:	b538      	push	{r3, r4, r5, lr}
 8005052:	2300      	movs	r3, #0
 8005054:	4d05      	ldr	r5, [pc, #20]	; (800506c <_sbrk_r+0x1c>)
 8005056:	4604      	mov	r4, r0
 8005058:	4608      	mov	r0, r1
 800505a:	602b      	str	r3, [r5, #0]
 800505c:	f7fb ff48 	bl	8000ef0 <_sbrk>
 8005060:	1c43      	adds	r3, r0, #1
 8005062:	d102      	bne.n	800506a <_sbrk_r+0x1a>
 8005064:	682b      	ldr	r3, [r5, #0]
 8005066:	b103      	cbz	r3, 800506a <_sbrk_r+0x1a>
 8005068:	6023      	str	r3, [r4, #0]
 800506a:	bd38      	pop	{r3, r4, r5, pc}
 800506c:	2000055c 	.word	0x2000055c

08005070 <__malloc_lock>:
 8005070:	4801      	ldr	r0, [pc, #4]	; (8005078 <__malloc_lock+0x8>)
 8005072:	f000 b811 	b.w	8005098 <__retarget_lock_acquire_recursive>
 8005076:	bf00      	nop
 8005078:	20000560 	.word	0x20000560

0800507c <__malloc_unlock>:
 800507c:	4801      	ldr	r0, [pc, #4]	; (8005084 <__malloc_unlock+0x8>)
 800507e:	f000 b80c 	b.w	800509a <__retarget_lock_release_recursive>
 8005082:	bf00      	nop
 8005084:	20000560 	.word	0x20000560

08005088 <_malloc_usable_size_r>:
 8005088:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800508c:	1f18      	subs	r0, r3, #4
 800508e:	2b00      	cmp	r3, #0
 8005090:	bfbc      	itt	lt
 8005092:	580b      	ldrlt	r3, [r1, r0]
 8005094:	18c0      	addlt	r0, r0, r3
 8005096:	4770      	bx	lr

08005098 <__retarget_lock_acquire_recursive>:
 8005098:	4770      	bx	lr

0800509a <__retarget_lock_release_recursive>:
 800509a:	4770      	bx	lr

0800509c <_init>:
 800509c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800509e:	bf00      	nop
 80050a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80050a2:	bc08      	pop	{r3}
 80050a4:	469e      	mov	lr, r3
 80050a6:	4770      	bx	lr

080050a8 <_fini>:
 80050a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050aa:	bf00      	nop
 80050ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80050ae:	bc08      	pop	{r3}
 80050b0:	469e      	mov	lr, r3
 80050b2:	4770      	bx	lr
