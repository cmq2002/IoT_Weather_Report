
i2cDevice.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008090  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000594  080081a0  080081a0  000181a0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008734  08008734  000201dc  2**0
                  CONTENTS
  4 .ARM          00000000  08008734  08008734  000201dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  08008734  08008734  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008734  08008734  00018734  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008738  08008738  00018738  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  0800873c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000004e0  200001dc  08008918  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200006bc  08008918  000206bc  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00010369  00000000  00000000  00020205  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000028a7  00000000  00000000  0003056e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001140  00000000  00000000  00032e18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001040  00000000  00000000  00033f58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019bbf  00000000  00000000  00034f98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00013b0a  00000000  00000000  0004eb57  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008e5b8  00000000  00000000  00062661  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f0c19  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000059cc  00000000  00000000  000f0c6c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001dc 	.word	0x200001dc
 800012c:	00000000 	.word	0x00000000
 8000130:	08008188 	.word	0x08008188

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001e0 	.word	0x200001e0
 800014c:	08008188 	.word	0x08008188

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <dht20_init>:
#define SLAVE_ADDRESS_DHT20 (0x38 << 1)

uint16_t value_x10[2] = {0, 0};
char temp[20], humid[20];

void dht20_init(){
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b084      	sub	sp, #16
 8000a8c:	af02      	add	r7, sp, #8
	//Set register when call a wrong reset
	uint8_t init[3];

	init[0] = 0xA8;
 8000a8e:	23a8      	movs	r3, #168	; 0xa8
 8000a90:	713b      	strb	r3, [r7, #4]
	init[1] = 0x00;
 8000a92:	2300      	movs	r3, #0
 8000a94:	717b      	strb	r3, [r7, #5]
	init[2] = 0x00;
 8000a96:	2300      	movs	r3, #0
 8000a98:	71bb      	strb	r3, [r7, #6]
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) init, 3, 0xFF);
 8000a9a:	1d3a      	adds	r2, r7, #4
 8000a9c:	23ff      	movs	r3, #255	; 0xff
 8000a9e:	9300      	str	r3, [sp, #0]
 8000aa0:	2303      	movs	r3, #3
 8000aa2:	2170      	movs	r1, #112	; 0x70
 8000aa4:	480d      	ldr	r0, [pc, #52]	; (8000adc <dht20_init+0x54>)
 8000aa6:	f001 ff2d 	bl	8002904 <HAL_I2C_Master_Transmit>
	HAL_Delay(20);
 8000aaa:	2014      	movs	r0, #20
 8000aac:	f001 fa68 	bl	8001f80 <HAL_Delay>

	init[0] = 0xBE;
 8000ab0:	23be      	movs	r3, #190	; 0xbe
 8000ab2:	713b      	strb	r3, [r7, #4]
	init[1] = 0x08;
 8000ab4:	2308      	movs	r3, #8
 8000ab6:	717b      	strb	r3, [r7, #5]
	init[2] = 0x00;
 8000ab8:	2300      	movs	r3, #0
 8000aba:	71bb      	strb	r3, [r7, #6]
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) init, 3, 0xFF);
 8000abc:	1d3a      	adds	r2, r7, #4
 8000abe:	23ff      	movs	r3, #255	; 0xff
 8000ac0:	9300      	str	r3, [sp, #0]
 8000ac2:	2303      	movs	r3, #3
 8000ac4:	2170      	movs	r1, #112	; 0x70
 8000ac6:	4805      	ldr	r0, [pc, #20]	; (8000adc <dht20_init+0x54>)
 8000ac8:	f001 ff1c 	bl	8002904 <HAL_I2C_Master_Transmit>
	HAL_Delay(20);
 8000acc:	2014      	movs	r0, #20
 8000ace:	f001 fa57 	bl	8001f80 <HAL_Delay>
}
 8000ad2:	bf00      	nop
 8000ad4:	3708      	adds	r7, #8
 8000ad6:	46bd      	mov	sp, r7
 8000ad8:	bd80      	pop	{r7, pc}
 8000ada:	bf00      	nop
 8000adc:	20000224 	.word	0x20000224

08000ae0 <dht20_reset>:

void dht20_reset(uint8_t regist){
 8000ae0:	b580      	push	{r7, lr}
 8000ae2:	b086      	sub	sp, #24
 8000ae4:	af02      	add	r7, sp, #8
 8000ae6:	4603      	mov	r3, r0
 8000ae8:	71fb      	strb	r3, [r7, #7]
	//reset register
	uint8_t reset[3], reply[3];

	reset[0] = regist;
 8000aea:	79fb      	ldrb	r3, [r7, #7]
 8000aec:	733b      	strb	r3, [r7, #12]
	reset[1] = 0x00;
 8000aee:	2300      	movs	r3, #0
 8000af0:	737b      	strb	r3, [r7, #13]
	reset[2] = 0x00;
 8000af2:	2300      	movs	r3, #0
 8000af4:	73bb      	strb	r3, [r7, #14]
 	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) reset, 3, 0xFF);
 8000af6:	f107 020c 	add.w	r2, r7, #12
 8000afa:	23ff      	movs	r3, #255	; 0xff
 8000afc:	9300      	str	r3, [sp, #0]
 8000afe:	2303      	movs	r3, #3
 8000b00:	2170      	movs	r1, #112	; 0x70
 8000b02:	4814      	ldr	r0, [pc, #80]	; (8000b54 <dht20_reset+0x74>)
 8000b04:	f001 fefe 	bl	8002904 <HAL_I2C_Master_Transmit>
	HAL_Delay(10);
 8000b08:	200a      	movs	r0, #10
 8000b0a:	f001 fa39 	bl	8001f80 <HAL_Delay>

	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) reply, 3, 0xFF);
 8000b0e:	f107 0208 	add.w	r2, r7, #8
 8000b12:	23ff      	movs	r3, #255	; 0xff
 8000b14:	9300      	str	r3, [sp, #0]
 8000b16:	2303      	movs	r3, #3
 8000b18:	2171      	movs	r1, #113	; 0x71
 8000b1a:	480e      	ldr	r0, [pc, #56]	; (8000b54 <dht20_reset+0x74>)
 8000b1c:	f001 fff0 	bl	8002b00 <HAL_I2C_Master_Receive>
	reset[0] = 0xB0 | regist;
 8000b20:	79fb      	ldrb	r3, [r7, #7]
 8000b22:	f063 034f 	orn	r3, r3, #79	; 0x4f
 8000b26:	b2db      	uxtb	r3, r3
 8000b28:	733b      	strb	r3, [r7, #12]
	reset[1] = reply[1];
 8000b2a:	7a7b      	ldrb	r3, [r7, #9]
 8000b2c:	737b      	strb	r3, [r7, #13]
	reset[2] = reply[2];
 8000b2e:	7abb      	ldrb	r3, [r7, #10]
 8000b30:	73bb      	strb	r3, [r7, #14]
	HAL_Delay(10);
 8000b32:	200a      	movs	r0, #10
 8000b34:	f001 fa24 	bl	8001f80 <HAL_Delay>

	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) reset, 3, 0xFF);
 8000b38:	f107 020c 	add.w	r2, r7, #12
 8000b3c:	23ff      	movs	r3, #255	; 0xff
 8000b3e:	9300      	str	r3, [sp, #0]
 8000b40:	2303      	movs	r3, #3
 8000b42:	2170      	movs	r1, #112	; 0x70
 8000b44:	4803      	ldr	r0, [pc, #12]	; (8000b54 <dht20_reset+0x74>)
 8000b46:	f001 fedd 	bl	8002904 <HAL_I2C_Master_Transmit>
}
 8000b4a:	bf00      	nop
 8000b4c:	3710      	adds	r7, #16
 8000b4e:	46bd      	mov	sp, r7
 8000b50:	bd80      	pop	{r7, pc}
 8000b52:	bf00      	nop
 8000b54:	20000224 	.word	0x20000224

08000b58 <dht20_start>:

void dht20_start(){
 8000b58:	b580      	push	{r7, lr}
 8000b5a:	b084      	sub	sp, #16
 8000b5c:	af02      	add	r7, sp, #8
	//query the DHT20
	uint8_t status[1];
	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) status, 1, 0xFF);
 8000b5e:	1d3a      	adds	r2, r7, #4
 8000b60:	23ff      	movs	r3, #255	; 0xff
 8000b62:	9300      	str	r3, [sp, #0]
 8000b64:	2301      	movs	r3, #1
 8000b66:	2171      	movs	r1, #113	; 0x71
 8000b68:	481b      	ldr	r0, [pc, #108]	; (8000bd8 <dht20_start+0x80>)
 8000b6a:	f001 ffc9 	bl	8002b00 <HAL_I2C_Master_Receive>

	if((status[0] & 0x18) != 0x18){
 8000b6e:	793b      	ldrb	r3, [r7, #4]
 8000b70:	f003 0318 	and.w	r3, r3, #24
 8000b74:	2b18      	cmp	r3, #24
 8000b76:	d00d      	beq.n	8000b94 <dht20_start+0x3c>
		dht20_reset(0x1B);
 8000b78:	201b      	movs	r0, #27
 8000b7a:	f7ff ffb1 	bl	8000ae0 <dht20_reset>
		dht20_reset(0x1C);
 8000b7e:	201c      	movs	r0, #28
 8000b80:	f7ff ffae 	bl	8000ae0 <dht20_reset>
		dht20_reset(0x1E);
 8000b84:	201e      	movs	r0, #30
 8000b86:	f7ff ffab 	bl	8000ae0 <dht20_reset>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, RESET);
 8000b8a:	2200      	movs	r2, #0
 8000b8c:	2102      	movs	r1, #2
 8000b8e:	4813      	ldr	r0, [pc, #76]	; (8000bdc <dht20_start+0x84>)
 8000b90:	f001 fd5c 	bl	800264c <HAL_GPIO_WritePin>
	}

	if ((status[0] & 0x18) == 0x18){
 8000b94:	793b      	ldrb	r3, [r7, #4]
 8000b96:	f003 0318 	and.w	r3, r3, #24
 8000b9a:	2b18      	cmp	r3, #24
 8000b9c:	d104      	bne.n	8000ba8 <dht20_start+0x50>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, SET);
 8000b9e:	2201      	movs	r2, #1
 8000ba0:	2102      	movs	r1, #2
 8000ba2:	480e      	ldr	r0, [pc, #56]	; (8000bdc <dht20_start+0x84>)
 8000ba4:	f001 fd52 	bl	800264c <HAL_GPIO_WritePin>
	}

	uint8_t data[3] = {0xAC, 0x33, 0x00};
 8000ba8:	4a0d      	ldr	r2, [pc, #52]	; (8000be0 <dht20_start+0x88>)
 8000baa:	463b      	mov	r3, r7
 8000bac:	6812      	ldr	r2, [r2, #0]
 8000bae:	4611      	mov	r1, r2
 8000bb0:	8019      	strh	r1, [r3, #0]
 8000bb2:	3302      	adds	r3, #2
 8000bb4:	0c12      	lsrs	r2, r2, #16
 8000bb6:	701a      	strb	r2, [r3, #0]

	//HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) trigger, 1, 0xFF);
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) data, 3, 0xFF);
 8000bb8:	463a      	mov	r2, r7
 8000bba:	23ff      	movs	r3, #255	; 0xff
 8000bbc:	9300      	str	r3, [sp, #0]
 8000bbe:	2303      	movs	r3, #3
 8000bc0:	2170      	movs	r1, #112	; 0x70
 8000bc2:	4805      	ldr	r0, [pc, #20]	; (8000bd8 <dht20_start+0x80>)
 8000bc4:	f001 fe9e 	bl	8002904 <HAL_I2C_Master_Transmit>
	HAL_Delay(80);
 8000bc8:	2050      	movs	r0, #80	; 0x50
 8000bca:	f001 f9d9 	bl	8001f80 <HAL_Delay>
}
 8000bce:	bf00      	nop
 8000bd0:	3708      	adds	r7, #8
 8000bd2:	46bd      	mov	sp, r7
 8000bd4:	bd80      	pop	{r7, pc}
 8000bd6:	bf00      	nop
 8000bd8:	20000224 	.word	0x20000224
 8000bdc:	40010800 	.word	0x40010800
 8000be0:	080081a0 	.word	0x080081a0

08000be4 <dht20_read>:

void dht20_read(uint16_t* value){
 8000be4:	b580      	push	{r7, lr}
 8000be6:	b088      	sub	sp, #32
 8000be8:	af02      	add	r7, sp, #8
 8000bea:	6078      	str	r0, [r7, #4]
	dht20_start();
 8000bec:	f7ff ffb4 	bl	8000b58 <dht20_start>
	uint8_t data[7];
	uint32_t Temper = 0, Humid = 0;
 8000bf0:	2300      	movs	r3, #0
 8000bf2:	617b      	str	r3, [r7, #20]
 8000bf4:	2300      	movs	r3, #0
 8000bf6:	613b      	str	r3, [r7, #16]
	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) data, 7, 0xFF);
 8000bf8:	f107 0208 	add.w	r2, r7, #8
 8000bfc:	23ff      	movs	r3, #255	; 0xff
 8000bfe:	9300      	str	r3, [sp, #0]
 8000c00:	2307      	movs	r3, #7
 8000c02:	2171      	movs	r1, #113	; 0x71
 8000c04:	4824      	ldr	r0, [pc, #144]	; (8000c98 <dht20_read+0xb4>)
 8000c06:	f001 ff7b 	bl	8002b00 <HAL_I2C_Master_Receive>

	//Humid
	Humid = (Humid | data[1]) << 8;
 8000c0a:	7a7b      	ldrb	r3, [r7, #9]
 8000c0c:	461a      	mov	r2, r3
 8000c0e:	693b      	ldr	r3, [r7, #16]
 8000c10:	4313      	orrs	r3, r2
 8000c12:	021b      	lsls	r3, r3, #8
 8000c14:	613b      	str	r3, [r7, #16]
	Humid = (Humid | data[2]) << 8;
 8000c16:	7abb      	ldrb	r3, [r7, #10]
 8000c18:	461a      	mov	r2, r3
 8000c1a:	693b      	ldr	r3, [r7, #16]
 8000c1c:	4313      	orrs	r3, r2
 8000c1e:	021b      	lsls	r3, r3, #8
 8000c20:	613b      	str	r3, [r7, #16]
	Humid = Humid | data[3];
 8000c22:	7afb      	ldrb	r3, [r7, #11]
 8000c24:	461a      	mov	r2, r3
 8000c26:	693b      	ldr	r3, [r7, #16]
 8000c28:	4313      	orrs	r3, r2
 8000c2a:	613b      	str	r3, [r7, #16]
	Humid = Humid >> 4;
 8000c2c:	693b      	ldr	r3, [r7, #16]
 8000c2e:	091b      	lsrs	r3, r3, #4
 8000c30:	613b      	str	r3, [r7, #16]
    Humid = (Humid * 100 * 10 / 1024 / 1024);
 8000c32:	693b      	ldr	r3, [r7, #16]
 8000c34:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8000c38:	fb02 f303 	mul.w	r3, r2, r3
 8000c3c:	0d1b      	lsrs	r3, r3, #20
 8000c3e:	613b      	str	r3, [r7, #16]
    value[0] = Humid;
 8000c40:	693b      	ldr	r3, [r7, #16]
 8000c42:	b29a      	uxth	r2, r3
 8000c44:	687b      	ldr	r3, [r7, #4]
 8000c46:	801a      	strh	r2, [r3, #0]

	//Temperature
    Temper = (Temper | data[3]) << 8;
 8000c48:	7afb      	ldrb	r3, [r7, #11]
 8000c4a:	461a      	mov	r2, r3
 8000c4c:	697b      	ldr	r3, [r7, #20]
 8000c4e:	4313      	orrs	r3, r2
 8000c50:	021b      	lsls	r3, r3, #8
 8000c52:	617b      	str	r3, [r7, #20]
    Temper = (Temper | data[4]) << 8;
 8000c54:	7b3b      	ldrb	r3, [r7, #12]
 8000c56:	461a      	mov	r2, r3
 8000c58:	697b      	ldr	r3, [r7, #20]
 8000c5a:	4313      	orrs	r3, r2
 8000c5c:	021b      	lsls	r3, r3, #8
 8000c5e:	617b      	str	r3, [r7, #20]
    Temper = Temper | data[5];
 8000c60:	7b7b      	ldrb	r3, [r7, #13]
 8000c62:	461a      	mov	r2, r3
 8000c64:	697b      	ldr	r3, [r7, #20]
 8000c66:	4313      	orrs	r3, r2
 8000c68:	617b      	str	r3, [r7, #20]
    Temper = Temper & 0xfffff;
 8000c6a:	697b      	ldr	r3, [r7, #20]
 8000c6c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8000c70:	617b      	str	r3, [r7, #20]
    Temper = Temper*200*10/1024/1024 - 500;
 8000c72:	697b      	ldr	r3, [r7, #20]
 8000c74:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 8000c78:	fb02 f303 	mul.w	r3, r2, r3
 8000c7c:	0d1b      	lsrs	r3, r3, #20
 8000c7e:	f5a3 73fa 	sub.w	r3, r3, #500	; 0x1f4
 8000c82:	617b      	str	r3, [r7, #20]
	value[1] = Temper;
 8000c84:	687b      	ldr	r3, [r7, #4]
 8000c86:	3302      	adds	r3, #2
 8000c88:	697a      	ldr	r2, [r7, #20]
 8000c8a:	b292      	uxth	r2, r2
 8000c8c:	801a      	strh	r2, [r3, #0]

}
 8000c8e:	bf00      	nop
 8000c90:	3718      	adds	r7, #24
 8000c92:	46bd      	mov	sp, r7
 8000c94:	bd80      	pop	{r7, pc}
 8000c96:	bf00      	nop
 8000c98:	20000224 	.word	0x20000224

08000c9c <dht20_output>:

void dht20_output(){
 8000c9c:	b590      	push	{r4, r7, lr}
 8000c9e:	b095      	sub	sp, #84	; 0x54
 8000ca0:	af02      	add	r7, sp, #8
	dht20_read(value_x10);
 8000ca2:	486a      	ldr	r0, [pc, #424]	; (8000e4c <dht20_output+0x1b0>)
 8000ca4:	f7ff ff9e 	bl	8000be4 <dht20_read>
	char msg[64];
	uint32_t checkSum = 0;
 8000ca8:	2300      	movs	r3, #0
 8000caa:	647b      	str	r3, [r7, #68]	; 0x44
	//Checksum temp and publish
	checkSum = msgCheckSum(&msg[0], sprintf(msg, "!TEMP:%d.%d#",value_x10[1]/10,value_x10[1]%10));
 8000cac:	4b67      	ldr	r3, [pc, #412]	; (8000e4c <dht20_output+0x1b0>)
 8000cae:	885b      	ldrh	r3, [r3, #2]
 8000cb0:	4a67      	ldr	r2, [pc, #412]	; (8000e50 <dht20_output+0x1b4>)
 8000cb2:	fba2 2303 	umull	r2, r3, r2, r3
 8000cb6:	08db      	lsrs	r3, r3, #3
 8000cb8:	b29b      	uxth	r3, r3
 8000cba:	461c      	mov	r4, r3
 8000cbc:	4b63      	ldr	r3, [pc, #396]	; (8000e4c <dht20_output+0x1b0>)
 8000cbe:	885a      	ldrh	r2, [r3, #2]
 8000cc0:	4b63      	ldr	r3, [pc, #396]	; (8000e50 <dht20_output+0x1b4>)
 8000cc2:	fba3 1302 	umull	r1, r3, r3, r2
 8000cc6:	08d9      	lsrs	r1, r3, #3
 8000cc8:	460b      	mov	r3, r1
 8000cca:	009b      	lsls	r3, r3, #2
 8000ccc:	440b      	add	r3, r1
 8000cce:	005b      	lsls	r3, r3, #1
 8000cd0:	1ad3      	subs	r3, r2, r3
 8000cd2:	b29b      	uxth	r3, r3
 8000cd4:	1d38      	adds	r0, r7, #4
 8000cd6:	4622      	mov	r2, r4
 8000cd8:	495e      	ldr	r1, [pc, #376]	; (8000e54 <dht20_output+0x1b8>)
 8000cda:	f004 ffdd 	bl	8005c98 <siprintf>
 8000cde:	4603      	mov	r3, r0
 8000ce0:	461a      	mov	r2, r3
 8000ce2:	1d3b      	adds	r3, r7, #4
 8000ce4:	4611      	mov	r1, r2
 8000ce6:	4618      	mov	r0, r3
 8000ce8:	f000 ffd0 	bl	8001c8c <msgCheckSum>
 8000cec:	6478      	str	r0, [r7, #68]	; 0x44
	sprintf(msg, "!TEMP:%d.%d:%lu#",value_x10[1]/10,value_x10[1]%10,checkSum);
 8000cee:	4b57      	ldr	r3, [pc, #348]	; (8000e4c <dht20_output+0x1b0>)
 8000cf0:	885b      	ldrh	r3, [r3, #2]
 8000cf2:	4a57      	ldr	r2, [pc, #348]	; (8000e50 <dht20_output+0x1b4>)
 8000cf4:	fba2 2303 	umull	r2, r3, r2, r3
 8000cf8:	08db      	lsrs	r3, r3, #3
 8000cfa:	b29b      	uxth	r3, r3
 8000cfc:	461c      	mov	r4, r3
 8000cfe:	4b53      	ldr	r3, [pc, #332]	; (8000e4c <dht20_output+0x1b0>)
 8000d00:	885a      	ldrh	r2, [r3, #2]
 8000d02:	4b53      	ldr	r3, [pc, #332]	; (8000e50 <dht20_output+0x1b4>)
 8000d04:	fba3 1302 	umull	r1, r3, r3, r2
 8000d08:	08d9      	lsrs	r1, r3, #3
 8000d0a:	460b      	mov	r3, r1
 8000d0c:	009b      	lsls	r3, r3, #2
 8000d0e:	440b      	add	r3, r1
 8000d10:	005b      	lsls	r3, r3, #1
 8000d12:	1ad3      	subs	r3, r2, r3
 8000d14:	b29b      	uxth	r3, r3
 8000d16:	461a      	mov	r2, r3
 8000d18:	1d38      	adds	r0, r7, #4
 8000d1a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000d1c:	9300      	str	r3, [sp, #0]
 8000d1e:	4613      	mov	r3, r2
 8000d20:	4622      	mov	r2, r4
 8000d22:	494d      	ldr	r1, [pc, #308]	; (8000e58 <dht20_output+0x1bc>)
 8000d24:	f004 ffb8 	bl	8005c98 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 1000);
 8000d28:	1d3b      	adds	r3, r7, #4
 8000d2a:	4618      	mov	r0, r3
 8000d2c:	f7ff fa10 	bl	8000150 <strlen>
 8000d30:	4603      	mov	r3, r0
 8000d32:	b29a      	uxth	r2, r3
 8000d34:	1d39      	adds	r1, r7, #4
 8000d36:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000d3a:	4848      	ldr	r0, [pc, #288]	; (8000e5c <dht20_output+0x1c0>)
 8000d3c:	f003 fdfb 	bl	8004936 <HAL_UART_Transmit>
	//Checksum humid and publish
	checkSum = msgCheckSum(&msg[0], sprintf(msg, "!HUMID:%01d.%d#",value_x10[0]/10,value_x10[0]%10));
 8000d40:	4b42      	ldr	r3, [pc, #264]	; (8000e4c <dht20_output+0x1b0>)
 8000d42:	881b      	ldrh	r3, [r3, #0]
 8000d44:	4a42      	ldr	r2, [pc, #264]	; (8000e50 <dht20_output+0x1b4>)
 8000d46:	fba2 2303 	umull	r2, r3, r2, r3
 8000d4a:	08db      	lsrs	r3, r3, #3
 8000d4c:	b29b      	uxth	r3, r3
 8000d4e:	461c      	mov	r4, r3
 8000d50:	4b3e      	ldr	r3, [pc, #248]	; (8000e4c <dht20_output+0x1b0>)
 8000d52:	881a      	ldrh	r2, [r3, #0]
 8000d54:	4b3e      	ldr	r3, [pc, #248]	; (8000e50 <dht20_output+0x1b4>)
 8000d56:	fba3 1302 	umull	r1, r3, r3, r2
 8000d5a:	08d9      	lsrs	r1, r3, #3
 8000d5c:	460b      	mov	r3, r1
 8000d5e:	009b      	lsls	r3, r3, #2
 8000d60:	440b      	add	r3, r1
 8000d62:	005b      	lsls	r3, r3, #1
 8000d64:	1ad3      	subs	r3, r2, r3
 8000d66:	b29b      	uxth	r3, r3
 8000d68:	1d38      	adds	r0, r7, #4
 8000d6a:	4622      	mov	r2, r4
 8000d6c:	493c      	ldr	r1, [pc, #240]	; (8000e60 <dht20_output+0x1c4>)
 8000d6e:	f004 ff93 	bl	8005c98 <siprintf>
 8000d72:	4603      	mov	r3, r0
 8000d74:	461a      	mov	r2, r3
 8000d76:	1d3b      	adds	r3, r7, #4
 8000d78:	4611      	mov	r1, r2
 8000d7a:	4618      	mov	r0, r3
 8000d7c:	f000 ff86 	bl	8001c8c <msgCheckSum>
 8000d80:	6478      	str	r0, [r7, #68]	; 0x44
	sprintf(msg, "!HUMID:%01d.%d:%lu#",value_x10[0]/10,value_x10[0]%10,checkSum);
 8000d82:	4b32      	ldr	r3, [pc, #200]	; (8000e4c <dht20_output+0x1b0>)
 8000d84:	881b      	ldrh	r3, [r3, #0]
 8000d86:	4a32      	ldr	r2, [pc, #200]	; (8000e50 <dht20_output+0x1b4>)
 8000d88:	fba2 2303 	umull	r2, r3, r2, r3
 8000d8c:	08db      	lsrs	r3, r3, #3
 8000d8e:	b29b      	uxth	r3, r3
 8000d90:	461c      	mov	r4, r3
 8000d92:	4b2e      	ldr	r3, [pc, #184]	; (8000e4c <dht20_output+0x1b0>)
 8000d94:	881a      	ldrh	r2, [r3, #0]
 8000d96:	4b2e      	ldr	r3, [pc, #184]	; (8000e50 <dht20_output+0x1b4>)
 8000d98:	fba3 1302 	umull	r1, r3, r3, r2
 8000d9c:	08d9      	lsrs	r1, r3, #3
 8000d9e:	460b      	mov	r3, r1
 8000da0:	009b      	lsls	r3, r3, #2
 8000da2:	440b      	add	r3, r1
 8000da4:	005b      	lsls	r3, r3, #1
 8000da6:	1ad3      	subs	r3, r2, r3
 8000da8:	b29b      	uxth	r3, r3
 8000daa:	461a      	mov	r2, r3
 8000dac:	1d38      	adds	r0, r7, #4
 8000dae:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000db0:	9300      	str	r3, [sp, #0]
 8000db2:	4613      	mov	r3, r2
 8000db4:	4622      	mov	r2, r4
 8000db6:	492b      	ldr	r1, [pc, #172]	; (8000e64 <dht20_output+0x1c8>)
 8000db8:	f004 ff6e 	bl	8005c98 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 1000);
 8000dbc:	1d3b      	adds	r3, r7, #4
 8000dbe:	4618      	mov	r0, r3
 8000dc0:	f7ff f9c6 	bl	8000150 <strlen>
 8000dc4:	4603      	mov	r3, r0
 8000dc6:	b29a      	uxth	r2, r3
 8000dc8:	1d39      	adds	r1, r7, #4
 8000dca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000dce:	4823      	ldr	r0, [pc, #140]	; (8000e5c <dht20_output+0x1c0>)
 8000dd0:	f003 fdb1 	bl	8004936 <HAL_UART_Transmit>
	//Display on the LCD
	sprintf(temp, "TEMP:  %d.%d %cC",value_x10[1]/10,value_x10[1]%10 ,0b11011111);
 8000dd4:	4b1d      	ldr	r3, [pc, #116]	; (8000e4c <dht20_output+0x1b0>)
 8000dd6:	885b      	ldrh	r3, [r3, #2]
 8000dd8:	4a1d      	ldr	r2, [pc, #116]	; (8000e50 <dht20_output+0x1b4>)
 8000dda:	fba2 2303 	umull	r2, r3, r2, r3
 8000dde:	08db      	lsrs	r3, r3, #3
 8000de0:	b29b      	uxth	r3, r3
 8000de2:	4618      	mov	r0, r3
 8000de4:	4b19      	ldr	r3, [pc, #100]	; (8000e4c <dht20_output+0x1b0>)
 8000de6:	885a      	ldrh	r2, [r3, #2]
 8000de8:	4b19      	ldr	r3, [pc, #100]	; (8000e50 <dht20_output+0x1b4>)
 8000dea:	fba3 1302 	umull	r1, r3, r3, r2
 8000dee:	08d9      	lsrs	r1, r3, #3
 8000df0:	460b      	mov	r3, r1
 8000df2:	009b      	lsls	r3, r3, #2
 8000df4:	440b      	add	r3, r1
 8000df6:	005b      	lsls	r3, r3, #1
 8000df8:	1ad3      	subs	r3, r2, r3
 8000dfa:	b29b      	uxth	r3, r3
 8000dfc:	461a      	mov	r2, r3
 8000dfe:	23df      	movs	r3, #223	; 0xdf
 8000e00:	9300      	str	r3, [sp, #0]
 8000e02:	4613      	mov	r3, r2
 8000e04:	4602      	mov	r2, r0
 8000e06:	4918      	ldr	r1, [pc, #96]	; (8000e68 <dht20_output+0x1cc>)
 8000e08:	4818      	ldr	r0, [pc, #96]	; (8000e6c <dht20_output+0x1d0>)
 8000e0a:	f004 ff45 	bl	8005c98 <siprintf>
	sprintf(humid,"HUMID: %01d.%d %%   ",value_x10[0]/10,value_x10[0]%10);
 8000e0e:	4b0f      	ldr	r3, [pc, #60]	; (8000e4c <dht20_output+0x1b0>)
 8000e10:	881b      	ldrh	r3, [r3, #0]
 8000e12:	4a0f      	ldr	r2, [pc, #60]	; (8000e50 <dht20_output+0x1b4>)
 8000e14:	fba2 2303 	umull	r2, r3, r2, r3
 8000e18:	08db      	lsrs	r3, r3, #3
 8000e1a:	b29b      	uxth	r3, r3
 8000e1c:	4618      	mov	r0, r3
 8000e1e:	4b0b      	ldr	r3, [pc, #44]	; (8000e4c <dht20_output+0x1b0>)
 8000e20:	881a      	ldrh	r2, [r3, #0]
 8000e22:	4b0b      	ldr	r3, [pc, #44]	; (8000e50 <dht20_output+0x1b4>)
 8000e24:	fba3 1302 	umull	r1, r3, r3, r2
 8000e28:	08d9      	lsrs	r1, r3, #3
 8000e2a:	460b      	mov	r3, r1
 8000e2c:	009b      	lsls	r3, r3, #2
 8000e2e:	440b      	add	r3, r1
 8000e30:	005b      	lsls	r3, r3, #1
 8000e32:	1ad3      	subs	r3, r2, r3
 8000e34:	b29b      	uxth	r3, r3
 8000e36:	4602      	mov	r2, r0
 8000e38:	490d      	ldr	r1, [pc, #52]	; (8000e70 <dht20_output+0x1d4>)
 8000e3a:	480e      	ldr	r0, [pc, #56]	; (8000e74 <dht20_output+0x1d8>)
 8000e3c:	f004 ff2c 	bl	8005c98 <siprintf>
	lcd_show_value();
 8000e40:	f000 f8f4 	bl	800102c <lcd_show_value>
}
 8000e44:	bf00      	nop
 8000e46:	374c      	adds	r7, #76	; 0x4c
 8000e48:	46bd      	mov	sp, r7
 8000e4a:	bd90      	pop	{r4, r7, pc}
 8000e4c:	200001f8 	.word	0x200001f8
 8000e50:	cccccccd 	.word	0xcccccccd
 8000e54:	080081a4 	.word	0x080081a4
 8000e58:	080081b4 	.word	0x080081b4
 8000e5c:	200002c0 	.word	0x200002c0
 8000e60:	080081c8 	.word	0x080081c8
 8000e64:	080081d8 	.word	0x080081d8
 8000e68:	080081ec 	.word	0x080081ec
 8000e6c:	200001fc 	.word	0x200001fc
 8000e70:	08008200 	.word	0x08008200
 8000e74:	20000210 	.word	0x20000210

08000e78 <lcd_send_cmd>:

#define SLAVE_ADDRESS_LCD (0x27 << 1)
//(0x3F << 1)  // change this according to ur setup

void lcd_send_cmd (char cmd)
{
 8000e78:	b580      	push	{r7, lr}
 8000e7a:	b086      	sub	sp, #24
 8000e7c:	af02      	add	r7, sp, #8
 8000e7e:	4603      	mov	r3, r0
 8000e80:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (cmd&0xf0);
 8000e82:	79fb      	ldrb	r3, [r7, #7]
 8000e84:	f023 030f 	bic.w	r3, r3, #15
 8000e88:	73fb      	strb	r3, [r7, #15]
	data_l = ((cmd<<4)&0xf0);
 8000e8a:	79fb      	ldrb	r3, [r7, #7]
 8000e8c:	011b      	lsls	r3, r3, #4
 8000e8e:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0C;  //en=1, rs=0
 8000e90:	7bfb      	ldrb	r3, [r7, #15]
 8000e92:	f043 030c 	orr.w	r3, r3, #12
 8000e96:	b2db      	uxtb	r3, r3
 8000e98:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x08;  //en=0, rs=0
 8000e9a:	7bfb      	ldrb	r3, [r7, #15]
 8000e9c:	f043 0308 	orr.w	r3, r3, #8
 8000ea0:	b2db      	uxtb	r3, r3
 8000ea2:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0C;  //en=1, rs=0
 8000ea4:	7bbb      	ldrb	r3, [r7, #14]
 8000ea6:	f043 030c 	orr.w	r3, r3, #12
 8000eaa:	b2db      	uxtb	r3, r3
 8000eac:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x08;  //en=0, rs=0
 8000eae:	7bbb      	ldrb	r3, [r7, #14]
 8000eb0:	f043 0308 	orr.w	r3, r3, #8
 8000eb4:	b2db      	uxtb	r3, r3
 8000eb6:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 8000eb8:	f107 0208 	add.w	r2, r7, #8
 8000ebc:	2364      	movs	r3, #100	; 0x64
 8000ebe:	9300      	str	r3, [sp, #0]
 8000ec0:	2304      	movs	r3, #4
 8000ec2:	214e      	movs	r1, #78	; 0x4e
 8000ec4:	4803      	ldr	r0, [pc, #12]	; (8000ed4 <lcd_send_cmd+0x5c>)
 8000ec6:	f001 fd1d 	bl	8002904 <HAL_I2C_Master_Transmit>
}
 8000eca:	bf00      	nop
 8000ecc:	3710      	adds	r7, #16
 8000ece:	46bd      	mov	sp, r7
 8000ed0:	bd80      	pop	{r7, pc}
 8000ed2:	bf00      	nop
 8000ed4:	20000224 	.word	0x20000224

08000ed8 <lcd_send_data>:

void lcd_send_data (char data)
{
 8000ed8:	b580      	push	{r7, lr}
 8000eda:	b086      	sub	sp, #24
 8000edc:	af02      	add	r7, sp, #8
 8000ede:	4603      	mov	r3, r0
 8000ee0:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (data&0xf0);
 8000ee2:	79fb      	ldrb	r3, [r7, #7]
 8000ee4:	f023 030f 	bic.w	r3, r3, #15
 8000ee8:	73fb      	strb	r3, [r7, #15]
	data_l = ((data<<4)&0xf0);
 8000eea:	79fb      	ldrb	r3, [r7, #7]
 8000eec:	011b      	lsls	r3, r3, #4
 8000eee:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0D;  //en=1, rs=0
 8000ef0:	7bfb      	ldrb	r3, [r7, #15]
 8000ef2:	f043 030d 	orr.w	r3, r3, #13
 8000ef6:	b2db      	uxtb	r3, r3
 8000ef8:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x09;  //en=0, rs=0
 8000efa:	7bfb      	ldrb	r3, [r7, #15]
 8000efc:	f043 0309 	orr.w	r3, r3, #9
 8000f00:	b2db      	uxtb	r3, r3
 8000f02:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0D;  //en=1, rs=0
 8000f04:	7bbb      	ldrb	r3, [r7, #14]
 8000f06:	f043 030d 	orr.w	r3, r3, #13
 8000f0a:	b2db      	uxtb	r3, r3
 8000f0c:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x09;  //en=0, rs=0
 8000f0e:	7bbb      	ldrb	r3, [r7, #14]
 8000f10:	f043 0309 	orr.w	r3, r3, #9
 8000f14:	b2db      	uxtb	r3, r3
 8000f16:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 8000f18:	f107 0208 	add.w	r2, r7, #8
 8000f1c:	2364      	movs	r3, #100	; 0x64
 8000f1e:	9300      	str	r3, [sp, #0]
 8000f20:	2304      	movs	r3, #4
 8000f22:	214e      	movs	r1, #78	; 0x4e
 8000f24:	4803      	ldr	r0, [pc, #12]	; (8000f34 <lcd_send_data+0x5c>)
 8000f26:	f001 fced 	bl	8002904 <HAL_I2C_Master_Transmit>
}
 8000f2a:	bf00      	nop
 8000f2c:	3710      	adds	r7, #16
 8000f2e:	46bd      	mov	sp, r7
 8000f30:	bd80      	pop	{r7, pc}
 8000f32:	bf00      	nop
 8000f34:	20000224 	.word	0x20000224

08000f38 <lcd_init>:

void lcd_init ()
{
 8000f38:	b580      	push	{r7, lr}
 8000f3a:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x33);
 8000f3c:	2033      	movs	r0, #51	; 0x33
 8000f3e:	f7ff ff9b 	bl	8000e78 <lcd_send_cmd>
	lcd_send_cmd (0x32);
 8000f42:	2032      	movs	r0, #50	; 0x32
 8000f44:	f7ff ff98 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f48:	2032      	movs	r0, #50	; 0x32
 8000f4a:	f001 f819 	bl	8001f80 <HAL_Delay>
	lcd_send_cmd (0x28); /* start to set LCD function (4-bit mode) */
 8000f4e:	2028      	movs	r0, #40	; 0x28
 8000f50:	f7ff ff92 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f54:	2032      	movs	r0, #50	; 0x32
 8000f56:	f001 f813 	bl	8001f80 <HAL_Delay>
	lcd_send_cmd (0x01); /* clear display */
 8000f5a:	2001      	movs	r0, #1
 8000f5c:	f7ff ff8c 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f60:	2032      	movs	r0, #50	; 0x32
 8000f62:	f001 f80d 	bl	8001f80 <HAL_Delay>
	lcd_send_cmd (0x06); /* set entry mode */
 8000f66:	2006      	movs	r0, #6
 8000f68:	f7ff ff86 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f6c:	2032      	movs	r0, #50	; 0x32
 8000f6e:	f001 f807 	bl	8001f80 <HAL_Delay>
	lcd_send_cmd (0x0c); /* set display to on */	
 8000f72:	200c      	movs	r0, #12
 8000f74:	f7ff ff80 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f78:	2032      	movs	r0, #50	; 0x32
 8000f7a:	f001 f801 	bl	8001f80 <HAL_Delay>
	lcd_send_cmd (0x02); /* move cursor to home and set data address to 0 */
 8000f7e:	2002      	movs	r0, #2
 8000f80:	f7ff ff7a 	bl	8000e78 <lcd_send_cmd>
	HAL_Delay(50);
 8000f84:	2032      	movs	r0, #50	; 0x32
 8000f86:	f000 fffb 	bl	8001f80 <HAL_Delay>
	lcd_send_cmd (0x80);
 8000f8a:	2080      	movs	r0, #128	; 0x80
 8000f8c:	f7ff ff74 	bl	8000e78 <lcd_send_cmd>
}
 8000f90:	bf00      	nop
 8000f92:	bd80      	pop	{r7, pc}

08000f94 <lcd_send_string>:

void lcd_send_string (char *str)
{
 8000f94:	b580      	push	{r7, lr}
 8000f96:	b082      	sub	sp, #8
 8000f98:	af00      	add	r7, sp, #0
 8000f9a:	6078      	str	r0, [r7, #4]
	while (*str) lcd_send_data (*str++);
 8000f9c:	e006      	b.n	8000fac <lcd_send_string+0x18>
 8000f9e:	687b      	ldr	r3, [r7, #4]
 8000fa0:	1c5a      	adds	r2, r3, #1
 8000fa2:	607a      	str	r2, [r7, #4]
 8000fa4:	781b      	ldrb	r3, [r3, #0]
 8000fa6:	4618      	mov	r0, r3
 8000fa8:	f7ff ff96 	bl	8000ed8 <lcd_send_data>
 8000fac:	687b      	ldr	r3, [r7, #4]
 8000fae:	781b      	ldrb	r3, [r3, #0]
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d1f4      	bne.n	8000f9e <lcd_send_string+0xa>
}
 8000fb4:	bf00      	nop
 8000fb6:	bf00      	nop
 8000fb8:	3708      	adds	r7, #8
 8000fba:	46bd      	mov	sp, r7
 8000fbc:	bd80      	pop	{r7, pc}

08000fbe <lcd_clear_display>:

void lcd_clear_display ()
{
 8000fbe:	b580      	push	{r7, lr}
 8000fc0:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x01); //clear display
 8000fc2:	2001      	movs	r0, #1
 8000fc4:	f7ff ff58 	bl	8000e78 <lcd_send_cmd>
}
 8000fc8:	bf00      	nop
 8000fca:	bd80      	pop	{r7, pc}

08000fcc <lcd_goto_XY>:

void lcd_goto_XY (int row, int col)
{
 8000fcc:	b580      	push	{r7, lr}
 8000fce:	b084      	sub	sp, #16
 8000fd0:	af00      	add	r7, sp, #0
 8000fd2:	6078      	str	r0, [r7, #4]
 8000fd4:	6039      	str	r1, [r7, #0]
	uint8_t pos_Addr;
	if(row == 0)
 8000fd6:	687b      	ldr	r3, [r7, #4]
 8000fd8:	2b00      	cmp	r3, #0
 8000fda:	d104      	bne.n	8000fe6 <lcd_goto_XY+0x1a>
	{
		pos_Addr = 0x80 + col;
 8000fdc:	683b      	ldr	r3, [r7, #0]
 8000fde:	b2db      	uxtb	r3, r3
 8000fe0:	3b80      	subs	r3, #128	; 0x80
 8000fe2:	73fb      	strb	r3, [r7, #15]
 8000fe4:	e003      	b.n	8000fee <lcd_goto_XY+0x22>
	}
	else
	{
		pos_Addr = 0xC0 + col;
 8000fe6:	683b      	ldr	r3, [r7, #0]
 8000fe8:	b2db      	uxtb	r3, r3
 8000fea:	3b40      	subs	r3, #64	; 0x40
 8000fec:	73fb      	strb	r3, [r7, #15]
	}
	lcd_send_cmd(pos_Addr);
 8000fee:	7bfb      	ldrb	r3, [r7, #15]
 8000ff0:	4618      	mov	r0, r3
 8000ff2:	f7ff ff41 	bl	8000e78 <lcd_send_cmd>
}
 8000ff6:	bf00      	nop
 8000ff8:	3710      	adds	r7, #16
 8000ffa:	46bd      	mov	sp, r7
 8000ffc:	bd80      	pop	{r7, pc}
	...

08001000 <lcd_greeting>:

void lcd_greeting (){
 8001000:	b580      	push	{r7, lr}
 8001002:	af00      	add	r7, sp, #0
	  lcd_goto_XY(0, 0);
 8001004:	2100      	movs	r1, #0
 8001006:	2000      	movs	r0, #0
 8001008:	f7ff ffe0 	bl	8000fcc <lcd_goto_XY>
	  lcd_send_string("System Boot Done");
 800100c:	4805      	ldr	r0, [pc, #20]	; (8001024 <lcd_greeting+0x24>)
 800100e:	f7ff ffc1 	bl	8000f94 <lcd_send_string>
	  lcd_goto_XY(1, 0);
 8001012:	2100      	movs	r1, #0
 8001014:	2001      	movs	r0, #1
 8001016:	f7ff ffd9 	bl	8000fcc <lcd_goto_XY>
	  lcd_send_string("Waiting...");
 800101a:	4803      	ldr	r0, [pc, #12]	; (8001028 <lcd_greeting+0x28>)
 800101c:	f7ff ffba 	bl	8000f94 <lcd_send_string>
}
 8001020:	bf00      	nop
 8001022:	bd80      	pop	{r7, pc}
 8001024:	08008218 	.word	0x08008218
 8001028:	0800822c 	.word	0x0800822c

0800102c <lcd_show_value>:

void lcd_show_value(){
 800102c:	b580      	push	{r7, lr}
 800102e:	af00      	add	r7, sp, #0
	  lcd_goto_XY(0, 0);
 8001030:	2100      	movs	r1, #0
 8001032:	2000      	movs	r0, #0
 8001034:	f7ff ffca 	bl	8000fcc <lcd_goto_XY>
	  lcd_send_string(humid);
 8001038:	4805      	ldr	r0, [pc, #20]	; (8001050 <lcd_show_value+0x24>)
 800103a:	f7ff ffab 	bl	8000f94 <lcd_send_string>
	  lcd_goto_XY(1, 0);
 800103e:	2100      	movs	r1, #0
 8001040:	2001      	movs	r0, #1
 8001042:	f7ff ffc3 	bl	8000fcc <lcd_goto_XY>
	  lcd_send_string(temp);
 8001046:	4803      	ldr	r0, [pc, #12]	; (8001054 <lcd_show_value+0x28>)
 8001048:	f7ff ffa4 	bl	8000f94 <lcd_send_string>
}
 800104c:	bf00      	nop
 800104e:	bd80      	pop	{r7, pc}
 8001050:	20000210 	.word	0x20000210
 8001054:	200001fc 	.word	0x200001fc

08001058 <turnLedOn>:
 *      Author: acer
 */

#include "led_display.h"

void turnLedOn(){
 8001058:	b580      	push	{r7, lr}
 800105a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 800105c:	2200      	movs	r2, #0
 800105e:	2102      	movs	r1, #2
 8001060:	4802      	ldr	r0, [pc, #8]	; (800106c <turnLedOn+0x14>)
 8001062:	f001 faf3 	bl	800264c <HAL_GPIO_WritePin>
}
 8001066:	bf00      	nop
 8001068:	bd80      	pop	{r7, pc}
 800106a:	bf00      	nop
 800106c:	40010800 	.word	0x40010800

08001070 <turnLedOff>:

void turnLedOff(){
 8001070:	b580      	push	{r7, lr}
 8001072:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 8001074:	2201      	movs	r2, #1
 8001076:	2102      	movs	r1, #2
 8001078:	4802      	ldr	r0, [pc, #8]	; (8001084 <turnLedOff+0x14>)
 800107a:	f001 fae7 	bl	800264c <HAL_GPIO_WritePin>
}
 800107e:	bf00      	nop
 8001080:	bd80      	pop	{r7, pc}
 8001082:	bf00      	nop
 8001084:	40010800 	.word	0x40010800

08001088 <HAL_UART_RxCpltCallback>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8001088:	b580      	push	{r7, lr}
 800108a:	b082      	sub	sp, #8
 800108c:	af00      	add	r7, sp, #0
 800108e:	6078      	str	r0, [r7, #4]
	if (huart->Instance == USART2){
 8001090:	687b      	ldr	r3, [r7, #4]
 8001092:	681b      	ldr	r3, [r3, #0]
 8001094:	4a12      	ldr	r2, [pc, #72]	; (80010e0 <HAL_UART_RxCpltCallback+0x58>)
 8001096:	4293      	cmp	r3, r2
 8001098:	d11d      	bne.n	80010d6 <HAL_UART_RxCpltCallback+0x4e>
//		HAL_UART_Transmit(&huart2, &buffer_byte, 1, 500);
		buffer[index_buffer] = buffer_byte;
 800109a:	4b12      	ldr	r3, [pc, #72]	; (80010e4 <HAL_UART_RxCpltCallback+0x5c>)
 800109c:	781b      	ldrb	r3, [r3, #0]
 800109e:	461a      	mov	r2, r3
 80010a0:	4b11      	ldr	r3, [pc, #68]	; (80010e8 <HAL_UART_RxCpltCallback+0x60>)
 80010a2:	7819      	ldrb	r1, [r3, #0]
 80010a4:	4b11      	ldr	r3, [pc, #68]	; (80010ec <HAL_UART_RxCpltCallback+0x64>)
 80010a6:	5499      	strb	r1, [r3, r2]
		index_buffer++;
 80010a8:	4b0e      	ldr	r3, [pc, #56]	; (80010e4 <HAL_UART_RxCpltCallback+0x5c>)
 80010aa:	781b      	ldrb	r3, [r3, #0]
 80010ac:	3301      	adds	r3, #1
 80010ae:	b2da      	uxtb	r2, r3
 80010b0:	4b0c      	ldr	r3, [pc, #48]	; (80010e4 <HAL_UART_RxCpltCallback+0x5c>)
 80010b2:	701a      	strb	r2, [r3, #0]
		if (index_buffer == MAX_BUFFER_SIZE){
 80010b4:	4b0b      	ldr	r3, [pc, #44]	; (80010e4 <HAL_UART_RxCpltCallback+0x5c>)
 80010b6:	781b      	ldrb	r3, [r3, #0]
 80010b8:	2b1e      	cmp	r3, #30
 80010ba:	d104      	bne.n	80010c6 <HAL_UART_RxCpltCallback+0x3e>
			index_buffer = 0;
 80010bc:	4b09      	ldr	r3, [pc, #36]	; (80010e4 <HAL_UART_RxCpltCallback+0x5c>)
 80010be:	2200      	movs	r2, #0
 80010c0:	701a      	strb	r2, [r3, #0]
			rst_buffer();
 80010c2:	f000 fcbf 	bl	8001a44 <rst_buffer>
		}
		buffer_flag = 1;
 80010c6:	4b0a      	ldr	r3, [pc, #40]	; (80010f0 <HAL_UART_RxCpltCallback+0x68>)
 80010c8:	2201      	movs	r2, #1
 80010ca:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(&huart2, &buffer_byte, 1);
 80010cc:	2201      	movs	r2, #1
 80010ce:	4906      	ldr	r1, [pc, #24]	; (80010e8 <HAL_UART_RxCpltCallback+0x60>)
 80010d0:	4808      	ldr	r0, [pc, #32]	; (80010f4 <HAL_UART_RxCpltCallback+0x6c>)
 80010d2:	f003 fcc2 	bl	8004a5a <HAL_UART_Receive_IT>
	}
}
 80010d6:	bf00      	nop
 80010d8:	3708      	adds	r7, #8
 80010da:	46bd      	mov	sp, r7
 80010dc:	bd80      	pop	{r7, pc}
 80010de:	bf00      	nop
 80010e0:	40004400 	.word	0x40004400
 80010e4:	2000069a 	.word	0x2000069a
 80010e8:	20000678 	.word	0x20000678
 80010ec:	2000067c 	.word	0x2000067c
 80010f0:	2000069b 	.word	0x2000069b
 80010f4:	200002c0 	.word	0x200002c0

080010f8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80010f8:	b580      	push	{r7, lr}
 80010fa:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80010fc:	f000 fede 	bl	8001ebc <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001100:	f000 f83e 	bl	8001180 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001104:	f000 f926 	bl	8001354 <MX_GPIO_Init>
  MX_I2C1_Init();
 8001108:	f000 f880 	bl	800120c <MX_I2C1_Init>
  MX_USART2_UART_Init();
 800110c:	f000 f8f8 	bl	8001300 <MX_USART2_UART_Init>
  MX_TIM2_Init();
 8001110:	f000 f8aa 	bl	8001268 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8001114:	4815      	ldr	r0, [pc, #84]	; (800116c <main+0x74>)
 8001116:	f003 f817 	bl	8004148 <HAL_TIM_Base_Start_IT>
  HAL_UART_Receive_IT(&huart2, &buffer_byte, 1);
 800111a:	2201      	movs	r2, #1
 800111c:	4914      	ldr	r1, [pc, #80]	; (8001170 <main+0x78>)
 800111e:	4815      	ldr	r0, [pc, #84]	; (8001174 <main+0x7c>)
 8001120:	f003 fc9b 	bl	8004a5a <HAL_UART_Receive_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  //Scan the address of I2C device
  Scan_Addr();
 8001124:	f000 fdd2 	bl	8001ccc <Scan_Addr>
  //MCU & FIRWARE Info
  Mcu_info();
 8001128:	f000 fe6e 	bl	8001e08 <Mcu_info>
  //Initialization for LCD
  lcd_clear_display();
 800112c:	f7ff ff47 	bl	8000fbe <lcd_clear_display>
  lcd_init();
 8001130:	f7ff ff02 	bl	8000f38 <lcd_init>
  lcd_greeting();
 8001134:	f7ff ff64 	bl	8001000 <lcd_greeting>
  //Initialization for DHT-20
  dht20_init();
 8001138:	f7ff fca6 	bl	8000a88 <dht20_init>
  setTimer1(300);
 800113c:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8001140:	f000 f97c 	bl	800143c <setTimer1>
//  SCH_Add_Task(intercep_UartCmd, 0, 1);
//  SCH_Add_Task(uart_control_fsm, 100, 1);
  while (1)
  {
	  //Using timer to synchronize
	  if (buffer_flag == 1){
 8001144:	4b0c      	ldr	r3, [pc, #48]	; (8001178 <main+0x80>)
 8001146:	781b      	ldrb	r3, [r3, #0]
 8001148:	2b01      	cmp	r3, #1
 800114a:	d104      	bne.n	8001156 <main+0x5e>
		  cmd_parser_fsm();
 800114c:	f000 fcc6 	bl	8001adc <cmd_parser_fsm>
		  buffer_flag = 0;
 8001150:	4b09      	ldr	r3, [pc, #36]	; (8001178 <main+0x80>)
 8001152:	2200      	movs	r2, #0
 8001154:	701a      	strb	r2, [r3, #0]
	  }
	  if(timer1_flag == 1){
 8001156:	4b09      	ldr	r3, [pc, #36]	; (800117c <main+0x84>)
 8001158:	681b      	ldr	r3, [r3, #0]
 800115a:	2b01      	cmp	r3, #1
 800115c:	d1f2      	bne.n	8001144 <main+0x4c>
		  setTimer1(1);
 800115e:	2001      	movs	r0, #1
 8001160:	f000 f96c 	bl	800143c <setTimer1>
		  uart_control_fsm();
 8001164:	f000 fd38 	bl	8001bd8 <uart_control_fsm>
	  if (buffer_flag == 1){
 8001168:	e7ec      	b.n	8001144 <main+0x4c>
 800116a:	bf00      	nop
 800116c:	20000278 	.word	0x20000278
 8001170:	20000678 	.word	0x20000678
 8001174:	200002c0 	.word	0x200002c0
 8001178:	2000069b 	.word	0x2000069b
 800117c:	20000628 	.word	0x20000628

08001180 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001180:	b580      	push	{r7, lr}
 8001182:	b090      	sub	sp, #64	; 0x40
 8001184:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001186:	f107 0318 	add.w	r3, r7, #24
 800118a:	2228      	movs	r2, #40	; 0x28
 800118c:	2100      	movs	r1, #0
 800118e:	4618      	mov	r0, r3
 8001190:	f004 f8e6 	bl	8005360 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001194:	1d3b      	adds	r3, r7, #4
 8001196:	2200      	movs	r2, #0
 8001198:	601a      	str	r2, [r3, #0]
 800119a:	605a      	str	r2, [r3, #4]
 800119c:	609a      	str	r2, [r3, #8]
 800119e:	60da      	str	r2, [r3, #12]
 80011a0:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80011a2:	2301      	movs	r3, #1
 80011a4:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80011a6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80011aa:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80011ac:	2300      	movs	r3, #0
 80011ae:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011b0:	2301      	movs	r3, #1
 80011b2:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80011b4:	2302      	movs	r3, #2
 80011b6:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80011b8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80011bc:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80011be:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 80011c2:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011c4:	f107 0318 	add.w	r3, r7, #24
 80011c8:	4618      	mov	r0, r3
 80011ca:	f002 fb53 	bl	8003874 <HAL_RCC_OscConfig>
 80011ce:	4603      	mov	r3, r0
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	d001      	beq.n	80011d8 <SystemClock_Config+0x58>
  {
    Error_Handler();
 80011d4:	f000 f914 	bl	8001400 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011d8:	230f      	movs	r3, #15
 80011da:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80011dc:	2302      	movs	r3, #2
 80011de:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80011e0:	2300      	movs	r3, #0
 80011e2:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80011e4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011e8:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80011ea:	2300      	movs	r3, #0
 80011ec:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80011ee:	1d3b      	adds	r3, r7, #4
 80011f0:	2102      	movs	r1, #2
 80011f2:	4618      	mov	r0, r3
 80011f4:	f002 fdc0 	bl	8003d78 <HAL_RCC_ClockConfig>
 80011f8:	4603      	mov	r3, r0
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	d001      	beq.n	8001202 <SystemClock_Config+0x82>
  {
    Error_Handler();
 80011fe:	f000 f8ff 	bl	8001400 <Error_Handler>
  }
}
 8001202:	bf00      	nop
 8001204:	3740      	adds	r7, #64	; 0x40
 8001206:	46bd      	mov	sp, r7
 8001208:	bd80      	pop	{r7, pc}
	...

0800120c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 800120c:	b580      	push	{r7, lr}
 800120e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001210:	4b12      	ldr	r3, [pc, #72]	; (800125c <MX_I2C1_Init+0x50>)
 8001212:	4a13      	ldr	r2, [pc, #76]	; (8001260 <MX_I2C1_Init+0x54>)
 8001214:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8001216:	4b11      	ldr	r3, [pc, #68]	; (800125c <MX_I2C1_Init+0x50>)
 8001218:	4a12      	ldr	r2, [pc, #72]	; (8001264 <MX_I2C1_Init+0x58>)
 800121a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 800121c:	4b0f      	ldr	r3, [pc, #60]	; (800125c <MX_I2C1_Init+0x50>)
 800121e:	2200      	movs	r2, #0
 8001220:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001222:	4b0e      	ldr	r3, [pc, #56]	; (800125c <MX_I2C1_Init+0x50>)
 8001224:	2200      	movs	r2, #0
 8001226:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001228:	4b0c      	ldr	r3, [pc, #48]	; (800125c <MX_I2C1_Init+0x50>)
 800122a:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800122e:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001230:	4b0a      	ldr	r3, [pc, #40]	; (800125c <MX_I2C1_Init+0x50>)
 8001232:	2200      	movs	r2, #0
 8001234:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001236:	4b09      	ldr	r3, [pc, #36]	; (800125c <MX_I2C1_Init+0x50>)
 8001238:	2200      	movs	r2, #0
 800123a:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800123c:	4b07      	ldr	r3, [pc, #28]	; (800125c <MX_I2C1_Init+0x50>)
 800123e:	2200      	movs	r2, #0
 8001240:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001242:	4b06      	ldr	r3, [pc, #24]	; (800125c <MX_I2C1_Init+0x50>)
 8001244:	2200      	movs	r2, #0
 8001246:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001248:	4804      	ldr	r0, [pc, #16]	; (800125c <MX_I2C1_Init+0x50>)
 800124a:	f001 fa17 	bl	800267c <HAL_I2C_Init>
 800124e:	4603      	mov	r3, r0
 8001250:	2b00      	cmp	r3, #0
 8001252:	d001      	beq.n	8001258 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001254:	f000 f8d4 	bl	8001400 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001258:	bf00      	nop
 800125a:	bd80      	pop	{r7, pc}
 800125c:	20000224 	.word	0x20000224
 8001260:	40005400 	.word	0x40005400
 8001264:	000186a0 	.word	0x000186a0

08001268 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001268:	b580      	push	{r7, lr}
 800126a:	b086      	sub	sp, #24
 800126c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800126e:	f107 0308 	add.w	r3, r7, #8
 8001272:	2200      	movs	r2, #0
 8001274:	601a      	str	r2, [r3, #0]
 8001276:	605a      	str	r2, [r3, #4]
 8001278:	609a      	str	r2, [r3, #8]
 800127a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800127c:	463b      	mov	r3, r7
 800127e:	2200      	movs	r2, #0
 8001280:	601a      	str	r2, [r3, #0]
 8001282:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001284:	4b1d      	ldr	r3, [pc, #116]	; (80012fc <MX_TIM2_Init+0x94>)
 8001286:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800128a:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7199;
 800128c:	4b1b      	ldr	r3, [pc, #108]	; (80012fc <MX_TIM2_Init+0x94>)
 800128e:	f641 421f 	movw	r2, #7199	; 0x1c1f
 8001292:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001294:	4b19      	ldr	r3, [pc, #100]	; (80012fc <MX_TIM2_Init+0x94>)
 8001296:	2200      	movs	r2, #0
 8001298:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 99;
 800129a:	4b18      	ldr	r3, [pc, #96]	; (80012fc <MX_TIM2_Init+0x94>)
 800129c:	2263      	movs	r2, #99	; 0x63
 800129e:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80012a0:	4b16      	ldr	r3, [pc, #88]	; (80012fc <MX_TIM2_Init+0x94>)
 80012a2:	2200      	movs	r2, #0
 80012a4:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80012a6:	4b15      	ldr	r3, [pc, #84]	; (80012fc <MX_TIM2_Init+0x94>)
 80012a8:	2200      	movs	r2, #0
 80012aa:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80012ac:	4813      	ldr	r0, [pc, #76]	; (80012fc <MX_TIM2_Init+0x94>)
 80012ae:	f002 fefb 	bl	80040a8 <HAL_TIM_Base_Init>
 80012b2:	4603      	mov	r3, r0
 80012b4:	2b00      	cmp	r3, #0
 80012b6:	d001      	beq.n	80012bc <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80012b8:	f000 f8a2 	bl	8001400 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80012bc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80012c0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80012c2:	f107 0308 	add.w	r3, r7, #8
 80012c6:	4619      	mov	r1, r3
 80012c8:	480c      	ldr	r0, [pc, #48]	; (80012fc <MX_TIM2_Init+0x94>)
 80012ca:	f003 f897 	bl	80043fc <HAL_TIM_ConfigClockSource>
 80012ce:	4603      	mov	r3, r0
 80012d0:	2b00      	cmp	r3, #0
 80012d2:	d001      	beq.n	80012d8 <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 80012d4:	f000 f894 	bl	8001400 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80012d8:	2300      	movs	r3, #0
 80012da:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80012dc:	2300      	movs	r3, #0
 80012de:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80012e0:	463b      	mov	r3, r7
 80012e2:	4619      	mov	r1, r3
 80012e4:	4805      	ldr	r0, [pc, #20]	; (80012fc <MX_TIM2_Init+0x94>)
 80012e6:	f003 fa69 	bl	80047bc <HAL_TIMEx_MasterConfigSynchronization>
 80012ea:	4603      	mov	r3, r0
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d001      	beq.n	80012f4 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 80012f0:	f000 f886 	bl	8001400 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 80012f4:	bf00      	nop
 80012f6:	3718      	adds	r7, #24
 80012f8:	46bd      	mov	sp, r7
 80012fa:	bd80      	pop	{r7, pc}
 80012fc:	20000278 	.word	0x20000278

08001300 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001300:	b580      	push	{r7, lr}
 8001302:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001304:	4b11      	ldr	r3, [pc, #68]	; (800134c <MX_USART2_UART_Init+0x4c>)
 8001306:	4a12      	ldr	r2, [pc, #72]	; (8001350 <MX_USART2_UART_Init+0x50>)
 8001308:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800130a:	4b10      	ldr	r3, [pc, #64]	; (800134c <MX_USART2_UART_Init+0x4c>)
 800130c:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8001310:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001312:	4b0e      	ldr	r3, [pc, #56]	; (800134c <MX_USART2_UART_Init+0x4c>)
 8001314:	2200      	movs	r2, #0
 8001316:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001318:	4b0c      	ldr	r3, [pc, #48]	; (800134c <MX_USART2_UART_Init+0x4c>)
 800131a:	2200      	movs	r2, #0
 800131c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800131e:	4b0b      	ldr	r3, [pc, #44]	; (800134c <MX_USART2_UART_Init+0x4c>)
 8001320:	2200      	movs	r2, #0
 8001322:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001324:	4b09      	ldr	r3, [pc, #36]	; (800134c <MX_USART2_UART_Init+0x4c>)
 8001326:	220c      	movs	r2, #12
 8001328:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800132a:	4b08      	ldr	r3, [pc, #32]	; (800134c <MX_USART2_UART_Init+0x4c>)
 800132c:	2200      	movs	r2, #0
 800132e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001330:	4b06      	ldr	r3, [pc, #24]	; (800134c <MX_USART2_UART_Init+0x4c>)
 8001332:	2200      	movs	r2, #0
 8001334:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001336:	4805      	ldr	r0, [pc, #20]	; (800134c <MX_USART2_UART_Init+0x4c>)
 8001338:	f003 fab0 	bl	800489c <HAL_UART_Init>
 800133c:	4603      	mov	r3, r0
 800133e:	2b00      	cmp	r3, #0
 8001340:	d001      	beq.n	8001346 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8001342:	f000 f85d 	bl	8001400 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001346:	bf00      	nop
 8001348:	bd80      	pop	{r7, pc}
 800134a:	bf00      	nop
 800134c:	200002c0 	.word	0x200002c0
 8001350:	40004400 	.word	0x40004400

08001354 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001354:	b580      	push	{r7, lr}
 8001356:	b088      	sub	sp, #32
 8001358:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800135a:	f107 0310 	add.w	r3, r7, #16
 800135e:	2200      	movs	r2, #0
 8001360:	601a      	str	r2, [r3, #0]
 8001362:	605a      	str	r2, [r3, #4]
 8001364:	609a      	str	r2, [r3, #8]
 8001366:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001368:	4b1d      	ldr	r3, [pc, #116]	; (80013e0 <MX_GPIO_Init+0x8c>)
 800136a:	699b      	ldr	r3, [r3, #24]
 800136c:	4a1c      	ldr	r2, [pc, #112]	; (80013e0 <MX_GPIO_Init+0x8c>)
 800136e:	f043 0320 	orr.w	r3, r3, #32
 8001372:	6193      	str	r3, [r2, #24]
 8001374:	4b1a      	ldr	r3, [pc, #104]	; (80013e0 <MX_GPIO_Init+0x8c>)
 8001376:	699b      	ldr	r3, [r3, #24]
 8001378:	f003 0320 	and.w	r3, r3, #32
 800137c:	60fb      	str	r3, [r7, #12]
 800137e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001380:	4b17      	ldr	r3, [pc, #92]	; (80013e0 <MX_GPIO_Init+0x8c>)
 8001382:	699b      	ldr	r3, [r3, #24]
 8001384:	4a16      	ldr	r2, [pc, #88]	; (80013e0 <MX_GPIO_Init+0x8c>)
 8001386:	f043 0304 	orr.w	r3, r3, #4
 800138a:	6193      	str	r3, [r2, #24]
 800138c:	4b14      	ldr	r3, [pc, #80]	; (80013e0 <MX_GPIO_Init+0x8c>)
 800138e:	699b      	ldr	r3, [r3, #24]
 8001390:	f003 0304 	and.w	r3, r3, #4
 8001394:	60bb      	str	r3, [r7, #8]
 8001396:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001398:	4b11      	ldr	r3, [pc, #68]	; (80013e0 <MX_GPIO_Init+0x8c>)
 800139a:	699b      	ldr	r3, [r3, #24]
 800139c:	4a10      	ldr	r2, [pc, #64]	; (80013e0 <MX_GPIO_Init+0x8c>)
 800139e:	f043 0308 	orr.w	r3, r3, #8
 80013a2:	6193      	str	r3, [r2, #24]
 80013a4:	4b0e      	ldr	r3, [pc, #56]	; (80013e0 <MX_GPIO_Init+0x8c>)
 80013a6:	699b      	ldr	r3, [r3, #24]
 80013a8:	f003 0308 	and.w	r3, r3, #8
 80013ac:	607b      	str	r3, [r7, #4]
 80013ae:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 80013b0:	2200      	movs	r2, #0
 80013b2:	2102      	movs	r1, #2
 80013b4:	480b      	ldr	r0, [pc, #44]	; (80013e4 <MX_GPIO_Init+0x90>)
 80013b6:	f001 f949 	bl	800264c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 80013ba:	2302      	movs	r3, #2
 80013bc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80013be:	2301      	movs	r3, #1
 80013c0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013c2:	2300      	movs	r3, #0
 80013c4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80013c6:	2302      	movs	r3, #2
 80013c8:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 80013ca:	f107 0310 	add.w	r3, r7, #16
 80013ce:	4619      	mov	r1, r3
 80013d0:	4804      	ldr	r0, [pc, #16]	; (80013e4 <MX_GPIO_Init+0x90>)
 80013d2:	f000 ffb7 	bl	8002344 <HAL_GPIO_Init>

}
 80013d6:	bf00      	nop
 80013d8:	3720      	adds	r7, #32
 80013da:	46bd      	mov	sp, r7
 80013dc:	bd80      	pop	{r7, pc}
 80013de:	bf00      	nop
 80013e0:	40021000 	.word	0x40021000
 80013e4:	40010800 	.word	0x40010800

080013e8 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80013e8:	b580      	push	{r7, lr}
 80013ea:	b082      	sub	sp, #8
 80013ec:	af00      	add	r7, sp, #0
 80013ee:	6078      	str	r0, [r7, #4]
	timerRun();
 80013f0:	f000 f860 	bl	80014b4 <timerRun>
	SCH_Update();
 80013f4:	f000 f80a 	bl	800140c <SCH_Update>
}
 80013f8:	bf00      	nop
 80013fa:	3708      	adds	r7, #8
 80013fc:	46bd      	mov	sp, r7
 80013fe:	bd80      	pop	{r7, pc}

08001400 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001400:	b480      	push	{r7}
 8001402:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001404:	b672      	cpsid	i
}
 8001406:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001408:	e7fe      	b.n	8001408 <Error_Handler+0x8>
	...

0800140c <SCH_Update>:
			if (backup.Period > 0) SCH_Add_Task(backup.pTask, backup.Period, backup.Period);
		}
	}
}

void SCH_Update(void){
 800140c:	b480      	push	{r7}
 800140e:	af00      	add	r7, sp, #0
	if (SCH_tasks_G[0].Delay > 0) SCH_tasks_G[0].Delay--;
 8001410:	4b09      	ldr	r3, [pc, #36]	; (8001438 <SCH_Update+0x2c>)
 8001412:	685b      	ldr	r3, [r3, #4]
 8001414:	2b00      	cmp	r3, #0
 8001416:	d005      	beq.n	8001424 <SCH_Update+0x18>
 8001418:	4b07      	ldr	r3, [pc, #28]	; (8001438 <SCH_Update+0x2c>)
 800141a:	685b      	ldr	r3, [r3, #4]
 800141c:	3b01      	subs	r3, #1
 800141e:	4a06      	ldr	r2, [pc, #24]	; (8001438 <SCH_Update+0x2c>)
 8001420:	6053      	str	r3, [r2, #4]
	else SCH_tasks_G[0].RunMe++;
}
 8001422:	e005      	b.n	8001430 <SCH_Update+0x24>
	else SCH_tasks_G[0].RunMe++;
 8001424:	4b04      	ldr	r3, [pc, #16]	; (8001438 <SCH_Update+0x2c>)
 8001426:	7b1b      	ldrb	r3, [r3, #12]
 8001428:	3301      	adds	r3, #1
 800142a:	b2da      	uxtb	r2, r3
 800142c:	4b02      	ldr	r3, [pc, #8]	; (8001438 <SCH_Update+0x2c>)
 800142e:	731a      	strb	r2, [r3, #12]
}
 8001430:	bf00      	nop
 8001432:	46bd      	mov	sp, r7
 8001434:	bc80      	pop	{r7}
 8001436:	4770      	bx	lr
 8001438:	20000304 	.word	0x20000304

0800143c <setTimer1>:
int timer9_flag = 0;

int timer10_counter = 0;
int timer10_flag = 0;

void setTimer1(int duration){
 800143c:	b480      	push	{r7}
 800143e:	b083      	sub	sp, #12
 8001440:	af00      	add	r7, sp, #0
 8001442:	6078      	str	r0, [r7, #4]
	timer1_counter = duration;
 8001444:	4a05      	ldr	r2, [pc, #20]	; (800145c <setTimer1+0x20>)
 8001446:	687b      	ldr	r3, [r7, #4]
 8001448:	6013      	str	r3, [r2, #0]
	timer1_flag = 0;
 800144a:	4b05      	ldr	r3, [pc, #20]	; (8001460 <setTimer1+0x24>)
 800144c:	2200      	movs	r2, #0
 800144e:	601a      	str	r2, [r3, #0]
}
 8001450:	bf00      	nop
 8001452:	370c      	adds	r7, #12
 8001454:	46bd      	mov	sp, r7
 8001456:	bc80      	pop	{r7}
 8001458:	4770      	bx	lr
 800145a:	bf00      	nop
 800145c:	20000624 	.word	0x20000624
 8001460:	20000628 	.word	0x20000628

08001464 <setTimer2>:

void setTimer2(int duration){
 8001464:	b480      	push	{r7}
 8001466:	b083      	sub	sp, #12
 8001468:	af00      	add	r7, sp, #0
 800146a:	6078      	str	r0, [r7, #4]
	timer2_counter = duration;
 800146c:	4a05      	ldr	r2, [pc, #20]	; (8001484 <setTimer2+0x20>)
 800146e:	687b      	ldr	r3, [r7, #4]
 8001470:	6013      	str	r3, [r2, #0]
	timer2_flag = 0;
 8001472:	4b05      	ldr	r3, [pc, #20]	; (8001488 <setTimer2+0x24>)
 8001474:	2200      	movs	r2, #0
 8001476:	601a      	str	r2, [r3, #0]
}
 8001478:	bf00      	nop
 800147a:	370c      	adds	r7, #12
 800147c:	46bd      	mov	sp, r7
 800147e:	bc80      	pop	{r7}
 8001480:	4770      	bx	lr
 8001482:	bf00      	nop
 8001484:	2000062c 	.word	0x2000062c
 8001488:	20000630 	.word	0x20000630

0800148c <setTimer3>:

void setTimer3(int duration){
 800148c:	b480      	push	{r7}
 800148e:	b083      	sub	sp, #12
 8001490:	af00      	add	r7, sp, #0
 8001492:	6078      	str	r0, [r7, #4]
	timer3_counter = duration;
 8001494:	4a05      	ldr	r2, [pc, #20]	; (80014ac <setTimer3+0x20>)
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	6013      	str	r3, [r2, #0]
	timer3_flag = 0;
 800149a:	4b05      	ldr	r3, [pc, #20]	; (80014b0 <setTimer3+0x24>)
 800149c:	2200      	movs	r2, #0
 800149e:	601a      	str	r2, [r3, #0]
}
 80014a0:	bf00      	nop
 80014a2:	370c      	adds	r7, #12
 80014a4:	46bd      	mov	sp, r7
 80014a6:	bc80      	pop	{r7}
 80014a8:	4770      	bx	lr
 80014aa:	bf00      	nop
 80014ac:	20000634 	.word	0x20000634
 80014b0:	20000638 	.word	0x20000638

080014b4 <timerRun>:
void setTimer10(int duration){
	timer10_counter = duration;
	timer10_flag = 0;
}

void timerRun(){
 80014b4:	b480      	push	{r7}
 80014b6:	af00      	add	r7, sp, #0
	if(timer1_counter > 0){
 80014b8:	4b51      	ldr	r3, [pc, #324]	; (8001600 <timerRun+0x14c>)
 80014ba:	681b      	ldr	r3, [r3, #0]
 80014bc:	2b00      	cmp	r3, #0
 80014be:	dd0b      	ble.n	80014d8 <timerRun+0x24>
		timer1_counter--;
 80014c0:	4b4f      	ldr	r3, [pc, #316]	; (8001600 <timerRun+0x14c>)
 80014c2:	681b      	ldr	r3, [r3, #0]
 80014c4:	3b01      	subs	r3, #1
 80014c6:	4a4e      	ldr	r2, [pc, #312]	; (8001600 <timerRun+0x14c>)
 80014c8:	6013      	str	r3, [r2, #0]
		if(timer1_counter == 0){
 80014ca:	4b4d      	ldr	r3, [pc, #308]	; (8001600 <timerRun+0x14c>)
 80014cc:	681b      	ldr	r3, [r3, #0]
 80014ce:	2b00      	cmp	r3, #0
 80014d0:	d102      	bne.n	80014d8 <timerRun+0x24>
			timer1_flag = 1;
 80014d2:	4b4c      	ldr	r3, [pc, #304]	; (8001604 <timerRun+0x150>)
 80014d4:	2201      	movs	r2, #1
 80014d6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer2_counter > 0){
 80014d8:	4b4b      	ldr	r3, [pc, #300]	; (8001608 <timerRun+0x154>)
 80014da:	681b      	ldr	r3, [r3, #0]
 80014dc:	2b00      	cmp	r3, #0
 80014de:	dd0b      	ble.n	80014f8 <timerRun+0x44>
		timer2_counter--;
 80014e0:	4b49      	ldr	r3, [pc, #292]	; (8001608 <timerRun+0x154>)
 80014e2:	681b      	ldr	r3, [r3, #0]
 80014e4:	3b01      	subs	r3, #1
 80014e6:	4a48      	ldr	r2, [pc, #288]	; (8001608 <timerRun+0x154>)
 80014e8:	6013      	str	r3, [r2, #0]
		if(timer2_counter == 0){
 80014ea:	4b47      	ldr	r3, [pc, #284]	; (8001608 <timerRun+0x154>)
 80014ec:	681b      	ldr	r3, [r3, #0]
 80014ee:	2b00      	cmp	r3, #0
 80014f0:	d102      	bne.n	80014f8 <timerRun+0x44>
			timer2_flag = 1;
 80014f2:	4b46      	ldr	r3, [pc, #280]	; (800160c <timerRun+0x158>)
 80014f4:	2201      	movs	r2, #1
 80014f6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer3_counter > 0){
 80014f8:	4b45      	ldr	r3, [pc, #276]	; (8001610 <timerRun+0x15c>)
 80014fa:	681b      	ldr	r3, [r3, #0]
 80014fc:	2b00      	cmp	r3, #0
 80014fe:	dd0b      	ble.n	8001518 <timerRun+0x64>
		timer3_counter--;
 8001500:	4b43      	ldr	r3, [pc, #268]	; (8001610 <timerRun+0x15c>)
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	3b01      	subs	r3, #1
 8001506:	4a42      	ldr	r2, [pc, #264]	; (8001610 <timerRun+0x15c>)
 8001508:	6013      	str	r3, [r2, #0]
		if(timer3_counter == 0){
 800150a:	4b41      	ldr	r3, [pc, #260]	; (8001610 <timerRun+0x15c>)
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	2b00      	cmp	r3, #0
 8001510:	d102      	bne.n	8001518 <timerRun+0x64>
			timer3_flag = 1;
 8001512:	4b40      	ldr	r3, [pc, #256]	; (8001614 <timerRun+0x160>)
 8001514:	2201      	movs	r2, #1
 8001516:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer4_counter > 0){
 8001518:	4b3f      	ldr	r3, [pc, #252]	; (8001618 <timerRun+0x164>)
 800151a:	681b      	ldr	r3, [r3, #0]
 800151c:	2b00      	cmp	r3, #0
 800151e:	dd0b      	ble.n	8001538 <timerRun+0x84>
		timer4_counter--;
 8001520:	4b3d      	ldr	r3, [pc, #244]	; (8001618 <timerRun+0x164>)
 8001522:	681b      	ldr	r3, [r3, #0]
 8001524:	3b01      	subs	r3, #1
 8001526:	4a3c      	ldr	r2, [pc, #240]	; (8001618 <timerRun+0x164>)
 8001528:	6013      	str	r3, [r2, #0]
		if(timer4_counter == 0){
 800152a:	4b3b      	ldr	r3, [pc, #236]	; (8001618 <timerRun+0x164>)
 800152c:	681b      	ldr	r3, [r3, #0]
 800152e:	2b00      	cmp	r3, #0
 8001530:	d102      	bne.n	8001538 <timerRun+0x84>
			timer4_flag = 1;
 8001532:	4b3a      	ldr	r3, [pc, #232]	; (800161c <timerRun+0x168>)
 8001534:	2201      	movs	r2, #1
 8001536:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer5_counter > 0){
 8001538:	4b39      	ldr	r3, [pc, #228]	; (8001620 <timerRun+0x16c>)
 800153a:	681b      	ldr	r3, [r3, #0]
 800153c:	2b00      	cmp	r3, #0
 800153e:	dd0b      	ble.n	8001558 <timerRun+0xa4>
		timer5_counter--;
 8001540:	4b37      	ldr	r3, [pc, #220]	; (8001620 <timerRun+0x16c>)
 8001542:	681b      	ldr	r3, [r3, #0]
 8001544:	3b01      	subs	r3, #1
 8001546:	4a36      	ldr	r2, [pc, #216]	; (8001620 <timerRun+0x16c>)
 8001548:	6013      	str	r3, [r2, #0]
		if(timer5_counter == 0){
 800154a:	4b35      	ldr	r3, [pc, #212]	; (8001620 <timerRun+0x16c>)
 800154c:	681b      	ldr	r3, [r3, #0]
 800154e:	2b00      	cmp	r3, #0
 8001550:	d102      	bne.n	8001558 <timerRun+0xa4>
			timer5_flag = 1;
 8001552:	4b34      	ldr	r3, [pc, #208]	; (8001624 <timerRun+0x170>)
 8001554:	2201      	movs	r2, #1
 8001556:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer6_counter > 0){
 8001558:	4b33      	ldr	r3, [pc, #204]	; (8001628 <timerRun+0x174>)
 800155a:	681b      	ldr	r3, [r3, #0]
 800155c:	2b00      	cmp	r3, #0
 800155e:	dd0b      	ble.n	8001578 <timerRun+0xc4>
		timer6_counter--;
 8001560:	4b31      	ldr	r3, [pc, #196]	; (8001628 <timerRun+0x174>)
 8001562:	681b      	ldr	r3, [r3, #0]
 8001564:	3b01      	subs	r3, #1
 8001566:	4a30      	ldr	r2, [pc, #192]	; (8001628 <timerRun+0x174>)
 8001568:	6013      	str	r3, [r2, #0]
		if(timer6_counter == 0){
 800156a:	4b2f      	ldr	r3, [pc, #188]	; (8001628 <timerRun+0x174>)
 800156c:	681b      	ldr	r3, [r3, #0]
 800156e:	2b00      	cmp	r3, #0
 8001570:	d102      	bne.n	8001578 <timerRun+0xc4>
			timer6_flag = 1;
 8001572:	4b2e      	ldr	r3, [pc, #184]	; (800162c <timerRun+0x178>)
 8001574:	2201      	movs	r2, #1
 8001576:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer7_counter > 0){
 8001578:	4b2d      	ldr	r3, [pc, #180]	; (8001630 <timerRun+0x17c>)
 800157a:	681b      	ldr	r3, [r3, #0]
 800157c:	2b00      	cmp	r3, #0
 800157e:	dd0b      	ble.n	8001598 <timerRun+0xe4>
		timer7_counter--;
 8001580:	4b2b      	ldr	r3, [pc, #172]	; (8001630 <timerRun+0x17c>)
 8001582:	681b      	ldr	r3, [r3, #0]
 8001584:	3b01      	subs	r3, #1
 8001586:	4a2a      	ldr	r2, [pc, #168]	; (8001630 <timerRun+0x17c>)
 8001588:	6013      	str	r3, [r2, #0]
		if(timer7_counter == 0){
 800158a:	4b29      	ldr	r3, [pc, #164]	; (8001630 <timerRun+0x17c>)
 800158c:	681b      	ldr	r3, [r3, #0]
 800158e:	2b00      	cmp	r3, #0
 8001590:	d102      	bne.n	8001598 <timerRun+0xe4>
			timer7_flag = 1;
 8001592:	4b28      	ldr	r3, [pc, #160]	; (8001634 <timerRun+0x180>)
 8001594:	2201      	movs	r2, #1
 8001596:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer8_counter > 0){
 8001598:	4b27      	ldr	r3, [pc, #156]	; (8001638 <timerRun+0x184>)
 800159a:	681b      	ldr	r3, [r3, #0]
 800159c:	2b00      	cmp	r3, #0
 800159e:	dd0b      	ble.n	80015b8 <timerRun+0x104>
		timer8_counter--;
 80015a0:	4b25      	ldr	r3, [pc, #148]	; (8001638 <timerRun+0x184>)
 80015a2:	681b      	ldr	r3, [r3, #0]
 80015a4:	3b01      	subs	r3, #1
 80015a6:	4a24      	ldr	r2, [pc, #144]	; (8001638 <timerRun+0x184>)
 80015a8:	6013      	str	r3, [r2, #0]
		if(timer8_counter == 0){
 80015aa:	4b23      	ldr	r3, [pc, #140]	; (8001638 <timerRun+0x184>)
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	2b00      	cmp	r3, #0
 80015b0:	d102      	bne.n	80015b8 <timerRun+0x104>
			timer8_flag = 1;
 80015b2:	4b22      	ldr	r3, [pc, #136]	; (800163c <timerRun+0x188>)
 80015b4:	2201      	movs	r2, #1
 80015b6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer9_counter > 0){
 80015b8:	4b21      	ldr	r3, [pc, #132]	; (8001640 <timerRun+0x18c>)
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	2b00      	cmp	r3, #0
 80015be:	dd0b      	ble.n	80015d8 <timerRun+0x124>
		timer9_counter--;
 80015c0:	4b1f      	ldr	r3, [pc, #124]	; (8001640 <timerRun+0x18c>)
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	3b01      	subs	r3, #1
 80015c6:	4a1e      	ldr	r2, [pc, #120]	; (8001640 <timerRun+0x18c>)
 80015c8:	6013      	str	r3, [r2, #0]
		if(timer9_counter == 0){
 80015ca:	4b1d      	ldr	r3, [pc, #116]	; (8001640 <timerRun+0x18c>)
 80015cc:	681b      	ldr	r3, [r3, #0]
 80015ce:	2b00      	cmp	r3, #0
 80015d0:	d102      	bne.n	80015d8 <timerRun+0x124>
			timer9_flag = 1;
 80015d2:	4b1c      	ldr	r3, [pc, #112]	; (8001644 <timerRun+0x190>)
 80015d4:	2201      	movs	r2, #1
 80015d6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer10_counter > 0){
 80015d8:	4b1b      	ldr	r3, [pc, #108]	; (8001648 <timerRun+0x194>)
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	2b00      	cmp	r3, #0
 80015de:	dd0b      	ble.n	80015f8 <timerRun+0x144>
		timer10_counter--;
 80015e0:	4b19      	ldr	r3, [pc, #100]	; (8001648 <timerRun+0x194>)
 80015e2:	681b      	ldr	r3, [r3, #0]
 80015e4:	3b01      	subs	r3, #1
 80015e6:	4a18      	ldr	r2, [pc, #96]	; (8001648 <timerRun+0x194>)
 80015e8:	6013      	str	r3, [r2, #0]
		if(timer10_counter == 0){
 80015ea:	4b17      	ldr	r3, [pc, #92]	; (8001648 <timerRun+0x194>)
 80015ec:	681b      	ldr	r3, [r3, #0]
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d102      	bne.n	80015f8 <timerRun+0x144>
			timer10_flag = 1;
 80015f2:	4b16      	ldr	r3, [pc, #88]	; (800164c <timerRun+0x198>)
 80015f4:	2201      	movs	r2, #1
 80015f6:	601a      	str	r2, [r3, #0]
		}
	}
}
 80015f8:	bf00      	nop
 80015fa:	46bd      	mov	sp, r7
 80015fc:	bc80      	pop	{r7}
 80015fe:	4770      	bx	lr
 8001600:	20000624 	.word	0x20000624
 8001604:	20000628 	.word	0x20000628
 8001608:	2000062c 	.word	0x2000062c
 800160c:	20000630 	.word	0x20000630
 8001610:	20000634 	.word	0x20000634
 8001614:	20000638 	.word	0x20000638
 8001618:	2000063c 	.word	0x2000063c
 800161c:	20000640 	.word	0x20000640
 8001620:	20000644 	.word	0x20000644
 8001624:	20000648 	.word	0x20000648
 8001628:	2000064c 	.word	0x2000064c
 800162c:	20000650 	.word	0x20000650
 8001630:	20000654 	.word	0x20000654
 8001634:	20000658 	.word	0x20000658
 8001638:	2000065c 	.word	0x2000065c
 800163c:	20000660 	.word	0x20000660
 8001640:	20000664 	.word	0x20000664
 8001644:	20000668 	.word	0x20000668
 8001648:	2000066c 	.word	0x2000066c
 800164c:	20000670 	.word	0x20000670

08001650 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001650:	b480      	push	{r7}
 8001652:	b085      	sub	sp, #20
 8001654:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8001656:	4b15      	ldr	r3, [pc, #84]	; (80016ac <HAL_MspInit+0x5c>)
 8001658:	699b      	ldr	r3, [r3, #24]
 800165a:	4a14      	ldr	r2, [pc, #80]	; (80016ac <HAL_MspInit+0x5c>)
 800165c:	f043 0301 	orr.w	r3, r3, #1
 8001660:	6193      	str	r3, [r2, #24]
 8001662:	4b12      	ldr	r3, [pc, #72]	; (80016ac <HAL_MspInit+0x5c>)
 8001664:	699b      	ldr	r3, [r3, #24]
 8001666:	f003 0301 	and.w	r3, r3, #1
 800166a:	60bb      	str	r3, [r7, #8]
 800166c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 800166e:	4b0f      	ldr	r3, [pc, #60]	; (80016ac <HAL_MspInit+0x5c>)
 8001670:	69db      	ldr	r3, [r3, #28]
 8001672:	4a0e      	ldr	r2, [pc, #56]	; (80016ac <HAL_MspInit+0x5c>)
 8001674:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001678:	61d3      	str	r3, [r2, #28]
 800167a:	4b0c      	ldr	r3, [pc, #48]	; (80016ac <HAL_MspInit+0x5c>)
 800167c:	69db      	ldr	r3, [r3, #28]
 800167e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001682:	607b      	str	r3, [r7, #4]
 8001684:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8001686:	4b0a      	ldr	r3, [pc, #40]	; (80016b0 <HAL_MspInit+0x60>)
 8001688:	685b      	ldr	r3, [r3, #4]
 800168a:	60fb      	str	r3, [r7, #12]
 800168c:	68fb      	ldr	r3, [r7, #12]
 800168e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8001692:	60fb      	str	r3, [r7, #12]
 8001694:	68fb      	ldr	r3, [r7, #12]
 8001696:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800169a:	60fb      	str	r3, [r7, #12]
 800169c:	4a04      	ldr	r2, [pc, #16]	; (80016b0 <HAL_MspInit+0x60>)
 800169e:	68fb      	ldr	r3, [r7, #12]
 80016a0:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80016a2:	bf00      	nop
 80016a4:	3714      	adds	r7, #20
 80016a6:	46bd      	mov	sp, r7
 80016a8:	bc80      	pop	{r7}
 80016aa:	4770      	bx	lr
 80016ac:	40021000 	.word	0x40021000
 80016b0:	40010000 	.word	0x40010000

080016b4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80016b4:	b580      	push	{r7, lr}
 80016b6:	b08a      	sub	sp, #40	; 0x28
 80016b8:	af00      	add	r7, sp, #0
 80016ba:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016bc:	f107 0314 	add.w	r3, r7, #20
 80016c0:	2200      	movs	r2, #0
 80016c2:	601a      	str	r2, [r3, #0]
 80016c4:	605a      	str	r2, [r3, #4]
 80016c6:	609a      	str	r2, [r3, #8]
 80016c8:	60da      	str	r2, [r3, #12]
  if(hi2c->Instance==I2C1)
 80016ca:	687b      	ldr	r3, [r7, #4]
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	4a1d      	ldr	r2, [pc, #116]	; (8001744 <HAL_I2C_MspInit+0x90>)
 80016d0:	4293      	cmp	r3, r2
 80016d2:	d132      	bne.n	800173a <HAL_I2C_MspInit+0x86>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80016d4:	4b1c      	ldr	r3, [pc, #112]	; (8001748 <HAL_I2C_MspInit+0x94>)
 80016d6:	699b      	ldr	r3, [r3, #24]
 80016d8:	4a1b      	ldr	r2, [pc, #108]	; (8001748 <HAL_I2C_MspInit+0x94>)
 80016da:	f043 0308 	orr.w	r3, r3, #8
 80016de:	6193      	str	r3, [r2, #24]
 80016e0:	4b19      	ldr	r3, [pc, #100]	; (8001748 <HAL_I2C_MspInit+0x94>)
 80016e2:	699b      	ldr	r3, [r3, #24]
 80016e4:	f003 0308 	and.w	r3, r3, #8
 80016e8:	613b      	str	r3, [r7, #16]
 80016ea:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80016ec:	f44f 7340 	mov.w	r3, #768	; 0x300
 80016f0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80016f2:	2312      	movs	r3, #18
 80016f4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80016f6:	2303      	movs	r3, #3
 80016f8:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80016fa:	f107 0314 	add.w	r3, r7, #20
 80016fe:	4619      	mov	r1, r3
 8001700:	4812      	ldr	r0, [pc, #72]	; (800174c <HAL_I2C_MspInit+0x98>)
 8001702:	f000 fe1f 	bl	8002344 <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_I2C1_ENABLE();
 8001706:	4b12      	ldr	r3, [pc, #72]	; (8001750 <HAL_I2C_MspInit+0x9c>)
 8001708:	685b      	ldr	r3, [r3, #4]
 800170a:	627b      	str	r3, [r7, #36]	; 0x24
 800170c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800170e:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8001712:	627b      	str	r3, [r7, #36]	; 0x24
 8001714:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001716:	f043 0302 	orr.w	r3, r3, #2
 800171a:	627b      	str	r3, [r7, #36]	; 0x24
 800171c:	4a0c      	ldr	r2, [pc, #48]	; (8001750 <HAL_I2C_MspInit+0x9c>)
 800171e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001720:	6053      	str	r3, [r2, #4]

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001722:	4b09      	ldr	r3, [pc, #36]	; (8001748 <HAL_I2C_MspInit+0x94>)
 8001724:	69db      	ldr	r3, [r3, #28]
 8001726:	4a08      	ldr	r2, [pc, #32]	; (8001748 <HAL_I2C_MspInit+0x94>)
 8001728:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800172c:	61d3      	str	r3, [r2, #28]
 800172e:	4b06      	ldr	r3, [pc, #24]	; (8001748 <HAL_I2C_MspInit+0x94>)
 8001730:	69db      	ldr	r3, [r3, #28]
 8001732:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001736:	60fb      	str	r3, [r7, #12]
 8001738:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 800173a:	bf00      	nop
 800173c:	3728      	adds	r7, #40	; 0x28
 800173e:	46bd      	mov	sp, r7
 8001740:	bd80      	pop	{r7, pc}
 8001742:	bf00      	nop
 8001744:	40005400 	.word	0x40005400
 8001748:	40021000 	.word	0x40021000
 800174c:	40010c00 	.word	0x40010c00
 8001750:	40010000 	.word	0x40010000

08001754 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001754:	b580      	push	{r7, lr}
 8001756:	b084      	sub	sp, #16
 8001758:	af00      	add	r7, sp, #0
 800175a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 800175c:	687b      	ldr	r3, [r7, #4]
 800175e:	681b      	ldr	r3, [r3, #0]
 8001760:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001764:	d113      	bne.n	800178e <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001766:	4b0c      	ldr	r3, [pc, #48]	; (8001798 <HAL_TIM_Base_MspInit+0x44>)
 8001768:	69db      	ldr	r3, [r3, #28]
 800176a:	4a0b      	ldr	r2, [pc, #44]	; (8001798 <HAL_TIM_Base_MspInit+0x44>)
 800176c:	f043 0301 	orr.w	r3, r3, #1
 8001770:	61d3      	str	r3, [r2, #28]
 8001772:	4b09      	ldr	r3, [pc, #36]	; (8001798 <HAL_TIM_Base_MspInit+0x44>)
 8001774:	69db      	ldr	r3, [r3, #28]
 8001776:	f003 0301 	and.w	r3, r3, #1
 800177a:	60fb      	str	r3, [r7, #12]
 800177c:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800177e:	2200      	movs	r2, #0
 8001780:	2100      	movs	r1, #0
 8001782:	201c      	movs	r0, #28
 8001784:	f000 fcf7 	bl	8002176 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001788:	201c      	movs	r0, #28
 800178a:	f000 fd10 	bl	80021ae <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 800178e:	bf00      	nop
 8001790:	3710      	adds	r7, #16
 8001792:	46bd      	mov	sp, r7
 8001794:	bd80      	pop	{r7, pc}
 8001796:	bf00      	nop
 8001798:	40021000 	.word	0x40021000

0800179c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800179c:	b580      	push	{r7, lr}
 800179e:	b088      	sub	sp, #32
 80017a0:	af00      	add	r7, sp, #0
 80017a2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017a4:	f107 0310 	add.w	r3, r7, #16
 80017a8:	2200      	movs	r2, #0
 80017aa:	601a      	str	r2, [r3, #0]
 80017ac:	605a      	str	r2, [r3, #4]
 80017ae:	609a      	str	r2, [r3, #8]
 80017b0:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART2)
 80017b2:	687b      	ldr	r3, [r7, #4]
 80017b4:	681b      	ldr	r3, [r3, #0]
 80017b6:	4a1f      	ldr	r2, [pc, #124]	; (8001834 <HAL_UART_MspInit+0x98>)
 80017b8:	4293      	cmp	r3, r2
 80017ba:	d137      	bne.n	800182c <HAL_UART_MspInit+0x90>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80017bc:	4b1e      	ldr	r3, [pc, #120]	; (8001838 <HAL_UART_MspInit+0x9c>)
 80017be:	69db      	ldr	r3, [r3, #28]
 80017c0:	4a1d      	ldr	r2, [pc, #116]	; (8001838 <HAL_UART_MspInit+0x9c>)
 80017c2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80017c6:	61d3      	str	r3, [r2, #28]
 80017c8:	4b1b      	ldr	r3, [pc, #108]	; (8001838 <HAL_UART_MspInit+0x9c>)
 80017ca:	69db      	ldr	r3, [r3, #28]
 80017cc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80017d0:	60fb      	str	r3, [r7, #12]
 80017d2:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80017d4:	4b18      	ldr	r3, [pc, #96]	; (8001838 <HAL_UART_MspInit+0x9c>)
 80017d6:	699b      	ldr	r3, [r3, #24]
 80017d8:	4a17      	ldr	r2, [pc, #92]	; (8001838 <HAL_UART_MspInit+0x9c>)
 80017da:	f043 0304 	orr.w	r3, r3, #4
 80017de:	6193      	str	r3, [r2, #24]
 80017e0:	4b15      	ldr	r3, [pc, #84]	; (8001838 <HAL_UART_MspInit+0x9c>)
 80017e2:	699b      	ldr	r3, [r3, #24]
 80017e4:	f003 0304 	and.w	r3, r3, #4
 80017e8:	60bb      	str	r3, [r7, #8]
 80017ea:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80017ec:	2304      	movs	r3, #4
 80017ee:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017f0:	2302      	movs	r3, #2
 80017f2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80017f4:	2303      	movs	r3, #3
 80017f6:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017f8:	f107 0310 	add.w	r3, r7, #16
 80017fc:	4619      	mov	r1, r3
 80017fe:	480f      	ldr	r0, [pc, #60]	; (800183c <HAL_UART_MspInit+0xa0>)
 8001800:	f000 fda0 	bl	8002344 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001804:	2308      	movs	r3, #8
 8001806:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001808:	2300      	movs	r3, #0
 800180a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800180c:	2300      	movs	r3, #0
 800180e:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001810:	f107 0310 	add.w	r3, r7, #16
 8001814:	4619      	mov	r1, r3
 8001816:	4809      	ldr	r0, [pc, #36]	; (800183c <HAL_UART_MspInit+0xa0>)
 8001818:	f000 fd94 	bl	8002344 <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800181c:	2200      	movs	r2, #0
 800181e:	2100      	movs	r1, #0
 8001820:	2026      	movs	r0, #38	; 0x26
 8001822:	f000 fca8 	bl	8002176 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001826:	2026      	movs	r0, #38	; 0x26
 8001828:	f000 fcc1 	bl	80021ae <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800182c:	bf00      	nop
 800182e:	3720      	adds	r7, #32
 8001830:	46bd      	mov	sp, r7
 8001832:	bd80      	pop	{r7, pc}
 8001834:	40004400 	.word	0x40004400
 8001838:	40021000 	.word	0x40021000
 800183c:	40010800 	.word	0x40010800

08001840 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001840:	b480      	push	{r7}
 8001842:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001844:	e7fe      	b.n	8001844 <NMI_Handler+0x4>

08001846 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001846:	b480      	push	{r7}
 8001848:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800184a:	e7fe      	b.n	800184a <HardFault_Handler+0x4>

0800184c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800184c:	b480      	push	{r7}
 800184e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001850:	e7fe      	b.n	8001850 <MemManage_Handler+0x4>

08001852 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001852:	b480      	push	{r7}
 8001854:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001856:	e7fe      	b.n	8001856 <BusFault_Handler+0x4>

08001858 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001858:	b480      	push	{r7}
 800185a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800185c:	e7fe      	b.n	800185c <UsageFault_Handler+0x4>

0800185e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800185e:	b480      	push	{r7}
 8001860:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001862:	bf00      	nop
 8001864:	46bd      	mov	sp, r7
 8001866:	bc80      	pop	{r7}
 8001868:	4770      	bx	lr

0800186a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800186a:	b480      	push	{r7}
 800186c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800186e:	bf00      	nop
 8001870:	46bd      	mov	sp, r7
 8001872:	bc80      	pop	{r7}
 8001874:	4770      	bx	lr

08001876 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001876:	b480      	push	{r7}
 8001878:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800187a:	bf00      	nop
 800187c:	46bd      	mov	sp, r7
 800187e:	bc80      	pop	{r7}
 8001880:	4770      	bx	lr

08001882 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001882:	b580      	push	{r7, lr}
 8001884:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001886:	f000 fb5f 	bl	8001f48 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800188a:	bf00      	nop
 800188c:	bd80      	pop	{r7, pc}
	...

08001890 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001890:	b580      	push	{r7, lr}
 8001892:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001894:	4802      	ldr	r0, [pc, #8]	; (80018a0 <TIM2_IRQHandler+0x10>)
 8001896:	f002 fca9 	bl	80041ec <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800189a:	bf00      	nop
 800189c:	bd80      	pop	{r7, pc}
 800189e:	bf00      	nop
 80018a0:	20000278 	.word	0x20000278

080018a4 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 80018a4:	b580      	push	{r7, lr}
 80018a6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 80018a8:	4802      	ldr	r0, [pc, #8]	; (80018b4 <USART2_IRQHandler+0x10>)
 80018aa:	f003 f907 	bl	8004abc <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 80018ae:	bf00      	nop
 80018b0:	bd80      	pop	{r7, pc}
 80018b2:	bf00      	nop
 80018b4:	200002c0 	.word	0x200002c0

080018b8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80018b8:	b480      	push	{r7}
 80018ba:	af00      	add	r7, sp, #0
  return 1;
 80018bc:	2301      	movs	r3, #1
}
 80018be:	4618      	mov	r0, r3
 80018c0:	46bd      	mov	sp, r7
 80018c2:	bc80      	pop	{r7}
 80018c4:	4770      	bx	lr

080018c6 <_kill>:

int _kill(int pid, int sig)
{
 80018c6:	b580      	push	{r7, lr}
 80018c8:	b082      	sub	sp, #8
 80018ca:	af00      	add	r7, sp, #0
 80018cc:	6078      	str	r0, [r7, #4]
 80018ce:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80018d0:	f003 fd1c 	bl	800530c <__errno>
 80018d4:	4603      	mov	r3, r0
 80018d6:	2216      	movs	r2, #22
 80018d8:	601a      	str	r2, [r3, #0]
  return -1;
 80018da:	f04f 33ff 	mov.w	r3, #4294967295
}
 80018de:	4618      	mov	r0, r3
 80018e0:	3708      	adds	r7, #8
 80018e2:	46bd      	mov	sp, r7
 80018e4:	bd80      	pop	{r7, pc}

080018e6 <_exit>:

void _exit (int status)
{
 80018e6:	b580      	push	{r7, lr}
 80018e8:	b082      	sub	sp, #8
 80018ea:	af00      	add	r7, sp, #0
 80018ec:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80018ee:	f04f 31ff 	mov.w	r1, #4294967295
 80018f2:	6878      	ldr	r0, [r7, #4]
 80018f4:	f7ff ffe7 	bl	80018c6 <_kill>
  while (1) {}    /* Make sure we hang here */
 80018f8:	e7fe      	b.n	80018f8 <_exit+0x12>

080018fa <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80018fa:	b580      	push	{r7, lr}
 80018fc:	b086      	sub	sp, #24
 80018fe:	af00      	add	r7, sp, #0
 8001900:	60f8      	str	r0, [r7, #12]
 8001902:	60b9      	str	r1, [r7, #8]
 8001904:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001906:	2300      	movs	r3, #0
 8001908:	617b      	str	r3, [r7, #20]
 800190a:	e00a      	b.n	8001922 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800190c:	f3af 8000 	nop.w
 8001910:	4601      	mov	r1, r0
 8001912:	68bb      	ldr	r3, [r7, #8]
 8001914:	1c5a      	adds	r2, r3, #1
 8001916:	60ba      	str	r2, [r7, #8]
 8001918:	b2ca      	uxtb	r2, r1
 800191a:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800191c:	697b      	ldr	r3, [r7, #20]
 800191e:	3301      	adds	r3, #1
 8001920:	617b      	str	r3, [r7, #20]
 8001922:	697a      	ldr	r2, [r7, #20]
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	429a      	cmp	r2, r3
 8001928:	dbf0      	blt.n	800190c <_read+0x12>
  }

  return len;
 800192a:	687b      	ldr	r3, [r7, #4]
}
 800192c:	4618      	mov	r0, r3
 800192e:	3718      	adds	r7, #24
 8001930:	46bd      	mov	sp, r7
 8001932:	bd80      	pop	{r7, pc}

08001934 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001934:	b580      	push	{r7, lr}
 8001936:	b086      	sub	sp, #24
 8001938:	af00      	add	r7, sp, #0
 800193a:	60f8      	str	r0, [r7, #12]
 800193c:	60b9      	str	r1, [r7, #8]
 800193e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001940:	2300      	movs	r3, #0
 8001942:	617b      	str	r3, [r7, #20]
 8001944:	e009      	b.n	800195a <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001946:	68bb      	ldr	r3, [r7, #8]
 8001948:	1c5a      	adds	r2, r3, #1
 800194a:	60ba      	str	r2, [r7, #8]
 800194c:	781b      	ldrb	r3, [r3, #0]
 800194e:	4618      	mov	r0, r3
 8001950:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001954:	697b      	ldr	r3, [r7, #20]
 8001956:	3301      	adds	r3, #1
 8001958:	617b      	str	r3, [r7, #20]
 800195a:	697a      	ldr	r2, [r7, #20]
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	429a      	cmp	r2, r3
 8001960:	dbf1      	blt.n	8001946 <_write+0x12>
  }
  return len;
 8001962:	687b      	ldr	r3, [r7, #4]
}
 8001964:	4618      	mov	r0, r3
 8001966:	3718      	adds	r7, #24
 8001968:	46bd      	mov	sp, r7
 800196a:	bd80      	pop	{r7, pc}

0800196c <_close>:

int _close(int file)
{
 800196c:	b480      	push	{r7}
 800196e:	b083      	sub	sp, #12
 8001970:	af00      	add	r7, sp, #0
 8001972:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001974:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001978:	4618      	mov	r0, r3
 800197a:	370c      	adds	r7, #12
 800197c:	46bd      	mov	sp, r7
 800197e:	bc80      	pop	{r7}
 8001980:	4770      	bx	lr

08001982 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001982:	b480      	push	{r7}
 8001984:	b083      	sub	sp, #12
 8001986:	af00      	add	r7, sp, #0
 8001988:	6078      	str	r0, [r7, #4]
 800198a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800198c:	683b      	ldr	r3, [r7, #0]
 800198e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8001992:	605a      	str	r2, [r3, #4]
  return 0;
 8001994:	2300      	movs	r3, #0
}
 8001996:	4618      	mov	r0, r3
 8001998:	370c      	adds	r7, #12
 800199a:	46bd      	mov	sp, r7
 800199c:	bc80      	pop	{r7}
 800199e:	4770      	bx	lr

080019a0 <_isatty>:

int _isatty(int file)
{
 80019a0:	b480      	push	{r7}
 80019a2:	b083      	sub	sp, #12
 80019a4:	af00      	add	r7, sp, #0
 80019a6:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80019a8:	2301      	movs	r3, #1
}
 80019aa:	4618      	mov	r0, r3
 80019ac:	370c      	adds	r7, #12
 80019ae:	46bd      	mov	sp, r7
 80019b0:	bc80      	pop	{r7}
 80019b2:	4770      	bx	lr

080019b4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80019b4:	b480      	push	{r7}
 80019b6:	b085      	sub	sp, #20
 80019b8:	af00      	add	r7, sp, #0
 80019ba:	60f8      	str	r0, [r7, #12]
 80019bc:	60b9      	str	r1, [r7, #8]
 80019be:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80019c0:	2300      	movs	r3, #0
}
 80019c2:	4618      	mov	r0, r3
 80019c4:	3714      	adds	r7, #20
 80019c6:	46bd      	mov	sp, r7
 80019c8:	bc80      	pop	{r7}
 80019ca:	4770      	bx	lr

080019cc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80019cc:	b580      	push	{r7, lr}
 80019ce:	b086      	sub	sp, #24
 80019d0:	af00      	add	r7, sp, #0
 80019d2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80019d4:	4a14      	ldr	r2, [pc, #80]	; (8001a28 <_sbrk+0x5c>)
 80019d6:	4b15      	ldr	r3, [pc, #84]	; (8001a2c <_sbrk+0x60>)
 80019d8:	1ad3      	subs	r3, r2, r3
 80019da:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80019dc:	697b      	ldr	r3, [r7, #20]
 80019de:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80019e0:	4b13      	ldr	r3, [pc, #76]	; (8001a30 <_sbrk+0x64>)
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	2b00      	cmp	r3, #0
 80019e6:	d102      	bne.n	80019ee <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80019e8:	4b11      	ldr	r3, [pc, #68]	; (8001a30 <_sbrk+0x64>)
 80019ea:	4a12      	ldr	r2, [pc, #72]	; (8001a34 <_sbrk+0x68>)
 80019ec:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80019ee:	4b10      	ldr	r3, [pc, #64]	; (8001a30 <_sbrk+0x64>)
 80019f0:	681a      	ldr	r2, [r3, #0]
 80019f2:	687b      	ldr	r3, [r7, #4]
 80019f4:	4413      	add	r3, r2
 80019f6:	693a      	ldr	r2, [r7, #16]
 80019f8:	429a      	cmp	r2, r3
 80019fa:	d207      	bcs.n	8001a0c <_sbrk+0x40>
  {
    errno = ENOMEM;
 80019fc:	f003 fc86 	bl	800530c <__errno>
 8001a00:	4603      	mov	r3, r0
 8001a02:	220c      	movs	r2, #12
 8001a04:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001a06:	f04f 33ff 	mov.w	r3, #4294967295
 8001a0a:	e009      	b.n	8001a20 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001a0c:	4b08      	ldr	r3, [pc, #32]	; (8001a30 <_sbrk+0x64>)
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001a12:	4b07      	ldr	r3, [pc, #28]	; (8001a30 <_sbrk+0x64>)
 8001a14:	681a      	ldr	r2, [r3, #0]
 8001a16:	687b      	ldr	r3, [r7, #4]
 8001a18:	4413      	add	r3, r2
 8001a1a:	4a05      	ldr	r2, [pc, #20]	; (8001a30 <_sbrk+0x64>)
 8001a1c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001a1e:	68fb      	ldr	r3, [r7, #12]
}
 8001a20:	4618      	mov	r0, r3
 8001a22:	3718      	adds	r7, #24
 8001a24:	46bd      	mov	sp, r7
 8001a26:	bd80      	pop	{r7, pc}
 8001a28:	20005000 	.word	0x20005000
 8001a2c:	00000400 	.word	0x00000400
 8001a30:	20000674 	.word	0x20000674
 8001a34:	200006c0 	.word	0x200006c0

08001a38 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001a38:	b480      	push	{r7}
 8001a3a:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001a3c:	bf00      	nop
 8001a3e:	46bd      	mov	sp, r7
 8001a40:	bc80      	pop	{r7}
 8001a42:	4770      	bx	lr

08001a44 <rst_buffer>:
uint8_t cmd_index = 0;
uint8_t buffer_idx = 0;
uint8_t cmd_flag = INIT_UART;
uint8_t counter = WAIT;

void rst_buffer(){
 8001a44:	b480      	push	{r7}
 8001a46:	b083      	sub	sp, #12
 8001a48:	af00      	add	r7, sp, #0
	for(int i=0; i<MAX_BUFFER_SIZE; i++)
 8001a4a:	2300      	movs	r3, #0
 8001a4c:	607b      	str	r3, [r7, #4]
 8001a4e:	e007      	b.n	8001a60 <rst_buffer+0x1c>
		buffer[i] = ' ';
 8001a50:	4a08      	ldr	r2, [pc, #32]	; (8001a74 <rst_buffer+0x30>)
 8001a52:	687b      	ldr	r3, [r7, #4]
 8001a54:	4413      	add	r3, r2
 8001a56:	2220      	movs	r2, #32
 8001a58:	701a      	strb	r2, [r3, #0]
	for(int i=0; i<MAX_BUFFER_SIZE; i++)
 8001a5a:	687b      	ldr	r3, [r7, #4]
 8001a5c:	3301      	adds	r3, #1
 8001a5e:	607b      	str	r3, [r7, #4]
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	2b1d      	cmp	r3, #29
 8001a64:	ddf4      	ble.n	8001a50 <rst_buffer+0xc>
}
 8001a66:	bf00      	nop
 8001a68:	bf00      	nop
 8001a6a:	370c      	adds	r7, #12
 8001a6c:	46bd      	mov	sp, r7
 8001a6e:	bc80      	pop	{r7}
 8001a70:	4770      	bx	lr
 8001a72:	bf00      	nop
 8001a74:	2000067c 	.word	0x2000067c

08001a78 <rst_cmd>:

void rst_cmd(){
 8001a78:	b480      	push	{r7}
 8001a7a:	b083      	sub	sp, #12
 8001a7c:	af00      	add	r7, sp, #0
	for(int i=0; i<MAX_CMD_SIZE; i++)
 8001a7e:	2300      	movs	r3, #0
 8001a80:	607b      	str	r3, [r7, #4]
 8001a82:	e007      	b.n	8001a94 <rst_cmd+0x1c>
		cmd_data[i] = ' ';
 8001a84:	4a08      	ldr	r2, [pc, #32]	; (8001aa8 <rst_cmd+0x30>)
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	4413      	add	r3, r2
 8001a8a:	2220      	movs	r2, #32
 8001a8c:	701a      	strb	r2, [r3, #0]
	for(int i=0; i<MAX_CMD_SIZE; i++)
 8001a8e:	687b      	ldr	r3, [r7, #4]
 8001a90:	3301      	adds	r3, #1
 8001a92:	607b      	str	r3, [r7, #4]
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	2b03      	cmp	r3, #3
 8001a98:	ddf4      	ble.n	8001a84 <rst_cmd+0xc>
}
 8001a9a:	bf00      	nop
 8001a9c:	bf00      	nop
 8001a9e:	370c      	adds	r7, #12
 8001aa0:	46bd      	mov	sp, r7
 8001aa2:	bc80      	pop	{r7}
 8001aa4:	4770      	bx	lr
 8001aa6:	bf00      	nop
 8001aa8:	200006a0 	.word	0x200006a0

08001aac <cleanUp>:

void cleanUp(){
 8001aac:	b580      	push	{r7, lr}
 8001aae:	af00      	add	r7, sp, #0
	index_buffer = 0;
 8001ab0:	4b07      	ldr	r3, [pc, #28]	; (8001ad0 <cleanUp+0x24>)
 8001ab2:	2200      	movs	r2, #0
 8001ab4:	701a      	strb	r2, [r3, #0]
	cmd_index = 0;
 8001ab6:	4b07      	ldr	r3, [pc, #28]	; (8001ad4 <cleanUp+0x28>)
 8001ab8:	2200      	movs	r2, #0
 8001aba:	701a      	strb	r2, [r3, #0]
	buffer_idx = 0;
 8001abc:	4b06      	ldr	r3, [pc, #24]	; (8001ad8 <cleanUp+0x2c>)
 8001abe:	2200      	movs	r2, #0
 8001ac0:	701a      	strb	r2, [r3, #0]
	rst_buffer();
 8001ac2:	f7ff ffbf 	bl	8001a44 <rst_buffer>
	rst_cmd();
 8001ac6:	f7ff ffd7 	bl	8001a78 <rst_cmd>
}
 8001aca:	bf00      	nop
 8001acc:	bd80      	pop	{r7, pc}
 8001ace:	bf00      	nop
 8001ad0:	2000069a 	.word	0x2000069a
 8001ad4:	200006a4 	.word	0x200006a4
 8001ad8:	200006a5 	.word	0x200006a5

08001adc <cmd_parser_fsm>:

void cmd_parser_fsm(){
 8001adc:	b580      	push	{r7, lr}
 8001ade:	af00      	add	r7, sp, #0
	switch(cmdParserStatus){
 8001ae0:	4b37      	ldr	r3, [pc, #220]	; (8001bc0 <cmd_parser_fsm+0xe4>)
 8001ae2:	781b      	ldrb	r3, [r3, #0]
 8001ae4:	2b00      	cmp	r3, #0
 8001ae6:	d002      	beq.n	8001aee <cmd_parser_fsm+0x12>
 8001ae8:	2b01      	cmp	r3, #1
 8001aea:	d011      	beq.n	8001b10 <cmd_parser_fsm+0x34>
				cmdParserStatus = INIT_UART;
				cleanUp();
			}
			break;
		default:
			break;
 8001aec:	e065      	b.n	8001bba <cmd_parser_fsm+0xde>
			if (buffer[buffer_idx] == '@'){
 8001aee:	4b35      	ldr	r3, [pc, #212]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001af0:	781b      	ldrb	r3, [r3, #0]
 8001af2:	461a      	mov	r2, r3
 8001af4:	4b34      	ldr	r3, [pc, #208]	; (8001bc8 <cmd_parser_fsm+0xec>)
 8001af6:	5c9b      	ldrb	r3, [r3, r2]
 8001af8:	2b40      	cmp	r3, #64	; 0x40
 8001afa:	d15b      	bne.n	8001bb4 <cmd_parser_fsm+0xd8>
				cmdParserStatus = READING;
 8001afc:	4b30      	ldr	r3, [pc, #192]	; (8001bc0 <cmd_parser_fsm+0xe4>)
 8001afe:	2201      	movs	r2, #1
 8001b00:	701a      	strb	r2, [r3, #0]
				buffer_idx++;
 8001b02:	4b30      	ldr	r3, [pc, #192]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b04:	781b      	ldrb	r3, [r3, #0]
 8001b06:	3301      	adds	r3, #1
 8001b08:	b2da      	uxtb	r2, r3
 8001b0a:	4b2e      	ldr	r3, [pc, #184]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b0c:	701a      	strb	r2, [r3, #0]
			break;
 8001b0e:	e051      	b.n	8001bb4 <cmd_parser_fsm+0xd8>
			if (buffer[buffer_idx] != '@' && buffer[buffer_idx] != '*'){
 8001b10:	4b2c      	ldr	r3, [pc, #176]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b12:	781b      	ldrb	r3, [r3, #0]
 8001b14:	461a      	mov	r2, r3
 8001b16:	4b2c      	ldr	r3, [pc, #176]	; (8001bc8 <cmd_parser_fsm+0xec>)
 8001b18:	5c9b      	ldrb	r3, [r3, r2]
 8001b1a:	2b40      	cmp	r3, #64	; 0x40
 8001b1c:	d01d      	beq.n	8001b5a <cmd_parser_fsm+0x7e>
 8001b1e:	4b29      	ldr	r3, [pc, #164]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b20:	781b      	ldrb	r3, [r3, #0]
 8001b22:	461a      	mov	r2, r3
 8001b24:	4b28      	ldr	r3, [pc, #160]	; (8001bc8 <cmd_parser_fsm+0xec>)
 8001b26:	5c9b      	ldrb	r3, [r3, r2]
 8001b28:	2b2a      	cmp	r3, #42	; 0x2a
 8001b2a:	d016      	beq.n	8001b5a <cmd_parser_fsm+0x7e>
				cmd_data[cmd_index] = buffer[buffer_idx];
 8001b2c:	4b25      	ldr	r3, [pc, #148]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b2e:	781b      	ldrb	r3, [r3, #0]
 8001b30:	4619      	mov	r1, r3
 8001b32:	4b26      	ldr	r3, [pc, #152]	; (8001bcc <cmd_parser_fsm+0xf0>)
 8001b34:	781b      	ldrb	r3, [r3, #0]
 8001b36:	461a      	mov	r2, r3
 8001b38:	4b23      	ldr	r3, [pc, #140]	; (8001bc8 <cmd_parser_fsm+0xec>)
 8001b3a:	5c59      	ldrb	r1, [r3, r1]
 8001b3c:	4b24      	ldr	r3, [pc, #144]	; (8001bd0 <cmd_parser_fsm+0xf4>)
 8001b3e:	5499      	strb	r1, [r3, r2]
				cmd_index++;
 8001b40:	4b22      	ldr	r3, [pc, #136]	; (8001bcc <cmd_parser_fsm+0xf0>)
 8001b42:	781b      	ldrb	r3, [r3, #0]
 8001b44:	3301      	adds	r3, #1
 8001b46:	b2da      	uxtb	r2, r3
 8001b48:	4b20      	ldr	r3, [pc, #128]	; (8001bcc <cmd_parser_fsm+0xf0>)
 8001b4a:	701a      	strb	r2, [r3, #0]
				buffer_idx++;
 8001b4c:	4b1d      	ldr	r3, [pc, #116]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b4e:	781b      	ldrb	r3, [r3, #0]
 8001b50:	3301      	adds	r3, #1
 8001b52:	b2da      	uxtb	r2, r3
 8001b54:	4b1b      	ldr	r3, [pc, #108]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b56:	701a      	strb	r2, [r3, #0]
			break;
 8001b58:	e02e      	b.n	8001bb8 <cmd_parser_fsm+0xdc>
			else if (buffer[buffer_idx] == '@'){
 8001b5a:	4b1a      	ldr	r3, [pc, #104]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b5c:	781b      	ldrb	r3, [r3, #0]
 8001b5e:	461a      	mov	r2, r3
 8001b60:	4b19      	ldr	r3, [pc, #100]	; (8001bc8 <cmd_parser_fsm+0xec>)
 8001b62:	5c9b      	ldrb	r3, [r3, r2]
 8001b64:	2b40      	cmp	r3, #64	; 0x40
 8001b66:	d109      	bne.n	8001b7c <cmd_parser_fsm+0xa0>
				cmdParserStatus = READING;
 8001b68:	4b15      	ldr	r3, [pc, #84]	; (8001bc0 <cmd_parser_fsm+0xe4>)
 8001b6a:	2201      	movs	r2, #1
 8001b6c:	701a      	strb	r2, [r3, #0]
				buffer_idx++;
 8001b6e:	4b15      	ldr	r3, [pc, #84]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b70:	781b      	ldrb	r3, [r3, #0]
 8001b72:	3301      	adds	r3, #1
 8001b74:	b2da      	uxtb	r2, r3
 8001b76:	4b13      	ldr	r3, [pc, #76]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b78:	701a      	strb	r2, [r3, #0]
			break;
 8001b7a:	e01d      	b.n	8001bb8 <cmd_parser_fsm+0xdc>
			else if (buffer[buffer_idx] == '*'){
 8001b7c:	4b11      	ldr	r3, [pc, #68]	; (8001bc4 <cmd_parser_fsm+0xe8>)
 8001b7e:	781b      	ldrb	r3, [r3, #0]
 8001b80:	461a      	mov	r2, r3
 8001b82:	4b11      	ldr	r3, [pc, #68]	; (8001bc8 <cmd_parser_fsm+0xec>)
 8001b84:	5c9b      	ldrb	r3, [r3, r2]
 8001b86:	2b2a      	cmp	r3, #42	; 0x2a
 8001b88:	d116      	bne.n	8001bb8 <cmd_parser_fsm+0xdc>
				if (cmd_data[0] == 'R') cmd_flag = isRST;
 8001b8a:	4b11      	ldr	r3, [pc, #68]	; (8001bd0 <cmd_parser_fsm+0xf4>)
 8001b8c:	781b      	ldrb	r3, [r3, #0]
 8001b8e:	2b52      	cmp	r3, #82	; 0x52
 8001b90:	d103      	bne.n	8001b9a <cmd_parser_fsm+0xbe>
 8001b92:	4b10      	ldr	r3, [pc, #64]	; (8001bd4 <cmd_parser_fsm+0xf8>)
 8001b94:	2207      	movs	r2, #7
 8001b96:	701a      	strb	r2, [r3, #0]
 8001b98:	e006      	b.n	8001ba8 <cmd_parser_fsm+0xcc>
				else if (cmd_data[0] == 'C') cmd_flag = isCAP;
 8001b9a:	4b0d      	ldr	r3, [pc, #52]	; (8001bd0 <cmd_parser_fsm+0xf4>)
 8001b9c:	781b      	ldrb	r3, [r3, #0]
 8001b9e:	2b43      	cmp	r3, #67	; 0x43
 8001ba0:	d102      	bne.n	8001ba8 <cmd_parser_fsm+0xcc>
 8001ba2:	4b0c      	ldr	r3, [pc, #48]	; (8001bd4 <cmd_parser_fsm+0xf8>)
 8001ba4:	2208      	movs	r2, #8
 8001ba6:	701a      	strb	r2, [r3, #0]
				cmdParserStatus = INIT_UART;
 8001ba8:	4b05      	ldr	r3, [pc, #20]	; (8001bc0 <cmd_parser_fsm+0xe4>)
 8001baa:	2200      	movs	r2, #0
 8001bac:	701a      	strb	r2, [r3, #0]
				cleanUp();
 8001bae:	f7ff ff7d 	bl	8001aac <cleanUp>
			break;
 8001bb2:	e001      	b.n	8001bb8 <cmd_parser_fsm+0xdc>
			break;
 8001bb4:	bf00      	nop
 8001bb6:	e000      	b.n	8001bba <cmd_parser_fsm+0xde>
			break;
 8001bb8:	bf00      	nop
	}
}
 8001bba:	bf00      	nop
 8001bbc:	bd80      	pop	{r7, pc}
 8001bbe:	bf00      	nop
 8001bc0:	2000069c 	.word	0x2000069c
 8001bc4:	200006a5 	.word	0x200006a5
 8001bc8:	2000067c 	.word	0x2000067c
 8001bcc:	200006a4 	.word	0x200006a4
 8001bd0:	200006a0 	.word	0x200006a0
 8001bd4:	200006a6 	.word	0x200006a6

08001bd8 <uart_control_fsm>:
//	}
//}

//User timer to synchronize
void uart_control_fsm()
{
 8001bd8:	b580      	push	{r7, lr}
 8001bda:	af00      	add	r7, sp, #0
	switch (cmd_flag){
 8001bdc:	4b28      	ldr	r3, [pc, #160]	; (8001c80 <uart_control_fsm+0xa8>)
 8001bde:	781b      	ldrb	r3, [r3, #0]
 8001be0:	2b0a      	cmp	r3, #10
 8001be2:	d847      	bhi.n	8001c74 <uart_control_fsm+0x9c>
 8001be4:	a201      	add	r2, pc, #4	; (adr r2, 8001bec <uart_control_fsm+0x14>)
 8001be6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001bea:	bf00      	nop
 8001bec:	08001c19 	.word	0x08001c19
 8001bf0:	08001c75 	.word	0x08001c75
 8001bf4:	08001c75 	.word	0x08001c75
 8001bf8:	08001c75 	.word	0x08001c75
 8001bfc:	08001c75 	.word	0x08001c75
 8001c00:	08001c75 	.word	0x08001c75
 8001c04:	08001c75 	.word	0x08001c75
 8001c08:	08001c6d 	.word	0x08001c6d
 8001c0c:	08001c45 	.word	0x08001c45
 8001c10:	08001c27 	.word	0x08001c27
 8001c14:	08001c59 	.word	0x08001c59
		case INIT_UART:
			cmd_flag = AUTO;
 8001c18:	4b19      	ldr	r3, [pc, #100]	; (8001c80 <uart_control_fsm+0xa8>)
 8001c1a:	2209      	movs	r2, #9
 8001c1c:	701a      	strb	r2, [r3, #0]
			setTimer2(1);
 8001c1e:	2001      	movs	r0, #1
 8001c20:	f7ff fc20 	bl	8001464 <setTimer2>
			break;
 8001c24:	e029      	b.n	8001c7a <uart_control_fsm+0xa2>
		case AUTO:
			if (timer2_flag == 1){
 8001c26:	4b17      	ldr	r3, [pc, #92]	; (8001c84 <uart_control_fsm+0xac>)
 8001c28:	681b      	ldr	r3, [r3, #0]
 8001c2a:	2b01      	cmp	r3, #1
 8001c2c:	d107      	bne.n	8001c3e <uart_control_fsm+0x66>
				turnLedOn();
 8001c2e:	f7ff fa13 	bl	8001058 <turnLedOn>
				dht20_output();
 8001c32:	f7ff f833 	bl	8000c9c <dht20_output>
				setTimer2(1000);
 8001c36:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001c3a:	f7ff fc13 	bl	8001464 <setTimer2>
			}
			turnLedOff();
 8001c3e:	f7ff fa17 	bl	8001070 <turnLedOff>
			break;
 8001c42:	e01a      	b.n	8001c7a <uart_control_fsm+0xa2>
		case isCAP:
			setTimer3(1000);
 8001c44:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001c48:	f7ff fc20 	bl	800148c <setTimer3>
			cmd_flag = WAIT;
 8001c4c:	4b0c      	ldr	r3, [pc, #48]	; (8001c80 <uart_control_fsm+0xa8>)
 8001c4e:	220a      	movs	r2, #10
 8001c50:	701a      	strb	r2, [r3, #0]
			turnLedOn();
 8001c52:	f7ff fa01 	bl	8001058 <turnLedOn>
			break;
 8001c56:	e010      	b.n	8001c7a <uart_control_fsm+0xa2>
		case WAIT:
			turnLedOn();
 8001c58:	f7ff f9fe 	bl	8001058 <turnLedOn>
			if (timer3_flag == 1) cmd_flag = INIT_UART;
 8001c5c:	4b0a      	ldr	r3, [pc, #40]	; (8001c88 <uart_control_fsm+0xb0>)
 8001c5e:	681b      	ldr	r3, [r3, #0]
 8001c60:	2b01      	cmp	r3, #1
 8001c62:	d109      	bne.n	8001c78 <uart_control_fsm+0xa0>
 8001c64:	4b06      	ldr	r3, [pc, #24]	; (8001c80 <uart_control_fsm+0xa8>)
 8001c66:	2200      	movs	r2, #0
 8001c68:	701a      	strb	r2, [r3, #0]
			break;
 8001c6a:	e005      	b.n	8001c78 <uart_control_fsm+0xa0>
		case isRST:
			cmd_flag = INIT_UART;
 8001c6c:	4b04      	ldr	r3, [pc, #16]	; (8001c80 <uart_control_fsm+0xa8>)
 8001c6e:	2200      	movs	r2, #0
 8001c70:	701a      	strb	r2, [r3, #0]
			break;
 8001c72:	e002      	b.n	8001c7a <uart_control_fsm+0xa2>
		default:
			break;
 8001c74:	bf00      	nop
 8001c76:	e000      	b.n	8001c7a <uart_control_fsm+0xa2>
			break;
 8001c78:	bf00      	nop
	}
}
 8001c7a:	bf00      	nop
 8001c7c:	bd80      	pop	{r7, pc}
 8001c7e:	bf00      	nop
 8001c80:	200006a6 	.word	0x200006a6
 8001c84:	20000630 	.word	0x20000630
 8001c88:	20000638 	.word	0x20000638

08001c8c <msgCheckSum>:

uint32_t msgCheckSum(char* msg, uint32_t msgLen){
 8001c8c:	b480      	push	{r7}
 8001c8e:	b085      	sub	sp, #20
 8001c90:	af00      	add	r7, sp, #0
 8001c92:	6078      	str	r0, [r7, #4]
 8001c94:	6039      	str	r1, [r7, #0]
	uint32_t result = 0;
 8001c96:	2300      	movs	r3, #0
 8001c98:	60fb      	str	r3, [r7, #12]
	for(int i=0; i<msgLen; i++){
 8001c9a:	2300      	movs	r3, #0
 8001c9c:	60bb      	str	r3, [r7, #8]
 8001c9e:	e00a      	b.n	8001cb6 <msgCheckSum+0x2a>
		result += msg[i];
 8001ca0:	68bb      	ldr	r3, [r7, #8]
 8001ca2:	687a      	ldr	r2, [r7, #4]
 8001ca4:	4413      	add	r3, r2
 8001ca6:	781b      	ldrb	r3, [r3, #0]
 8001ca8:	461a      	mov	r2, r3
 8001caa:	68fb      	ldr	r3, [r7, #12]
 8001cac:	4413      	add	r3, r2
 8001cae:	60fb      	str	r3, [r7, #12]
	for(int i=0; i<msgLen; i++){
 8001cb0:	68bb      	ldr	r3, [r7, #8]
 8001cb2:	3301      	adds	r3, #1
 8001cb4:	60bb      	str	r3, [r7, #8]
 8001cb6:	68bb      	ldr	r3, [r7, #8]
 8001cb8:	683a      	ldr	r2, [r7, #0]
 8001cba:	429a      	cmp	r2, r3
 8001cbc:	d8f0      	bhi.n	8001ca0 <msgCheckSum+0x14>
	}
	return result;
 8001cbe:	68fb      	ldr	r3, [r7, #12]
}
 8001cc0:	4618      	mov	r0, r3
 8001cc2:	3714      	adds	r7, #20
 8001cc4:	46bd      	mov	sp, r7
 8001cc6:	bc80      	pop	{r7}
 8001cc8:	4770      	bx	lr
	...

08001ccc <Scan_Addr>:

void Scan_Addr() {
 8001ccc:	b5b0      	push	{r4, r5, r7, lr}
 8001cce:	b09a      	sub	sp, #104	; 0x68
 8001cd0:	af00      	add	r7, sp, #0
    char info[] = "\r\n\r\nScanning I2C bus...\r\n";
 8001cd2:	4b46      	ldr	r3, [pc, #280]	; (8001dec <Scan_Addr+0x120>)
 8001cd4:	f107 0444 	add.w	r4, r7, #68	; 0x44
 8001cd8:	461d      	mov	r5, r3
 8001cda:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001cdc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001cde:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001ce2:	c403      	stmia	r4!, {r0, r1}
 8001ce4:	8022      	strh	r2, [r4, #0]
    HAL_UART_Transmit(&huart2, (uint8_t*)info, strlen(info), HAL_MAX_DELAY);
 8001ce6:	f107 0344 	add.w	r3, r7, #68	; 0x44
 8001cea:	4618      	mov	r0, r3
 8001cec:	f7fe fa30 	bl	8000150 <strlen>
 8001cf0:	4603      	mov	r3, r0
 8001cf2:	b29a      	uxth	r2, r3
 8001cf4:	f107 0144 	add.w	r1, r7, #68	; 0x44
 8001cf8:	f04f 33ff 	mov.w	r3, #4294967295
 8001cfc:	483c      	ldr	r0, [pc, #240]	; (8001df0 <Scan_Addr+0x124>)
 8001cfe:	f002 fe1a 	bl	8004936 <HAL_UART_Transmit>

    HAL_StatusTypeDef res;
    uint8_t device_counter = 0;
 8001d02:	2300      	movs	r3, #0
 8001d04:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
    for(uint16_t i = 0; i < 128; i++) {
 8001d08:	2300      	movs	r3, #0
 8001d0a:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64
 8001d0e:	e034      	b.n	8001d7a <Scan_Addr+0xae>
        res = HAL_I2C_IsDeviceReady(&hi2c1, i << 1, 1, 10);
 8001d10:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8001d14:	005b      	lsls	r3, r3, #1
 8001d16:	b299      	uxth	r1, r3
 8001d18:	230a      	movs	r3, #10
 8001d1a:	2201      	movs	r2, #1
 8001d1c:	4835      	ldr	r0, [pc, #212]	; (8001df4 <Scan_Addr+0x128>)
 8001d1e:	f001 f94f 	bl	8002fc0 <HAL_I2C_IsDeviceReady>
 8001d22:	4603      	mov	r3, r0
 8001d24:	f887 305f 	strb.w	r3, [r7, #95]	; 0x5f
        if(res == HAL_OK) {
 8001d28:	f897 305f 	ldrb.w	r3, [r7, #95]	; 0x5f
 8001d2c:	2b00      	cmp	r3, #0
 8001d2e:	d118      	bne.n	8001d62 <Scan_Addr+0x96>
        	device_counter += 1;
 8001d30:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001d34:	3301      	adds	r3, #1
 8001d36:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
            char msg[64];
            snprintf(msg, sizeof(msg), "0x%02X", i);
 8001d3a:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8001d3e:	1d38      	adds	r0, r7, #4
 8001d40:	4a2d      	ldr	r2, [pc, #180]	; (8001df8 <Scan_Addr+0x12c>)
 8001d42:	2140      	movs	r1, #64	; 0x40
 8001d44:	f003 ff74 	bl	8005c30 <sniprintf>
            HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8001d48:	1d3b      	adds	r3, r7, #4
 8001d4a:	4618      	mov	r0, r3
 8001d4c:	f7fe fa00 	bl	8000150 <strlen>
 8001d50:	4603      	mov	r3, r0
 8001d52:	b29a      	uxth	r2, r3
 8001d54:	1d39      	adds	r1, r7, #4
 8001d56:	f04f 33ff 	mov.w	r3, #4294967295
 8001d5a:	4825      	ldr	r0, [pc, #148]	; (8001df0 <Scan_Addr+0x124>)
 8001d5c:	f002 fdeb 	bl	8004936 <HAL_UART_Transmit>
 8001d60:	e006      	b.n	8001d70 <Scan_Addr+0xa4>
        }
        else {
            HAL_UART_Transmit(&huart2, (uint8_t*)".", 1, HAL_MAX_DELAY);
 8001d62:	f04f 33ff 	mov.w	r3, #4294967295
 8001d66:	2201      	movs	r2, #1
 8001d68:	4924      	ldr	r1, [pc, #144]	; (8001dfc <Scan_Addr+0x130>)
 8001d6a:	4821      	ldr	r0, [pc, #132]	; (8001df0 <Scan_Addr+0x124>)
 8001d6c:	f002 fde3 	bl	8004936 <HAL_UART_Transmit>
    for(uint16_t i = 0; i < 128; i++) {
 8001d70:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8001d74:	3301      	adds	r3, #1
 8001d76:	f8a7 3064 	strh.w	r3, [r7, #100]	; 0x64
 8001d7a:	f8b7 3064 	ldrh.w	r3, [r7, #100]	; 0x64
 8001d7e:	2b7f      	cmp	r3, #127	; 0x7f
 8001d80:	d9c6      	bls.n	8001d10 <Scan_Addr+0x44>
        }
    }

    if (device_counter == 0){
 8001d82:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8001d86:	2b00      	cmp	r3, #0
 8001d88:	d12c      	bne.n	8001de4 <Scan_Addr+0x118>
    	char msg[64] = "!ERROR:Sensor Not Found...#";
 8001d8a:	4b1d      	ldr	r3, [pc, #116]	; (8001e00 <Scan_Addr+0x134>)
 8001d8c:	1d3c      	adds	r4, r7, #4
 8001d8e:	461d      	mov	r5, r3
 8001d90:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001d92:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001d94:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001d98:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8001d9c:	f107 0320 	add.w	r3, r7, #32
 8001da0:	2224      	movs	r2, #36	; 0x24
 8001da2:	2100      	movs	r1, #0
 8001da4:	4618      	mov	r0, r3
 8001da6:	f003 fadb 	bl	8005360 <memset>
    	uint32_t checkSum = msgCheckSum(&msg[0], strlen(msg));
 8001daa:	1d3b      	adds	r3, r7, #4
 8001dac:	4618      	mov	r0, r3
 8001dae:	f7fe f9cf 	bl	8000150 <strlen>
 8001db2:	4602      	mov	r2, r0
 8001db4:	1d3b      	adds	r3, r7, #4
 8001db6:	4611      	mov	r1, r2
 8001db8:	4618      	mov	r0, r3
 8001dba:	f7ff ff67 	bl	8001c8c <msgCheckSum>
 8001dbe:	6638      	str	r0, [r7, #96]	; 0x60
    	sprintf(msg, "!ERROR:Sensor Not Found...:%lu#", checkSum);
 8001dc0:	1d3b      	adds	r3, r7, #4
 8001dc2:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8001dc4:	490f      	ldr	r1, [pc, #60]	; (8001e04 <Scan_Addr+0x138>)
 8001dc6:	4618      	mov	r0, r3
 8001dc8:	f003 ff66 	bl	8005c98 <siprintf>
    	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8001dcc:	1d3b      	adds	r3, r7, #4
 8001dce:	4618      	mov	r0, r3
 8001dd0:	f7fe f9be 	bl	8000150 <strlen>
 8001dd4:	4603      	mov	r3, r0
 8001dd6:	b29a      	uxth	r2, r3
 8001dd8:	1d39      	adds	r1, r7, #4
 8001dda:	f04f 33ff 	mov.w	r3, #4294967295
 8001dde:	4804      	ldr	r0, [pc, #16]	; (8001df0 <Scan_Addr+0x124>)
 8001de0:	f002 fda9 	bl	8004936 <HAL_UART_Transmit>
    }
}
 8001de4:	bf00      	nop
 8001de6:	3768      	adds	r7, #104	; 0x68
 8001de8:	46bd      	mov	sp, r7
 8001dea:	bdb0      	pop	{r4, r5, r7, pc}
 8001dec:	08008264 	.word	0x08008264
 8001df0:	200002c0 	.word	0x200002c0
 8001df4:	20000224 	.word	0x20000224
 8001df8:	08008238 	.word	0x08008238
 8001dfc:	08008240 	.word	0x08008240
 8001e00:	08008280 	.word	0x08008280
 8001e04:	08008244 	.word	0x08008244

08001e08 <Mcu_info>:

void Mcu_info(){
 8001e08:	b580      	push	{r7, lr}
 8001e0a:	b094      	sub	sp, #80	; 0x50
 8001e0c:	af02      	add	r7, sp, #8
	char msg[64];
	uint32_t checkSum = msgCheckSum(&msg[0], sprintf(msg, "!INFO:MCU_VERSION-%s,FIRWARE_VERSION-%s#", MCU_VERSION, FIRMWARE_VERSION));
 8001e0e:	1d38      	adds	r0, r7, #4
 8001e10:	4b12      	ldr	r3, [pc, #72]	; (8001e5c <Mcu_info+0x54>)
 8001e12:	4a13      	ldr	r2, [pc, #76]	; (8001e60 <Mcu_info+0x58>)
 8001e14:	4913      	ldr	r1, [pc, #76]	; (8001e64 <Mcu_info+0x5c>)
 8001e16:	f003 ff3f 	bl	8005c98 <siprintf>
 8001e1a:	4603      	mov	r3, r0
 8001e1c:	461a      	mov	r2, r3
 8001e1e:	1d3b      	adds	r3, r7, #4
 8001e20:	4611      	mov	r1, r2
 8001e22:	4618      	mov	r0, r3
 8001e24:	f7ff ff32 	bl	8001c8c <msgCheckSum>
 8001e28:	6478      	str	r0, [r7, #68]	; 0x44
	sprintf(msg, "!INFO:MCU VERSION %s, FIRWARE VERSION %s:%lu#", MCU_VERSION, FIRMWARE_VERSION, checkSum);
 8001e2a:	1d38      	adds	r0, r7, #4
 8001e2c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8001e2e:	9300      	str	r3, [sp, #0]
 8001e30:	4b0a      	ldr	r3, [pc, #40]	; (8001e5c <Mcu_info+0x54>)
 8001e32:	4a0b      	ldr	r2, [pc, #44]	; (8001e60 <Mcu_info+0x58>)
 8001e34:	490c      	ldr	r1, [pc, #48]	; (8001e68 <Mcu_info+0x60>)
 8001e36:	f003 ff2f 	bl	8005c98 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 1000);
 8001e3a:	1d3b      	adds	r3, r7, #4
 8001e3c:	4618      	mov	r0, r3
 8001e3e:	f7fe f987 	bl	8000150 <strlen>
 8001e42:	4603      	mov	r3, r0
 8001e44:	b29a      	uxth	r2, r3
 8001e46:	1d39      	adds	r1, r7, #4
 8001e48:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001e4c:	4807      	ldr	r0, [pc, #28]	; (8001e6c <Mcu_info+0x64>)
 8001e4e:	f002 fd72 	bl	8004936 <HAL_UART_Transmit>
}
 8001e52:	bf00      	nop
 8001e54:	3748      	adds	r7, #72	; 0x48
 8001e56:	46bd      	mov	sp, r7
 8001e58:	bd80      	pop	{r7, pc}
 8001e5a:	bf00      	nop
 8001e5c:	080082c0 	.word	0x080082c0
 8001e60:	080082c4 	.word	0x080082c4
 8001e64:	080082d4 	.word	0x080082d4
 8001e68:	08008300 	.word	0x08008300
 8001e6c:	200002c0 	.word	0x200002c0

08001e70 <Reset_Handler>:
 8001e70:	480c      	ldr	r0, [pc, #48]	; (8001ea4 <LoopFillZerobss+0x12>)
 8001e72:	490d      	ldr	r1, [pc, #52]	; (8001ea8 <LoopFillZerobss+0x16>)
 8001e74:	4a0d      	ldr	r2, [pc, #52]	; (8001eac <LoopFillZerobss+0x1a>)
 8001e76:	2300      	movs	r3, #0
 8001e78:	e002      	b.n	8001e80 <LoopCopyDataInit>

08001e7a <CopyDataInit>:
 8001e7a:	58d4      	ldr	r4, [r2, r3]
 8001e7c:	50c4      	str	r4, [r0, r3]
 8001e7e:	3304      	adds	r3, #4

08001e80 <LoopCopyDataInit>:
 8001e80:	18c4      	adds	r4, r0, r3
 8001e82:	428c      	cmp	r4, r1
 8001e84:	d3f9      	bcc.n	8001e7a <CopyDataInit>
 8001e86:	4a0a      	ldr	r2, [pc, #40]	; (8001eb0 <LoopFillZerobss+0x1e>)
 8001e88:	4c0a      	ldr	r4, [pc, #40]	; (8001eb4 <LoopFillZerobss+0x22>)
 8001e8a:	2300      	movs	r3, #0
 8001e8c:	e001      	b.n	8001e92 <LoopFillZerobss>

08001e8e <FillZerobss>:
 8001e8e:	6013      	str	r3, [r2, #0]
 8001e90:	3204      	adds	r2, #4

08001e92 <LoopFillZerobss>:
 8001e92:	42a2      	cmp	r2, r4
 8001e94:	d3fb      	bcc.n	8001e8e <FillZerobss>
 8001e96:	f7ff fdcf 	bl	8001a38 <SystemInit>
 8001e9a:	f003 fa3d 	bl	8005318 <__libc_init_array>
 8001e9e:	f7ff f92b 	bl	80010f8 <main>
 8001ea2:	4770      	bx	lr
 8001ea4:	20000000 	.word	0x20000000
 8001ea8:	200001dc 	.word	0x200001dc
 8001eac:	0800873c 	.word	0x0800873c
 8001eb0:	200001dc 	.word	0x200001dc
 8001eb4:	200006bc 	.word	0x200006bc

08001eb8 <ADC1_2_IRQHandler>:
 8001eb8:	e7fe      	b.n	8001eb8 <ADC1_2_IRQHandler>
	...

08001ebc <HAL_Init>:
 8001ebc:	b580      	push	{r7, lr}
 8001ebe:	af00      	add	r7, sp, #0
 8001ec0:	4b08      	ldr	r3, [pc, #32]	; (8001ee4 <HAL_Init+0x28>)
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	4a07      	ldr	r2, [pc, #28]	; (8001ee4 <HAL_Init+0x28>)
 8001ec6:	f043 0310 	orr.w	r3, r3, #16
 8001eca:	6013      	str	r3, [r2, #0]
 8001ecc:	2003      	movs	r0, #3
 8001ece:	f000 f947 	bl	8002160 <HAL_NVIC_SetPriorityGrouping>
 8001ed2:	200f      	movs	r0, #15
 8001ed4:	f000 f808 	bl	8001ee8 <HAL_InitTick>
 8001ed8:	f7ff fbba 	bl	8001650 <HAL_MspInit>
 8001edc:	2300      	movs	r3, #0
 8001ede:	4618      	mov	r0, r3
 8001ee0:	bd80      	pop	{r7, pc}
 8001ee2:	bf00      	nop
 8001ee4:	40022000 	.word	0x40022000

08001ee8 <HAL_InitTick>:
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	b082      	sub	sp, #8
 8001eec:	af00      	add	r7, sp, #0
 8001eee:	6078      	str	r0, [r7, #4]
 8001ef0:	4b12      	ldr	r3, [pc, #72]	; (8001f3c <HAL_InitTick+0x54>)
 8001ef2:	681a      	ldr	r2, [r3, #0]
 8001ef4:	4b12      	ldr	r3, [pc, #72]	; (8001f40 <HAL_InitTick+0x58>)
 8001ef6:	781b      	ldrb	r3, [r3, #0]
 8001ef8:	4619      	mov	r1, r3
 8001efa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001efe:	fbb3 f3f1 	udiv	r3, r3, r1
 8001f02:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f06:	4618      	mov	r0, r3
 8001f08:	f000 f95f 	bl	80021ca <HAL_SYSTICK_Config>
 8001f0c:	4603      	mov	r3, r0
 8001f0e:	2b00      	cmp	r3, #0
 8001f10:	d001      	beq.n	8001f16 <HAL_InitTick+0x2e>
 8001f12:	2301      	movs	r3, #1
 8001f14:	e00e      	b.n	8001f34 <HAL_InitTick+0x4c>
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	2b0f      	cmp	r3, #15
 8001f1a:	d80a      	bhi.n	8001f32 <HAL_InitTick+0x4a>
 8001f1c:	2200      	movs	r2, #0
 8001f1e:	6879      	ldr	r1, [r7, #4]
 8001f20:	f04f 30ff 	mov.w	r0, #4294967295
 8001f24:	f000 f927 	bl	8002176 <HAL_NVIC_SetPriority>
 8001f28:	4a06      	ldr	r2, [pc, #24]	; (8001f44 <HAL_InitTick+0x5c>)
 8001f2a:	687b      	ldr	r3, [r7, #4]
 8001f2c:	6013      	str	r3, [r2, #0]
 8001f2e:	2300      	movs	r3, #0
 8001f30:	e000      	b.n	8001f34 <HAL_InitTick+0x4c>
 8001f32:	2301      	movs	r3, #1
 8001f34:	4618      	mov	r0, r3
 8001f36:	3708      	adds	r7, #8
 8001f38:	46bd      	mov	sp, r7
 8001f3a:	bd80      	pop	{r7, pc}
 8001f3c:	20000000 	.word	0x20000000
 8001f40:	20000008 	.word	0x20000008
 8001f44:	20000004 	.word	0x20000004

08001f48 <HAL_IncTick>:
 8001f48:	b480      	push	{r7}
 8001f4a:	af00      	add	r7, sp, #0
 8001f4c:	4b05      	ldr	r3, [pc, #20]	; (8001f64 <HAL_IncTick+0x1c>)
 8001f4e:	781b      	ldrb	r3, [r3, #0]
 8001f50:	461a      	mov	r2, r3
 8001f52:	4b05      	ldr	r3, [pc, #20]	; (8001f68 <HAL_IncTick+0x20>)
 8001f54:	681b      	ldr	r3, [r3, #0]
 8001f56:	4413      	add	r3, r2
 8001f58:	4a03      	ldr	r2, [pc, #12]	; (8001f68 <HAL_IncTick+0x20>)
 8001f5a:	6013      	str	r3, [r2, #0]
 8001f5c:	bf00      	nop
 8001f5e:	46bd      	mov	sp, r7
 8001f60:	bc80      	pop	{r7}
 8001f62:	4770      	bx	lr
 8001f64:	20000008 	.word	0x20000008
 8001f68:	200006a8 	.word	0x200006a8

08001f6c <HAL_GetTick>:
 8001f6c:	b480      	push	{r7}
 8001f6e:	af00      	add	r7, sp, #0
 8001f70:	4b02      	ldr	r3, [pc, #8]	; (8001f7c <HAL_GetTick+0x10>)
 8001f72:	681b      	ldr	r3, [r3, #0]
 8001f74:	4618      	mov	r0, r3
 8001f76:	46bd      	mov	sp, r7
 8001f78:	bc80      	pop	{r7}
 8001f7a:	4770      	bx	lr
 8001f7c:	200006a8 	.word	0x200006a8

08001f80 <HAL_Delay>:
 8001f80:	b580      	push	{r7, lr}
 8001f82:	b084      	sub	sp, #16
 8001f84:	af00      	add	r7, sp, #0
 8001f86:	6078      	str	r0, [r7, #4]
 8001f88:	f7ff fff0 	bl	8001f6c <HAL_GetTick>
 8001f8c:	60b8      	str	r0, [r7, #8]
 8001f8e:	687b      	ldr	r3, [r7, #4]
 8001f90:	60fb      	str	r3, [r7, #12]
 8001f92:	68fb      	ldr	r3, [r7, #12]
 8001f94:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001f98:	d005      	beq.n	8001fa6 <HAL_Delay+0x26>
 8001f9a:	4b0a      	ldr	r3, [pc, #40]	; (8001fc4 <HAL_Delay+0x44>)
 8001f9c:	781b      	ldrb	r3, [r3, #0]
 8001f9e:	461a      	mov	r2, r3
 8001fa0:	68fb      	ldr	r3, [r7, #12]
 8001fa2:	4413      	add	r3, r2
 8001fa4:	60fb      	str	r3, [r7, #12]
 8001fa6:	bf00      	nop
 8001fa8:	f7ff ffe0 	bl	8001f6c <HAL_GetTick>
 8001fac:	4602      	mov	r2, r0
 8001fae:	68bb      	ldr	r3, [r7, #8]
 8001fb0:	1ad3      	subs	r3, r2, r3
 8001fb2:	68fa      	ldr	r2, [r7, #12]
 8001fb4:	429a      	cmp	r2, r3
 8001fb6:	d8f7      	bhi.n	8001fa8 <HAL_Delay+0x28>
 8001fb8:	bf00      	nop
 8001fba:	bf00      	nop
 8001fbc:	3710      	adds	r7, #16
 8001fbe:	46bd      	mov	sp, r7
 8001fc0:	bd80      	pop	{r7, pc}
 8001fc2:	bf00      	nop
 8001fc4:	20000008 	.word	0x20000008

08001fc8 <__NVIC_SetPriorityGrouping>:
 8001fc8:	b480      	push	{r7}
 8001fca:	b085      	sub	sp, #20
 8001fcc:	af00      	add	r7, sp, #0
 8001fce:	6078      	str	r0, [r7, #4]
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	f003 0307 	and.w	r3, r3, #7
 8001fd6:	60fb      	str	r3, [r7, #12]
 8001fd8:	4b0c      	ldr	r3, [pc, #48]	; (800200c <__NVIC_SetPriorityGrouping+0x44>)
 8001fda:	68db      	ldr	r3, [r3, #12]
 8001fdc:	60bb      	str	r3, [r7, #8]
 8001fde:	68ba      	ldr	r2, [r7, #8]
 8001fe0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001fe4:	4013      	ands	r3, r2
 8001fe6:	60bb      	str	r3, [r7, #8]
 8001fe8:	68fb      	ldr	r3, [r7, #12]
 8001fea:	021a      	lsls	r2, r3, #8
 8001fec:	68bb      	ldr	r3, [r7, #8]
 8001fee:	4313      	orrs	r3, r2
 8001ff0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001ff4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001ff8:	60bb      	str	r3, [r7, #8]
 8001ffa:	4a04      	ldr	r2, [pc, #16]	; (800200c <__NVIC_SetPriorityGrouping+0x44>)
 8001ffc:	68bb      	ldr	r3, [r7, #8]
 8001ffe:	60d3      	str	r3, [r2, #12]
 8002000:	bf00      	nop
 8002002:	3714      	adds	r7, #20
 8002004:	46bd      	mov	sp, r7
 8002006:	bc80      	pop	{r7}
 8002008:	4770      	bx	lr
 800200a:	bf00      	nop
 800200c:	e000ed00 	.word	0xe000ed00

08002010 <__NVIC_GetPriorityGrouping>:
 8002010:	b480      	push	{r7}
 8002012:	af00      	add	r7, sp, #0
 8002014:	4b04      	ldr	r3, [pc, #16]	; (8002028 <__NVIC_GetPriorityGrouping+0x18>)
 8002016:	68db      	ldr	r3, [r3, #12]
 8002018:	0a1b      	lsrs	r3, r3, #8
 800201a:	f003 0307 	and.w	r3, r3, #7
 800201e:	4618      	mov	r0, r3
 8002020:	46bd      	mov	sp, r7
 8002022:	bc80      	pop	{r7}
 8002024:	4770      	bx	lr
 8002026:	bf00      	nop
 8002028:	e000ed00 	.word	0xe000ed00

0800202c <__NVIC_EnableIRQ>:
 800202c:	b480      	push	{r7}
 800202e:	b083      	sub	sp, #12
 8002030:	af00      	add	r7, sp, #0
 8002032:	4603      	mov	r3, r0
 8002034:	71fb      	strb	r3, [r7, #7]
 8002036:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800203a:	2b00      	cmp	r3, #0
 800203c:	db0b      	blt.n	8002056 <__NVIC_EnableIRQ+0x2a>
 800203e:	79fb      	ldrb	r3, [r7, #7]
 8002040:	f003 021f 	and.w	r2, r3, #31
 8002044:	4906      	ldr	r1, [pc, #24]	; (8002060 <__NVIC_EnableIRQ+0x34>)
 8002046:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800204a:	095b      	lsrs	r3, r3, #5
 800204c:	2001      	movs	r0, #1
 800204e:	fa00 f202 	lsl.w	r2, r0, r2
 8002052:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002056:	bf00      	nop
 8002058:	370c      	adds	r7, #12
 800205a:	46bd      	mov	sp, r7
 800205c:	bc80      	pop	{r7}
 800205e:	4770      	bx	lr
 8002060:	e000e100 	.word	0xe000e100

08002064 <__NVIC_SetPriority>:
 8002064:	b480      	push	{r7}
 8002066:	b083      	sub	sp, #12
 8002068:	af00      	add	r7, sp, #0
 800206a:	4603      	mov	r3, r0
 800206c:	6039      	str	r1, [r7, #0]
 800206e:	71fb      	strb	r3, [r7, #7]
 8002070:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002074:	2b00      	cmp	r3, #0
 8002076:	db0a      	blt.n	800208e <__NVIC_SetPriority+0x2a>
 8002078:	683b      	ldr	r3, [r7, #0]
 800207a:	b2da      	uxtb	r2, r3
 800207c:	490c      	ldr	r1, [pc, #48]	; (80020b0 <__NVIC_SetPriority+0x4c>)
 800207e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002082:	0112      	lsls	r2, r2, #4
 8002084:	b2d2      	uxtb	r2, r2
 8002086:	440b      	add	r3, r1
 8002088:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800208c:	e00a      	b.n	80020a4 <__NVIC_SetPriority+0x40>
 800208e:	683b      	ldr	r3, [r7, #0]
 8002090:	b2da      	uxtb	r2, r3
 8002092:	4908      	ldr	r1, [pc, #32]	; (80020b4 <__NVIC_SetPriority+0x50>)
 8002094:	79fb      	ldrb	r3, [r7, #7]
 8002096:	f003 030f 	and.w	r3, r3, #15
 800209a:	3b04      	subs	r3, #4
 800209c:	0112      	lsls	r2, r2, #4
 800209e:	b2d2      	uxtb	r2, r2
 80020a0:	440b      	add	r3, r1
 80020a2:	761a      	strb	r2, [r3, #24]
 80020a4:	bf00      	nop
 80020a6:	370c      	adds	r7, #12
 80020a8:	46bd      	mov	sp, r7
 80020aa:	bc80      	pop	{r7}
 80020ac:	4770      	bx	lr
 80020ae:	bf00      	nop
 80020b0:	e000e100 	.word	0xe000e100
 80020b4:	e000ed00 	.word	0xe000ed00

080020b8 <NVIC_EncodePriority>:
 80020b8:	b480      	push	{r7}
 80020ba:	b089      	sub	sp, #36	; 0x24
 80020bc:	af00      	add	r7, sp, #0
 80020be:	60f8      	str	r0, [r7, #12]
 80020c0:	60b9      	str	r1, [r7, #8]
 80020c2:	607a      	str	r2, [r7, #4]
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	f003 0307 	and.w	r3, r3, #7
 80020ca:	61fb      	str	r3, [r7, #28]
 80020cc:	69fb      	ldr	r3, [r7, #28]
 80020ce:	f1c3 0307 	rsb	r3, r3, #7
 80020d2:	2b04      	cmp	r3, #4
 80020d4:	bf28      	it	cs
 80020d6:	2304      	movcs	r3, #4
 80020d8:	61bb      	str	r3, [r7, #24]
 80020da:	69fb      	ldr	r3, [r7, #28]
 80020dc:	3304      	adds	r3, #4
 80020de:	2b06      	cmp	r3, #6
 80020e0:	d902      	bls.n	80020e8 <NVIC_EncodePriority+0x30>
 80020e2:	69fb      	ldr	r3, [r7, #28]
 80020e4:	3b03      	subs	r3, #3
 80020e6:	e000      	b.n	80020ea <NVIC_EncodePriority+0x32>
 80020e8:	2300      	movs	r3, #0
 80020ea:	617b      	str	r3, [r7, #20]
 80020ec:	f04f 32ff 	mov.w	r2, #4294967295
 80020f0:	69bb      	ldr	r3, [r7, #24]
 80020f2:	fa02 f303 	lsl.w	r3, r2, r3
 80020f6:	43da      	mvns	r2, r3
 80020f8:	68bb      	ldr	r3, [r7, #8]
 80020fa:	401a      	ands	r2, r3
 80020fc:	697b      	ldr	r3, [r7, #20]
 80020fe:	409a      	lsls	r2, r3
 8002100:	f04f 31ff 	mov.w	r1, #4294967295
 8002104:	697b      	ldr	r3, [r7, #20]
 8002106:	fa01 f303 	lsl.w	r3, r1, r3
 800210a:	43d9      	mvns	r1, r3
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	400b      	ands	r3, r1
 8002110:	4313      	orrs	r3, r2
 8002112:	4618      	mov	r0, r3
 8002114:	3724      	adds	r7, #36	; 0x24
 8002116:	46bd      	mov	sp, r7
 8002118:	bc80      	pop	{r7}
 800211a:	4770      	bx	lr

0800211c <SysTick_Config>:
 800211c:	b580      	push	{r7, lr}
 800211e:	b082      	sub	sp, #8
 8002120:	af00      	add	r7, sp, #0
 8002122:	6078      	str	r0, [r7, #4]
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	3b01      	subs	r3, #1
 8002128:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800212c:	d301      	bcc.n	8002132 <SysTick_Config+0x16>
 800212e:	2301      	movs	r3, #1
 8002130:	e00f      	b.n	8002152 <SysTick_Config+0x36>
 8002132:	4a0a      	ldr	r2, [pc, #40]	; (800215c <SysTick_Config+0x40>)
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	3b01      	subs	r3, #1
 8002138:	6053      	str	r3, [r2, #4]
 800213a:	210f      	movs	r1, #15
 800213c:	f04f 30ff 	mov.w	r0, #4294967295
 8002140:	f7ff ff90 	bl	8002064 <__NVIC_SetPriority>
 8002144:	4b05      	ldr	r3, [pc, #20]	; (800215c <SysTick_Config+0x40>)
 8002146:	2200      	movs	r2, #0
 8002148:	609a      	str	r2, [r3, #8]
 800214a:	4b04      	ldr	r3, [pc, #16]	; (800215c <SysTick_Config+0x40>)
 800214c:	2207      	movs	r2, #7
 800214e:	601a      	str	r2, [r3, #0]
 8002150:	2300      	movs	r3, #0
 8002152:	4618      	mov	r0, r3
 8002154:	3708      	adds	r7, #8
 8002156:	46bd      	mov	sp, r7
 8002158:	bd80      	pop	{r7, pc}
 800215a:	bf00      	nop
 800215c:	e000e010 	.word	0xe000e010

08002160 <HAL_NVIC_SetPriorityGrouping>:
 8002160:	b580      	push	{r7, lr}
 8002162:	b082      	sub	sp, #8
 8002164:	af00      	add	r7, sp, #0
 8002166:	6078      	str	r0, [r7, #4]
 8002168:	6878      	ldr	r0, [r7, #4]
 800216a:	f7ff ff2d 	bl	8001fc8 <__NVIC_SetPriorityGrouping>
 800216e:	bf00      	nop
 8002170:	3708      	adds	r7, #8
 8002172:	46bd      	mov	sp, r7
 8002174:	bd80      	pop	{r7, pc}

08002176 <HAL_NVIC_SetPriority>:
 8002176:	b580      	push	{r7, lr}
 8002178:	b086      	sub	sp, #24
 800217a:	af00      	add	r7, sp, #0
 800217c:	4603      	mov	r3, r0
 800217e:	60b9      	str	r1, [r7, #8]
 8002180:	607a      	str	r2, [r7, #4]
 8002182:	73fb      	strb	r3, [r7, #15]
 8002184:	2300      	movs	r3, #0
 8002186:	617b      	str	r3, [r7, #20]
 8002188:	f7ff ff42 	bl	8002010 <__NVIC_GetPriorityGrouping>
 800218c:	6178      	str	r0, [r7, #20]
 800218e:	687a      	ldr	r2, [r7, #4]
 8002190:	68b9      	ldr	r1, [r7, #8]
 8002192:	6978      	ldr	r0, [r7, #20]
 8002194:	f7ff ff90 	bl	80020b8 <NVIC_EncodePriority>
 8002198:	4602      	mov	r2, r0
 800219a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800219e:	4611      	mov	r1, r2
 80021a0:	4618      	mov	r0, r3
 80021a2:	f7ff ff5f 	bl	8002064 <__NVIC_SetPriority>
 80021a6:	bf00      	nop
 80021a8:	3718      	adds	r7, #24
 80021aa:	46bd      	mov	sp, r7
 80021ac:	bd80      	pop	{r7, pc}

080021ae <HAL_NVIC_EnableIRQ>:
 80021ae:	b580      	push	{r7, lr}
 80021b0:	b082      	sub	sp, #8
 80021b2:	af00      	add	r7, sp, #0
 80021b4:	4603      	mov	r3, r0
 80021b6:	71fb      	strb	r3, [r7, #7]
 80021b8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80021bc:	4618      	mov	r0, r3
 80021be:	f7ff ff35 	bl	800202c <__NVIC_EnableIRQ>
 80021c2:	bf00      	nop
 80021c4:	3708      	adds	r7, #8
 80021c6:	46bd      	mov	sp, r7
 80021c8:	bd80      	pop	{r7, pc}

080021ca <HAL_SYSTICK_Config>:
 80021ca:	b580      	push	{r7, lr}
 80021cc:	b082      	sub	sp, #8
 80021ce:	af00      	add	r7, sp, #0
 80021d0:	6078      	str	r0, [r7, #4]
 80021d2:	6878      	ldr	r0, [r7, #4]
 80021d4:	f7ff ffa2 	bl	800211c <SysTick_Config>
 80021d8:	4603      	mov	r3, r0
 80021da:	4618      	mov	r0, r3
 80021dc:	3708      	adds	r7, #8
 80021de:	46bd      	mov	sp, r7
 80021e0:	bd80      	pop	{r7, pc}

080021e2 <HAL_DMA_Abort>:
 80021e2:	b480      	push	{r7}
 80021e4:	b085      	sub	sp, #20
 80021e6:	af00      	add	r7, sp, #0
 80021e8:	6078      	str	r0, [r7, #4]
 80021ea:	2300      	movs	r3, #0
 80021ec:	73fb      	strb	r3, [r7, #15]
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80021f4:	2b02      	cmp	r3, #2
 80021f6:	d008      	beq.n	800220a <HAL_DMA_Abort+0x28>
 80021f8:	687b      	ldr	r3, [r7, #4]
 80021fa:	2204      	movs	r2, #4
 80021fc:	639a      	str	r2, [r3, #56]	; 0x38
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	2200      	movs	r2, #0
 8002202:	f883 2020 	strb.w	r2, [r3, #32]
 8002206:	2301      	movs	r3, #1
 8002208:	e020      	b.n	800224c <HAL_DMA_Abort+0x6a>
 800220a:	687b      	ldr	r3, [r7, #4]
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	681a      	ldr	r2, [r3, #0]
 8002210:	687b      	ldr	r3, [r7, #4]
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	f022 020e 	bic.w	r2, r2, #14
 8002218:	601a      	str	r2, [r3, #0]
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	681b      	ldr	r3, [r3, #0]
 800221e:	681a      	ldr	r2, [r3, #0]
 8002220:	687b      	ldr	r3, [r7, #4]
 8002222:	681b      	ldr	r3, [r3, #0]
 8002224:	f022 0201 	bic.w	r2, r2, #1
 8002228:	601a      	str	r2, [r3, #0]
 800222a:	687b      	ldr	r3, [r7, #4]
 800222c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800222e:	687b      	ldr	r3, [r7, #4]
 8002230:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002232:	2101      	movs	r1, #1
 8002234:	fa01 f202 	lsl.w	r2, r1, r2
 8002238:	605a      	str	r2, [r3, #4]
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	2201      	movs	r2, #1
 800223e:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	2200      	movs	r2, #0
 8002246:	f883 2020 	strb.w	r2, [r3, #32]
 800224a:	7bfb      	ldrb	r3, [r7, #15]
 800224c:	4618      	mov	r0, r3
 800224e:	3714      	adds	r7, #20
 8002250:	46bd      	mov	sp, r7
 8002252:	bc80      	pop	{r7}
 8002254:	4770      	bx	lr
	...

08002258 <HAL_DMA_Abort_IT>:
 8002258:	b580      	push	{r7, lr}
 800225a:	b084      	sub	sp, #16
 800225c:	af00      	add	r7, sp, #0
 800225e:	6078      	str	r0, [r7, #4]
 8002260:	2300      	movs	r3, #0
 8002262:	73fb      	strb	r3, [r7, #15]
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800226a:	2b02      	cmp	r3, #2
 800226c:	d005      	beq.n	800227a <HAL_DMA_Abort_IT+0x22>
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	2204      	movs	r2, #4
 8002272:	639a      	str	r2, [r3, #56]	; 0x38
 8002274:	2301      	movs	r3, #1
 8002276:	73fb      	strb	r3, [r7, #15]
 8002278:	e051      	b.n	800231e <HAL_DMA_Abort_IT+0xc6>
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	681b      	ldr	r3, [r3, #0]
 800227e:	681a      	ldr	r2, [r3, #0]
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	681b      	ldr	r3, [r3, #0]
 8002284:	f022 020e 	bic.w	r2, r2, #14
 8002288:	601a      	str	r2, [r3, #0]
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	681a      	ldr	r2, [r3, #0]
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	681b      	ldr	r3, [r3, #0]
 8002294:	f022 0201 	bic.w	r2, r2, #1
 8002298:	601a      	str	r2, [r3, #0]
 800229a:	687b      	ldr	r3, [r7, #4]
 800229c:	681b      	ldr	r3, [r3, #0]
 800229e:	4a22      	ldr	r2, [pc, #136]	; (8002328 <HAL_DMA_Abort_IT+0xd0>)
 80022a0:	4293      	cmp	r3, r2
 80022a2:	d029      	beq.n	80022f8 <HAL_DMA_Abort_IT+0xa0>
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	681b      	ldr	r3, [r3, #0]
 80022a8:	4a20      	ldr	r2, [pc, #128]	; (800232c <HAL_DMA_Abort_IT+0xd4>)
 80022aa:	4293      	cmp	r3, r2
 80022ac:	d022      	beq.n	80022f4 <HAL_DMA_Abort_IT+0x9c>
 80022ae:	687b      	ldr	r3, [r7, #4]
 80022b0:	681b      	ldr	r3, [r3, #0]
 80022b2:	4a1f      	ldr	r2, [pc, #124]	; (8002330 <HAL_DMA_Abort_IT+0xd8>)
 80022b4:	4293      	cmp	r3, r2
 80022b6:	d01a      	beq.n	80022ee <HAL_DMA_Abort_IT+0x96>
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	4a1d      	ldr	r2, [pc, #116]	; (8002334 <HAL_DMA_Abort_IT+0xdc>)
 80022be:	4293      	cmp	r3, r2
 80022c0:	d012      	beq.n	80022e8 <HAL_DMA_Abort_IT+0x90>
 80022c2:	687b      	ldr	r3, [r7, #4]
 80022c4:	681b      	ldr	r3, [r3, #0]
 80022c6:	4a1c      	ldr	r2, [pc, #112]	; (8002338 <HAL_DMA_Abort_IT+0xe0>)
 80022c8:	4293      	cmp	r3, r2
 80022ca:	d00a      	beq.n	80022e2 <HAL_DMA_Abort_IT+0x8a>
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	4a1a      	ldr	r2, [pc, #104]	; (800233c <HAL_DMA_Abort_IT+0xe4>)
 80022d2:	4293      	cmp	r3, r2
 80022d4:	d102      	bne.n	80022dc <HAL_DMA_Abort_IT+0x84>
 80022d6:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80022da:	e00e      	b.n	80022fa <HAL_DMA_Abort_IT+0xa2>
 80022dc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80022e0:	e00b      	b.n	80022fa <HAL_DMA_Abort_IT+0xa2>
 80022e2:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80022e6:	e008      	b.n	80022fa <HAL_DMA_Abort_IT+0xa2>
 80022e8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80022ec:	e005      	b.n	80022fa <HAL_DMA_Abort_IT+0xa2>
 80022ee:	f44f 7380 	mov.w	r3, #256	; 0x100
 80022f2:	e002      	b.n	80022fa <HAL_DMA_Abort_IT+0xa2>
 80022f4:	2310      	movs	r3, #16
 80022f6:	e000      	b.n	80022fa <HAL_DMA_Abort_IT+0xa2>
 80022f8:	2301      	movs	r3, #1
 80022fa:	4a11      	ldr	r2, [pc, #68]	; (8002340 <HAL_DMA_Abort_IT+0xe8>)
 80022fc:	6053      	str	r3, [r2, #4]
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	2201      	movs	r2, #1
 8002302:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 8002306:	687b      	ldr	r3, [r7, #4]
 8002308:	2200      	movs	r2, #0
 800230a:	f883 2020 	strb.w	r2, [r3, #32]
 800230e:	687b      	ldr	r3, [r7, #4]
 8002310:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002312:	2b00      	cmp	r3, #0
 8002314:	d003      	beq.n	800231e <HAL_DMA_Abort_IT+0xc6>
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800231a:	6878      	ldr	r0, [r7, #4]
 800231c:	4798      	blx	r3
 800231e:	7bfb      	ldrb	r3, [r7, #15]
 8002320:	4618      	mov	r0, r3
 8002322:	3710      	adds	r7, #16
 8002324:	46bd      	mov	sp, r7
 8002326:	bd80      	pop	{r7, pc}
 8002328:	40020008 	.word	0x40020008
 800232c:	4002001c 	.word	0x4002001c
 8002330:	40020030 	.word	0x40020030
 8002334:	40020044 	.word	0x40020044
 8002338:	40020058 	.word	0x40020058
 800233c:	4002006c 	.word	0x4002006c
 8002340:	40020000 	.word	0x40020000

08002344 <HAL_GPIO_Init>:
 8002344:	b480      	push	{r7}
 8002346:	b08b      	sub	sp, #44	; 0x2c
 8002348:	af00      	add	r7, sp, #0
 800234a:	6078      	str	r0, [r7, #4]
 800234c:	6039      	str	r1, [r7, #0]
 800234e:	2300      	movs	r3, #0
 8002350:	627b      	str	r3, [r7, #36]	; 0x24
 8002352:	2300      	movs	r3, #0
 8002354:	623b      	str	r3, [r7, #32]
 8002356:	e169      	b.n	800262c <HAL_GPIO_Init+0x2e8>
 8002358:	2201      	movs	r2, #1
 800235a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800235c:	fa02 f303 	lsl.w	r3, r2, r3
 8002360:	61fb      	str	r3, [r7, #28]
 8002362:	683b      	ldr	r3, [r7, #0]
 8002364:	681b      	ldr	r3, [r3, #0]
 8002366:	69fa      	ldr	r2, [r7, #28]
 8002368:	4013      	ands	r3, r2
 800236a:	61bb      	str	r3, [r7, #24]
 800236c:	69ba      	ldr	r2, [r7, #24]
 800236e:	69fb      	ldr	r3, [r7, #28]
 8002370:	429a      	cmp	r2, r3
 8002372:	f040 8158 	bne.w	8002626 <HAL_GPIO_Init+0x2e2>
 8002376:	683b      	ldr	r3, [r7, #0]
 8002378:	685b      	ldr	r3, [r3, #4]
 800237a:	4a9a      	ldr	r2, [pc, #616]	; (80025e4 <HAL_GPIO_Init+0x2a0>)
 800237c:	4293      	cmp	r3, r2
 800237e:	d05e      	beq.n	800243e <HAL_GPIO_Init+0xfa>
 8002380:	4a98      	ldr	r2, [pc, #608]	; (80025e4 <HAL_GPIO_Init+0x2a0>)
 8002382:	4293      	cmp	r3, r2
 8002384:	d875      	bhi.n	8002472 <HAL_GPIO_Init+0x12e>
 8002386:	4a98      	ldr	r2, [pc, #608]	; (80025e8 <HAL_GPIO_Init+0x2a4>)
 8002388:	4293      	cmp	r3, r2
 800238a:	d058      	beq.n	800243e <HAL_GPIO_Init+0xfa>
 800238c:	4a96      	ldr	r2, [pc, #600]	; (80025e8 <HAL_GPIO_Init+0x2a4>)
 800238e:	4293      	cmp	r3, r2
 8002390:	d86f      	bhi.n	8002472 <HAL_GPIO_Init+0x12e>
 8002392:	4a96      	ldr	r2, [pc, #600]	; (80025ec <HAL_GPIO_Init+0x2a8>)
 8002394:	4293      	cmp	r3, r2
 8002396:	d052      	beq.n	800243e <HAL_GPIO_Init+0xfa>
 8002398:	4a94      	ldr	r2, [pc, #592]	; (80025ec <HAL_GPIO_Init+0x2a8>)
 800239a:	4293      	cmp	r3, r2
 800239c:	d869      	bhi.n	8002472 <HAL_GPIO_Init+0x12e>
 800239e:	4a94      	ldr	r2, [pc, #592]	; (80025f0 <HAL_GPIO_Init+0x2ac>)
 80023a0:	4293      	cmp	r3, r2
 80023a2:	d04c      	beq.n	800243e <HAL_GPIO_Init+0xfa>
 80023a4:	4a92      	ldr	r2, [pc, #584]	; (80025f0 <HAL_GPIO_Init+0x2ac>)
 80023a6:	4293      	cmp	r3, r2
 80023a8:	d863      	bhi.n	8002472 <HAL_GPIO_Init+0x12e>
 80023aa:	4a92      	ldr	r2, [pc, #584]	; (80025f4 <HAL_GPIO_Init+0x2b0>)
 80023ac:	4293      	cmp	r3, r2
 80023ae:	d046      	beq.n	800243e <HAL_GPIO_Init+0xfa>
 80023b0:	4a90      	ldr	r2, [pc, #576]	; (80025f4 <HAL_GPIO_Init+0x2b0>)
 80023b2:	4293      	cmp	r3, r2
 80023b4:	d85d      	bhi.n	8002472 <HAL_GPIO_Init+0x12e>
 80023b6:	2b12      	cmp	r3, #18
 80023b8:	d82a      	bhi.n	8002410 <HAL_GPIO_Init+0xcc>
 80023ba:	2b12      	cmp	r3, #18
 80023bc:	d859      	bhi.n	8002472 <HAL_GPIO_Init+0x12e>
 80023be:	a201      	add	r2, pc, #4	; (adr r2, 80023c4 <HAL_GPIO_Init+0x80>)
 80023c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80023c4:	0800243f 	.word	0x0800243f
 80023c8:	08002419 	.word	0x08002419
 80023cc:	0800242b 	.word	0x0800242b
 80023d0:	0800246d 	.word	0x0800246d
 80023d4:	08002473 	.word	0x08002473
 80023d8:	08002473 	.word	0x08002473
 80023dc:	08002473 	.word	0x08002473
 80023e0:	08002473 	.word	0x08002473
 80023e4:	08002473 	.word	0x08002473
 80023e8:	08002473 	.word	0x08002473
 80023ec:	08002473 	.word	0x08002473
 80023f0:	08002473 	.word	0x08002473
 80023f4:	08002473 	.word	0x08002473
 80023f8:	08002473 	.word	0x08002473
 80023fc:	08002473 	.word	0x08002473
 8002400:	08002473 	.word	0x08002473
 8002404:	08002473 	.word	0x08002473
 8002408:	08002421 	.word	0x08002421
 800240c:	08002435 	.word	0x08002435
 8002410:	4a79      	ldr	r2, [pc, #484]	; (80025f8 <HAL_GPIO_Init+0x2b4>)
 8002412:	4293      	cmp	r3, r2
 8002414:	d013      	beq.n	800243e <HAL_GPIO_Init+0xfa>
 8002416:	e02c      	b.n	8002472 <HAL_GPIO_Init+0x12e>
 8002418:	683b      	ldr	r3, [r7, #0]
 800241a:	68db      	ldr	r3, [r3, #12]
 800241c:	623b      	str	r3, [r7, #32]
 800241e:	e029      	b.n	8002474 <HAL_GPIO_Init+0x130>
 8002420:	683b      	ldr	r3, [r7, #0]
 8002422:	68db      	ldr	r3, [r3, #12]
 8002424:	3304      	adds	r3, #4
 8002426:	623b      	str	r3, [r7, #32]
 8002428:	e024      	b.n	8002474 <HAL_GPIO_Init+0x130>
 800242a:	683b      	ldr	r3, [r7, #0]
 800242c:	68db      	ldr	r3, [r3, #12]
 800242e:	3308      	adds	r3, #8
 8002430:	623b      	str	r3, [r7, #32]
 8002432:	e01f      	b.n	8002474 <HAL_GPIO_Init+0x130>
 8002434:	683b      	ldr	r3, [r7, #0]
 8002436:	68db      	ldr	r3, [r3, #12]
 8002438:	330c      	adds	r3, #12
 800243a:	623b      	str	r3, [r7, #32]
 800243c:	e01a      	b.n	8002474 <HAL_GPIO_Init+0x130>
 800243e:	683b      	ldr	r3, [r7, #0]
 8002440:	689b      	ldr	r3, [r3, #8]
 8002442:	2b00      	cmp	r3, #0
 8002444:	d102      	bne.n	800244c <HAL_GPIO_Init+0x108>
 8002446:	2304      	movs	r3, #4
 8002448:	623b      	str	r3, [r7, #32]
 800244a:	e013      	b.n	8002474 <HAL_GPIO_Init+0x130>
 800244c:	683b      	ldr	r3, [r7, #0]
 800244e:	689b      	ldr	r3, [r3, #8]
 8002450:	2b01      	cmp	r3, #1
 8002452:	d105      	bne.n	8002460 <HAL_GPIO_Init+0x11c>
 8002454:	2308      	movs	r3, #8
 8002456:	623b      	str	r3, [r7, #32]
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	69fa      	ldr	r2, [r7, #28]
 800245c:	611a      	str	r2, [r3, #16]
 800245e:	e009      	b.n	8002474 <HAL_GPIO_Init+0x130>
 8002460:	2308      	movs	r3, #8
 8002462:	623b      	str	r3, [r7, #32]
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	69fa      	ldr	r2, [r7, #28]
 8002468:	615a      	str	r2, [r3, #20]
 800246a:	e003      	b.n	8002474 <HAL_GPIO_Init+0x130>
 800246c:	2300      	movs	r3, #0
 800246e:	623b      	str	r3, [r7, #32]
 8002470:	e000      	b.n	8002474 <HAL_GPIO_Init+0x130>
 8002472:	bf00      	nop
 8002474:	69bb      	ldr	r3, [r7, #24]
 8002476:	2bff      	cmp	r3, #255	; 0xff
 8002478:	d801      	bhi.n	800247e <HAL_GPIO_Init+0x13a>
 800247a:	687b      	ldr	r3, [r7, #4]
 800247c:	e001      	b.n	8002482 <HAL_GPIO_Init+0x13e>
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	3304      	adds	r3, #4
 8002482:	617b      	str	r3, [r7, #20]
 8002484:	69bb      	ldr	r3, [r7, #24]
 8002486:	2bff      	cmp	r3, #255	; 0xff
 8002488:	d802      	bhi.n	8002490 <HAL_GPIO_Init+0x14c>
 800248a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800248c:	009b      	lsls	r3, r3, #2
 800248e:	e002      	b.n	8002496 <HAL_GPIO_Init+0x152>
 8002490:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002492:	3b08      	subs	r3, #8
 8002494:	009b      	lsls	r3, r3, #2
 8002496:	613b      	str	r3, [r7, #16]
 8002498:	697b      	ldr	r3, [r7, #20]
 800249a:	681a      	ldr	r2, [r3, #0]
 800249c:	210f      	movs	r1, #15
 800249e:	693b      	ldr	r3, [r7, #16]
 80024a0:	fa01 f303 	lsl.w	r3, r1, r3
 80024a4:	43db      	mvns	r3, r3
 80024a6:	401a      	ands	r2, r3
 80024a8:	6a39      	ldr	r1, [r7, #32]
 80024aa:	693b      	ldr	r3, [r7, #16]
 80024ac:	fa01 f303 	lsl.w	r3, r1, r3
 80024b0:	431a      	orrs	r2, r3
 80024b2:	697b      	ldr	r3, [r7, #20]
 80024b4:	601a      	str	r2, [r3, #0]
 80024b6:	683b      	ldr	r3, [r7, #0]
 80024b8:	685b      	ldr	r3, [r3, #4]
 80024ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80024be:	2b00      	cmp	r3, #0
 80024c0:	f000 80b1 	beq.w	8002626 <HAL_GPIO_Init+0x2e2>
 80024c4:	4b4d      	ldr	r3, [pc, #308]	; (80025fc <HAL_GPIO_Init+0x2b8>)
 80024c6:	699b      	ldr	r3, [r3, #24]
 80024c8:	4a4c      	ldr	r2, [pc, #304]	; (80025fc <HAL_GPIO_Init+0x2b8>)
 80024ca:	f043 0301 	orr.w	r3, r3, #1
 80024ce:	6193      	str	r3, [r2, #24]
 80024d0:	4b4a      	ldr	r3, [pc, #296]	; (80025fc <HAL_GPIO_Init+0x2b8>)
 80024d2:	699b      	ldr	r3, [r3, #24]
 80024d4:	f003 0301 	and.w	r3, r3, #1
 80024d8:	60bb      	str	r3, [r7, #8]
 80024da:	68bb      	ldr	r3, [r7, #8]
 80024dc:	4a48      	ldr	r2, [pc, #288]	; (8002600 <HAL_GPIO_Init+0x2bc>)
 80024de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80024e0:	089b      	lsrs	r3, r3, #2
 80024e2:	3302      	adds	r3, #2
 80024e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80024e8:	60fb      	str	r3, [r7, #12]
 80024ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80024ec:	f003 0303 	and.w	r3, r3, #3
 80024f0:	009b      	lsls	r3, r3, #2
 80024f2:	220f      	movs	r2, #15
 80024f4:	fa02 f303 	lsl.w	r3, r2, r3
 80024f8:	43db      	mvns	r3, r3
 80024fa:	68fa      	ldr	r2, [r7, #12]
 80024fc:	4013      	ands	r3, r2
 80024fe:	60fb      	str	r3, [r7, #12]
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	4a40      	ldr	r2, [pc, #256]	; (8002604 <HAL_GPIO_Init+0x2c0>)
 8002504:	4293      	cmp	r3, r2
 8002506:	d013      	beq.n	8002530 <HAL_GPIO_Init+0x1ec>
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	4a3f      	ldr	r2, [pc, #252]	; (8002608 <HAL_GPIO_Init+0x2c4>)
 800250c:	4293      	cmp	r3, r2
 800250e:	d00d      	beq.n	800252c <HAL_GPIO_Init+0x1e8>
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	4a3e      	ldr	r2, [pc, #248]	; (800260c <HAL_GPIO_Init+0x2c8>)
 8002514:	4293      	cmp	r3, r2
 8002516:	d007      	beq.n	8002528 <HAL_GPIO_Init+0x1e4>
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	4a3d      	ldr	r2, [pc, #244]	; (8002610 <HAL_GPIO_Init+0x2cc>)
 800251c:	4293      	cmp	r3, r2
 800251e:	d101      	bne.n	8002524 <HAL_GPIO_Init+0x1e0>
 8002520:	2303      	movs	r3, #3
 8002522:	e006      	b.n	8002532 <HAL_GPIO_Init+0x1ee>
 8002524:	2304      	movs	r3, #4
 8002526:	e004      	b.n	8002532 <HAL_GPIO_Init+0x1ee>
 8002528:	2302      	movs	r3, #2
 800252a:	e002      	b.n	8002532 <HAL_GPIO_Init+0x1ee>
 800252c:	2301      	movs	r3, #1
 800252e:	e000      	b.n	8002532 <HAL_GPIO_Init+0x1ee>
 8002530:	2300      	movs	r3, #0
 8002532:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002534:	f002 0203 	and.w	r2, r2, #3
 8002538:	0092      	lsls	r2, r2, #2
 800253a:	4093      	lsls	r3, r2
 800253c:	68fa      	ldr	r2, [r7, #12]
 800253e:	4313      	orrs	r3, r2
 8002540:	60fb      	str	r3, [r7, #12]
 8002542:	492f      	ldr	r1, [pc, #188]	; (8002600 <HAL_GPIO_Init+0x2bc>)
 8002544:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002546:	089b      	lsrs	r3, r3, #2
 8002548:	3302      	adds	r3, #2
 800254a:	68fa      	ldr	r2, [r7, #12]
 800254c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002550:	683b      	ldr	r3, [r7, #0]
 8002552:	685b      	ldr	r3, [r3, #4]
 8002554:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002558:	2b00      	cmp	r3, #0
 800255a:	d006      	beq.n	800256a <HAL_GPIO_Init+0x226>
 800255c:	4b2d      	ldr	r3, [pc, #180]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 800255e:	681a      	ldr	r2, [r3, #0]
 8002560:	492c      	ldr	r1, [pc, #176]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 8002562:	69bb      	ldr	r3, [r7, #24]
 8002564:	4313      	orrs	r3, r2
 8002566:	600b      	str	r3, [r1, #0]
 8002568:	e006      	b.n	8002578 <HAL_GPIO_Init+0x234>
 800256a:	4b2a      	ldr	r3, [pc, #168]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 800256c:	681a      	ldr	r2, [r3, #0]
 800256e:	69bb      	ldr	r3, [r7, #24]
 8002570:	43db      	mvns	r3, r3
 8002572:	4928      	ldr	r1, [pc, #160]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 8002574:	4013      	ands	r3, r2
 8002576:	600b      	str	r3, [r1, #0]
 8002578:	683b      	ldr	r3, [r7, #0]
 800257a:	685b      	ldr	r3, [r3, #4]
 800257c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002580:	2b00      	cmp	r3, #0
 8002582:	d006      	beq.n	8002592 <HAL_GPIO_Init+0x24e>
 8002584:	4b23      	ldr	r3, [pc, #140]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 8002586:	685a      	ldr	r2, [r3, #4]
 8002588:	4922      	ldr	r1, [pc, #136]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 800258a:	69bb      	ldr	r3, [r7, #24]
 800258c:	4313      	orrs	r3, r2
 800258e:	604b      	str	r3, [r1, #4]
 8002590:	e006      	b.n	80025a0 <HAL_GPIO_Init+0x25c>
 8002592:	4b20      	ldr	r3, [pc, #128]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 8002594:	685a      	ldr	r2, [r3, #4]
 8002596:	69bb      	ldr	r3, [r7, #24]
 8002598:	43db      	mvns	r3, r3
 800259a:	491e      	ldr	r1, [pc, #120]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 800259c:	4013      	ands	r3, r2
 800259e:	604b      	str	r3, [r1, #4]
 80025a0:	683b      	ldr	r3, [r7, #0]
 80025a2:	685b      	ldr	r3, [r3, #4]
 80025a4:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80025a8:	2b00      	cmp	r3, #0
 80025aa:	d006      	beq.n	80025ba <HAL_GPIO_Init+0x276>
 80025ac:	4b19      	ldr	r3, [pc, #100]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 80025ae:	689a      	ldr	r2, [r3, #8]
 80025b0:	4918      	ldr	r1, [pc, #96]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 80025b2:	69bb      	ldr	r3, [r7, #24]
 80025b4:	4313      	orrs	r3, r2
 80025b6:	608b      	str	r3, [r1, #8]
 80025b8:	e006      	b.n	80025c8 <HAL_GPIO_Init+0x284>
 80025ba:	4b16      	ldr	r3, [pc, #88]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 80025bc:	689a      	ldr	r2, [r3, #8]
 80025be:	69bb      	ldr	r3, [r7, #24]
 80025c0:	43db      	mvns	r3, r3
 80025c2:	4914      	ldr	r1, [pc, #80]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 80025c4:	4013      	ands	r3, r2
 80025c6:	608b      	str	r3, [r1, #8]
 80025c8:	683b      	ldr	r3, [r7, #0]
 80025ca:	685b      	ldr	r3, [r3, #4]
 80025cc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80025d0:	2b00      	cmp	r3, #0
 80025d2:	d021      	beq.n	8002618 <HAL_GPIO_Init+0x2d4>
 80025d4:	4b0f      	ldr	r3, [pc, #60]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 80025d6:	68da      	ldr	r2, [r3, #12]
 80025d8:	490e      	ldr	r1, [pc, #56]	; (8002614 <HAL_GPIO_Init+0x2d0>)
 80025da:	69bb      	ldr	r3, [r7, #24]
 80025dc:	4313      	orrs	r3, r2
 80025de:	60cb      	str	r3, [r1, #12]
 80025e0:	e021      	b.n	8002626 <HAL_GPIO_Init+0x2e2>
 80025e2:	bf00      	nop
 80025e4:	10320000 	.word	0x10320000
 80025e8:	10310000 	.word	0x10310000
 80025ec:	10220000 	.word	0x10220000
 80025f0:	10210000 	.word	0x10210000
 80025f4:	10120000 	.word	0x10120000
 80025f8:	10110000 	.word	0x10110000
 80025fc:	40021000 	.word	0x40021000
 8002600:	40010000 	.word	0x40010000
 8002604:	40010800 	.word	0x40010800
 8002608:	40010c00 	.word	0x40010c00
 800260c:	40011000 	.word	0x40011000
 8002610:	40011400 	.word	0x40011400
 8002614:	40010400 	.word	0x40010400
 8002618:	4b0b      	ldr	r3, [pc, #44]	; (8002648 <HAL_GPIO_Init+0x304>)
 800261a:	68da      	ldr	r2, [r3, #12]
 800261c:	69bb      	ldr	r3, [r7, #24]
 800261e:	43db      	mvns	r3, r3
 8002620:	4909      	ldr	r1, [pc, #36]	; (8002648 <HAL_GPIO_Init+0x304>)
 8002622:	4013      	ands	r3, r2
 8002624:	60cb      	str	r3, [r1, #12]
 8002626:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002628:	3301      	adds	r3, #1
 800262a:	627b      	str	r3, [r7, #36]	; 0x24
 800262c:	683b      	ldr	r3, [r7, #0]
 800262e:	681a      	ldr	r2, [r3, #0]
 8002630:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002632:	fa22 f303 	lsr.w	r3, r2, r3
 8002636:	2b00      	cmp	r3, #0
 8002638:	f47f ae8e 	bne.w	8002358 <HAL_GPIO_Init+0x14>
 800263c:	bf00      	nop
 800263e:	bf00      	nop
 8002640:	372c      	adds	r7, #44	; 0x2c
 8002642:	46bd      	mov	sp, r7
 8002644:	bc80      	pop	{r7}
 8002646:	4770      	bx	lr
 8002648:	40010400 	.word	0x40010400

0800264c <HAL_GPIO_WritePin>:
 800264c:	b480      	push	{r7}
 800264e:	b083      	sub	sp, #12
 8002650:	af00      	add	r7, sp, #0
 8002652:	6078      	str	r0, [r7, #4]
 8002654:	460b      	mov	r3, r1
 8002656:	807b      	strh	r3, [r7, #2]
 8002658:	4613      	mov	r3, r2
 800265a:	707b      	strb	r3, [r7, #1]
 800265c:	787b      	ldrb	r3, [r7, #1]
 800265e:	2b00      	cmp	r3, #0
 8002660:	d003      	beq.n	800266a <HAL_GPIO_WritePin+0x1e>
 8002662:	887a      	ldrh	r2, [r7, #2]
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	611a      	str	r2, [r3, #16]
 8002668:	e003      	b.n	8002672 <HAL_GPIO_WritePin+0x26>
 800266a:	887b      	ldrh	r3, [r7, #2]
 800266c:	041a      	lsls	r2, r3, #16
 800266e:	687b      	ldr	r3, [r7, #4]
 8002670:	611a      	str	r2, [r3, #16]
 8002672:	bf00      	nop
 8002674:	370c      	adds	r7, #12
 8002676:	46bd      	mov	sp, r7
 8002678:	bc80      	pop	{r7}
 800267a:	4770      	bx	lr

0800267c <HAL_I2C_Init>:
 800267c:	b580      	push	{r7, lr}
 800267e:	b084      	sub	sp, #16
 8002680:	af00      	add	r7, sp, #0
 8002682:	6078      	str	r0, [r7, #4]
 8002684:	687b      	ldr	r3, [r7, #4]
 8002686:	2b00      	cmp	r3, #0
 8002688:	d101      	bne.n	800268e <HAL_I2C_Init+0x12>
 800268a:	2301      	movs	r3, #1
 800268c:	e12b      	b.n	80028e6 <HAL_I2C_Init+0x26a>
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002694:	b2db      	uxtb	r3, r3
 8002696:	2b00      	cmp	r3, #0
 8002698:	d106      	bne.n	80026a8 <HAL_I2C_Init+0x2c>
 800269a:	687b      	ldr	r3, [r7, #4]
 800269c:	2200      	movs	r2, #0
 800269e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80026a2:	6878      	ldr	r0, [r7, #4]
 80026a4:	f7ff f806 	bl	80016b4 <HAL_I2C_MspInit>
 80026a8:	687b      	ldr	r3, [r7, #4]
 80026aa:	2224      	movs	r2, #36	; 0x24
 80026ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80026b0:	687b      	ldr	r3, [r7, #4]
 80026b2:	681b      	ldr	r3, [r3, #0]
 80026b4:	681a      	ldr	r2, [r3, #0]
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	681b      	ldr	r3, [r3, #0]
 80026ba:	f022 0201 	bic.w	r2, r2, #1
 80026be:	601a      	str	r2, [r3, #0]
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	681b      	ldr	r3, [r3, #0]
 80026c4:	681a      	ldr	r2, [r3, #0]
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80026ce:	601a      	str	r2, [r3, #0]
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	681b      	ldr	r3, [r3, #0]
 80026d4:	681a      	ldr	r2, [r3, #0]
 80026d6:	687b      	ldr	r3, [r7, #4]
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80026de:	601a      	str	r2, [r3, #0]
 80026e0:	f001 fc9c 	bl	800401c <HAL_RCC_GetPCLK1Freq>
 80026e4:	60f8      	str	r0, [r7, #12]
 80026e6:	687b      	ldr	r3, [r7, #4]
 80026e8:	685b      	ldr	r3, [r3, #4]
 80026ea:	4a81      	ldr	r2, [pc, #516]	; (80028f0 <HAL_I2C_Init+0x274>)
 80026ec:	4293      	cmp	r3, r2
 80026ee:	d807      	bhi.n	8002700 <HAL_I2C_Init+0x84>
 80026f0:	68fb      	ldr	r3, [r7, #12]
 80026f2:	4a80      	ldr	r2, [pc, #512]	; (80028f4 <HAL_I2C_Init+0x278>)
 80026f4:	4293      	cmp	r3, r2
 80026f6:	bf94      	ite	ls
 80026f8:	2301      	movls	r3, #1
 80026fa:	2300      	movhi	r3, #0
 80026fc:	b2db      	uxtb	r3, r3
 80026fe:	e006      	b.n	800270e <HAL_I2C_Init+0x92>
 8002700:	68fb      	ldr	r3, [r7, #12]
 8002702:	4a7d      	ldr	r2, [pc, #500]	; (80028f8 <HAL_I2C_Init+0x27c>)
 8002704:	4293      	cmp	r3, r2
 8002706:	bf94      	ite	ls
 8002708:	2301      	movls	r3, #1
 800270a:	2300      	movhi	r3, #0
 800270c:	b2db      	uxtb	r3, r3
 800270e:	2b00      	cmp	r3, #0
 8002710:	d001      	beq.n	8002716 <HAL_I2C_Init+0x9a>
 8002712:	2301      	movs	r3, #1
 8002714:	e0e7      	b.n	80028e6 <HAL_I2C_Init+0x26a>
 8002716:	68fb      	ldr	r3, [r7, #12]
 8002718:	4a78      	ldr	r2, [pc, #480]	; (80028fc <HAL_I2C_Init+0x280>)
 800271a:	fba2 2303 	umull	r2, r3, r2, r3
 800271e:	0c9b      	lsrs	r3, r3, #18
 8002720:	60bb      	str	r3, [r7, #8]
 8002722:	687b      	ldr	r3, [r7, #4]
 8002724:	681b      	ldr	r3, [r3, #0]
 8002726:	685b      	ldr	r3, [r3, #4]
 8002728:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800272c:	687b      	ldr	r3, [r7, #4]
 800272e:	681b      	ldr	r3, [r3, #0]
 8002730:	68ba      	ldr	r2, [r7, #8]
 8002732:	430a      	orrs	r2, r1
 8002734:	605a      	str	r2, [r3, #4]
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	681b      	ldr	r3, [r3, #0]
 800273a:	6a1b      	ldr	r3, [r3, #32]
 800273c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	685b      	ldr	r3, [r3, #4]
 8002744:	4a6a      	ldr	r2, [pc, #424]	; (80028f0 <HAL_I2C_Init+0x274>)
 8002746:	4293      	cmp	r3, r2
 8002748:	d802      	bhi.n	8002750 <HAL_I2C_Init+0xd4>
 800274a:	68bb      	ldr	r3, [r7, #8]
 800274c:	3301      	adds	r3, #1
 800274e:	e009      	b.n	8002764 <HAL_I2C_Init+0xe8>
 8002750:	68bb      	ldr	r3, [r7, #8]
 8002752:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8002756:	fb02 f303 	mul.w	r3, r2, r3
 800275a:	4a69      	ldr	r2, [pc, #420]	; (8002900 <HAL_I2C_Init+0x284>)
 800275c:	fba2 2303 	umull	r2, r3, r2, r3
 8002760:	099b      	lsrs	r3, r3, #6
 8002762:	3301      	adds	r3, #1
 8002764:	687a      	ldr	r2, [r7, #4]
 8002766:	6812      	ldr	r2, [r2, #0]
 8002768:	430b      	orrs	r3, r1
 800276a:	6213      	str	r3, [r2, #32]
 800276c:	687b      	ldr	r3, [r7, #4]
 800276e:	681b      	ldr	r3, [r3, #0]
 8002770:	69db      	ldr	r3, [r3, #28]
 8002772:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8002776:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800277a:	687b      	ldr	r3, [r7, #4]
 800277c:	685b      	ldr	r3, [r3, #4]
 800277e:	495c      	ldr	r1, [pc, #368]	; (80028f0 <HAL_I2C_Init+0x274>)
 8002780:	428b      	cmp	r3, r1
 8002782:	d819      	bhi.n	80027b8 <HAL_I2C_Init+0x13c>
 8002784:	68fb      	ldr	r3, [r7, #12]
 8002786:	1e59      	subs	r1, r3, #1
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	685b      	ldr	r3, [r3, #4]
 800278c:	005b      	lsls	r3, r3, #1
 800278e:	fbb1 f3f3 	udiv	r3, r1, r3
 8002792:	1c59      	adds	r1, r3, #1
 8002794:	f640 73fc 	movw	r3, #4092	; 0xffc
 8002798:	400b      	ands	r3, r1
 800279a:	2b00      	cmp	r3, #0
 800279c:	d00a      	beq.n	80027b4 <HAL_I2C_Init+0x138>
 800279e:	68fb      	ldr	r3, [r7, #12]
 80027a0:	1e59      	subs	r1, r3, #1
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	685b      	ldr	r3, [r3, #4]
 80027a6:	005b      	lsls	r3, r3, #1
 80027a8:	fbb1 f3f3 	udiv	r3, r1, r3
 80027ac:	3301      	adds	r3, #1
 80027ae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80027b2:	e051      	b.n	8002858 <HAL_I2C_Init+0x1dc>
 80027b4:	2304      	movs	r3, #4
 80027b6:	e04f      	b.n	8002858 <HAL_I2C_Init+0x1dc>
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	689b      	ldr	r3, [r3, #8]
 80027bc:	2b00      	cmp	r3, #0
 80027be:	d111      	bne.n	80027e4 <HAL_I2C_Init+0x168>
 80027c0:	68fb      	ldr	r3, [r7, #12]
 80027c2:	1e58      	subs	r0, r3, #1
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	6859      	ldr	r1, [r3, #4]
 80027c8:	460b      	mov	r3, r1
 80027ca:	005b      	lsls	r3, r3, #1
 80027cc:	440b      	add	r3, r1
 80027ce:	fbb0 f3f3 	udiv	r3, r0, r3
 80027d2:	3301      	adds	r3, #1
 80027d4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80027d8:	2b00      	cmp	r3, #0
 80027da:	bf0c      	ite	eq
 80027dc:	2301      	moveq	r3, #1
 80027de:	2300      	movne	r3, #0
 80027e0:	b2db      	uxtb	r3, r3
 80027e2:	e012      	b.n	800280a <HAL_I2C_Init+0x18e>
 80027e4:	68fb      	ldr	r3, [r7, #12]
 80027e6:	1e58      	subs	r0, r3, #1
 80027e8:	687b      	ldr	r3, [r7, #4]
 80027ea:	6859      	ldr	r1, [r3, #4]
 80027ec:	460b      	mov	r3, r1
 80027ee:	009b      	lsls	r3, r3, #2
 80027f0:	440b      	add	r3, r1
 80027f2:	0099      	lsls	r1, r3, #2
 80027f4:	440b      	add	r3, r1
 80027f6:	fbb0 f3f3 	udiv	r3, r0, r3
 80027fa:	3301      	adds	r3, #1
 80027fc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002800:	2b00      	cmp	r3, #0
 8002802:	bf0c      	ite	eq
 8002804:	2301      	moveq	r3, #1
 8002806:	2300      	movne	r3, #0
 8002808:	b2db      	uxtb	r3, r3
 800280a:	2b00      	cmp	r3, #0
 800280c:	d001      	beq.n	8002812 <HAL_I2C_Init+0x196>
 800280e:	2301      	movs	r3, #1
 8002810:	e022      	b.n	8002858 <HAL_I2C_Init+0x1dc>
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	689b      	ldr	r3, [r3, #8]
 8002816:	2b00      	cmp	r3, #0
 8002818:	d10e      	bne.n	8002838 <HAL_I2C_Init+0x1bc>
 800281a:	68fb      	ldr	r3, [r7, #12]
 800281c:	1e58      	subs	r0, r3, #1
 800281e:	687b      	ldr	r3, [r7, #4]
 8002820:	6859      	ldr	r1, [r3, #4]
 8002822:	460b      	mov	r3, r1
 8002824:	005b      	lsls	r3, r3, #1
 8002826:	440b      	add	r3, r1
 8002828:	fbb0 f3f3 	udiv	r3, r0, r3
 800282c:	3301      	adds	r3, #1
 800282e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002832:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8002836:	e00f      	b.n	8002858 <HAL_I2C_Init+0x1dc>
 8002838:	68fb      	ldr	r3, [r7, #12]
 800283a:	1e58      	subs	r0, r3, #1
 800283c:	687b      	ldr	r3, [r7, #4]
 800283e:	6859      	ldr	r1, [r3, #4]
 8002840:	460b      	mov	r3, r1
 8002842:	009b      	lsls	r3, r3, #2
 8002844:	440b      	add	r3, r1
 8002846:	0099      	lsls	r1, r3, #2
 8002848:	440b      	add	r3, r1
 800284a:	fbb0 f3f3 	udiv	r3, r0, r3
 800284e:	3301      	adds	r3, #1
 8002850:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002854:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8002858:	6879      	ldr	r1, [r7, #4]
 800285a:	6809      	ldr	r1, [r1, #0]
 800285c:	4313      	orrs	r3, r2
 800285e:	61cb      	str	r3, [r1, #28]
 8002860:	687b      	ldr	r3, [r7, #4]
 8002862:	681b      	ldr	r3, [r3, #0]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 800286a:	687b      	ldr	r3, [r7, #4]
 800286c:	69da      	ldr	r2, [r3, #28]
 800286e:	687b      	ldr	r3, [r7, #4]
 8002870:	6a1b      	ldr	r3, [r3, #32]
 8002872:	431a      	orrs	r2, r3
 8002874:	687b      	ldr	r3, [r7, #4]
 8002876:	681b      	ldr	r3, [r3, #0]
 8002878:	430a      	orrs	r2, r1
 800287a:	601a      	str	r2, [r3, #0]
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	689b      	ldr	r3, [r3, #8]
 8002882:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8002886:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800288a:	687a      	ldr	r2, [r7, #4]
 800288c:	6911      	ldr	r1, [r2, #16]
 800288e:	687a      	ldr	r2, [r7, #4]
 8002890:	68d2      	ldr	r2, [r2, #12]
 8002892:	4311      	orrs	r1, r2
 8002894:	687a      	ldr	r2, [r7, #4]
 8002896:	6812      	ldr	r2, [r2, #0]
 8002898:	430b      	orrs	r3, r1
 800289a:	6093      	str	r3, [r2, #8]
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	68db      	ldr	r3, [r3, #12]
 80028a2:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	695a      	ldr	r2, [r3, #20]
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	699b      	ldr	r3, [r3, #24]
 80028ae:	431a      	orrs	r2, r3
 80028b0:	687b      	ldr	r3, [r7, #4]
 80028b2:	681b      	ldr	r3, [r3, #0]
 80028b4:	430a      	orrs	r2, r1
 80028b6:	60da      	str	r2, [r3, #12]
 80028b8:	687b      	ldr	r3, [r7, #4]
 80028ba:	681b      	ldr	r3, [r3, #0]
 80028bc:	681a      	ldr	r2, [r3, #0]
 80028be:	687b      	ldr	r3, [r7, #4]
 80028c0:	681b      	ldr	r3, [r3, #0]
 80028c2:	f042 0201 	orr.w	r2, r2, #1
 80028c6:	601a      	str	r2, [r3, #0]
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	2200      	movs	r2, #0
 80028cc:	641a      	str	r2, [r3, #64]	; 0x40
 80028ce:	687b      	ldr	r3, [r7, #4]
 80028d0:	2220      	movs	r2, #32
 80028d2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80028d6:	687b      	ldr	r3, [r7, #4]
 80028d8:	2200      	movs	r2, #0
 80028da:	631a      	str	r2, [r3, #48]	; 0x30
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	2200      	movs	r2, #0
 80028e0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80028e4:	2300      	movs	r3, #0
 80028e6:	4618      	mov	r0, r3
 80028e8:	3710      	adds	r7, #16
 80028ea:	46bd      	mov	sp, r7
 80028ec:	bd80      	pop	{r7, pc}
 80028ee:	bf00      	nop
 80028f0:	000186a0 	.word	0x000186a0
 80028f4:	001e847f 	.word	0x001e847f
 80028f8:	003d08ff 	.word	0x003d08ff
 80028fc:	431bde83 	.word	0x431bde83
 8002900:	10624dd3 	.word	0x10624dd3

08002904 <HAL_I2C_Master_Transmit>:
 8002904:	b580      	push	{r7, lr}
 8002906:	b088      	sub	sp, #32
 8002908:	af02      	add	r7, sp, #8
 800290a:	60f8      	str	r0, [r7, #12]
 800290c:	607a      	str	r2, [r7, #4]
 800290e:	461a      	mov	r2, r3
 8002910:	460b      	mov	r3, r1
 8002912:	817b      	strh	r3, [r7, #10]
 8002914:	4613      	mov	r3, r2
 8002916:	813b      	strh	r3, [r7, #8]
 8002918:	f7ff fb28 	bl	8001f6c <HAL_GetTick>
 800291c:	6178      	str	r0, [r7, #20]
 800291e:	68fb      	ldr	r3, [r7, #12]
 8002920:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002924:	b2db      	uxtb	r3, r3
 8002926:	2b20      	cmp	r3, #32
 8002928:	f040 80e0 	bne.w	8002aec <HAL_I2C_Master_Transmit+0x1e8>
 800292c:	697b      	ldr	r3, [r7, #20]
 800292e:	9300      	str	r3, [sp, #0]
 8002930:	2319      	movs	r3, #25
 8002932:	2201      	movs	r2, #1
 8002934:	4970      	ldr	r1, [pc, #448]	; (8002af8 <HAL_I2C_Master_Transmit+0x1f4>)
 8002936:	68f8      	ldr	r0, [r7, #12]
 8002938:	f000 fdc0 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 800293c:	4603      	mov	r3, r0
 800293e:	2b00      	cmp	r3, #0
 8002940:	d001      	beq.n	8002946 <HAL_I2C_Master_Transmit+0x42>
 8002942:	2302      	movs	r3, #2
 8002944:	e0d3      	b.n	8002aee <HAL_I2C_Master_Transmit+0x1ea>
 8002946:	68fb      	ldr	r3, [r7, #12]
 8002948:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800294c:	2b01      	cmp	r3, #1
 800294e:	d101      	bne.n	8002954 <HAL_I2C_Master_Transmit+0x50>
 8002950:	2302      	movs	r3, #2
 8002952:	e0cc      	b.n	8002aee <HAL_I2C_Master_Transmit+0x1ea>
 8002954:	68fb      	ldr	r3, [r7, #12]
 8002956:	2201      	movs	r2, #1
 8002958:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800295c:	68fb      	ldr	r3, [r7, #12]
 800295e:	681b      	ldr	r3, [r3, #0]
 8002960:	681b      	ldr	r3, [r3, #0]
 8002962:	f003 0301 	and.w	r3, r3, #1
 8002966:	2b01      	cmp	r3, #1
 8002968:	d007      	beq.n	800297a <HAL_I2C_Master_Transmit+0x76>
 800296a:	68fb      	ldr	r3, [r7, #12]
 800296c:	681b      	ldr	r3, [r3, #0]
 800296e:	681a      	ldr	r2, [r3, #0]
 8002970:	68fb      	ldr	r3, [r7, #12]
 8002972:	681b      	ldr	r3, [r3, #0]
 8002974:	f042 0201 	orr.w	r2, r2, #1
 8002978:	601a      	str	r2, [r3, #0]
 800297a:	68fb      	ldr	r3, [r7, #12]
 800297c:	681b      	ldr	r3, [r3, #0]
 800297e:	681a      	ldr	r2, [r3, #0]
 8002980:	68fb      	ldr	r3, [r7, #12]
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002988:	601a      	str	r2, [r3, #0]
 800298a:	68fb      	ldr	r3, [r7, #12]
 800298c:	2221      	movs	r2, #33	; 0x21
 800298e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002992:	68fb      	ldr	r3, [r7, #12]
 8002994:	2210      	movs	r2, #16
 8002996:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800299a:	68fb      	ldr	r3, [r7, #12]
 800299c:	2200      	movs	r2, #0
 800299e:	641a      	str	r2, [r3, #64]	; 0x40
 80029a0:	68fb      	ldr	r3, [r7, #12]
 80029a2:	687a      	ldr	r2, [r7, #4]
 80029a4:	625a      	str	r2, [r3, #36]	; 0x24
 80029a6:	68fb      	ldr	r3, [r7, #12]
 80029a8:	893a      	ldrh	r2, [r7, #8]
 80029aa:	855a      	strh	r2, [r3, #42]	; 0x2a
 80029ac:	68fb      	ldr	r3, [r7, #12]
 80029ae:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80029b0:	b29a      	uxth	r2, r3
 80029b2:	68fb      	ldr	r3, [r7, #12]
 80029b4:	851a      	strh	r2, [r3, #40]	; 0x28
 80029b6:	68fb      	ldr	r3, [r7, #12]
 80029b8:	4a50      	ldr	r2, [pc, #320]	; (8002afc <HAL_I2C_Master_Transmit+0x1f8>)
 80029ba:	62da      	str	r2, [r3, #44]	; 0x2c
 80029bc:	8979      	ldrh	r1, [r7, #10]
 80029be:	697b      	ldr	r3, [r7, #20]
 80029c0:	6a3a      	ldr	r2, [r7, #32]
 80029c2:	68f8      	ldr	r0, [r7, #12]
 80029c4:	f000 fc2a 	bl	800321c <I2C_MasterRequestWrite>
 80029c8:	4603      	mov	r3, r0
 80029ca:	2b00      	cmp	r3, #0
 80029cc:	d001      	beq.n	80029d2 <HAL_I2C_Master_Transmit+0xce>
 80029ce:	2301      	movs	r3, #1
 80029d0:	e08d      	b.n	8002aee <HAL_I2C_Master_Transmit+0x1ea>
 80029d2:	2300      	movs	r3, #0
 80029d4:	613b      	str	r3, [r7, #16]
 80029d6:	68fb      	ldr	r3, [r7, #12]
 80029d8:	681b      	ldr	r3, [r3, #0]
 80029da:	695b      	ldr	r3, [r3, #20]
 80029dc:	613b      	str	r3, [r7, #16]
 80029de:	68fb      	ldr	r3, [r7, #12]
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	699b      	ldr	r3, [r3, #24]
 80029e4:	613b      	str	r3, [r7, #16]
 80029e6:	693b      	ldr	r3, [r7, #16]
 80029e8:	e066      	b.n	8002ab8 <HAL_I2C_Master_Transmit+0x1b4>
 80029ea:	697a      	ldr	r2, [r7, #20]
 80029ec:	6a39      	ldr	r1, [r7, #32]
 80029ee:	68f8      	ldr	r0, [r7, #12]
 80029f0:	f000 fe3a 	bl	8003668 <I2C_WaitOnTXEFlagUntilTimeout>
 80029f4:	4603      	mov	r3, r0
 80029f6:	2b00      	cmp	r3, #0
 80029f8:	d00d      	beq.n	8002a16 <HAL_I2C_Master_Transmit+0x112>
 80029fa:	68fb      	ldr	r3, [r7, #12]
 80029fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029fe:	2b04      	cmp	r3, #4
 8002a00:	d107      	bne.n	8002a12 <HAL_I2C_Master_Transmit+0x10e>
 8002a02:	68fb      	ldr	r3, [r7, #12]
 8002a04:	681b      	ldr	r3, [r3, #0]
 8002a06:	681a      	ldr	r2, [r3, #0]
 8002a08:	68fb      	ldr	r3, [r7, #12]
 8002a0a:	681b      	ldr	r3, [r3, #0]
 8002a0c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002a10:	601a      	str	r2, [r3, #0]
 8002a12:	2301      	movs	r3, #1
 8002a14:	e06b      	b.n	8002aee <HAL_I2C_Master_Transmit+0x1ea>
 8002a16:	68fb      	ldr	r3, [r7, #12]
 8002a18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a1a:	781a      	ldrb	r2, [r3, #0]
 8002a1c:	68fb      	ldr	r3, [r7, #12]
 8002a1e:	681b      	ldr	r3, [r3, #0]
 8002a20:	611a      	str	r2, [r3, #16]
 8002a22:	68fb      	ldr	r3, [r7, #12]
 8002a24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a26:	1c5a      	adds	r2, r3, #1
 8002a28:	68fb      	ldr	r3, [r7, #12]
 8002a2a:	625a      	str	r2, [r3, #36]	; 0x24
 8002a2c:	68fb      	ldr	r3, [r7, #12]
 8002a2e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002a30:	b29b      	uxth	r3, r3
 8002a32:	3b01      	subs	r3, #1
 8002a34:	b29a      	uxth	r2, r3
 8002a36:	68fb      	ldr	r3, [r7, #12]
 8002a38:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002a3a:	68fb      	ldr	r3, [r7, #12]
 8002a3c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002a3e:	3b01      	subs	r3, #1
 8002a40:	b29a      	uxth	r2, r3
 8002a42:	68fb      	ldr	r3, [r7, #12]
 8002a44:	851a      	strh	r2, [r3, #40]	; 0x28
 8002a46:	68fb      	ldr	r3, [r7, #12]
 8002a48:	681b      	ldr	r3, [r3, #0]
 8002a4a:	695b      	ldr	r3, [r3, #20]
 8002a4c:	f003 0304 	and.w	r3, r3, #4
 8002a50:	2b04      	cmp	r3, #4
 8002a52:	d11b      	bne.n	8002a8c <HAL_I2C_Master_Transmit+0x188>
 8002a54:	68fb      	ldr	r3, [r7, #12]
 8002a56:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002a58:	2b00      	cmp	r3, #0
 8002a5a:	d017      	beq.n	8002a8c <HAL_I2C_Master_Transmit+0x188>
 8002a5c:	68fb      	ldr	r3, [r7, #12]
 8002a5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a60:	781a      	ldrb	r2, [r3, #0]
 8002a62:	68fb      	ldr	r3, [r7, #12]
 8002a64:	681b      	ldr	r3, [r3, #0]
 8002a66:	611a      	str	r2, [r3, #16]
 8002a68:	68fb      	ldr	r3, [r7, #12]
 8002a6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a6c:	1c5a      	adds	r2, r3, #1
 8002a6e:	68fb      	ldr	r3, [r7, #12]
 8002a70:	625a      	str	r2, [r3, #36]	; 0x24
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002a76:	b29b      	uxth	r3, r3
 8002a78:	3b01      	subs	r3, #1
 8002a7a:	b29a      	uxth	r2, r3
 8002a7c:	68fb      	ldr	r3, [r7, #12]
 8002a7e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002a80:	68fb      	ldr	r3, [r7, #12]
 8002a82:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002a84:	3b01      	subs	r3, #1
 8002a86:	b29a      	uxth	r2, r3
 8002a88:	68fb      	ldr	r3, [r7, #12]
 8002a8a:	851a      	strh	r2, [r3, #40]	; 0x28
 8002a8c:	697a      	ldr	r2, [r7, #20]
 8002a8e:	6a39      	ldr	r1, [r7, #32]
 8002a90:	68f8      	ldr	r0, [r7, #12]
 8002a92:	f000 fe2a 	bl	80036ea <I2C_WaitOnBTFFlagUntilTimeout>
 8002a96:	4603      	mov	r3, r0
 8002a98:	2b00      	cmp	r3, #0
 8002a9a:	d00d      	beq.n	8002ab8 <HAL_I2C_Master_Transmit+0x1b4>
 8002a9c:	68fb      	ldr	r3, [r7, #12]
 8002a9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002aa0:	2b04      	cmp	r3, #4
 8002aa2:	d107      	bne.n	8002ab4 <HAL_I2C_Master_Transmit+0x1b0>
 8002aa4:	68fb      	ldr	r3, [r7, #12]
 8002aa6:	681b      	ldr	r3, [r3, #0]
 8002aa8:	681a      	ldr	r2, [r3, #0]
 8002aaa:	68fb      	ldr	r3, [r7, #12]
 8002aac:	681b      	ldr	r3, [r3, #0]
 8002aae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002ab2:	601a      	str	r2, [r3, #0]
 8002ab4:	2301      	movs	r3, #1
 8002ab6:	e01a      	b.n	8002aee <HAL_I2C_Master_Transmit+0x1ea>
 8002ab8:	68fb      	ldr	r3, [r7, #12]
 8002aba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002abc:	2b00      	cmp	r3, #0
 8002abe:	d194      	bne.n	80029ea <HAL_I2C_Master_Transmit+0xe6>
 8002ac0:	68fb      	ldr	r3, [r7, #12]
 8002ac2:	681b      	ldr	r3, [r3, #0]
 8002ac4:	681a      	ldr	r2, [r3, #0]
 8002ac6:	68fb      	ldr	r3, [r7, #12]
 8002ac8:	681b      	ldr	r3, [r3, #0]
 8002aca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002ace:	601a      	str	r2, [r3, #0]
 8002ad0:	68fb      	ldr	r3, [r7, #12]
 8002ad2:	2220      	movs	r2, #32
 8002ad4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002ad8:	68fb      	ldr	r3, [r7, #12]
 8002ada:	2200      	movs	r2, #0
 8002adc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002ae0:	68fb      	ldr	r3, [r7, #12]
 8002ae2:	2200      	movs	r2, #0
 8002ae4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002ae8:	2300      	movs	r3, #0
 8002aea:	e000      	b.n	8002aee <HAL_I2C_Master_Transmit+0x1ea>
 8002aec:	2302      	movs	r3, #2
 8002aee:	4618      	mov	r0, r3
 8002af0:	3718      	adds	r7, #24
 8002af2:	46bd      	mov	sp, r7
 8002af4:	bd80      	pop	{r7, pc}
 8002af6:	bf00      	nop
 8002af8:	00100002 	.word	0x00100002
 8002afc:	ffff0000 	.word	0xffff0000

08002b00 <HAL_I2C_Master_Receive>:
 8002b00:	b580      	push	{r7, lr}
 8002b02:	b08c      	sub	sp, #48	; 0x30
 8002b04:	af02      	add	r7, sp, #8
 8002b06:	60f8      	str	r0, [r7, #12]
 8002b08:	607a      	str	r2, [r7, #4]
 8002b0a:	461a      	mov	r2, r3
 8002b0c:	460b      	mov	r3, r1
 8002b0e:	817b      	strh	r3, [r7, #10]
 8002b10:	4613      	mov	r3, r2
 8002b12:	813b      	strh	r3, [r7, #8]
 8002b14:	2300      	movs	r3, #0
 8002b16:	623b      	str	r3, [r7, #32]
 8002b18:	f7ff fa28 	bl	8001f6c <HAL_GetTick>
 8002b1c:	6278      	str	r0, [r7, #36]	; 0x24
 8002b1e:	68fb      	ldr	r3, [r7, #12]
 8002b20:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002b24:	b2db      	uxtb	r3, r3
 8002b26:	2b20      	cmp	r3, #32
 8002b28:	f040 823f 	bne.w	8002faa <HAL_I2C_Master_Receive+0x4aa>
 8002b2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002b2e:	9300      	str	r3, [sp, #0]
 8002b30:	2319      	movs	r3, #25
 8002b32:	2201      	movs	r2, #1
 8002b34:	497f      	ldr	r1, [pc, #508]	; (8002d34 <HAL_I2C_Master_Receive+0x234>)
 8002b36:	68f8      	ldr	r0, [r7, #12]
 8002b38:	f000 fcc0 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 8002b3c:	4603      	mov	r3, r0
 8002b3e:	2b00      	cmp	r3, #0
 8002b40:	d001      	beq.n	8002b46 <HAL_I2C_Master_Receive+0x46>
 8002b42:	2302      	movs	r3, #2
 8002b44:	e232      	b.n	8002fac <HAL_I2C_Master_Receive+0x4ac>
 8002b46:	68fb      	ldr	r3, [r7, #12]
 8002b48:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002b4c:	2b01      	cmp	r3, #1
 8002b4e:	d101      	bne.n	8002b54 <HAL_I2C_Master_Receive+0x54>
 8002b50:	2302      	movs	r3, #2
 8002b52:	e22b      	b.n	8002fac <HAL_I2C_Master_Receive+0x4ac>
 8002b54:	68fb      	ldr	r3, [r7, #12]
 8002b56:	2201      	movs	r2, #1
 8002b58:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b5c:	68fb      	ldr	r3, [r7, #12]
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	f003 0301 	and.w	r3, r3, #1
 8002b66:	2b01      	cmp	r3, #1
 8002b68:	d007      	beq.n	8002b7a <HAL_I2C_Master_Receive+0x7a>
 8002b6a:	68fb      	ldr	r3, [r7, #12]
 8002b6c:	681b      	ldr	r3, [r3, #0]
 8002b6e:	681a      	ldr	r2, [r3, #0]
 8002b70:	68fb      	ldr	r3, [r7, #12]
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	f042 0201 	orr.w	r2, r2, #1
 8002b78:	601a      	str	r2, [r3, #0]
 8002b7a:	68fb      	ldr	r3, [r7, #12]
 8002b7c:	681b      	ldr	r3, [r3, #0]
 8002b7e:	681a      	ldr	r2, [r3, #0]
 8002b80:	68fb      	ldr	r3, [r7, #12]
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002b88:	601a      	str	r2, [r3, #0]
 8002b8a:	68fb      	ldr	r3, [r7, #12]
 8002b8c:	2222      	movs	r2, #34	; 0x22
 8002b8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b92:	68fb      	ldr	r3, [r7, #12]
 8002b94:	2210      	movs	r2, #16
 8002b96:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b9a:	68fb      	ldr	r3, [r7, #12]
 8002b9c:	2200      	movs	r2, #0
 8002b9e:	641a      	str	r2, [r3, #64]	; 0x40
 8002ba0:	68fb      	ldr	r3, [r7, #12]
 8002ba2:	687a      	ldr	r2, [r7, #4]
 8002ba4:	625a      	str	r2, [r3, #36]	; 0x24
 8002ba6:	68fb      	ldr	r3, [r7, #12]
 8002ba8:	893a      	ldrh	r2, [r7, #8]
 8002baa:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002bac:	68fb      	ldr	r3, [r7, #12]
 8002bae:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002bb0:	b29a      	uxth	r2, r3
 8002bb2:	68fb      	ldr	r3, [r7, #12]
 8002bb4:	851a      	strh	r2, [r3, #40]	; 0x28
 8002bb6:	68fb      	ldr	r3, [r7, #12]
 8002bb8:	4a5f      	ldr	r2, [pc, #380]	; (8002d38 <HAL_I2C_Master_Receive+0x238>)
 8002bba:	62da      	str	r2, [r3, #44]	; 0x2c
 8002bbc:	8979      	ldrh	r1, [r7, #10]
 8002bbe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002bc0:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002bc2:	68f8      	ldr	r0, [r7, #12]
 8002bc4:	f000 fbac 	bl	8003320 <I2C_MasterRequestRead>
 8002bc8:	4603      	mov	r3, r0
 8002bca:	2b00      	cmp	r3, #0
 8002bcc:	d001      	beq.n	8002bd2 <HAL_I2C_Master_Receive+0xd2>
 8002bce:	2301      	movs	r3, #1
 8002bd0:	e1ec      	b.n	8002fac <HAL_I2C_Master_Receive+0x4ac>
 8002bd2:	68fb      	ldr	r3, [r7, #12]
 8002bd4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002bd6:	2b00      	cmp	r3, #0
 8002bd8:	d113      	bne.n	8002c02 <HAL_I2C_Master_Receive+0x102>
 8002bda:	2300      	movs	r3, #0
 8002bdc:	61fb      	str	r3, [r7, #28]
 8002bde:	68fb      	ldr	r3, [r7, #12]
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	695b      	ldr	r3, [r3, #20]
 8002be4:	61fb      	str	r3, [r7, #28]
 8002be6:	68fb      	ldr	r3, [r7, #12]
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	699b      	ldr	r3, [r3, #24]
 8002bec:	61fb      	str	r3, [r7, #28]
 8002bee:	69fb      	ldr	r3, [r7, #28]
 8002bf0:	68fb      	ldr	r3, [r7, #12]
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	681a      	ldr	r2, [r3, #0]
 8002bf6:	68fb      	ldr	r3, [r7, #12]
 8002bf8:	681b      	ldr	r3, [r3, #0]
 8002bfa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002bfe:	601a      	str	r2, [r3, #0]
 8002c00:	e1c0      	b.n	8002f84 <HAL_I2C_Master_Receive+0x484>
 8002c02:	68fb      	ldr	r3, [r7, #12]
 8002c04:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002c06:	2b01      	cmp	r3, #1
 8002c08:	d11e      	bne.n	8002c48 <HAL_I2C_Master_Receive+0x148>
 8002c0a:	68fb      	ldr	r3, [r7, #12]
 8002c0c:	681b      	ldr	r3, [r3, #0]
 8002c0e:	681a      	ldr	r2, [r3, #0]
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	681b      	ldr	r3, [r3, #0]
 8002c14:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002c18:	601a      	str	r2, [r3, #0]
 8002c1a:	b672      	cpsid	i
 8002c1c:	bf00      	nop
 8002c1e:	2300      	movs	r3, #0
 8002c20:	61bb      	str	r3, [r7, #24]
 8002c22:	68fb      	ldr	r3, [r7, #12]
 8002c24:	681b      	ldr	r3, [r3, #0]
 8002c26:	695b      	ldr	r3, [r3, #20]
 8002c28:	61bb      	str	r3, [r7, #24]
 8002c2a:	68fb      	ldr	r3, [r7, #12]
 8002c2c:	681b      	ldr	r3, [r3, #0]
 8002c2e:	699b      	ldr	r3, [r3, #24]
 8002c30:	61bb      	str	r3, [r7, #24]
 8002c32:	69bb      	ldr	r3, [r7, #24]
 8002c34:	68fb      	ldr	r3, [r7, #12]
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	681a      	ldr	r2, [r3, #0]
 8002c3a:	68fb      	ldr	r3, [r7, #12]
 8002c3c:	681b      	ldr	r3, [r3, #0]
 8002c3e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002c42:	601a      	str	r2, [r3, #0]
 8002c44:	b662      	cpsie	i
 8002c46:	e035      	b.n	8002cb4 <HAL_I2C_Master_Receive+0x1b4>
 8002c48:	68fb      	ldr	r3, [r7, #12]
 8002c4a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002c4c:	2b02      	cmp	r3, #2
 8002c4e:	d11e      	bne.n	8002c8e <HAL_I2C_Master_Receive+0x18e>
 8002c50:	68fb      	ldr	r3, [r7, #12]
 8002c52:	681b      	ldr	r3, [r3, #0]
 8002c54:	681a      	ldr	r2, [r3, #0]
 8002c56:	68fb      	ldr	r3, [r7, #12]
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8002c5e:	601a      	str	r2, [r3, #0]
 8002c60:	b672      	cpsid	i
 8002c62:	bf00      	nop
 8002c64:	2300      	movs	r3, #0
 8002c66:	617b      	str	r3, [r7, #20]
 8002c68:	68fb      	ldr	r3, [r7, #12]
 8002c6a:	681b      	ldr	r3, [r3, #0]
 8002c6c:	695b      	ldr	r3, [r3, #20]
 8002c6e:	617b      	str	r3, [r7, #20]
 8002c70:	68fb      	ldr	r3, [r7, #12]
 8002c72:	681b      	ldr	r3, [r3, #0]
 8002c74:	699b      	ldr	r3, [r3, #24]
 8002c76:	617b      	str	r3, [r7, #20]
 8002c78:	697b      	ldr	r3, [r7, #20]
 8002c7a:	68fb      	ldr	r3, [r7, #12]
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	681a      	ldr	r2, [r3, #0]
 8002c80:	68fb      	ldr	r3, [r7, #12]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002c88:	601a      	str	r2, [r3, #0]
 8002c8a:	b662      	cpsie	i
 8002c8c:	e012      	b.n	8002cb4 <HAL_I2C_Master_Receive+0x1b4>
 8002c8e:	68fb      	ldr	r3, [r7, #12]
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	681a      	ldr	r2, [r3, #0]
 8002c94:	68fb      	ldr	r3, [r7, #12]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002c9c:	601a      	str	r2, [r3, #0]
 8002c9e:	2300      	movs	r3, #0
 8002ca0:	613b      	str	r3, [r7, #16]
 8002ca2:	68fb      	ldr	r3, [r7, #12]
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	695b      	ldr	r3, [r3, #20]
 8002ca8:	613b      	str	r3, [r7, #16]
 8002caa:	68fb      	ldr	r3, [r7, #12]
 8002cac:	681b      	ldr	r3, [r3, #0]
 8002cae:	699b      	ldr	r3, [r3, #24]
 8002cb0:	613b      	str	r3, [r7, #16]
 8002cb2:	693b      	ldr	r3, [r7, #16]
 8002cb4:	e166      	b.n	8002f84 <HAL_I2C_Master_Receive+0x484>
 8002cb6:	68fb      	ldr	r3, [r7, #12]
 8002cb8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002cba:	2b03      	cmp	r3, #3
 8002cbc:	f200 811f 	bhi.w	8002efe <HAL_I2C_Master_Receive+0x3fe>
 8002cc0:	68fb      	ldr	r3, [r7, #12]
 8002cc2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002cc4:	2b01      	cmp	r3, #1
 8002cc6:	d123      	bne.n	8002d10 <HAL_I2C_Master_Receive+0x210>
 8002cc8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002cca:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8002ccc:	68f8      	ldr	r0, [r7, #12]
 8002cce:	f000 fd4d 	bl	800376c <I2C_WaitOnRXNEFlagUntilTimeout>
 8002cd2:	4603      	mov	r3, r0
 8002cd4:	2b00      	cmp	r3, #0
 8002cd6:	d001      	beq.n	8002cdc <HAL_I2C_Master_Receive+0x1dc>
 8002cd8:	2301      	movs	r3, #1
 8002cda:	e167      	b.n	8002fac <HAL_I2C_Master_Receive+0x4ac>
 8002cdc:	68fb      	ldr	r3, [r7, #12]
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	691a      	ldr	r2, [r3, #16]
 8002ce2:	68fb      	ldr	r3, [r7, #12]
 8002ce4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ce6:	b2d2      	uxtb	r2, r2
 8002ce8:	701a      	strb	r2, [r3, #0]
 8002cea:	68fb      	ldr	r3, [r7, #12]
 8002cec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cee:	1c5a      	adds	r2, r3, #1
 8002cf0:	68fb      	ldr	r3, [r7, #12]
 8002cf2:	625a      	str	r2, [r3, #36]	; 0x24
 8002cf4:	68fb      	ldr	r3, [r7, #12]
 8002cf6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002cf8:	3b01      	subs	r3, #1
 8002cfa:	b29a      	uxth	r2, r3
 8002cfc:	68fb      	ldr	r3, [r7, #12]
 8002cfe:	851a      	strh	r2, [r3, #40]	; 0x28
 8002d00:	68fb      	ldr	r3, [r7, #12]
 8002d02:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002d04:	b29b      	uxth	r3, r3
 8002d06:	3b01      	subs	r3, #1
 8002d08:	b29a      	uxth	r2, r3
 8002d0a:	68fb      	ldr	r3, [r7, #12]
 8002d0c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002d0e:	e139      	b.n	8002f84 <HAL_I2C_Master_Receive+0x484>
 8002d10:	68fb      	ldr	r3, [r7, #12]
 8002d12:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002d14:	2b02      	cmp	r3, #2
 8002d16:	d152      	bne.n	8002dbe <HAL_I2C_Master_Receive+0x2be>
 8002d18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002d1a:	9300      	str	r3, [sp, #0]
 8002d1c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002d1e:	2200      	movs	r2, #0
 8002d20:	4906      	ldr	r1, [pc, #24]	; (8002d3c <HAL_I2C_Master_Receive+0x23c>)
 8002d22:	68f8      	ldr	r0, [r7, #12]
 8002d24:	f000 fbca 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 8002d28:	4603      	mov	r3, r0
 8002d2a:	2b00      	cmp	r3, #0
 8002d2c:	d008      	beq.n	8002d40 <HAL_I2C_Master_Receive+0x240>
 8002d2e:	2301      	movs	r3, #1
 8002d30:	e13c      	b.n	8002fac <HAL_I2C_Master_Receive+0x4ac>
 8002d32:	bf00      	nop
 8002d34:	00100002 	.word	0x00100002
 8002d38:	ffff0000 	.word	0xffff0000
 8002d3c:	00010004 	.word	0x00010004
 8002d40:	b672      	cpsid	i
 8002d42:	bf00      	nop
 8002d44:	68fb      	ldr	r3, [r7, #12]
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	681a      	ldr	r2, [r3, #0]
 8002d4a:	68fb      	ldr	r3, [r7, #12]
 8002d4c:	681b      	ldr	r3, [r3, #0]
 8002d4e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002d52:	601a      	str	r2, [r3, #0]
 8002d54:	68fb      	ldr	r3, [r7, #12]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	691a      	ldr	r2, [r3, #16]
 8002d5a:	68fb      	ldr	r3, [r7, #12]
 8002d5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d5e:	b2d2      	uxtb	r2, r2
 8002d60:	701a      	strb	r2, [r3, #0]
 8002d62:	68fb      	ldr	r3, [r7, #12]
 8002d64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d66:	1c5a      	adds	r2, r3, #1
 8002d68:	68fb      	ldr	r3, [r7, #12]
 8002d6a:	625a      	str	r2, [r3, #36]	; 0x24
 8002d6c:	68fb      	ldr	r3, [r7, #12]
 8002d6e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002d70:	3b01      	subs	r3, #1
 8002d72:	b29a      	uxth	r2, r3
 8002d74:	68fb      	ldr	r3, [r7, #12]
 8002d76:	851a      	strh	r2, [r3, #40]	; 0x28
 8002d78:	68fb      	ldr	r3, [r7, #12]
 8002d7a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002d7c:	b29b      	uxth	r3, r3
 8002d7e:	3b01      	subs	r3, #1
 8002d80:	b29a      	uxth	r2, r3
 8002d82:	68fb      	ldr	r3, [r7, #12]
 8002d84:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002d86:	b662      	cpsie	i
 8002d88:	bf00      	nop
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	691a      	ldr	r2, [r3, #16]
 8002d90:	68fb      	ldr	r3, [r7, #12]
 8002d92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d94:	b2d2      	uxtb	r2, r2
 8002d96:	701a      	strb	r2, [r3, #0]
 8002d98:	68fb      	ldr	r3, [r7, #12]
 8002d9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d9c:	1c5a      	adds	r2, r3, #1
 8002d9e:	68fb      	ldr	r3, [r7, #12]
 8002da0:	625a      	str	r2, [r3, #36]	; 0x24
 8002da2:	68fb      	ldr	r3, [r7, #12]
 8002da4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002da6:	3b01      	subs	r3, #1
 8002da8:	b29a      	uxth	r2, r3
 8002daa:	68fb      	ldr	r3, [r7, #12]
 8002dac:	851a      	strh	r2, [r3, #40]	; 0x28
 8002dae:	68fb      	ldr	r3, [r7, #12]
 8002db0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002db2:	b29b      	uxth	r3, r3
 8002db4:	3b01      	subs	r3, #1
 8002db6:	b29a      	uxth	r2, r3
 8002db8:	68fb      	ldr	r3, [r7, #12]
 8002dba:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002dbc:	e0e2      	b.n	8002f84 <HAL_I2C_Master_Receive+0x484>
 8002dbe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002dc0:	9300      	str	r3, [sp, #0]
 8002dc2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002dc4:	2200      	movs	r2, #0
 8002dc6:	497b      	ldr	r1, [pc, #492]	; (8002fb4 <HAL_I2C_Master_Receive+0x4b4>)
 8002dc8:	68f8      	ldr	r0, [r7, #12]
 8002dca:	f000 fb77 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 8002dce:	4603      	mov	r3, r0
 8002dd0:	2b00      	cmp	r3, #0
 8002dd2:	d001      	beq.n	8002dd8 <HAL_I2C_Master_Receive+0x2d8>
 8002dd4:	2301      	movs	r3, #1
 8002dd6:	e0e9      	b.n	8002fac <HAL_I2C_Master_Receive+0x4ac>
 8002dd8:	68fb      	ldr	r3, [r7, #12]
 8002dda:	681b      	ldr	r3, [r3, #0]
 8002ddc:	681a      	ldr	r2, [r3, #0]
 8002dde:	68fb      	ldr	r3, [r7, #12]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002de6:	601a      	str	r2, [r3, #0]
 8002de8:	b672      	cpsid	i
 8002dea:	bf00      	nop
 8002dec:	68fb      	ldr	r3, [r7, #12]
 8002dee:	681b      	ldr	r3, [r3, #0]
 8002df0:	691a      	ldr	r2, [r3, #16]
 8002df2:	68fb      	ldr	r3, [r7, #12]
 8002df4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002df6:	b2d2      	uxtb	r2, r2
 8002df8:	701a      	strb	r2, [r3, #0]
 8002dfa:	68fb      	ldr	r3, [r7, #12]
 8002dfc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dfe:	1c5a      	adds	r2, r3, #1
 8002e00:	68fb      	ldr	r3, [r7, #12]
 8002e02:	625a      	str	r2, [r3, #36]	; 0x24
 8002e04:	68fb      	ldr	r3, [r7, #12]
 8002e06:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002e08:	3b01      	subs	r3, #1
 8002e0a:	b29a      	uxth	r2, r3
 8002e0c:	68fb      	ldr	r3, [r7, #12]
 8002e0e:	851a      	strh	r2, [r3, #40]	; 0x28
 8002e10:	68fb      	ldr	r3, [r7, #12]
 8002e12:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002e14:	b29b      	uxth	r3, r3
 8002e16:	3b01      	subs	r3, #1
 8002e18:	b29a      	uxth	r2, r3
 8002e1a:	68fb      	ldr	r3, [r7, #12]
 8002e1c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002e1e:	4b66      	ldr	r3, [pc, #408]	; (8002fb8 <HAL_I2C_Master_Receive+0x4b8>)
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	08db      	lsrs	r3, r3, #3
 8002e24:	4a65      	ldr	r2, [pc, #404]	; (8002fbc <HAL_I2C_Master_Receive+0x4bc>)
 8002e26:	fba2 2303 	umull	r2, r3, r2, r3
 8002e2a:	0a1a      	lsrs	r2, r3, #8
 8002e2c:	4613      	mov	r3, r2
 8002e2e:	009b      	lsls	r3, r3, #2
 8002e30:	4413      	add	r3, r2
 8002e32:	00da      	lsls	r2, r3, #3
 8002e34:	1ad3      	subs	r3, r2, r3
 8002e36:	623b      	str	r3, [r7, #32]
 8002e38:	6a3b      	ldr	r3, [r7, #32]
 8002e3a:	3b01      	subs	r3, #1
 8002e3c:	623b      	str	r3, [r7, #32]
 8002e3e:	6a3b      	ldr	r3, [r7, #32]
 8002e40:	2b00      	cmp	r3, #0
 8002e42:	d118      	bne.n	8002e76 <HAL_I2C_Master_Receive+0x376>
 8002e44:	68fb      	ldr	r3, [r7, #12]
 8002e46:	2200      	movs	r2, #0
 8002e48:	631a      	str	r2, [r3, #48]	; 0x30
 8002e4a:	68fb      	ldr	r3, [r7, #12]
 8002e4c:	2220      	movs	r2, #32
 8002e4e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e52:	68fb      	ldr	r3, [r7, #12]
 8002e54:	2200      	movs	r2, #0
 8002e56:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002e5a:	68fb      	ldr	r3, [r7, #12]
 8002e5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e5e:	f043 0220 	orr.w	r2, r3, #32
 8002e62:	68fb      	ldr	r3, [r7, #12]
 8002e64:	641a      	str	r2, [r3, #64]	; 0x40
 8002e66:	b662      	cpsie	i
 8002e68:	bf00      	nop
 8002e6a:	68fb      	ldr	r3, [r7, #12]
 8002e6c:	2200      	movs	r2, #0
 8002e6e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e72:	2301      	movs	r3, #1
 8002e74:	e09a      	b.n	8002fac <HAL_I2C_Master_Receive+0x4ac>
 8002e76:	68fb      	ldr	r3, [r7, #12]
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	695b      	ldr	r3, [r3, #20]
 8002e7c:	f003 0304 	and.w	r3, r3, #4
 8002e80:	2b04      	cmp	r3, #4
 8002e82:	d1d9      	bne.n	8002e38 <HAL_I2C_Master_Receive+0x338>
 8002e84:	68fb      	ldr	r3, [r7, #12]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	681a      	ldr	r2, [r3, #0]
 8002e8a:	68fb      	ldr	r3, [r7, #12]
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002e92:	601a      	str	r2, [r3, #0]
 8002e94:	68fb      	ldr	r3, [r7, #12]
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	691a      	ldr	r2, [r3, #16]
 8002e9a:	68fb      	ldr	r3, [r7, #12]
 8002e9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e9e:	b2d2      	uxtb	r2, r2
 8002ea0:	701a      	strb	r2, [r3, #0]
 8002ea2:	68fb      	ldr	r3, [r7, #12]
 8002ea4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ea6:	1c5a      	adds	r2, r3, #1
 8002ea8:	68fb      	ldr	r3, [r7, #12]
 8002eaa:	625a      	str	r2, [r3, #36]	; 0x24
 8002eac:	68fb      	ldr	r3, [r7, #12]
 8002eae:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002eb0:	3b01      	subs	r3, #1
 8002eb2:	b29a      	uxth	r2, r3
 8002eb4:	68fb      	ldr	r3, [r7, #12]
 8002eb6:	851a      	strh	r2, [r3, #40]	; 0x28
 8002eb8:	68fb      	ldr	r3, [r7, #12]
 8002eba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002ebc:	b29b      	uxth	r3, r3
 8002ebe:	3b01      	subs	r3, #1
 8002ec0:	b29a      	uxth	r2, r3
 8002ec2:	68fb      	ldr	r3, [r7, #12]
 8002ec4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002ec6:	b662      	cpsie	i
 8002ec8:	bf00      	nop
 8002eca:	68fb      	ldr	r3, [r7, #12]
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	691a      	ldr	r2, [r3, #16]
 8002ed0:	68fb      	ldr	r3, [r7, #12]
 8002ed2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002ed4:	b2d2      	uxtb	r2, r2
 8002ed6:	701a      	strb	r2, [r3, #0]
 8002ed8:	68fb      	ldr	r3, [r7, #12]
 8002eda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002edc:	1c5a      	adds	r2, r3, #1
 8002ede:	68fb      	ldr	r3, [r7, #12]
 8002ee0:	625a      	str	r2, [r3, #36]	; 0x24
 8002ee2:	68fb      	ldr	r3, [r7, #12]
 8002ee4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002ee6:	3b01      	subs	r3, #1
 8002ee8:	b29a      	uxth	r2, r3
 8002eea:	68fb      	ldr	r3, [r7, #12]
 8002eec:	851a      	strh	r2, [r3, #40]	; 0x28
 8002eee:	68fb      	ldr	r3, [r7, #12]
 8002ef0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002ef2:	b29b      	uxth	r3, r3
 8002ef4:	3b01      	subs	r3, #1
 8002ef6:	b29a      	uxth	r2, r3
 8002ef8:	68fb      	ldr	r3, [r7, #12]
 8002efa:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002efc:	e042      	b.n	8002f84 <HAL_I2C_Master_Receive+0x484>
 8002efe:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002f00:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8002f02:	68f8      	ldr	r0, [r7, #12]
 8002f04:	f000 fc32 	bl	800376c <I2C_WaitOnRXNEFlagUntilTimeout>
 8002f08:	4603      	mov	r3, r0
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d001      	beq.n	8002f12 <HAL_I2C_Master_Receive+0x412>
 8002f0e:	2301      	movs	r3, #1
 8002f10:	e04c      	b.n	8002fac <HAL_I2C_Master_Receive+0x4ac>
 8002f12:	68fb      	ldr	r3, [r7, #12]
 8002f14:	681b      	ldr	r3, [r3, #0]
 8002f16:	691a      	ldr	r2, [r3, #16]
 8002f18:	68fb      	ldr	r3, [r7, #12]
 8002f1a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f1c:	b2d2      	uxtb	r2, r2
 8002f1e:	701a      	strb	r2, [r3, #0]
 8002f20:	68fb      	ldr	r3, [r7, #12]
 8002f22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f24:	1c5a      	adds	r2, r3, #1
 8002f26:	68fb      	ldr	r3, [r7, #12]
 8002f28:	625a      	str	r2, [r3, #36]	; 0x24
 8002f2a:	68fb      	ldr	r3, [r7, #12]
 8002f2c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002f2e:	3b01      	subs	r3, #1
 8002f30:	b29a      	uxth	r2, r3
 8002f32:	68fb      	ldr	r3, [r7, #12]
 8002f34:	851a      	strh	r2, [r3, #40]	; 0x28
 8002f36:	68fb      	ldr	r3, [r7, #12]
 8002f38:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002f3a:	b29b      	uxth	r3, r3
 8002f3c:	3b01      	subs	r3, #1
 8002f3e:	b29a      	uxth	r2, r3
 8002f40:	68fb      	ldr	r3, [r7, #12]
 8002f42:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002f44:	68fb      	ldr	r3, [r7, #12]
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	695b      	ldr	r3, [r3, #20]
 8002f4a:	f003 0304 	and.w	r3, r3, #4
 8002f4e:	2b04      	cmp	r3, #4
 8002f50:	d118      	bne.n	8002f84 <HAL_I2C_Master_Receive+0x484>
 8002f52:	68fb      	ldr	r3, [r7, #12]
 8002f54:	681b      	ldr	r3, [r3, #0]
 8002f56:	691a      	ldr	r2, [r3, #16]
 8002f58:	68fb      	ldr	r3, [r7, #12]
 8002f5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f5c:	b2d2      	uxtb	r2, r2
 8002f5e:	701a      	strb	r2, [r3, #0]
 8002f60:	68fb      	ldr	r3, [r7, #12]
 8002f62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f64:	1c5a      	adds	r2, r3, #1
 8002f66:	68fb      	ldr	r3, [r7, #12]
 8002f68:	625a      	str	r2, [r3, #36]	; 0x24
 8002f6a:	68fb      	ldr	r3, [r7, #12]
 8002f6c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002f6e:	3b01      	subs	r3, #1
 8002f70:	b29a      	uxth	r2, r3
 8002f72:	68fb      	ldr	r3, [r7, #12]
 8002f74:	851a      	strh	r2, [r3, #40]	; 0x28
 8002f76:	68fb      	ldr	r3, [r7, #12]
 8002f78:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002f7a:	b29b      	uxth	r3, r3
 8002f7c:	3b01      	subs	r3, #1
 8002f7e:	b29a      	uxth	r2, r3
 8002f80:	68fb      	ldr	r3, [r7, #12]
 8002f82:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002f84:	68fb      	ldr	r3, [r7, #12]
 8002f86:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002f88:	2b00      	cmp	r3, #0
 8002f8a:	f47f ae94 	bne.w	8002cb6 <HAL_I2C_Master_Receive+0x1b6>
 8002f8e:	68fb      	ldr	r3, [r7, #12]
 8002f90:	2220      	movs	r2, #32
 8002f92:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002f96:	68fb      	ldr	r3, [r7, #12]
 8002f98:	2200      	movs	r2, #0
 8002f9a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002f9e:	68fb      	ldr	r3, [r7, #12]
 8002fa0:	2200      	movs	r2, #0
 8002fa2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002fa6:	2300      	movs	r3, #0
 8002fa8:	e000      	b.n	8002fac <HAL_I2C_Master_Receive+0x4ac>
 8002faa:	2302      	movs	r3, #2
 8002fac:	4618      	mov	r0, r3
 8002fae:	3728      	adds	r7, #40	; 0x28
 8002fb0:	46bd      	mov	sp, r7
 8002fb2:	bd80      	pop	{r7, pc}
 8002fb4:	00010004 	.word	0x00010004
 8002fb8:	20000000 	.word	0x20000000
 8002fbc:	14f8b589 	.word	0x14f8b589

08002fc0 <HAL_I2C_IsDeviceReady>:
 8002fc0:	b580      	push	{r7, lr}
 8002fc2:	b08a      	sub	sp, #40	; 0x28
 8002fc4:	af02      	add	r7, sp, #8
 8002fc6:	60f8      	str	r0, [r7, #12]
 8002fc8:	607a      	str	r2, [r7, #4]
 8002fca:	603b      	str	r3, [r7, #0]
 8002fcc:	460b      	mov	r3, r1
 8002fce:	817b      	strh	r3, [r7, #10]
 8002fd0:	f7fe ffcc 	bl	8001f6c <HAL_GetTick>
 8002fd4:	61f8      	str	r0, [r7, #28]
 8002fd6:	2301      	movs	r3, #1
 8002fd8:	61bb      	str	r3, [r7, #24]
 8002fda:	68fb      	ldr	r3, [r7, #12]
 8002fdc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002fe0:	b2db      	uxtb	r3, r3
 8002fe2:	2b20      	cmp	r3, #32
 8002fe4:	f040 8111 	bne.w	800320a <HAL_I2C_IsDeviceReady+0x24a>
 8002fe8:	69fb      	ldr	r3, [r7, #28]
 8002fea:	9300      	str	r3, [sp, #0]
 8002fec:	2319      	movs	r3, #25
 8002fee:	2201      	movs	r2, #1
 8002ff0:	4988      	ldr	r1, [pc, #544]	; (8003214 <HAL_I2C_IsDeviceReady+0x254>)
 8002ff2:	68f8      	ldr	r0, [r7, #12]
 8002ff4:	f000 fa62 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 8002ff8:	4603      	mov	r3, r0
 8002ffa:	2b00      	cmp	r3, #0
 8002ffc:	d001      	beq.n	8003002 <HAL_I2C_IsDeviceReady+0x42>
 8002ffe:	2302      	movs	r3, #2
 8003000:	e104      	b.n	800320c <HAL_I2C_IsDeviceReady+0x24c>
 8003002:	68fb      	ldr	r3, [r7, #12]
 8003004:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003008:	2b01      	cmp	r3, #1
 800300a:	d101      	bne.n	8003010 <HAL_I2C_IsDeviceReady+0x50>
 800300c:	2302      	movs	r3, #2
 800300e:	e0fd      	b.n	800320c <HAL_I2C_IsDeviceReady+0x24c>
 8003010:	68fb      	ldr	r3, [r7, #12]
 8003012:	2201      	movs	r2, #1
 8003014:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003018:	68fb      	ldr	r3, [r7, #12]
 800301a:	681b      	ldr	r3, [r3, #0]
 800301c:	681b      	ldr	r3, [r3, #0]
 800301e:	f003 0301 	and.w	r3, r3, #1
 8003022:	2b01      	cmp	r3, #1
 8003024:	d007      	beq.n	8003036 <HAL_I2C_IsDeviceReady+0x76>
 8003026:	68fb      	ldr	r3, [r7, #12]
 8003028:	681b      	ldr	r3, [r3, #0]
 800302a:	681a      	ldr	r2, [r3, #0]
 800302c:	68fb      	ldr	r3, [r7, #12]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	f042 0201 	orr.w	r2, r2, #1
 8003034:	601a      	str	r2, [r3, #0]
 8003036:	68fb      	ldr	r3, [r7, #12]
 8003038:	681b      	ldr	r3, [r3, #0]
 800303a:	681a      	ldr	r2, [r3, #0]
 800303c:	68fb      	ldr	r3, [r7, #12]
 800303e:	681b      	ldr	r3, [r3, #0]
 8003040:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003044:	601a      	str	r2, [r3, #0]
 8003046:	68fb      	ldr	r3, [r7, #12]
 8003048:	2224      	movs	r2, #36	; 0x24
 800304a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800304e:	68fb      	ldr	r3, [r7, #12]
 8003050:	2200      	movs	r2, #0
 8003052:	641a      	str	r2, [r3, #64]	; 0x40
 8003054:	68fb      	ldr	r3, [r7, #12]
 8003056:	4a70      	ldr	r2, [pc, #448]	; (8003218 <HAL_I2C_IsDeviceReady+0x258>)
 8003058:	62da      	str	r2, [r3, #44]	; 0x2c
 800305a:	68fb      	ldr	r3, [r7, #12]
 800305c:	681b      	ldr	r3, [r3, #0]
 800305e:	681a      	ldr	r2, [r3, #0]
 8003060:	68fb      	ldr	r3, [r7, #12]
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003068:	601a      	str	r2, [r3, #0]
 800306a:	69fb      	ldr	r3, [r7, #28]
 800306c:	9300      	str	r3, [sp, #0]
 800306e:	683b      	ldr	r3, [r7, #0]
 8003070:	2200      	movs	r2, #0
 8003072:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003076:	68f8      	ldr	r0, [r7, #12]
 8003078:	f000 fa20 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 800307c:	4603      	mov	r3, r0
 800307e:	2b00      	cmp	r3, #0
 8003080:	d00d      	beq.n	800309e <HAL_I2C_IsDeviceReady+0xde>
 8003082:	68fb      	ldr	r3, [r7, #12]
 8003084:	681b      	ldr	r3, [r3, #0]
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800308c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003090:	d103      	bne.n	800309a <HAL_I2C_IsDeviceReady+0xda>
 8003092:	68fb      	ldr	r3, [r7, #12]
 8003094:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003098:	641a      	str	r2, [r3, #64]	; 0x40
 800309a:	2303      	movs	r3, #3
 800309c:	e0b6      	b.n	800320c <HAL_I2C_IsDeviceReady+0x24c>
 800309e:	897b      	ldrh	r3, [r7, #10]
 80030a0:	b2db      	uxtb	r3, r3
 80030a2:	461a      	mov	r2, r3
 80030a4:	68fb      	ldr	r3, [r7, #12]
 80030a6:	681b      	ldr	r3, [r3, #0]
 80030a8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 80030ac:	611a      	str	r2, [r3, #16]
 80030ae:	f7fe ff5d 	bl	8001f6c <HAL_GetTick>
 80030b2:	61f8      	str	r0, [r7, #28]
 80030b4:	68fb      	ldr	r3, [r7, #12]
 80030b6:	681b      	ldr	r3, [r3, #0]
 80030b8:	695b      	ldr	r3, [r3, #20]
 80030ba:	f003 0302 	and.w	r3, r3, #2
 80030be:	2b02      	cmp	r3, #2
 80030c0:	bf0c      	ite	eq
 80030c2:	2301      	moveq	r3, #1
 80030c4:	2300      	movne	r3, #0
 80030c6:	b2db      	uxtb	r3, r3
 80030c8:	75fb      	strb	r3, [r7, #23]
 80030ca:	68fb      	ldr	r3, [r7, #12]
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	695b      	ldr	r3, [r3, #20]
 80030d0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80030d4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80030d8:	bf0c      	ite	eq
 80030da:	2301      	moveq	r3, #1
 80030dc:	2300      	movne	r3, #0
 80030de:	b2db      	uxtb	r3, r3
 80030e0:	75bb      	strb	r3, [r7, #22]
 80030e2:	e025      	b.n	8003130 <HAL_I2C_IsDeviceReady+0x170>
 80030e4:	f7fe ff42 	bl	8001f6c <HAL_GetTick>
 80030e8:	4602      	mov	r2, r0
 80030ea:	69fb      	ldr	r3, [r7, #28]
 80030ec:	1ad3      	subs	r3, r2, r3
 80030ee:	683a      	ldr	r2, [r7, #0]
 80030f0:	429a      	cmp	r2, r3
 80030f2:	d302      	bcc.n	80030fa <HAL_I2C_IsDeviceReady+0x13a>
 80030f4:	683b      	ldr	r3, [r7, #0]
 80030f6:	2b00      	cmp	r3, #0
 80030f8:	d103      	bne.n	8003102 <HAL_I2C_IsDeviceReady+0x142>
 80030fa:	68fb      	ldr	r3, [r7, #12]
 80030fc:	22a0      	movs	r2, #160	; 0xa0
 80030fe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003102:	68fb      	ldr	r3, [r7, #12]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	695b      	ldr	r3, [r3, #20]
 8003108:	f003 0302 	and.w	r3, r3, #2
 800310c:	2b02      	cmp	r3, #2
 800310e:	bf0c      	ite	eq
 8003110:	2301      	moveq	r3, #1
 8003112:	2300      	movne	r3, #0
 8003114:	b2db      	uxtb	r3, r3
 8003116:	75fb      	strb	r3, [r7, #23]
 8003118:	68fb      	ldr	r3, [r7, #12]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	695b      	ldr	r3, [r3, #20]
 800311e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003122:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003126:	bf0c      	ite	eq
 8003128:	2301      	moveq	r3, #1
 800312a:	2300      	movne	r3, #0
 800312c:	b2db      	uxtb	r3, r3
 800312e:	75bb      	strb	r3, [r7, #22]
 8003130:	68fb      	ldr	r3, [r7, #12]
 8003132:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003136:	b2db      	uxtb	r3, r3
 8003138:	2ba0      	cmp	r3, #160	; 0xa0
 800313a:	d005      	beq.n	8003148 <HAL_I2C_IsDeviceReady+0x188>
 800313c:	7dfb      	ldrb	r3, [r7, #23]
 800313e:	2b00      	cmp	r3, #0
 8003140:	d102      	bne.n	8003148 <HAL_I2C_IsDeviceReady+0x188>
 8003142:	7dbb      	ldrb	r3, [r7, #22]
 8003144:	2b00      	cmp	r3, #0
 8003146:	d0cd      	beq.n	80030e4 <HAL_I2C_IsDeviceReady+0x124>
 8003148:	68fb      	ldr	r3, [r7, #12]
 800314a:	2220      	movs	r2, #32
 800314c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003150:	68fb      	ldr	r3, [r7, #12]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	695b      	ldr	r3, [r3, #20]
 8003156:	f003 0302 	and.w	r3, r3, #2
 800315a:	2b02      	cmp	r3, #2
 800315c:	d129      	bne.n	80031b2 <HAL_I2C_IsDeviceReady+0x1f2>
 800315e:	68fb      	ldr	r3, [r7, #12]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	681a      	ldr	r2, [r3, #0]
 8003164:	68fb      	ldr	r3, [r7, #12]
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800316c:	601a      	str	r2, [r3, #0]
 800316e:	2300      	movs	r3, #0
 8003170:	613b      	str	r3, [r7, #16]
 8003172:	68fb      	ldr	r3, [r7, #12]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	695b      	ldr	r3, [r3, #20]
 8003178:	613b      	str	r3, [r7, #16]
 800317a:	68fb      	ldr	r3, [r7, #12]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	699b      	ldr	r3, [r3, #24]
 8003180:	613b      	str	r3, [r7, #16]
 8003182:	693b      	ldr	r3, [r7, #16]
 8003184:	69fb      	ldr	r3, [r7, #28]
 8003186:	9300      	str	r3, [sp, #0]
 8003188:	2319      	movs	r3, #25
 800318a:	2201      	movs	r2, #1
 800318c:	4921      	ldr	r1, [pc, #132]	; (8003214 <HAL_I2C_IsDeviceReady+0x254>)
 800318e:	68f8      	ldr	r0, [r7, #12]
 8003190:	f000 f994 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 8003194:	4603      	mov	r3, r0
 8003196:	2b00      	cmp	r3, #0
 8003198:	d001      	beq.n	800319e <HAL_I2C_IsDeviceReady+0x1de>
 800319a:	2301      	movs	r3, #1
 800319c:	e036      	b.n	800320c <HAL_I2C_IsDeviceReady+0x24c>
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	2220      	movs	r2, #32
 80031a2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031a6:	68fb      	ldr	r3, [r7, #12]
 80031a8:	2200      	movs	r2, #0
 80031aa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031ae:	2300      	movs	r3, #0
 80031b0:	e02c      	b.n	800320c <HAL_I2C_IsDeviceReady+0x24c>
 80031b2:	68fb      	ldr	r3, [r7, #12]
 80031b4:	681b      	ldr	r3, [r3, #0]
 80031b6:	681a      	ldr	r2, [r3, #0]
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80031c0:	601a      	str	r2, [r3, #0]
 80031c2:	68fb      	ldr	r3, [r7, #12]
 80031c4:	681b      	ldr	r3, [r3, #0]
 80031c6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80031ca:	615a      	str	r2, [r3, #20]
 80031cc:	69fb      	ldr	r3, [r7, #28]
 80031ce:	9300      	str	r3, [sp, #0]
 80031d0:	2319      	movs	r3, #25
 80031d2:	2201      	movs	r2, #1
 80031d4:	490f      	ldr	r1, [pc, #60]	; (8003214 <HAL_I2C_IsDeviceReady+0x254>)
 80031d6:	68f8      	ldr	r0, [r7, #12]
 80031d8:	f000 f970 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 80031dc:	4603      	mov	r3, r0
 80031de:	2b00      	cmp	r3, #0
 80031e0:	d001      	beq.n	80031e6 <HAL_I2C_IsDeviceReady+0x226>
 80031e2:	2301      	movs	r3, #1
 80031e4:	e012      	b.n	800320c <HAL_I2C_IsDeviceReady+0x24c>
 80031e6:	69bb      	ldr	r3, [r7, #24]
 80031e8:	3301      	adds	r3, #1
 80031ea:	61bb      	str	r3, [r7, #24]
 80031ec:	69ba      	ldr	r2, [r7, #24]
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	429a      	cmp	r2, r3
 80031f2:	f4ff af32 	bcc.w	800305a <HAL_I2C_IsDeviceReady+0x9a>
 80031f6:	68fb      	ldr	r3, [r7, #12]
 80031f8:	2220      	movs	r2, #32
 80031fa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031fe:	68fb      	ldr	r3, [r7, #12]
 8003200:	2200      	movs	r2, #0
 8003202:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003206:	2301      	movs	r3, #1
 8003208:	e000      	b.n	800320c <HAL_I2C_IsDeviceReady+0x24c>
 800320a:	2302      	movs	r3, #2
 800320c:	4618      	mov	r0, r3
 800320e:	3720      	adds	r7, #32
 8003210:	46bd      	mov	sp, r7
 8003212:	bd80      	pop	{r7, pc}
 8003214:	00100002 	.word	0x00100002
 8003218:	ffff0000 	.word	0xffff0000

0800321c <I2C_MasterRequestWrite>:
 800321c:	b580      	push	{r7, lr}
 800321e:	b088      	sub	sp, #32
 8003220:	af02      	add	r7, sp, #8
 8003222:	60f8      	str	r0, [r7, #12]
 8003224:	607a      	str	r2, [r7, #4]
 8003226:	603b      	str	r3, [r7, #0]
 8003228:	460b      	mov	r3, r1
 800322a:	817b      	strh	r3, [r7, #10]
 800322c:	68fb      	ldr	r3, [r7, #12]
 800322e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003230:	617b      	str	r3, [r7, #20]
 8003232:	697b      	ldr	r3, [r7, #20]
 8003234:	2b08      	cmp	r3, #8
 8003236:	d006      	beq.n	8003246 <I2C_MasterRequestWrite+0x2a>
 8003238:	697b      	ldr	r3, [r7, #20]
 800323a:	2b01      	cmp	r3, #1
 800323c:	d003      	beq.n	8003246 <I2C_MasterRequestWrite+0x2a>
 800323e:	697b      	ldr	r3, [r7, #20]
 8003240:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8003244:	d108      	bne.n	8003258 <I2C_MasterRequestWrite+0x3c>
 8003246:	68fb      	ldr	r3, [r7, #12]
 8003248:	681b      	ldr	r3, [r3, #0]
 800324a:	681a      	ldr	r2, [r3, #0]
 800324c:	68fb      	ldr	r3, [r7, #12]
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003254:	601a      	str	r2, [r3, #0]
 8003256:	e00b      	b.n	8003270 <I2C_MasterRequestWrite+0x54>
 8003258:	68fb      	ldr	r3, [r7, #12]
 800325a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800325c:	2b12      	cmp	r3, #18
 800325e:	d107      	bne.n	8003270 <I2C_MasterRequestWrite+0x54>
 8003260:	68fb      	ldr	r3, [r7, #12]
 8003262:	681b      	ldr	r3, [r3, #0]
 8003264:	681a      	ldr	r2, [r3, #0]
 8003266:	68fb      	ldr	r3, [r7, #12]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800326e:	601a      	str	r2, [r3, #0]
 8003270:	683b      	ldr	r3, [r7, #0]
 8003272:	9300      	str	r3, [sp, #0]
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	2200      	movs	r2, #0
 8003278:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800327c:	68f8      	ldr	r0, [r7, #12]
 800327e:	f000 f91d 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 8003282:	4603      	mov	r3, r0
 8003284:	2b00      	cmp	r3, #0
 8003286:	d00d      	beq.n	80032a4 <I2C_MasterRequestWrite+0x88>
 8003288:	68fb      	ldr	r3, [r7, #12]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003292:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003296:	d103      	bne.n	80032a0 <I2C_MasterRequestWrite+0x84>
 8003298:	68fb      	ldr	r3, [r7, #12]
 800329a:	f44f 7200 	mov.w	r2, #512	; 0x200
 800329e:	641a      	str	r2, [r3, #64]	; 0x40
 80032a0:	2303      	movs	r3, #3
 80032a2:	e035      	b.n	8003310 <I2C_MasterRequestWrite+0xf4>
 80032a4:	68fb      	ldr	r3, [r7, #12]
 80032a6:	691b      	ldr	r3, [r3, #16]
 80032a8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80032ac:	d108      	bne.n	80032c0 <I2C_MasterRequestWrite+0xa4>
 80032ae:	897b      	ldrh	r3, [r7, #10]
 80032b0:	b2db      	uxtb	r3, r3
 80032b2:	461a      	mov	r2, r3
 80032b4:	68fb      	ldr	r3, [r7, #12]
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 80032bc:	611a      	str	r2, [r3, #16]
 80032be:	e01b      	b.n	80032f8 <I2C_MasterRequestWrite+0xdc>
 80032c0:	897b      	ldrh	r3, [r7, #10]
 80032c2:	11db      	asrs	r3, r3, #7
 80032c4:	b2db      	uxtb	r3, r3
 80032c6:	f003 0306 	and.w	r3, r3, #6
 80032ca:	b2db      	uxtb	r3, r3
 80032cc:	f063 030f 	orn	r3, r3, #15
 80032d0:	b2da      	uxtb	r2, r3
 80032d2:	68fb      	ldr	r3, [r7, #12]
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	611a      	str	r2, [r3, #16]
 80032d8:	683b      	ldr	r3, [r7, #0]
 80032da:	687a      	ldr	r2, [r7, #4]
 80032dc:	490e      	ldr	r1, [pc, #56]	; (8003318 <I2C_MasterRequestWrite+0xfc>)
 80032de:	68f8      	ldr	r0, [r7, #12]
 80032e0:	f000 f943 	bl	800356a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80032e4:	4603      	mov	r3, r0
 80032e6:	2b00      	cmp	r3, #0
 80032e8:	d001      	beq.n	80032ee <I2C_MasterRequestWrite+0xd2>
 80032ea:	2301      	movs	r3, #1
 80032ec:	e010      	b.n	8003310 <I2C_MasterRequestWrite+0xf4>
 80032ee:	897b      	ldrh	r3, [r7, #10]
 80032f0:	b2da      	uxtb	r2, r3
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	611a      	str	r2, [r3, #16]
 80032f8:	683b      	ldr	r3, [r7, #0]
 80032fa:	687a      	ldr	r2, [r7, #4]
 80032fc:	4907      	ldr	r1, [pc, #28]	; (800331c <I2C_MasterRequestWrite+0x100>)
 80032fe:	68f8      	ldr	r0, [r7, #12]
 8003300:	f000 f933 	bl	800356a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003304:	4603      	mov	r3, r0
 8003306:	2b00      	cmp	r3, #0
 8003308:	d001      	beq.n	800330e <I2C_MasterRequestWrite+0xf2>
 800330a:	2301      	movs	r3, #1
 800330c:	e000      	b.n	8003310 <I2C_MasterRequestWrite+0xf4>
 800330e:	2300      	movs	r3, #0
 8003310:	4618      	mov	r0, r3
 8003312:	3718      	adds	r7, #24
 8003314:	46bd      	mov	sp, r7
 8003316:	bd80      	pop	{r7, pc}
 8003318:	00010008 	.word	0x00010008
 800331c:	00010002 	.word	0x00010002

08003320 <I2C_MasterRequestRead>:
 8003320:	b580      	push	{r7, lr}
 8003322:	b088      	sub	sp, #32
 8003324:	af02      	add	r7, sp, #8
 8003326:	60f8      	str	r0, [r7, #12]
 8003328:	607a      	str	r2, [r7, #4]
 800332a:	603b      	str	r3, [r7, #0]
 800332c:	460b      	mov	r3, r1
 800332e:	817b      	strh	r3, [r7, #10]
 8003330:	68fb      	ldr	r3, [r7, #12]
 8003332:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003334:	617b      	str	r3, [r7, #20]
 8003336:	68fb      	ldr	r3, [r7, #12]
 8003338:	681b      	ldr	r3, [r3, #0]
 800333a:	681a      	ldr	r2, [r3, #0]
 800333c:	68fb      	ldr	r3, [r7, #12]
 800333e:	681b      	ldr	r3, [r3, #0]
 8003340:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003344:	601a      	str	r2, [r3, #0]
 8003346:	697b      	ldr	r3, [r7, #20]
 8003348:	2b08      	cmp	r3, #8
 800334a:	d006      	beq.n	800335a <I2C_MasterRequestRead+0x3a>
 800334c:	697b      	ldr	r3, [r7, #20]
 800334e:	2b01      	cmp	r3, #1
 8003350:	d003      	beq.n	800335a <I2C_MasterRequestRead+0x3a>
 8003352:	697b      	ldr	r3, [r7, #20]
 8003354:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8003358:	d108      	bne.n	800336c <I2C_MasterRequestRead+0x4c>
 800335a:	68fb      	ldr	r3, [r7, #12]
 800335c:	681b      	ldr	r3, [r3, #0]
 800335e:	681a      	ldr	r2, [r3, #0]
 8003360:	68fb      	ldr	r3, [r7, #12]
 8003362:	681b      	ldr	r3, [r3, #0]
 8003364:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003368:	601a      	str	r2, [r3, #0]
 800336a:	e00b      	b.n	8003384 <I2C_MasterRequestRead+0x64>
 800336c:	68fb      	ldr	r3, [r7, #12]
 800336e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003370:	2b11      	cmp	r3, #17
 8003372:	d107      	bne.n	8003384 <I2C_MasterRequestRead+0x64>
 8003374:	68fb      	ldr	r3, [r7, #12]
 8003376:	681b      	ldr	r3, [r3, #0]
 8003378:	681a      	ldr	r2, [r3, #0]
 800337a:	68fb      	ldr	r3, [r7, #12]
 800337c:	681b      	ldr	r3, [r3, #0]
 800337e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003382:	601a      	str	r2, [r3, #0]
 8003384:	683b      	ldr	r3, [r7, #0]
 8003386:	9300      	str	r3, [sp, #0]
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	2200      	movs	r2, #0
 800338c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003390:	68f8      	ldr	r0, [r7, #12]
 8003392:	f000 f893 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 8003396:	4603      	mov	r3, r0
 8003398:	2b00      	cmp	r3, #0
 800339a:	d00d      	beq.n	80033b8 <I2C_MasterRequestRead+0x98>
 800339c:	68fb      	ldr	r3, [r7, #12]
 800339e:	681b      	ldr	r3, [r3, #0]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80033a6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80033aa:	d103      	bne.n	80033b4 <I2C_MasterRequestRead+0x94>
 80033ac:	68fb      	ldr	r3, [r7, #12]
 80033ae:	f44f 7200 	mov.w	r2, #512	; 0x200
 80033b2:	641a      	str	r2, [r3, #64]	; 0x40
 80033b4:	2303      	movs	r3, #3
 80033b6:	e079      	b.n	80034ac <I2C_MasterRequestRead+0x18c>
 80033b8:	68fb      	ldr	r3, [r7, #12]
 80033ba:	691b      	ldr	r3, [r3, #16]
 80033bc:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80033c0:	d108      	bne.n	80033d4 <I2C_MasterRequestRead+0xb4>
 80033c2:	897b      	ldrh	r3, [r7, #10]
 80033c4:	b2db      	uxtb	r3, r3
 80033c6:	f043 0301 	orr.w	r3, r3, #1
 80033ca:	b2da      	uxtb	r2, r3
 80033cc:	68fb      	ldr	r3, [r7, #12]
 80033ce:	681b      	ldr	r3, [r3, #0]
 80033d0:	611a      	str	r2, [r3, #16]
 80033d2:	e05f      	b.n	8003494 <I2C_MasterRequestRead+0x174>
 80033d4:	897b      	ldrh	r3, [r7, #10]
 80033d6:	11db      	asrs	r3, r3, #7
 80033d8:	b2db      	uxtb	r3, r3
 80033da:	f003 0306 	and.w	r3, r3, #6
 80033de:	b2db      	uxtb	r3, r3
 80033e0:	f063 030f 	orn	r3, r3, #15
 80033e4:	b2da      	uxtb	r2, r3
 80033e6:	68fb      	ldr	r3, [r7, #12]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	611a      	str	r2, [r3, #16]
 80033ec:	683b      	ldr	r3, [r7, #0]
 80033ee:	687a      	ldr	r2, [r7, #4]
 80033f0:	4930      	ldr	r1, [pc, #192]	; (80034b4 <I2C_MasterRequestRead+0x194>)
 80033f2:	68f8      	ldr	r0, [r7, #12]
 80033f4:	f000 f8b9 	bl	800356a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80033f8:	4603      	mov	r3, r0
 80033fa:	2b00      	cmp	r3, #0
 80033fc:	d001      	beq.n	8003402 <I2C_MasterRequestRead+0xe2>
 80033fe:	2301      	movs	r3, #1
 8003400:	e054      	b.n	80034ac <I2C_MasterRequestRead+0x18c>
 8003402:	897b      	ldrh	r3, [r7, #10]
 8003404:	b2da      	uxtb	r2, r3
 8003406:	68fb      	ldr	r3, [r7, #12]
 8003408:	681b      	ldr	r3, [r3, #0]
 800340a:	611a      	str	r2, [r3, #16]
 800340c:	683b      	ldr	r3, [r7, #0]
 800340e:	687a      	ldr	r2, [r7, #4]
 8003410:	4929      	ldr	r1, [pc, #164]	; (80034b8 <I2C_MasterRequestRead+0x198>)
 8003412:	68f8      	ldr	r0, [r7, #12]
 8003414:	f000 f8a9 	bl	800356a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8003418:	4603      	mov	r3, r0
 800341a:	2b00      	cmp	r3, #0
 800341c:	d001      	beq.n	8003422 <I2C_MasterRequestRead+0x102>
 800341e:	2301      	movs	r3, #1
 8003420:	e044      	b.n	80034ac <I2C_MasterRequestRead+0x18c>
 8003422:	2300      	movs	r3, #0
 8003424:	613b      	str	r3, [r7, #16]
 8003426:	68fb      	ldr	r3, [r7, #12]
 8003428:	681b      	ldr	r3, [r3, #0]
 800342a:	695b      	ldr	r3, [r3, #20]
 800342c:	613b      	str	r3, [r7, #16]
 800342e:	68fb      	ldr	r3, [r7, #12]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	699b      	ldr	r3, [r3, #24]
 8003434:	613b      	str	r3, [r7, #16]
 8003436:	693b      	ldr	r3, [r7, #16]
 8003438:	68fb      	ldr	r3, [r7, #12]
 800343a:	681b      	ldr	r3, [r3, #0]
 800343c:	681a      	ldr	r2, [r3, #0]
 800343e:	68fb      	ldr	r3, [r7, #12]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003446:	601a      	str	r2, [r3, #0]
 8003448:	683b      	ldr	r3, [r7, #0]
 800344a:	9300      	str	r3, [sp, #0]
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	2200      	movs	r2, #0
 8003450:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8003454:	68f8      	ldr	r0, [r7, #12]
 8003456:	f000 f831 	bl	80034bc <I2C_WaitOnFlagUntilTimeout>
 800345a:	4603      	mov	r3, r0
 800345c:	2b00      	cmp	r3, #0
 800345e:	d00d      	beq.n	800347c <I2C_MasterRequestRead+0x15c>
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	681b      	ldr	r3, [r3, #0]
 8003466:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800346a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800346e:	d103      	bne.n	8003478 <I2C_MasterRequestRead+0x158>
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003476:	641a      	str	r2, [r3, #64]	; 0x40
 8003478:	2303      	movs	r3, #3
 800347a:	e017      	b.n	80034ac <I2C_MasterRequestRead+0x18c>
 800347c:	897b      	ldrh	r3, [r7, #10]
 800347e:	11db      	asrs	r3, r3, #7
 8003480:	b2db      	uxtb	r3, r3
 8003482:	f003 0306 	and.w	r3, r3, #6
 8003486:	b2db      	uxtb	r3, r3
 8003488:	f063 030e 	orn	r3, r3, #14
 800348c:	b2da      	uxtb	r2, r3
 800348e:	68fb      	ldr	r3, [r7, #12]
 8003490:	681b      	ldr	r3, [r3, #0]
 8003492:	611a      	str	r2, [r3, #16]
 8003494:	683b      	ldr	r3, [r7, #0]
 8003496:	687a      	ldr	r2, [r7, #4]
 8003498:	4907      	ldr	r1, [pc, #28]	; (80034b8 <I2C_MasterRequestRead+0x198>)
 800349a:	68f8      	ldr	r0, [r7, #12]
 800349c:	f000 f865 	bl	800356a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80034a0:	4603      	mov	r3, r0
 80034a2:	2b00      	cmp	r3, #0
 80034a4:	d001      	beq.n	80034aa <I2C_MasterRequestRead+0x18a>
 80034a6:	2301      	movs	r3, #1
 80034a8:	e000      	b.n	80034ac <I2C_MasterRequestRead+0x18c>
 80034aa:	2300      	movs	r3, #0
 80034ac:	4618      	mov	r0, r3
 80034ae:	3718      	adds	r7, #24
 80034b0:	46bd      	mov	sp, r7
 80034b2:	bd80      	pop	{r7, pc}
 80034b4:	00010008 	.word	0x00010008
 80034b8:	00010002 	.word	0x00010002

080034bc <I2C_WaitOnFlagUntilTimeout>:
 80034bc:	b580      	push	{r7, lr}
 80034be:	b084      	sub	sp, #16
 80034c0:	af00      	add	r7, sp, #0
 80034c2:	60f8      	str	r0, [r7, #12]
 80034c4:	60b9      	str	r1, [r7, #8]
 80034c6:	603b      	str	r3, [r7, #0]
 80034c8:	4613      	mov	r3, r2
 80034ca:	71fb      	strb	r3, [r7, #7]
 80034cc:	e025      	b.n	800351a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80034ce:	683b      	ldr	r3, [r7, #0]
 80034d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80034d4:	d021      	beq.n	800351a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80034d6:	f7fe fd49 	bl	8001f6c <HAL_GetTick>
 80034da:	4602      	mov	r2, r0
 80034dc:	69bb      	ldr	r3, [r7, #24]
 80034de:	1ad3      	subs	r3, r2, r3
 80034e0:	683a      	ldr	r2, [r7, #0]
 80034e2:	429a      	cmp	r2, r3
 80034e4:	d302      	bcc.n	80034ec <I2C_WaitOnFlagUntilTimeout+0x30>
 80034e6:	683b      	ldr	r3, [r7, #0]
 80034e8:	2b00      	cmp	r3, #0
 80034ea:	d116      	bne.n	800351a <I2C_WaitOnFlagUntilTimeout+0x5e>
 80034ec:	68fb      	ldr	r3, [r7, #12]
 80034ee:	2200      	movs	r2, #0
 80034f0:	631a      	str	r2, [r3, #48]	; 0x30
 80034f2:	68fb      	ldr	r3, [r7, #12]
 80034f4:	2220      	movs	r2, #32
 80034f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	2200      	movs	r2, #0
 80034fe:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003502:	68fb      	ldr	r3, [r7, #12]
 8003504:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003506:	f043 0220 	orr.w	r2, r3, #32
 800350a:	68fb      	ldr	r3, [r7, #12]
 800350c:	641a      	str	r2, [r3, #64]	; 0x40
 800350e:	68fb      	ldr	r3, [r7, #12]
 8003510:	2200      	movs	r2, #0
 8003512:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003516:	2301      	movs	r3, #1
 8003518:	e023      	b.n	8003562 <I2C_WaitOnFlagUntilTimeout+0xa6>
 800351a:	68bb      	ldr	r3, [r7, #8]
 800351c:	0c1b      	lsrs	r3, r3, #16
 800351e:	b2db      	uxtb	r3, r3
 8003520:	2b01      	cmp	r3, #1
 8003522:	d10d      	bne.n	8003540 <I2C_WaitOnFlagUntilTimeout+0x84>
 8003524:	68fb      	ldr	r3, [r7, #12]
 8003526:	681b      	ldr	r3, [r3, #0]
 8003528:	695b      	ldr	r3, [r3, #20]
 800352a:	43da      	mvns	r2, r3
 800352c:	68bb      	ldr	r3, [r7, #8]
 800352e:	4013      	ands	r3, r2
 8003530:	b29b      	uxth	r3, r3
 8003532:	2b00      	cmp	r3, #0
 8003534:	bf0c      	ite	eq
 8003536:	2301      	moveq	r3, #1
 8003538:	2300      	movne	r3, #0
 800353a:	b2db      	uxtb	r3, r3
 800353c:	461a      	mov	r2, r3
 800353e:	e00c      	b.n	800355a <I2C_WaitOnFlagUntilTimeout+0x9e>
 8003540:	68fb      	ldr	r3, [r7, #12]
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	699b      	ldr	r3, [r3, #24]
 8003546:	43da      	mvns	r2, r3
 8003548:	68bb      	ldr	r3, [r7, #8]
 800354a:	4013      	ands	r3, r2
 800354c:	b29b      	uxth	r3, r3
 800354e:	2b00      	cmp	r3, #0
 8003550:	bf0c      	ite	eq
 8003552:	2301      	moveq	r3, #1
 8003554:	2300      	movne	r3, #0
 8003556:	b2db      	uxtb	r3, r3
 8003558:	461a      	mov	r2, r3
 800355a:	79fb      	ldrb	r3, [r7, #7]
 800355c:	429a      	cmp	r2, r3
 800355e:	d0b6      	beq.n	80034ce <I2C_WaitOnFlagUntilTimeout+0x12>
 8003560:	2300      	movs	r3, #0
 8003562:	4618      	mov	r0, r3
 8003564:	3710      	adds	r7, #16
 8003566:	46bd      	mov	sp, r7
 8003568:	bd80      	pop	{r7, pc}

0800356a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 800356a:	b580      	push	{r7, lr}
 800356c:	b084      	sub	sp, #16
 800356e:	af00      	add	r7, sp, #0
 8003570:	60f8      	str	r0, [r7, #12]
 8003572:	60b9      	str	r1, [r7, #8]
 8003574:	607a      	str	r2, [r7, #4]
 8003576:	603b      	str	r3, [r7, #0]
 8003578:	e051      	b.n	800361e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 800357a:	68fb      	ldr	r3, [r7, #12]
 800357c:	681b      	ldr	r3, [r3, #0]
 800357e:	695b      	ldr	r3, [r3, #20]
 8003580:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8003584:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003588:	d123      	bne.n	80035d2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 800358a:	68fb      	ldr	r3, [r7, #12]
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	681a      	ldr	r2, [r3, #0]
 8003590:	68fb      	ldr	r3, [r7, #12]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003598:	601a      	str	r2, [r3, #0]
 800359a:	68fb      	ldr	r3, [r7, #12]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80035a2:	615a      	str	r2, [r3, #20]
 80035a4:	68fb      	ldr	r3, [r7, #12]
 80035a6:	2200      	movs	r2, #0
 80035a8:	631a      	str	r2, [r3, #48]	; 0x30
 80035aa:	68fb      	ldr	r3, [r7, #12]
 80035ac:	2220      	movs	r2, #32
 80035ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035b2:	68fb      	ldr	r3, [r7, #12]
 80035b4:	2200      	movs	r2, #0
 80035b6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035be:	f043 0204 	orr.w	r2, r3, #4
 80035c2:	68fb      	ldr	r3, [r7, #12]
 80035c4:	641a      	str	r2, [r3, #64]	; 0x40
 80035c6:	68fb      	ldr	r3, [r7, #12]
 80035c8:	2200      	movs	r2, #0
 80035ca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80035ce:	2301      	movs	r3, #1
 80035d0:	e046      	b.n	8003660 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80035d8:	d021      	beq.n	800361e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80035da:	f7fe fcc7 	bl	8001f6c <HAL_GetTick>
 80035de:	4602      	mov	r2, r0
 80035e0:	683b      	ldr	r3, [r7, #0]
 80035e2:	1ad3      	subs	r3, r2, r3
 80035e4:	687a      	ldr	r2, [r7, #4]
 80035e6:	429a      	cmp	r2, r3
 80035e8:	d302      	bcc.n	80035f0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d116      	bne.n	800361e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 80035f0:	68fb      	ldr	r3, [r7, #12]
 80035f2:	2200      	movs	r2, #0
 80035f4:	631a      	str	r2, [r3, #48]	; 0x30
 80035f6:	68fb      	ldr	r3, [r7, #12]
 80035f8:	2220      	movs	r2, #32
 80035fa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80035fe:	68fb      	ldr	r3, [r7, #12]
 8003600:	2200      	movs	r2, #0
 8003602:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003606:	68fb      	ldr	r3, [r7, #12]
 8003608:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800360a:	f043 0220 	orr.w	r2, r3, #32
 800360e:	68fb      	ldr	r3, [r7, #12]
 8003610:	641a      	str	r2, [r3, #64]	; 0x40
 8003612:	68fb      	ldr	r3, [r7, #12]
 8003614:	2200      	movs	r2, #0
 8003616:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800361a:	2301      	movs	r3, #1
 800361c:	e020      	b.n	8003660 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 800361e:	68bb      	ldr	r3, [r7, #8]
 8003620:	0c1b      	lsrs	r3, r3, #16
 8003622:	b2db      	uxtb	r3, r3
 8003624:	2b01      	cmp	r3, #1
 8003626:	d10c      	bne.n	8003642 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8003628:	68fb      	ldr	r3, [r7, #12]
 800362a:	681b      	ldr	r3, [r3, #0]
 800362c:	695b      	ldr	r3, [r3, #20]
 800362e:	43da      	mvns	r2, r3
 8003630:	68bb      	ldr	r3, [r7, #8]
 8003632:	4013      	ands	r3, r2
 8003634:	b29b      	uxth	r3, r3
 8003636:	2b00      	cmp	r3, #0
 8003638:	bf14      	ite	ne
 800363a:	2301      	movne	r3, #1
 800363c:	2300      	moveq	r3, #0
 800363e:	b2db      	uxtb	r3, r3
 8003640:	e00b      	b.n	800365a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8003642:	68fb      	ldr	r3, [r7, #12]
 8003644:	681b      	ldr	r3, [r3, #0]
 8003646:	699b      	ldr	r3, [r3, #24]
 8003648:	43da      	mvns	r2, r3
 800364a:	68bb      	ldr	r3, [r7, #8]
 800364c:	4013      	ands	r3, r2
 800364e:	b29b      	uxth	r3, r3
 8003650:	2b00      	cmp	r3, #0
 8003652:	bf14      	ite	ne
 8003654:	2301      	movne	r3, #1
 8003656:	2300      	moveq	r3, #0
 8003658:	b2db      	uxtb	r3, r3
 800365a:	2b00      	cmp	r3, #0
 800365c:	d18d      	bne.n	800357a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 800365e:	2300      	movs	r3, #0
 8003660:	4618      	mov	r0, r3
 8003662:	3710      	adds	r7, #16
 8003664:	46bd      	mov	sp, r7
 8003666:	bd80      	pop	{r7, pc}

08003668 <I2C_WaitOnTXEFlagUntilTimeout>:
 8003668:	b580      	push	{r7, lr}
 800366a:	b084      	sub	sp, #16
 800366c:	af00      	add	r7, sp, #0
 800366e:	60f8      	str	r0, [r7, #12]
 8003670:	60b9      	str	r1, [r7, #8]
 8003672:	607a      	str	r2, [r7, #4]
 8003674:	e02d      	b.n	80036d2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8003676:	68f8      	ldr	r0, [r7, #12]
 8003678:	f000 f8ce 	bl	8003818 <I2C_IsAcknowledgeFailed>
 800367c:	4603      	mov	r3, r0
 800367e:	2b00      	cmp	r3, #0
 8003680:	d001      	beq.n	8003686 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8003682:	2301      	movs	r3, #1
 8003684:	e02d      	b.n	80036e2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8003686:	68bb      	ldr	r3, [r7, #8]
 8003688:	f1b3 3fff 	cmp.w	r3, #4294967295
 800368c:	d021      	beq.n	80036d2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 800368e:	f7fe fc6d 	bl	8001f6c <HAL_GetTick>
 8003692:	4602      	mov	r2, r0
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	1ad3      	subs	r3, r2, r3
 8003698:	68ba      	ldr	r2, [r7, #8]
 800369a:	429a      	cmp	r2, r3
 800369c:	d302      	bcc.n	80036a4 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800369e:	68bb      	ldr	r3, [r7, #8]
 80036a0:	2b00      	cmp	r3, #0
 80036a2:	d116      	bne.n	80036d2 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	2200      	movs	r2, #0
 80036a8:	631a      	str	r2, [r3, #48]	; 0x30
 80036aa:	68fb      	ldr	r3, [r7, #12]
 80036ac:	2220      	movs	r2, #32
 80036ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80036b2:	68fb      	ldr	r3, [r7, #12]
 80036b4:	2200      	movs	r2, #0
 80036b6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80036ba:	68fb      	ldr	r3, [r7, #12]
 80036bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036be:	f043 0220 	orr.w	r2, r3, #32
 80036c2:	68fb      	ldr	r3, [r7, #12]
 80036c4:	641a      	str	r2, [r3, #64]	; 0x40
 80036c6:	68fb      	ldr	r3, [r7, #12]
 80036c8:	2200      	movs	r2, #0
 80036ca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80036ce:	2301      	movs	r3, #1
 80036d0:	e007      	b.n	80036e2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 80036d2:	68fb      	ldr	r3, [r7, #12]
 80036d4:	681b      	ldr	r3, [r3, #0]
 80036d6:	695b      	ldr	r3, [r3, #20]
 80036d8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80036dc:	2b80      	cmp	r3, #128	; 0x80
 80036de:	d1ca      	bne.n	8003676 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 80036e0:	2300      	movs	r3, #0
 80036e2:	4618      	mov	r0, r3
 80036e4:	3710      	adds	r7, #16
 80036e6:	46bd      	mov	sp, r7
 80036e8:	bd80      	pop	{r7, pc}

080036ea <I2C_WaitOnBTFFlagUntilTimeout>:
 80036ea:	b580      	push	{r7, lr}
 80036ec:	b084      	sub	sp, #16
 80036ee:	af00      	add	r7, sp, #0
 80036f0:	60f8      	str	r0, [r7, #12]
 80036f2:	60b9      	str	r1, [r7, #8]
 80036f4:	607a      	str	r2, [r7, #4]
 80036f6:	e02d      	b.n	8003754 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 80036f8:	68f8      	ldr	r0, [r7, #12]
 80036fa:	f000 f88d 	bl	8003818 <I2C_IsAcknowledgeFailed>
 80036fe:	4603      	mov	r3, r0
 8003700:	2b00      	cmp	r3, #0
 8003702:	d001      	beq.n	8003708 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8003704:	2301      	movs	r3, #1
 8003706:	e02d      	b.n	8003764 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8003708:	68bb      	ldr	r3, [r7, #8]
 800370a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800370e:	d021      	beq.n	8003754 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003710:	f7fe fc2c 	bl	8001f6c <HAL_GetTick>
 8003714:	4602      	mov	r2, r0
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	1ad3      	subs	r3, r2, r3
 800371a:	68ba      	ldr	r2, [r7, #8]
 800371c:	429a      	cmp	r2, r3
 800371e:	d302      	bcc.n	8003726 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8003720:	68bb      	ldr	r3, [r7, #8]
 8003722:	2b00      	cmp	r3, #0
 8003724:	d116      	bne.n	8003754 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8003726:	68fb      	ldr	r3, [r7, #12]
 8003728:	2200      	movs	r2, #0
 800372a:	631a      	str	r2, [r3, #48]	; 0x30
 800372c:	68fb      	ldr	r3, [r7, #12]
 800372e:	2220      	movs	r2, #32
 8003730:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003734:	68fb      	ldr	r3, [r7, #12]
 8003736:	2200      	movs	r2, #0
 8003738:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800373c:	68fb      	ldr	r3, [r7, #12]
 800373e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003740:	f043 0220 	orr.w	r2, r3, #32
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	641a      	str	r2, [r3, #64]	; 0x40
 8003748:	68fb      	ldr	r3, [r7, #12]
 800374a:	2200      	movs	r2, #0
 800374c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003750:	2301      	movs	r3, #1
 8003752:	e007      	b.n	8003764 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8003754:	68fb      	ldr	r3, [r7, #12]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	695b      	ldr	r3, [r3, #20]
 800375a:	f003 0304 	and.w	r3, r3, #4
 800375e:	2b04      	cmp	r3, #4
 8003760:	d1ca      	bne.n	80036f8 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8003762:	2300      	movs	r3, #0
 8003764:	4618      	mov	r0, r3
 8003766:	3710      	adds	r7, #16
 8003768:	46bd      	mov	sp, r7
 800376a:	bd80      	pop	{r7, pc}

0800376c <I2C_WaitOnRXNEFlagUntilTimeout>:
 800376c:	b580      	push	{r7, lr}
 800376e:	b084      	sub	sp, #16
 8003770:	af00      	add	r7, sp, #0
 8003772:	60f8      	str	r0, [r7, #12]
 8003774:	60b9      	str	r1, [r7, #8]
 8003776:	607a      	str	r2, [r7, #4]
 8003778:	e042      	b.n	8003800 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800377a:	68fb      	ldr	r3, [r7, #12]
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	695b      	ldr	r3, [r3, #20]
 8003780:	f003 0310 	and.w	r3, r3, #16
 8003784:	2b10      	cmp	r3, #16
 8003786:	d119      	bne.n	80037bc <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	f06f 0210 	mvn.w	r2, #16
 8003790:	615a      	str	r2, [r3, #20]
 8003792:	68fb      	ldr	r3, [r7, #12]
 8003794:	2200      	movs	r2, #0
 8003796:	631a      	str	r2, [r3, #48]	; 0x30
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	2220      	movs	r2, #32
 800379c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037a0:	68fb      	ldr	r3, [r7, #12]
 80037a2:	2200      	movs	r2, #0
 80037a4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80037a8:	68fb      	ldr	r3, [r7, #12]
 80037aa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80037ac:	68fb      	ldr	r3, [r7, #12]
 80037ae:	641a      	str	r2, [r3, #64]	; 0x40
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	2200      	movs	r2, #0
 80037b4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80037b8:	2301      	movs	r3, #1
 80037ba:	e029      	b.n	8003810 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 80037bc:	f7fe fbd6 	bl	8001f6c <HAL_GetTick>
 80037c0:	4602      	mov	r2, r0
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	1ad3      	subs	r3, r2, r3
 80037c6:	68ba      	ldr	r2, [r7, #8]
 80037c8:	429a      	cmp	r2, r3
 80037ca:	d302      	bcc.n	80037d2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80037cc:	68bb      	ldr	r3, [r7, #8]
 80037ce:	2b00      	cmp	r3, #0
 80037d0:	d116      	bne.n	8003800 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 80037d2:	68fb      	ldr	r3, [r7, #12]
 80037d4:	2200      	movs	r2, #0
 80037d6:	631a      	str	r2, [r3, #48]	; 0x30
 80037d8:	68fb      	ldr	r3, [r7, #12]
 80037da:	2220      	movs	r2, #32
 80037dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	2200      	movs	r2, #0
 80037e4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80037e8:	68fb      	ldr	r3, [r7, #12]
 80037ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80037ec:	f043 0220 	orr.w	r2, r3, #32
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	641a      	str	r2, [r3, #64]	; 0x40
 80037f4:	68fb      	ldr	r3, [r7, #12]
 80037f6:	2200      	movs	r2, #0
 80037f8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80037fc:	2301      	movs	r3, #1
 80037fe:	e007      	b.n	8003810 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8003800:	68fb      	ldr	r3, [r7, #12]
 8003802:	681b      	ldr	r3, [r3, #0]
 8003804:	695b      	ldr	r3, [r3, #20]
 8003806:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800380a:	2b40      	cmp	r3, #64	; 0x40
 800380c:	d1b5      	bne.n	800377a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 800380e:	2300      	movs	r3, #0
 8003810:	4618      	mov	r0, r3
 8003812:	3710      	adds	r7, #16
 8003814:	46bd      	mov	sp, r7
 8003816:	bd80      	pop	{r7, pc}

08003818 <I2C_IsAcknowledgeFailed>:
 8003818:	b480      	push	{r7}
 800381a:	b083      	sub	sp, #12
 800381c:	af00      	add	r7, sp, #0
 800381e:	6078      	str	r0, [r7, #4]
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	681b      	ldr	r3, [r3, #0]
 8003824:	695b      	ldr	r3, [r3, #20]
 8003826:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800382a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800382e:	d11b      	bne.n	8003868 <I2C_IsAcknowledgeFailed+0x50>
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8003838:	615a      	str	r2, [r3, #20]
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	2200      	movs	r2, #0
 800383e:	631a      	str	r2, [r3, #48]	; 0x30
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	2220      	movs	r2, #32
 8003844:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	2200      	movs	r2, #0
 800384c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003854:	f043 0204 	orr.w	r2, r3, #4
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	641a      	str	r2, [r3, #64]	; 0x40
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	2200      	movs	r2, #0
 8003860:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003864:	2301      	movs	r3, #1
 8003866:	e000      	b.n	800386a <I2C_IsAcknowledgeFailed+0x52>
 8003868:	2300      	movs	r3, #0
 800386a:	4618      	mov	r0, r3
 800386c:	370c      	adds	r7, #12
 800386e:	46bd      	mov	sp, r7
 8003870:	bc80      	pop	{r7}
 8003872:	4770      	bx	lr

08003874 <HAL_RCC_OscConfig>:
 8003874:	b580      	push	{r7, lr}
 8003876:	b086      	sub	sp, #24
 8003878:	af00      	add	r7, sp, #0
 800387a:	6078      	str	r0, [r7, #4]
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	2b00      	cmp	r3, #0
 8003880:	d101      	bne.n	8003886 <HAL_RCC_OscConfig+0x12>
 8003882:	2301      	movs	r3, #1
 8003884:	e272      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	f003 0301 	and.w	r3, r3, #1
 800388e:	2b00      	cmp	r3, #0
 8003890:	f000 8087 	beq.w	80039a2 <HAL_RCC_OscConfig+0x12e>
 8003894:	4b92      	ldr	r3, [pc, #584]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003896:	685b      	ldr	r3, [r3, #4]
 8003898:	f003 030c 	and.w	r3, r3, #12
 800389c:	2b04      	cmp	r3, #4
 800389e:	d00c      	beq.n	80038ba <HAL_RCC_OscConfig+0x46>
 80038a0:	4b8f      	ldr	r3, [pc, #572]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80038a2:	685b      	ldr	r3, [r3, #4]
 80038a4:	f003 030c 	and.w	r3, r3, #12
 80038a8:	2b08      	cmp	r3, #8
 80038aa:	d112      	bne.n	80038d2 <HAL_RCC_OscConfig+0x5e>
 80038ac:	4b8c      	ldr	r3, [pc, #560]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80038ae:	685b      	ldr	r3, [r3, #4]
 80038b0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80038b4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80038b8:	d10b      	bne.n	80038d2 <HAL_RCC_OscConfig+0x5e>
 80038ba:	4b89      	ldr	r3, [pc, #548]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80038c2:	2b00      	cmp	r3, #0
 80038c4:	d06c      	beq.n	80039a0 <HAL_RCC_OscConfig+0x12c>
 80038c6:	687b      	ldr	r3, [r7, #4]
 80038c8:	685b      	ldr	r3, [r3, #4]
 80038ca:	2b00      	cmp	r3, #0
 80038cc:	d168      	bne.n	80039a0 <HAL_RCC_OscConfig+0x12c>
 80038ce:	2301      	movs	r3, #1
 80038d0:	e24c      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	685b      	ldr	r3, [r3, #4]
 80038d6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80038da:	d106      	bne.n	80038ea <HAL_RCC_OscConfig+0x76>
 80038dc:	4b80      	ldr	r3, [pc, #512]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	4a7f      	ldr	r2, [pc, #508]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80038e2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80038e6:	6013      	str	r3, [r2, #0]
 80038e8:	e02e      	b.n	8003948 <HAL_RCC_OscConfig+0xd4>
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	685b      	ldr	r3, [r3, #4]
 80038ee:	2b00      	cmp	r3, #0
 80038f0:	d10c      	bne.n	800390c <HAL_RCC_OscConfig+0x98>
 80038f2:	4b7b      	ldr	r3, [pc, #492]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80038f4:	681b      	ldr	r3, [r3, #0]
 80038f6:	4a7a      	ldr	r2, [pc, #488]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80038f8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80038fc:	6013      	str	r3, [r2, #0]
 80038fe:	4b78      	ldr	r3, [pc, #480]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003900:	681b      	ldr	r3, [r3, #0]
 8003902:	4a77      	ldr	r2, [pc, #476]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003904:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003908:	6013      	str	r3, [r2, #0]
 800390a:	e01d      	b.n	8003948 <HAL_RCC_OscConfig+0xd4>
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	685b      	ldr	r3, [r3, #4]
 8003910:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8003914:	d10c      	bne.n	8003930 <HAL_RCC_OscConfig+0xbc>
 8003916:	4b72      	ldr	r3, [pc, #456]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003918:	681b      	ldr	r3, [r3, #0]
 800391a:	4a71      	ldr	r2, [pc, #452]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 800391c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8003920:	6013      	str	r3, [r2, #0]
 8003922:	4b6f      	ldr	r3, [pc, #444]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003924:	681b      	ldr	r3, [r3, #0]
 8003926:	4a6e      	ldr	r2, [pc, #440]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003928:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800392c:	6013      	str	r3, [r2, #0]
 800392e:	e00b      	b.n	8003948 <HAL_RCC_OscConfig+0xd4>
 8003930:	4b6b      	ldr	r3, [pc, #428]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	4a6a      	ldr	r2, [pc, #424]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003936:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800393a:	6013      	str	r3, [r2, #0]
 800393c:	4b68      	ldr	r3, [pc, #416]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	4a67      	ldr	r2, [pc, #412]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003942:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003946:	6013      	str	r3, [r2, #0]
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	685b      	ldr	r3, [r3, #4]
 800394c:	2b00      	cmp	r3, #0
 800394e:	d013      	beq.n	8003978 <HAL_RCC_OscConfig+0x104>
 8003950:	f7fe fb0c 	bl	8001f6c <HAL_GetTick>
 8003954:	6138      	str	r0, [r7, #16]
 8003956:	e008      	b.n	800396a <HAL_RCC_OscConfig+0xf6>
 8003958:	f7fe fb08 	bl	8001f6c <HAL_GetTick>
 800395c:	4602      	mov	r2, r0
 800395e:	693b      	ldr	r3, [r7, #16]
 8003960:	1ad3      	subs	r3, r2, r3
 8003962:	2b64      	cmp	r3, #100	; 0x64
 8003964:	d901      	bls.n	800396a <HAL_RCC_OscConfig+0xf6>
 8003966:	2303      	movs	r3, #3
 8003968:	e200      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 800396a:	4b5d      	ldr	r3, [pc, #372]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 800396c:	681b      	ldr	r3, [r3, #0]
 800396e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003972:	2b00      	cmp	r3, #0
 8003974:	d0f0      	beq.n	8003958 <HAL_RCC_OscConfig+0xe4>
 8003976:	e014      	b.n	80039a2 <HAL_RCC_OscConfig+0x12e>
 8003978:	f7fe faf8 	bl	8001f6c <HAL_GetTick>
 800397c:	6138      	str	r0, [r7, #16]
 800397e:	e008      	b.n	8003992 <HAL_RCC_OscConfig+0x11e>
 8003980:	f7fe faf4 	bl	8001f6c <HAL_GetTick>
 8003984:	4602      	mov	r2, r0
 8003986:	693b      	ldr	r3, [r7, #16]
 8003988:	1ad3      	subs	r3, r2, r3
 800398a:	2b64      	cmp	r3, #100	; 0x64
 800398c:	d901      	bls.n	8003992 <HAL_RCC_OscConfig+0x11e>
 800398e:	2303      	movs	r3, #3
 8003990:	e1ec      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003992:	4b53      	ldr	r3, [pc, #332]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800399a:	2b00      	cmp	r3, #0
 800399c:	d1f0      	bne.n	8003980 <HAL_RCC_OscConfig+0x10c>
 800399e:	e000      	b.n	80039a2 <HAL_RCC_OscConfig+0x12e>
 80039a0:	bf00      	nop
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	f003 0302 	and.w	r3, r3, #2
 80039aa:	2b00      	cmp	r3, #0
 80039ac:	d063      	beq.n	8003a76 <HAL_RCC_OscConfig+0x202>
 80039ae:	4b4c      	ldr	r3, [pc, #304]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80039b0:	685b      	ldr	r3, [r3, #4]
 80039b2:	f003 030c 	and.w	r3, r3, #12
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	d00b      	beq.n	80039d2 <HAL_RCC_OscConfig+0x15e>
 80039ba:	4b49      	ldr	r3, [pc, #292]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80039bc:	685b      	ldr	r3, [r3, #4]
 80039be:	f003 030c 	and.w	r3, r3, #12
 80039c2:	2b08      	cmp	r3, #8
 80039c4:	d11c      	bne.n	8003a00 <HAL_RCC_OscConfig+0x18c>
 80039c6:	4b46      	ldr	r3, [pc, #280]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80039c8:	685b      	ldr	r3, [r3, #4]
 80039ca:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80039ce:	2b00      	cmp	r3, #0
 80039d0:	d116      	bne.n	8003a00 <HAL_RCC_OscConfig+0x18c>
 80039d2:	4b43      	ldr	r3, [pc, #268]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	f003 0302 	and.w	r3, r3, #2
 80039da:	2b00      	cmp	r3, #0
 80039dc:	d005      	beq.n	80039ea <HAL_RCC_OscConfig+0x176>
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	691b      	ldr	r3, [r3, #16]
 80039e2:	2b01      	cmp	r3, #1
 80039e4:	d001      	beq.n	80039ea <HAL_RCC_OscConfig+0x176>
 80039e6:	2301      	movs	r3, #1
 80039e8:	e1c0      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 80039ea:	4b3d      	ldr	r3, [pc, #244]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80039ec:	681b      	ldr	r3, [r3, #0]
 80039ee:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	695b      	ldr	r3, [r3, #20]
 80039f6:	00db      	lsls	r3, r3, #3
 80039f8:	4939      	ldr	r1, [pc, #228]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 80039fa:	4313      	orrs	r3, r2
 80039fc:	600b      	str	r3, [r1, #0]
 80039fe:	e03a      	b.n	8003a76 <HAL_RCC_OscConfig+0x202>
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	691b      	ldr	r3, [r3, #16]
 8003a04:	2b00      	cmp	r3, #0
 8003a06:	d020      	beq.n	8003a4a <HAL_RCC_OscConfig+0x1d6>
 8003a08:	4b36      	ldr	r3, [pc, #216]	; (8003ae4 <HAL_RCC_OscConfig+0x270>)
 8003a0a:	2201      	movs	r2, #1
 8003a0c:	601a      	str	r2, [r3, #0]
 8003a0e:	f7fe faad 	bl	8001f6c <HAL_GetTick>
 8003a12:	6138      	str	r0, [r7, #16]
 8003a14:	e008      	b.n	8003a28 <HAL_RCC_OscConfig+0x1b4>
 8003a16:	f7fe faa9 	bl	8001f6c <HAL_GetTick>
 8003a1a:	4602      	mov	r2, r0
 8003a1c:	693b      	ldr	r3, [r7, #16]
 8003a1e:	1ad3      	subs	r3, r2, r3
 8003a20:	2b02      	cmp	r3, #2
 8003a22:	d901      	bls.n	8003a28 <HAL_RCC_OscConfig+0x1b4>
 8003a24:	2303      	movs	r3, #3
 8003a26:	e1a1      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003a28:	4b2d      	ldr	r3, [pc, #180]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003a2a:	681b      	ldr	r3, [r3, #0]
 8003a2c:	f003 0302 	and.w	r3, r3, #2
 8003a30:	2b00      	cmp	r3, #0
 8003a32:	d0f0      	beq.n	8003a16 <HAL_RCC_OscConfig+0x1a2>
 8003a34:	4b2a      	ldr	r3, [pc, #168]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	695b      	ldr	r3, [r3, #20]
 8003a40:	00db      	lsls	r3, r3, #3
 8003a42:	4927      	ldr	r1, [pc, #156]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003a44:	4313      	orrs	r3, r2
 8003a46:	600b      	str	r3, [r1, #0]
 8003a48:	e015      	b.n	8003a76 <HAL_RCC_OscConfig+0x202>
 8003a4a:	4b26      	ldr	r3, [pc, #152]	; (8003ae4 <HAL_RCC_OscConfig+0x270>)
 8003a4c:	2200      	movs	r2, #0
 8003a4e:	601a      	str	r2, [r3, #0]
 8003a50:	f7fe fa8c 	bl	8001f6c <HAL_GetTick>
 8003a54:	6138      	str	r0, [r7, #16]
 8003a56:	e008      	b.n	8003a6a <HAL_RCC_OscConfig+0x1f6>
 8003a58:	f7fe fa88 	bl	8001f6c <HAL_GetTick>
 8003a5c:	4602      	mov	r2, r0
 8003a5e:	693b      	ldr	r3, [r7, #16]
 8003a60:	1ad3      	subs	r3, r2, r3
 8003a62:	2b02      	cmp	r3, #2
 8003a64:	d901      	bls.n	8003a6a <HAL_RCC_OscConfig+0x1f6>
 8003a66:	2303      	movs	r3, #3
 8003a68:	e180      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003a6a:	4b1d      	ldr	r3, [pc, #116]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003a6c:	681b      	ldr	r3, [r3, #0]
 8003a6e:	f003 0302 	and.w	r3, r3, #2
 8003a72:	2b00      	cmp	r3, #0
 8003a74:	d1f0      	bne.n	8003a58 <HAL_RCC_OscConfig+0x1e4>
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	681b      	ldr	r3, [r3, #0]
 8003a7a:	f003 0308 	and.w	r3, r3, #8
 8003a7e:	2b00      	cmp	r3, #0
 8003a80:	d03a      	beq.n	8003af8 <HAL_RCC_OscConfig+0x284>
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	699b      	ldr	r3, [r3, #24]
 8003a86:	2b00      	cmp	r3, #0
 8003a88:	d019      	beq.n	8003abe <HAL_RCC_OscConfig+0x24a>
 8003a8a:	4b17      	ldr	r3, [pc, #92]	; (8003ae8 <HAL_RCC_OscConfig+0x274>)
 8003a8c:	2201      	movs	r2, #1
 8003a8e:	601a      	str	r2, [r3, #0]
 8003a90:	f7fe fa6c 	bl	8001f6c <HAL_GetTick>
 8003a94:	6138      	str	r0, [r7, #16]
 8003a96:	e008      	b.n	8003aaa <HAL_RCC_OscConfig+0x236>
 8003a98:	f7fe fa68 	bl	8001f6c <HAL_GetTick>
 8003a9c:	4602      	mov	r2, r0
 8003a9e:	693b      	ldr	r3, [r7, #16]
 8003aa0:	1ad3      	subs	r3, r2, r3
 8003aa2:	2b02      	cmp	r3, #2
 8003aa4:	d901      	bls.n	8003aaa <HAL_RCC_OscConfig+0x236>
 8003aa6:	2303      	movs	r3, #3
 8003aa8:	e160      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003aaa:	4b0d      	ldr	r3, [pc, #52]	; (8003ae0 <HAL_RCC_OscConfig+0x26c>)
 8003aac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003aae:	f003 0302 	and.w	r3, r3, #2
 8003ab2:	2b00      	cmp	r3, #0
 8003ab4:	d0f0      	beq.n	8003a98 <HAL_RCC_OscConfig+0x224>
 8003ab6:	2001      	movs	r0, #1
 8003ab8:	f000 fad8 	bl	800406c <RCC_Delay>
 8003abc:	e01c      	b.n	8003af8 <HAL_RCC_OscConfig+0x284>
 8003abe:	4b0a      	ldr	r3, [pc, #40]	; (8003ae8 <HAL_RCC_OscConfig+0x274>)
 8003ac0:	2200      	movs	r2, #0
 8003ac2:	601a      	str	r2, [r3, #0]
 8003ac4:	f7fe fa52 	bl	8001f6c <HAL_GetTick>
 8003ac8:	6138      	str	r0, [r7, #16]
 8003aca:	e00f      	b.n	8003aec <HAL_RCC_OscConfig+0x278>
 8003acc:	f7fe fa4e 	bl	8001f6c <HAL_GetTick>
 8003ad0:	4602      	mov	r2, r0
 8003ad2:	693b      	ldr	r3, [r7, #16]
 8003ad4:	1ad3      	subs	r3, r2, r3
 8003ad6:	2b02      	cmp	r3, #2
 8003ad8:	d908      	bls.n	8003aec <HAL_RCC_OscConfig+0x278>
 8003ada:	2303      	movs	r3, #3
 8003adc:	e146      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003ade:	bf00      	nop
 8003ae0:	40021000 	.word	0x40021000
 8003ae4:	42420000 	.word	0x42420000
 8003ae8:	42420480 	.word	0x42420480
 8003aec:	4b92      	ldr	r3, [pc, #584]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003aee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003af0:	f003 0302 	and.w	r3, r3, #2
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	d1e9      	bne.n	8003acc <HAL_RCC_OscConfig+0x258>
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	f003 0304 	and.w	r3, r3, #4
 8003b00:	2b00      	cmp	r3, #0
 8003b02:	f000 80a6 	beq.w	8003c52 <HAL_RCC_OscConfig+0x3de>
 8003b06:	2300      	movs	r3, #0
 8003b08:	75fb      	strb	r3, [r7, #23]
 8003b0a:	4b8b      	ldr	r3, [pc, #556]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003b0c:	69db      	ldr	r3, [r3, #28]
 8003b0e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003b12:	2b00      	cmp	r3, #0
 8003b14:	d10d      	bne.n	8003b32 <HAL_RCC_OscConfig+0x2be>
 8003b16:	4b88      	ldr	r3, [pc, #544]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003b18:	69db      	ldr	r3, [r3, #28]
 8003b1a:	4a87      	ldr	r2, [pc, #540]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003b1c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003b20:	61d3      	str	r3, [r2, #28]
 8003b22:	4b85      	ldr	r3, [pc, #532]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003b24:	69db      	ldr	r3, [r3, #28]
 8003b26:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003b2a:	60bb      	str	r3, [r7, #8]
 8003b2c:	68bb      	ldr	r3, [r7, #8]
 8003b2e:	2301      	movs	r3, #1
 8003b30:	75fb      	strb	r3, [r7, #23]
 8003b32:	4b82      	ldr	r3, [pc, #520]	; (8003d3c <HAL_RCC_OscConfig+0x4c8>)
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003b3a:	2b00      	cmp	r3, #0
 8003b3c:	d118      	bne.n	8003b70 <HAL_RCC_OscConfig+0x2fc>
 8003b3e:	4b7f      	ldr	r3, [pc, #508]	; (8003d3c <HAL_RCC_OscConfig+0x4c8>)
 8003b40:	681b      	ldr	r3, [r3, #0]
 8003b42:	4a7e      	ldr	r2, [pc, #504]	; (8003d3c <HAL_RCC_OscConfig+0x4c8>)
 8003b44:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003b48:	6013      	str	r3, [r2, #0]
 8003b4a:	f7fe fa0f 	bl	8001f6c <HAL_GetTick>
 8003b4e:	6138      	str	r0, [r7, #16]
 8003b50:	e008      	b.n	8003b64 <HAL_RCC_OscConfig+0x2f0>
 8003b52:	f7fe fa0b 	bl	8001f6c <HAL_GetTick>
 8003b56:	4602      	mov	r2, r0
 8003b58:	693b      	ldr	r3, [r7, #16]
 8003b5a:	1ad3      	subs	r3, r2, r3
 8003b5c:	2b64      	cmp	r3, #100	; 0x64
 8003b5e:	d901      	bls.n	8003b64 <HAL_RCC_OscConfig+0x2f0>
 8003b60:	2303      	movs	r3, #3
 8003b62:	e103      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003b64:	4b75      	ldr	r3, [pc, #468]	; (8003d3c <HAL_RCC_OscConfig+0x4c8>)
 8003b66:	681b      	ldr	r3, [r3, #0]
 8003b68:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003b6c:	2b00      	cmp	r3, #0
 8003b6e:	d0f0      	beq.n	8003b52 <HAL_RCC_OscConfig+0x2de>
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	68db      	ldr	r3, [r3, #12]
 8003b74:	2b01      	cmp	r3, #1
 8003b76:	d106      	bne.n	8003b86 <HAL_RCC_OscConfig+0x312>
 8003b78:	4b6f      	ldr	r3, [pc, #444]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003b7a:	6a1b      	ldr	r3, [r3, #32]
 8003b7c:	4a6e      	ldr	r2, [pc, #440]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003b7e:	f043 0301 	orr.w	r3, r3, #1
 8003b82:	6213      	str	r3, [r2, #32]
 8003b84:	e02d      	b.n	8003be2 <HAL_RCC_OscConfig+0x36e>
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	68db      	ldr	r3, [r3, #12]
 8003b8a:	2b00      	cmp	r3, #0
 8003b8c:	d10c      	bne.n	8003ba8 <HAL_RCC_OscConfig+0x334>
 8003b8e:	4b6a      	ldr	r3, [pc, #424]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003b90:	6a1b      	ldr	r3, [r3, #32]
 8003b92:	4a69      	ldr	r2, [pc, #420]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003b94:	f023 0301 	bic.w	r3, r3, #1
 8003b98:	6213      	str	r3, [r2, #32]
 8003b9a:	4b67      	ldr	r3, [pc, #412]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003b9c:	6a1b      	ldr	r3, [r3, #32]
 8003b9e:	4a66      	ldr	r2, [pc, #408]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003ba0:	f023 0304 	bic.w	r3, r3, #4
 8003ba4:	6213      	str	r3, [r2, #32]
 8003ba6:	e01c      	b.n	8003be2 <HAL_RCC_OscConfig+0x36e>
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	68db      	ldr	r3, [r3, #12]
 8003bac:	2b05      	cmp	r3, #5
 8003bae:	d10c      	bne.n	8003bca <HAL_RCC_OscConfig+0x356>
 8003bb0:	4b61      	ldr	r3, [pc, #388]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003bb2:	6a1b      	ldr	r3, [r3, #32]
 8003bb4:	4a60      	ldr	r2, [pc, #384]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003bb6:	f043 0304 	orr.w	r3, r3, #4
 8003bba:	6213      	str	r3, [r2, #32]
 8003bbc:	4b5e      	ldr	r3, [pc, #376]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003bbe:	6a1b      	ldr	r3, [r3, #32]
 8003bc0:	4a5d      	ldr	r2, [pc, #372]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003bc2:	f043 0301 	orr.w	r3, r3, #1
 8003bc6:	6213      	str	r3, [r2, #32]
 8003bc8:	e00b      	b.n	8003be2 <HAL_RCC_OscConfig+0x36e>
 8003bca:	4b5b      	ldr	r3, [pc, #364]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003bcc:	6a1b      	ldr	r3, [r3, #32]
 8003bce:	4a5a      	ldr	r2, [pc, #360]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003bd0:	f023 0301 	bic.w	r3, r3, #1
 8003bd4:	6213      	str	r3, [r2, #32]
 8003bd6:	4b58      	ldr	r3, [pc, #352]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003bd8:	6a1b      	ldr	r3, [r3, #32]
 8003bda:	4a57      	ldr	r2, [pc, #348]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003bdc:	f023 0304 	bic.w	r3, r3, #4
 8003be0:	6213      	str	r3, [r2, #32]
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	68db      	ldr	r3, [r3, #12]
 8003be6:	2b00      	cmp	r3, #0
 8003be8:	d015      	beq.n	8003c16 <HAL_RCC_OscConfig+0x3a2>
 8003bea:	f7fe f9bf 	bl	8001f6c <HAL_GetTick>
 8003bee:	6138      	str	r0, [r7, #16]
 8003bf0:	e00a      	b.n	8003c08 <HAL_RCC_OscConfig+0x394>
 8003bf2:	f7fe f9bb 	bl	8001f6c <HAL_GetTick>
 8003bf6:	4602      	mov	r2, r0
 8003bf8:	693b      	ldr	r3, [r7, #16]
 8003bfa:	1ad3      	subs	r3, r2, r3
 8003bfc:	f241 3288 	movw	r2, #5000	; 0x1388
 8003c00:	4293      	cmp	r3, r2
 8003c02:	d901      	bls.n	8003c08 <HAL_RCC_OscConfig+0x394>
 8003c04:	2303      	movs	r3, #3
 8003c06:	e0b1      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003c08:	4b4b      	ldr	r3, [pc, #300]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003c0a:	6a1b      	ldr	r3, [r3, #32]
 8003c0c:	f003 0302 	and.w	r3, r3, #2
 8003c10:	2b00      	cmp	r3, #0
 8003c12:	d0ee      	beq.n	8003bf2 <HAL_RCC_OscConfig+0x37e>
 8003c14:	e014      	b.n	8003c40 <HAL_RCC_OscConfig+0x3cc>
 8003c16:	f7fe f9a9 	bl	8001f6c <HAL_GetTick>
 8003c1a:	6138      	str	r0, [r7, #16]
 8003c1c:	e00a      	b.n	8003c34 <HAL_RCC_OscConfig+0x3c0>
 8003c1e:	f7fe f9a5 	bl	8001f6c <HAL_GetTick>
 8003c22:	4602      	mov	r2, r0
 8003c24:	693b      	ldr	r3, [r7, #16]
 8003c26:	1ad3      	subs	r3, r2, r3
 8003c28:	f241 3288 	movw	r2, #5000	; 0x1388
 8003c2c:	4293      	cmp	r3, r2
 8003c2e:	d901      	bls.n	8003c34 <HAL_RCC_OscConfig+0x3c0>
 8003c30:	2303      	movs	r3, #3
 8003c32:	e09b      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003c34:	4b40      	ldr	r3, [pc, #256]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003c36:	6a1b      	ldr	r3, [r3, #32]
 8003c38:	f003 0302 	and.w	r3, r3, #2
 8003c3c:	2b00      	cmp	r3, #0
 8003c3e:	d1ee      	bne.n	8003c1e <HAL_RCC_OscConfig+0x3aa>
 8003c40:	7dfb      	ldrb	r3, [r7, #23]
 8003c42:	2b01      	cmp	r3, #1
 8003c44:	d105      	bne.n	8003c52 <HAL_RCC_OscConfig+0x3de>
 8003c46:	4b3c      	ldr	r3, [pc, #240]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003c48:	69db      	ldr	r3, [r3, #28]
 8003c4a:	4a3b      	ldr	r2, [pc, #236]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003c4c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8003c50:	61d3      	str	r3, [r2, #28]
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	69db      	ldr	r3, [r3, #28]
 8003c56:	2b00      	cmp	r3, #0
 8003c58:	f000 8087 	beq.w	8003d6a <HAL_RCC_OscConfig+0x4f6>
 8003c5c:	4b36      	ldr	r3, [pc, #216]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003c5e:	685b      	ldr	r3, [r3, #4]
 8003c60:	f003 030c 	and.w	r3, r3, #12
 8003c64:	2b08      	cmp	r3, #8
 8003c66:	d061      	beq.n	8003d2c <HAL_RCC_OscConfig+0x4b8>
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	69db      	ldr	r3, [r3, #28]
 8003c6c:	2b02      	cmp	r3, #2
 8003c6e:	d146      	bne.n	8003cfe <HAL_RCC_OscConfig+0x48a>
 8003c70:	4b33      	ldr	r3, [pc, #204]	; (8003d40 <HAL_RCC_OscConfig+0x4cc>)
 8003c72:	2200      	movs	r2, #0
 8003c74:	601a      	str	r2, [r3, #0]
 8003c76:	f7fe f979 	bl	8001f6c <HAL_GetTick>
 8003c7a:	6138      	str	r0, [r7, #16]
 8003c7c:	e008      	b.n	8003c90 <HAL_RCC_OscConfig+0x41c>
 8003c7e:	f7fe f975 	bl	8001f6c <HAL_GetTick>
 8003c82:	4602      	mov	r2, r0
 8003c84:	693b      	ldr	r3, [r7, #16]
 8003c86:	1ad3      	subs	r3, r2, r3
 8003c88:	2b02      	cmp	r3, #2
 8003c8a:	d901      	bls.n	8003c90 <HAL_RCC_OscConfig+0x41c>
 8003c8c:	2303      	movs	r3, #3
 8003c8e:	e06d      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003c90:	4b29      	ldr	r3, [pc, #164]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003c92:	681b      	ldr	r3, [r3, #0]
 8003c94:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003c98:	2b00      	cmp	r3, #0
 8003c9a:	d1f0      	bne.n	8003c7e <HAL_RCC_OscConfig+0x40a>
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	6a1b      	ldr	r3, [r3, #32]
 8003ca0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003ca4:	d108      	bne.n	8003cb8 <HAL_RCC_OscConfig+0x444>
 8003ca6:	4b24      	ldr	r3, [pc, #144]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003ca8:	685b      	ldr	r3, [r3, #4]
 8003caa:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	689b      	ldr	r3, [r3, #8]
 8003cb2:	4921      	ldr	r1, [pc, #132]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003cb4:	4313      	orrs	r3, r2
 8003cb6:	604b      	str	r3, [r1, #4]
 8003cb8:	4b1f      	ldr	r3, [pc, #124]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003cba:	685b      	ldr	r3, [r3, #4]
 8003cbc:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8003cc0:	687b      	ldr	r3, [r7, #4]
 8003cc2:	6a19      	ldr	r1, [r3, #32]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003cc8:	430b      	orrs	r3, r1
 8003cca:	491b      	ldr	r1, [pc, #108]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003ccc:	4313      	orrs	r3, r2
 8003cce:	604b      	str	r3, [r1, #4]
 8003cd0:	4b1b      	ldr	r3, [pc, #108]	; (8003d40 <HAL_RCC_OscConfig+0x4cc>)
 8003cd2:	2201      	movs	r2, #1
 8003cd4:	601a      	str	r2, [r3, #0]
 8003cd6:	f7fe f949 	bl	8001f6c <HAL_GetTick>
 8003cda:	6138      	str	r0, [r7, #16]
 8003cdc:	e008      	b.n	8003cf0 <HAL_RCC_OscConfig+0x47c>
 8003cde:	f7fe f945 	bl	8001f6c <HAL_GetTick>
 8003ce2:	4602      	mov	r2, r0
 8003ce4:	693b      	ldr	r3, [r7, #16]
 8003ce6:	1ad3      	subs	r3, r2, r3
 8003ce8:	2b02      	cmp	r3, #2
 8003cea:	d901      	bls.n	8003cf0 <HAL_RCC_OscConfig+0x47c>
 8003cec:	2303      	movs	r3, #3
 8003cee:	e03d      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003cf0:	4b11      	ldr	r3, [pc, #68]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003cf2:	681b      	ldr	r3, [r3, #0]
 8003cf4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003cf8:	2b00      	cmp	r3, #0
 8003cfa:	d0f0      	beq.n	8003cde <HAL_RCC_OscConfig+0x46a>
 8003cfc:	e035      	b.n	8003d6a <HAL_RCC_OscConfig+0x4f6>
 8003cfe:	4b10      	ldr	r3, [pc, #64]	; (8003d40 <HAL_RCC_OscConfig+0x4cc>)
 8003d00:	2200      	movs	r2, #0
 8003d02:	601a      	str	r2, [r3, #0]
 8003d04:	f7fe f932 	bl	8001f6c <HAL_GetTick>
 8003d08:	6138      	str	r0, [r7, #16]
 8003d0a:	e008      	b.n	8003d1e <HAL_RCC_OscConfig+0x4aa>
 8003d0c:	f7fe f92e 	bl	8001f6c <HAL_GetTick>
 8003d10:	4602      	mov	r2, r0
 8003d12:	693b      	ldr	r3, [r7, #16]
 8003d14:	1ad3      	subs	r3, r2, r3
 8003d16:	2b02      	cmp	r3, #2
 8003d18:	d901      	bls.n	8003d1e <HAL_RCC_OscConfig+0x4aa>
 8003d1a:	2303      	movs	r3, #3
 8003d1c:	e026      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003d1e:	4b06      	ldr	r3, [pc, #24]	; (8003d38 <HAL_RCC_OscConfig+0x4c4>)
 8003d20:	681b      	ldr	r3, [r3, #0]
 8003d22:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d1f0      	bne.n	8003d0c <HAL_RCC_OscConfig+0x498>
 8003d2a:	e01e      	b.n	8003d6a <HAL_RCC_OscConfig+0x4f6>
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	69db      	ldr	r3, [r3, #28]
 8003d30:	2b01      	cmp	r3, #1
 8003d32:	d107      	bne.n	8003d44 <HAL_RCC_OscConfig+0x4d0>
 8003d34:	2301      	movs	r3, #1
 8003d36:	e019      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003d38:	40021000 	.word	0x40021000
 8003d3c:	40007000 	.word	0x40007000
 8003d40:	42420060 	.word	0x42420060
 8003d44:	4b0b      	ldr	r3, [pc, #44]	; (8003d74 <HAL_RCC_OscConfig+0x500>)
 8003d46:	685b      	ldr	r3, [r3, #4]
 8003d48:	60fb      	str	r3, [r7, #12]
 8003d4a:	68fb      	ldr	r3, [r7, #12]
 8003d4c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	6a1b      	ldr	r3, [r3, #32]
 8003d54:	429a      	cmp	r2, r3
 8003d56:	d106      	bne.n	8003d66 <HAL_RCC_OscConfig+0x4f2>
 8003d58:	68fb      	ldr	r3, [r7, #12]
 8003d5a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d62:	429a      	cmp	r2, r3
 8003d64:	d001      	beq.n	8003d6a <HAL_RCC_OscConfig+0x4f6>
 8003d66:	2301      	movs	r3, #1
 8003d68:	e000      	b.n	8003d6c <HAL_RCC_OscConfig+0x4f8>
 8003d6a:	2300      	movs	r3, #0
 8003d6c:	4618      	mov	r0, r3
 8003d6e:	3718      	adds	r7, #24
 8003d70:	46bd      	mov	sp, r7
 8003d72:	bd80      	pop	{r7, pc}
 8003d74:	40021000 	.word	0x40021000

08003d78 <HAL_RCC_ClockConfig>:
 8003d78:	b580      	push	{r7, lr}
 8003d7a:	b084      	sub	sp, #16
 8003d7c:	af00      	add	r7, sp, #0
 8003d7e:	6078      	str	r0, [r7, #4]
 8003d80:	6039      	str	r1, [r7, #0]
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	2b00      	cmp	r3, #0
 8003d86:	d101      	bne.n	8003d8c <HAL_RCC_ClockConfig+0x14>
 8003d88:	2301      	movs	r3, #1
 8003d8a:	e0d0      	b.n	8003f2e <HAL_RCC_ClockConfig+0x1b6>
 8003d8c:	4b6a      	ldr	r3, [pc, #424]	; (8003f38 <HAL_RCC_ClockConfig+0x1c0>)
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	f003 0307 	and.w	r3, r3, #7
 8003d94:	683a      	ldr	r2, [r7, #0]
 8003d96:	429a      	cmp	r2, r3
 8003d98:	d910      	bls.n	8003dbc <HAL_RCC_ClockConfig+0x44>
 8003d9a:	4b67      	ldr	r3, [pc, #412]	; (8003f38 <HAL_RCC_ClockConfig+0x1c0>)
 8003d9c:	681b      	ldr	r3, [r3, #0]
 8003d9e:	f023 0207 	bic.w	r2, r3, #7
 8003da2:	4965      	ldr	r1, [pc, #404]	; (8003f38 <HAL_RCC_ClockConfig+0x1c0>)
 8003da4:	683b      	ldr	r3, [r7, #0]
 8003da6:	4313      	orrs	r3, r2
 8003da8:	600b      	str	r3, [r1, #0]
 8003daa:	4b63      	ldr	r3, [pc, #396]	; (8003f38 <HAL_RCC_ClockConfig+0x1c0>)
 8003dac:	681b      	ldr	r3, [r3, #0]
 8003dae:	f003 0307 	and.w	r3, r3, #7
 8003db2:	683a      	ldr	r2, [r7, #0]
 8003db4:	429a      	cmp	r2, r3
 8003db6:	d001      	beq.n	8003dbc <HAL_RCC_ClockConfig+0x44>
 8003db8:	2301      	movs	r3, #1
 8003dba:	e0b8      	b.n	8003f2e <HAL_RCC_ClockConfig+0x1b6>
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	681b      	ldr	r3, [r3, #0]
 8003dc0:	f003 0302 	and.w	r3, r3, #2
 8003dc4:	2b00      	cmp	r3, #0
 8003dc6:	d020      	beq.n	8003e0a <HAL_RCC_ClockConfig+0x92>
 8003dc8:	687b      	ldr	r3, [r7, #4]
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	f003 0304 	and.w	r3, r3, #4
 8003dd0:	2b00      	cmp	r3, #0
 8003dd2:	d005      	beq.n	8003de0 <HAL_RCC_ClockConfig+0x68>
 8003dd4:	4b59      	ldr	r3, [pc, #356]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003dd6:	685b      	ldr	r3, [r3, #4]
 8003dd8:	4a58      	ldr	r2, [pc, #352]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003dda:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8003dde:	6053      	str	r3, [r2, #4]
 8003de0:	687b      	ldr	r3, [r7, #4]
 8003de2:	681b      	ldr	r3, [r3, #0]
 8003de4:	f003 0308 	and.w	r3, r3, #8
 8003de8:	2b00      	cmp	r3, #0
 8003dea:	d005      	beq.n	8003df8 <HAL_RCC_ClockConfig+0x80>
 8003dec:	4b53      	ldr	r3, [pc, #332]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003dee:	685b      	ldr	r3, [r3, #4]
 8003df0:	4a52      	ldr	r2, [pc, #328]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003df2:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8003df6:	6053      	str	r3, [r2, #4]
 8003df8:	4b50      	ldr	r3, [pc, #320]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003dfa:	685b      	ldr	r3, [r3, #4]
 8003dfc:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	689b      	ldr	r3, [r3, #8]
 8003e04:	494d      	ldr	r1, [pc, #308]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003e06:	4313      	orrs	r3, r2
 8003e08:	604b      	str	r3, [r1, #4]
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	f003 0301 	and.w	r3, r3, #1
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	d040      	beq.n	8003e98 <HAL_RCC_ClockConfig+0x120>
 8003e16:	687b      	ldr	r3, [r7, #4]
 8003e18:	685b      	ldr	r3, [r3, #4]
 8003e1a:	2b01      	cmp	r3, #1
 8003e1c:	d107      	bne.n	8003e2e <HAL_RCC_ClockConfig+0xb6>
 8003e1e:	4b47      	ldr	r3, [pc, #284]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003e20:	681b      	ldr	r3, [r3, #0]
 8003e22:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	d115      	bne.n	8003e56 <HAL_RCC_ClockConfig+0xde>
 8003e2a:	2301      	movs	r3, #1
 8003e2c:	e07f      	b.n	8003f2e <HAL_RCC_ClockConfig+0x1b6>
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	685b      	ldr	r3, [r3, #4]
 8003e32:	2b02      	cmp	r3, #2
 8003e34:	d107      	bne.n	8003e46 <HAL_RCC_ClockConfig+0xce>
 8003e36:	4b41      	ldr	r3, [pc, #260]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003e3e:	2b00      	cmp	r3, #0
 8003e40:	d109      	bne.n	8003e56 <HAL_RCC_ClockConfig+0xde>
 8003e42:	2301      	movs	r3, #1
 8003e44:	e073      	b.n	8003f2e <HAL_RCC_ClockConfig+0x1b6>
 8003e46:	4b3d      	ldr	r3, [pc, #244]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003e48:	681b      	ldr	r3, [r3, #0]
 8003e4a:	f003 0302 	and.w	r3, r3, #2
 8003e4e:	2b00      	cmp	r3, #0
 8003e50:	d101      	bne.n	8003e56 <HAL_RCC_ClockConfig+0xde>
 8003e52:	2301      	movs	r3, #1
 8003e54:	e06b      	b.n	8003f2e <HAL_RCC_ClockConfig+0x1b6>
 8003e56:	4b39      	ldr	r3, [pc, #228]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003e58:	685b      	ldr	r3, [r3, #4]
 8003e5a:	f023 0203 	bic.w	r2, r3, #3
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	685b      	ldr	r3, [r3, #4]
 8003e62:	4936      	ldr	r1, [pc, #216]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003e64:	4313      	orrs	r3, r2
 8003e66:	604b      	str	r3, [r1, #4]
 8003e68:	f7fe f880 	bl	8001f6c <HAL_GetTick>
 8003e6c:	60f8      	str	r0, [r7, #12]
 8003e6e:	e00a      	b.n	8003e86 <HAL_RCC_ClockConfig+0x10e>
 8003e70:	f7fe f87c 	bl	8001f6c <HAL_GetTick>
 8003e74:	4602      	mov	r2, r0
 8003e76:	68fb      	ldr	r3, [r7, #12]
 8003e78:	1ad3      	subs	r3, r2, r3
 8003e7a:	f241 3288 	movw	r2, #5000	; 0x1388
 8003e7e:	4293      	cmp	r3, r2
 8003e80:	d901      	bls.n	8003e86 <HAL_RCC_ClockConfig+0x10e>
 8003e82:	2303      	movs	r3, #3
 8003e84:	e053      	b.n	8003f2e <HAL_RCC_ClockConfig+0x1b6>
 8003e86:	4b2d      	ldr	r3, [pc, #180]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003e88:	685b      	ldr	r3, [r3, #4]
 8003e8a:	f003 020c 	and.w	r2, r3, #12
 8003e8e:	687b      	ldr	r3, [r7, #4]
 8003e90:	685b      	ldr	r3, [r3, #4]
 8003e92:	009b      	lsls	r3, r3, #2
 8003e94:	429a      	cmp	r2, r3
 8003e96:	d1eb      	bne.n	8003e70 <HAL_RCC_ClockConfig+0xf8>
 8003e98:	4b27      	ldr	r3, [pc, #156]	; (8003f38 <HAL_RCC_ClockConfig+0x1c0>)
 8003e9a:	681b      	ldr	r3, [r3, #0]
 8003e9c:	f003 0307 	and.w	r3, r3, #7
 8003ea0:	683a      	ldr	r2, [r7, #0]
 8003ea2:	429a      	cmp	r2, r3
 8003ea4:	d210      	bcs.n	8003ec8 <HAL_RCC_ClockConfig+0x150>
 8003ea6:	4b24      	ldr	r3, [pc, #144]	; (8003f38 <HAL_RCC_ClockConfig+0x1c0>)
 8003ea8:	681b      	ldr	r3, [r3, #0]
 8003eaa:	f023 0207 	bic.w	r2, r3, #7
 8003eae:	4922      	ldr	r1, [pc, #136]	; (8003f38 <HAL_RCC_ClockConfig+0x1c0>)
 8003eb0:	683b      	ldr	r3, [r7, #0]
 8003eb2:	4313      	orrs	r3, r2
 8003eb4:	600b      	str	r3, [r1, #0]
 8003eb6:	4b20      	ldr	r3, [pc, #128]	; (8003f38 <HAL_RCC_ClockConfig+0x1c0>)
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	f003 0307 	and.w	r3, r3, #7
 8003ebe:	683a      	ldr	r2, [r7, #0]
 8003ec0:	429a      	cmp	r2, r3
 8003ec2:	d001      	beq.n	8003ec8 <HAL_RCC_ClockConfig+0x150>
 8003ec4:	2301      	movs	r3, #1
 8003ec6:	e032      	b.n	8003f2e <HAL_RCC_ClockConfig+0x1b6>
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	681b      	ldr	r3, [r3, #0]
 8003ecc:	f003 0304 	and.w	r3, r3, #4
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	d008      	beq.n	8003ee6 <HAL_RCC_ClockConfig+0x16e>
 8003ed4:	4b19      	ldr	r3, [pc, #100]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003ed6:	685b      	ldr	r3, [r3, #4]
 8003ed8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	68db      	ldr	r3, [r3, #12]
 8003ee0:	4916      	ldr	r1, [pc, #88]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003ee2:	4313      	orrs	r3, r2
 8003ee4:	604b      	str	r3, [r1, #4]
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	681b      	ldr	r3, [r3, #0]
 8003eea:	f003 0308 	and.w	r3, r3, #8
 8003eee:	2b00      	cmp	r3, #0
 8003ef0:	d009      	beq.n	8003f06 <HAL_RCC_ClockConfig+0x18e>
 8003ef2:	4b12      	ldr	r3, [pc, #72]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003ef4:	685b      	ldr	r3, [r3, #4]
 8003ef6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	691b      	ldr	r3, [r3, #16]
 8003efe:	00db      	lsls	r3, r3, #3
 8003f00:	490e      	ldr	r1, [pc, #56]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003f02:	4313      	orrs	r3, r2
 8003f04:	604b      	str	r3, [r1, #4]
 8003f06:	f000 f821 	bl	8003f4c <HAL_RCC_GetSysClockFreq>
 8003f0a:	4602      	mov	r2, r0
 8003f0c:	4b0b      	ldr	r3, [pc, #44]	; (8003f3c <HAL_RCC_ClockConfig+0x1c4>)
 8003f0e:	685b      	ldr	r3, [r3, #4]
 8003f10:	091b      	lsrs	r3, r3, #4
 8003f12:	f003 030f 	and.w	r3, r3, #15
 8003f16:	490a      	ldr	r1, [pc, #40]	; (8003f40 <HAL_RCC_ClockConfig+0x1c8>)
 8003f18:	5ccb      	ldrb	r3, [r1, r3]
 8003f1a:	fa22 f303 	lsr.w	r3, r2, r3
 8003f1e:	4a09      	ldr	r2, [pc, #36]	; (8003f44 <HAL_RCC_ClockConfig+0x1cc>)
 8003f20:	6013      	str	r3, [r2, #0]
 8003f22:	4b09      	ldr	r3, [pc, #36]	; (8003f48 <HAL_RCC_ClockConfig+0x1d0>)
 8003f24:	681b      	ldr	r3, [r3, #0]
 8003f26:	4618      	mov	r0, r3
 8003f28:	f7fd ffde 	bl	8001ee8 <HAL_InitTick>
 8003f2c:	2300      	movs	r3, #0
 8003f2e:	4618      	mov	r0, r3
 8003f30:	3710      	adds	r7, #16
 8003f32:	46bd      	mov	sp, r7
 8003f34:	bd80      	pop	{r7, pc}
 8003f36:	bf00      	nop
 8003f38:	40022000 	.word	0x40022000
 8003f3c:	40021000 	.word	0x40021000
 8003f40:	08008340 	.word	0x08008340
 8003f44:	20000000 	.word	0x20000000
 8003f48:	20000004 	.word	0x20000004

08003f4c <HAL_RCC_GetSysClockFreq>:
 8003f4c:	b490      	push	{r4, r7}
 8003f4e:	b08a      	sub	sp, #40	; 0x28
 8003f50:	af00      	add	r7, sp, #0
 8003f52:	4b29      	ldr	r3, [pc, #164]	; (8003ff8 <HAL_RCC_GetSysClockFreq+0xac>)
 8003f54:	1d3c      	adds	r4, r7, #4
 8003f56:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8003f58:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8003f5c:	f240 2301 	movw	r3, #513	; 0x201
 8003f60:	803b      	strh	r3, [r7, #0]
 8003f62:	2300      	movs	r3, #0
 8003f64:	61fb      	str	r3, [r7, #28]
 8003f66:	2300      	movs	r3, #0
 8003f68:	61bb      	str	r3, [r7, #24]
 8003f6a:	2300      	movs	r3, #0
 8003f6c:	627b      	str	r3, [r7, #36]	; 0x24
 8003f6e:	2300      	movs	r3, #0
 8003f70:	617b      	str	r3, [r7, #20]
 8003f72:	2300      	movs	r3, #0
 8003f74:	623b      	str	r3, [r7, #32]
 8003f76:	4b21      	ldr	r3, [pc, #132]	; (8003ffc <HAL_RCC_GetSysClockFreq+0xb0>)
 8003f78:	685b      	ldr	r3, [r3, #4]
 8003f7a:	61fb      	str	r3, [r7, #28]
 8003f7c:	69fb      	ldr	r3, [r7, #28]
 8003f7e:	f003 030c 	and.w	r3, r3, #12
 8003f82:	2b04      	cmp	r3, #4
 8003f84:	d002      	beq.n	8003f8c <HAL_RCC_GetSysClockFreq+0x40>
 8003f86:	2b08      	cmp	r3, #8
 8003f88:	d003      	beq.n	8003f92 <HAL_RCC_GetSysClockFreq+0x46>
 8003f8a:	e02b      	b.n	8003fe4 <HAL_RCC_GetSysClockFreq+0x98>
 8003f8c:	4b1c      	ldr	r3, [pc, #112]	; (8004000 <HAL_RCC_GetSysClockFreq+0xb4>)
 8003f8e:	623b      	str	r3, [r7, #32]
 8003f90:	e02b      	b.n	8003fea <HAL_RCC_GetSysClockFreq+0x9e>
 8003f92:	69fb      	ldr	r3, [r7, #28]
 8003f94:	0c9b      	lsrs	r3, r3, #18
 8003f96:	f003 030f 	and.w	r3, r3, #15
 8003f9a:	3328      	adds	r3, #40	; 0x28
 8003f9c:	443b      	add	r3, r7
 8003f9e:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8003fa2:	617b      	str	r3, [r7, #20]
 8003fa4:	69fb      	ldr	r3, [r7, #28]
 8003fa6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003faa:	2b00      	cmp	r3, #0
 8003fac:	d012      	beq.n	8003fd4 <HAL_RCC_GetSysClockFreq+0x88>
 8003fae:	4b13      	ldr	r3, [pc, #76]	; (8003ffc <HAL_RCC_GetSysClockFreq+0xb0>)
 8003fb0:	685b      	ldr	r3, [r3, #4]
 8003fb2:	0c5b      	lsrs	r3, r3, #17
 8003fb4:	f003 0301 	and.w	r3, r3, #1
 8003fb8:	3328      	adds	r3, #40	; 0x28
 8003fba:	443b      	add	r3, r7
 8003fbc:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8003fc0:	61bb      	str	r3, [r7, #24]
 8003fc2:	697b      	ldr	r3, [r7, #20]
 8003fc4:	4a0e      	ldr	r2, [pc, #56]	; (8004000 <HAL_RCC_GetSysClockFreq+0xb4>)
 8003fc6:	fb03 f202 	mul.w	r2, r3, r2
 8003fca:	69bb      	ldr	r3, [r7, #24]
 8003fcc:	fbb2 f3f3 	udiv	r3, r2, r3
 8003fd0:	627b      	str	r3, [r7, #36]	; 0x24
 8003fd2:	e004      	b.n	8003fde <HAL_RCC_GetSysClockFreq+0x92>
 8003fd4:	697b      	ldr	r3, [r7, #20]
 8003fd6:	4a0b      	ldr	r2, [pc, #44]	; (8004004 <HAL_RCC_GetSysClockFreq+0xb8>)
 8003fd8:	fb02 f303 	mul.w	r3, r2, r3
 8003fdc:	627b      	str	r3, [r7, #36]	; 0x24
 8003fde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003fe0:	623b      	str	r3, [r7, #32]
 8003fe2:	e002      	b.n	8003fea <HAL_RCC_GetSysClockFreq+0x9e>
 8003fe4:	4b06      	ldr	r3, [pc, #24]	; (8004000 <HAL_RCC_GetSysClockFreq+0xb4>)
 8003fe6:	623b      	str	r3, [r7, #32]
 8003fe8:	bf00      	nop
 8003fea:	6a3b      	ldr	r3, [r7, #32]
 8003fec:	4618      	mov	r0, r3
 8003fee:	3728      	adds	r7, #40	; 0x28
 8003ff0:	46bd      	mov	sp, r7
 8003ff2:	bc90      	pop	{r4, r7}
 8003ff4:	4770      	bx	lr
 8003ff6:	bf00      	nop
 8003ff8:	08008330 	.word	0x08008330
 8003ffc:	40021000 	.word	0x40021000
 8004000:	007a1200 	.word	0x007a1200
 8004004:	003d0900 	.word	0x003d0900

08004008 <HAL_RCC_GetHCLKFreq>:
 8004008:	b480      	push	{r7}
 800400a:	af00      	add	r7, sp, #0
 800400c:	4b02      	ldr	r3, [pc, #8]	; (8004018 <HAL_RCC_GetHCLKFreq+0x10>)
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	4618      	mov	r0, r3
 8004012:	46bd      	mov	sp, r7
 8004014:	bc80      	pop	{r7}
 8004016:	4770      	bx	lr
 8004018:	20000000 	.word	0x20000000

0800401c <HAL_RCC_GetPCLK1Freq>:
 800401c:	b580      	push	{r7, lr}
 800401e:	af00      	add	r7, sp, #0
 8004020:	f7ff fff2 	bl	8004008 <HAL_RCC_GetHCLKFreq>
 8004024:	4602      	mov	r2, r0
 8004026:	4b05      	ldr	r3, [pc, #20]	; (800403c <HAL_RCC_GetPCLK1Freq+0x20>)
 8004028:	685b      	ldr	r3, [r3, #4]
 800402a:	0a1b      	lsrs	r3, r3, #8
 800402c:	f003 0307 	and.w	r3, r3, #7
 8004030:	4903      	ldr	r1, [pc, #12]	; (8004040 <HAL_RCC_GetPCLK1Freq+0x24>)
 8004032:	5ccb      	ldrb	r3, [r1, r3]
 8004034:	fa22 f303 	lsr.w	r3, r2, r3
 8004038:	4618      	mov	r0, r3
 800403a:	bd80      	pop	{r7, pc}
 800403c:	40021000 	.word	0x40021000
 8004040:	08008350 	.word	0x08008350

08004044 <HAL_RCC_GetPCLK2Freq>:
 8004044:	b580      	push	{r7, lr}
 8004046:	af00      	add	r7, sp, #0
 8004048:	f7ff ffde 	bl	8004008 <HAL_RCC_GetHCLKFreq>
 800404c:	4602      	mov	r2, r0
 800404e:	4b05      	ldr	r3, [pc, #20]	; (8004064 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004050:	685b      	ldr	r3, [r3, #4]
 8004052:	0adb      	lsrs	r3, r3, #11
 8004054:	f003 0307 	and.w	r3, r3, #7
 8004058:	4903      	ldr	r1, [pc, #12]	; (8004068 <HAL_RCC_GetPCLK2Freq+0x24>)
 800405a:	5ccb      	ldrb	r3, [r1, r3]
 800405c:	fa22 f303 	lsr.w	r3, r2, r3
 8004060:	4618      	mov	r0, r3
 8004062:	bd80      	pop	{r7, pc}
 8004064:	40021000 	.word	0x40021000
 8004068:	08008350 	.word	0x08008350

0800406c <RCC_Delay>:
 800406c:	b480      	push	{r7}
 800406e:	b085      	sub	sp, #20
 8004070:	af00      	add	r7, sp, #0
 8004072:	6078      	str	r0, [r7, #4]
 8004074:	4b0a      	ldr	r3, [pc, #40]	; (80040a0 <RCC_Delay+0x34>)
 8004076:	681b      	ldr	r3, [r3, #0]
 8004078:	4a0a      	ldr	r2, [pc, #40]	; (80040a4 <RCC_Delay+0x38>)
 800407a:	fba2 2303 	umull	r2, r3, r2, r3
 800407e:	0a5b      	lsrs	r3, r3, #9
 8004080:	687a      	ldr	r2, [r7, #4]
 8004082:	fb02 f303 	mul.w	r3, r2, r3
 8004086:	60fb      	str	r3, [r7, #12]
 8004088:	bf00      	nop
 800408a:	68fb      	ldr	r3, [r7, #12]
 800408c:	1e5a      	subs	r2, r3, #1
 800408e:	60fa      	str	r2, [r7, #12]
 8004090:	2b00      	cmp	r3, #0
 8004092:	d1f9      	bne.n	8004088 <RCC_Delay+0x1c>
 8004094:	bf00      	nop
 8004096:	bf00      	nop
 8004098:	3714      	adds	r7, #20
 800409a:	46bd      	mov	sp, r7
 800409c:	bc80      	pop	{r7}
 800409e:	4770      	bx	lr
 80040a0:	20000000 	.word	0x20000000
 80040a4:	10624dd3 	.word	0x10624dd3

080040a8 <HAL_TIM_Base_Init>:
 80040a8:	b580      	push	{r7, lr}
 80040aa:	b082      	sub	sp, #8
 80040ac:	af00      	add	r7, sp, #0
 80040ae:	6078      	str	r0, [r7, #4]
 80040b0:	687b      	ldr	r3, [r7, #4]
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	d101      	bne.n	80040ba <HAL_TIM_Base_Init+0x12>
 80040b6:	2301      	movs	r3, #1
 80040b8:	e041      	b.n	800413e <HAL_TIM_Base_Init+0x96>
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80040c0:	b2db      	uxtb	r3, r3
 80040c2:	2b00      	cmp	r3, #0
 80040c4:	d106      	bne.n	80040d4 <HAL_TIM_Base_Init+0x2c>
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	2200      	movs	r2, #0
 80040ca:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80040ce:	6878      	ldr	r0, [r7, #4]
 80040d0:	f7fd fb40 	bl	8001754 <HAL_TIM_Base_MspInit>
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	2202      	movs	r2, #2
 80040d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	681a      	ldr	r2, [r3, #0]
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	3304      	adds	r3, #4
 80040e4:	4619      	mov	r1, r3
 80040e6:	4610      	mov	r0, r2
 80040e8:	f000 fa70 	bl	80045cc <TIM_Base_SetConfig>
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	2201      	movs	r2, #1
 80040f0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	2201      	movs	r2, #1
 80040f8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	2201      	movs	r2, #1
 8004100:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	2201      	movs	r2, #1
 8004108:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	2201      	movs	r2, #1
 8004110:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	2201      	movs	r2, #1
 8004118:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	2201      	movs	r2, #1
 8004120:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	2201      	movs	r2, #1
 8004128:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	2201      	movs	r2, #1
 8004130:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	2201      	movs	r2, #1
 8004138:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800413c:	2300      	movs	r3, #0
 800413e:	4618      	mov	r0, r3
 8004140:	3708      	adds	r7, #8
 8004142:	46bd      	mov	sp, r7
 8004144:	bd80      	pop	{r7, pc}
	...

08004148 <HAL_TIM_Base_Start_IT>:
 8004148:	b480      	push	{r7}
 800414a:	b085      	sub	sp, #20
 800414c:	af00      	add	r7, sp, #0
 800414e:	6078      	str	r0, [r7, #4]
 8004150:	687b      	ldr	r3, [r7, #4]
 8004152:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004156:	b2db      	uxtb	r3, r3
 8004158:	2b01      	cmp	r3, #1
 800415a:	d001      	beq.n	8004160 <HAL_TIM_Base_Start_IT+0x18>
 800415c:	2301      	movs	r3, #1
 800415e:	e03a      	b.n	80041d6 <HAL_TIM_Base_Start_IT+0x8e>
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	2202      	movs	r2, #2
 8004164:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	681b      	ldr	r3, [r3, #0]
 800416c:	68da      	ldr	r2, [r3, #12]
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	f042 0201 	orr.w	r2, r2, #1
 8004176:	60da      	str	r2, [r3, #12]
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	681b      	ldr	r3, [r3, #0]
 800417c:	4a18      	ldr	r2, [pc, #96]	; (80041e0 <HAL_TIM_Base_Start_IT+0x98>)
 800417e:	4293      	cmp	r3, r2
 8004180:	d00e      	beq.n	80041a0 <HAL_TIM_Base_Start_IT+0x58>
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	681b      	ldr	r3, [r3, #0]
 8004186:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800418a:	d009      	beq.n	80041a0 <HAL_TIM_Base_Start_IT+0x58>
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	681b      	ldr	r3, [r3, #0]
 8004190:	4a14      	ldr	r2, [pc, #80]	; (80041e4 <HAL_TIM_Base_Start_IT+0x9c>)
 8004192:	4293      	cmp	r3, r2
 8004194:	d004      	beq.n	80041a0 <HAL_TIM_Base_Start_IT+0x58>
 8004196:	687b      	ldr	r3, [r7, #4]
 8004198:	681b      	ldr	r3, [r3, #0]
 800419a:	4a13      	ldr	r2, [pc, #76]	; (80041e8 <HAL_TIM_Base_Start_IT+0xa0>)
 800419c:	4293      	cmp	r3, r2
 800419e:	d111      	bne.n	80041c4 <HAL_TIM_Base_Start_IT+0x7c>
 80041a0:	687b      	ldr	r3, [r7, #4]
 80041a2:	681b      	ldr	r3, [r3, #0]
 80041a4:	689b      	ldr	r3, [r3, #8]
 80041a6:	f003 0307 	and.w	r3, r3, #7
 80041aa:	60fb      	str	r3, [r7, #12]
 80041ac:	68fb      	ldr	r3, [r7, #12]
 80041ae:	2b06      	cmp	r3, #6
 80041b0:	d010      	beq.n	80041d4 <HAL_TIM_Base_Start_IT+0x8c>
 80041b2:	687b      	ldr	r3, [r7, #4]
 80041b4:	681b      	ldr	r3, [r3, #0]
 80041b6:	681a      	ldr	r2, [r3, #0]
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	f042 0201 	orr.w	r2, r2, #1
 80041c0:	601a      	str	r2, [r3, #0]
 80041c2:	e007      	b.n	80041d4 <HAL_TIM_Base_Start_IT+0x8c>
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	681a      	ldr	r2, [r3, #0]
 80041ca:	687b      	ldr	r3, [r7, #4]
 80041cc:	681b      	ldr	r3, [r3, #0]
 80041ce:	f042 0201 	orr.w	r2, r2, #1
 80041d2:	601a      	str	r2, [r3, #0]
 80041d4:	2300      	movs	r3, #0
 80041d6:	4618      	mov	r0, r3
 80041d8:	3714      	adds	r7, #20
 80041da:	46bd      	mov	sp, r7
 80041dc:	bc80      	pop	{r7}
 80041de:	4770      	bx	lr
 80041e0:	40012c00 	.word	0x40012c00
 80041e4:	40000400 	.word	0x40000400
 80041e8:	40000800 	.word	0x40000800

080041ec <HAL_TIM_IRQHandler>:
 80041ec:	b580      	push	{r7, lr}
 80041ee:	b082      	sub	sp, #8
 80041f0:	af00      	add	r7, sp, #0
 80041f2:	6078      	str	r0, [r7, #4]
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	691b      	ldr	r3, [r3, #16]
 80041fa:	f003 0302 	and.w	r3, r3, #2
 80041fe:	2b02      	cmp	r3, #2
 8004200:	d122      	bne.n	8004248 <HAL_TIM_IRQHandler+0x5c>
 8004202:	687b      	ldr	r3, [r7, #4]
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	68db      	ldr	r3, [r3, #12]
 8004208:	f003 0302 	and.w	r3, r3, #2
 800420c:	2b02      	cmp	r3, #2
 800420e:	d11b      	bne.n	8004248 <HAL_TIM_IRQHandler+0x5c>
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	f06f 0202 	mvn.w	r2, #2
 8004218:	611a      	str	r2, [r3, #16]
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	2201      	movs	r2, #1
 800421e:	771a      	strb	r2, [r3, #28]
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	681b      	ldr	r3, [r3, #0]
 8004224:	699b      	ldr	r3, [r3, #24]
 8004226:	f003 0303 	and.w	r3, r3, #3
 800422a:	2b00      	cmp	r3, #0
 800422c:	d003      	beq.n	8004236 <HAL_TIM_IRQHandler+0x4a>
 800422e:	6878      	ldr	r0, [r7, #4]
 8004230:	f000 f9b1 	bl	8004596 <HAL_TIM_IC_CaptureCallback>
 8004234:	e005      	b.n	8004242 <HAL_TIM_IRQHandler+0x56>
 8004236:	6878      	ldr	r0, [r7, #4]
 8004238:	f000 f9a4 	bl	8004584 <HAL_TIM_OC_DelayElapsedCallback>
 800423c:	6878      	ldr	r0, [r7, #4]
 800423e:	f000 f9b3 	bl	80045a8 <HAL_TIM_PWM_PulseFinishedCallback>
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	2200      	movs	r2, #0
 8004246:	771a      	strb	r2, [r3, #28]
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	691b      	ldr	r3, [r3, #16]
 800424e:	f003 0304 	and.w	r3, r3, #4
 8004252:	2b04      	cmp	r3, #4
 8004254:	d122      	bne.n	800429c <HAL_TIM_IRQHandler+0xb0>
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	68db      	ldr	r3, [r3, #12]
 800425c:	f003 0304 	and.w	r3, r3, #4
 8004260:	2b04      	cmp	r3, #4
 8004262:	d11b      	bne.n	800429c <HAL_TIM_IRQHandler+0xb0>
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	681b      	ldr	r3, [r3, #0]
 8004268:	f06f 0204 	mvn.w	r2, #4
 800426c:	611a      	str	r2, [r3, #16]
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	2202      	movs	r2, #2
 8004272:	771a      	strb	r2, [r3, #28]
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	681b      	ldr	r3, [r3, #0]
 8004278:	699b      	ldr	r3, [r3, #24]
 800427a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800427e:	2b00      	cmp	r3, #0
 8004280:	d003      	beq.n	800428a <HAL_TIM_IRQHandler+0x9e>
 8004282:	6878      	ldr	r0, [r7, #4]
 8004284:	f000 f987 	bl	8004596 <HAL_TIM_IC_CaptureCallback>
 8004288:	e005      	b.n	8004296 <HAL_TIM_IRQHandler+0xaa>
 800428a:	6878      	ldr	r0, [r7, #4]
 800428c:	f000 f97a 	bl	8004584 <HAL_TIM_OC_DelayElapsedCallback>
 8004290:	6878      	ldr	r0, [r7, #4]
 8004292:	f000 f989 	bl	80045a8 <HAL_TIM_PWM_PulseFinishedCallback>
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	2200      	movs	r2, #0
 800429a:	771a      	strb	r2, [r3, #28]
 800429c:	687b      	ldr	r3, [r7, #4]
 800429e:	681b      	ldr	r3, [r3, #0]
 80042a0:	691b      	ldr	r3, [r3, #16]
 80042a2:	f003 0308 	and.w	r3, r3, #8
 80042a6:	2b08      	cmp	r3, #8
 80042a8:	d122      	bne.n	80042f0 <HAL_TIM_IRQHandler+0x104>
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	681b      	ldr	r3, [r3, #0]
 80042ae:	68db      	ldr	r3, [r3, #12]
 80042b0:	f003 0308 	and.w	r3, r3, #8
 80042b4:	2b08      	cmp	r3, #8
 80042b6:	d11b      	bne.n	80042f0 <HAL_TIM_IRQHandler+0x104>
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	681b      	ldr	r3, [r3, #0]
 80042bc:	f06f 0208 	mvn.w	r2, #8
 80042c0:	611a      	str	r2, [r3, #16]
 80042c2:	687b      	ldr	r3, [r7, #4]
 80042c4:	2204      	movs	r2, #4
 80042c6:	771a      	strb	r2, [r3, #28]
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	681b      	ldr	r3, [r3, #0]
 80042cc:	69db      	ldr	r3, [r3, #28]
 80042ce:	f003 0303 	and.w	r3, r3, #3
 80042d2:	2b00      	cmp	r3, #0
 80042d4:	d003      	beq.n	80042de <HAL_TIM_IRQHandler+0xf2>
 80042d6:	6878      	ldr	r0, [r7, #4]
 80042d8:	f000 f95d 	bl	8004596 <HAL_TIM_IC_CaptureCallback>
 80042dc:	e005      	b.n	80042ea <HAL_TIM_IRQHandler+0xfe>
 80042de:	6878      	ldr	r0, [r7, #4]
 80042e0:	f000 f950 	bl	8004584 <HAL_TIM_OC_DelayElapsedCallback>
 80042e4:	6878      	ldr	r0, [r7, #4]
 80042e6:	f000 f95f 	bl	80045a8 <HAL_TIM_PWM_PulseFinishedCallback>
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	2200      	movs	r2, #0
 80042ee:	771a      	strb	r2, [r3, #28]
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	681b      	ldr	r3, [r3, #0]
 80042f4:	691b      	ldr	r3, [r3, #16]
 80042f6:	f003 0310 	and.w	r3, r3, #16
 80042fa:	2b10      	cmp	r3, #16
 80042fc:	d122      	bne.n	8004344 <HAL_TIM_IRQHandler+0x158>
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	681b      	ldr	r3, [r3, #0]
 8004302:	68db      	ldr	r3, [r3, #12]
 8004304:	f003 0310 	and.w	r3, r3, #16
 8004308:	2b10      	cmp	r3, #16
 800430a:	d11b      	bne.n	8004344 <HAL_TIM_IRQHandler+0x158>
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	f06f 0210 	mvn.w	r2, #16
 8004314:	611a      	str	r2, [r3, #16]
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	2208      	movs	r2, #8
 800431a:	771a      	strb	r2, [r3, #28]
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	681b      	ldr	r3, [r3, #0]
 8004320:	69db      	ldr	r3, [r3, #28]
 8004322:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8004326:	2b00      	cmp	r3, #0
 8004328:	d003      	beq.n	8004332 <HAL_TIM_IRQHandler+0x146>
 800432a:	6878      	ldr	r0, [r7, #4]
 800432c:	f000 f933 	bl	8004596 <HAL_TIM_IC_CaptureCallback>
 8004330:	e005      	b.n	800433e <HAL_TIM_IRQHandler+0x152>
 8004332:	6878      	ldr	r0, [r7, #4]
 8004334:	f000 f926 	bl	8004584 <HAL_TIM_OC_DelayElapsedCallback>
 8004338:	6878      	ldr	r0, [r7, #4]
 800433a:	f000 f935 	bl	80045a8 <HAL_TIM_PWM_PulseFinishedCallback>
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	2200      	movs	r2, #0
 8004342:	771a      	strb	r2, [r3, #28]
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	681b      	ldr	r3, [r3, #0]
 8004348:	691b      	ldr	r3, [r3, #16]
 800434a:	f003 0301 	and.w	r3, r3, #1
 800434e:	2b01      	cmp	r3, #1
 8004350:	d10e      	bne.n	8004370 <HAL_TIM_IRQHandler+0x184>
 8004352:	687b      	ldr	r3, [r7, #4]
 8004354:	681b      	ldr	r3, [r3, #0]
 8004356:	68db      	ldr	r3, [r3, #12]
 8004358:	f003 0301 	and.w	r3, r3, #1
 800435c:	2b01      	cmp	r3, #1
 800435e:	d107      	bne.n	8004370 <HAL_TIM_IRQHandler+0x184>
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	681b      	ldr	r3, [r3, #0]
 8004364:	f06f 0201 	mvn.w	r2, #1
 8004368:	611a      	str	r2, [r3, #16]
 800436a:	6878      	ldr	r0, [r7, #4]
 800436c:	f7fd f83c 	bl	80013e8 <HAL_TIM_PeriodElapsedCallback>
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	681b      	ldr	r3, [r3, #0]
 8004374:	691b      	ldr	r3, [r3, #16]
 8004376:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800437a:	2b80      	cmp	r3, #128	; 0x80
 800437c:	d10e      	bne.n	800439c <HAL_TIM_IRQHandler+0x1b0>
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	681b      	ldr	r3, [r3, #0]
 8004382:	68db      	ldr	r3, [r3, #12]
 8004384:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004388:	2b80      	cmp	r3, #128	; 0x80
 800438a:	d107      	bne.n	800439c <HAL_TIM_IRQHandler+0x1b0>
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	681b      	ldr	r3, [r3, #0]
 8004390:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8004394:	611a      	str	r2, [r3, #16]
 8004396:	6878      	ldr	r0, [r7, #4]
 8004398:	f000 fa77 	bl	800488a <HAL_TIMEx_BreakCallback>
 800439c:	687b      	ldr	r3, [r7, #4]
 800439e:	681b      	ldr	r3, [r3, #0]
 80043a0:	691b      	ldr	r3, [r3, #16]
 80043a2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80043a6:	2b40      	cmp	r3, #64	; 0x40
 80043a8:	d10e      	bne.n	80043c8 <HAL_TIM_IRQHandler+0x1dc>
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	68db      	ldr	r3, [r3, #12]
 80043b0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80043b4:	2b40      	cmp	r3, #64	; 0x40
 80043b6:	d107      	bne.n	80043c8 <HAL_TIM_IRQHandler+0x1dc>
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	681b      	ldr	r3, [r3, #0]
 80043bc:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80043c0:	611a      	str	r2, [r3, #16]
 80043c2:	6878      	ldr	r0, [r7, #4]
 80043c4:	f000 f8f9 	bl	80045ba <HAL_TIM_TriggerCallback>
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	681b      	ldr	r3, [r3, #0]
 80043cc:	691b      	ldr	r3, [r3, #16]
 80043ce:	f003 0320 	and.w	r3, r3, #32
 80043d2:	2b20      	cmp	r3, #32
 80043d4:	d10e      	bne.n	80043f4 <HAL_TIM_IRQHandler+0x208>
 80043d6:	687b      	ldr	r3, [r7, #4]
 80043d8:	681b      	ldr	r3, [r3, #0]
 80043da:	68db      	ldr	r3, [r3, #12]
 80043dc:	f003 0320 	and.w	r3, r3, #32
 80043e0:	2b20      	cmp	r3, #32
 80043e2:	d107      	bne.n	80043f4 <HAL_TIM_IRQHandler+0x208>
 80043e4:	687b      	ldr	r3, [r7, #4]
 80043e6:	681b      	ldr	r3, [r3, #0]
 80043e8:	f06f 0220 	mvn.w	r2, #32
 80043ec:	611a      	str	r2, [r3, #16]
 80043ee:	6878      	ldr	r0, [r7, #4]
 80043f0:	f000 fa42 	bl	8004878 <HAL_TIMEx_CommutCallback>
 80043f4:	bf00      	nop
 80043f6:	3708      	adds	r7, #8
 80043f8:	46bd      	mov	sp, r7
 80043fa:	bd80      	pop	{r7, pc}

080043fc <HAL_TIM_ConfigClockSource>:
 80043fc:	b580      	push	{r7, lr}
 80043fe:	b084      	sub	sp, #16
 8004400:	af00      	add	r7, sp, #0
 8004402:	6078      	str	r0, [r7, #4]
 8004404:	6039      	str	r1, [r7, #0]
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800440c:	2b01      	cmp	r3, #1
 800440e:	d101      	bne.n	8004414 <HAL_TIM_ConfigClockSource+0x18>
 8004410:	2302      	movs	r3, #2
 8004412:	e0b3      	b.n	800457c <HAL_TIM_ConfigClockSource+0x180>
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	2201      	movs	r2, #1
 8004418:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800441c:	687b      	ldr	r3, [r7, #4]
 800441e:	2202      	movs	r2, #2
 8004420:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	681b      	ldr	r3, [r3, #0]
 8004428:	689b      	ldr	r3, [r3, #8]
 800442a:	60fb      	str	r3, [r7, #12]
 800442c:	68fb      	ldr	r3, [r7, #12]
 800442e:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8004432:	60fb      	str	r3, [r7, #12]
 8004434:	68fb      	ldr	r3, [r7, #12]
 8004436:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800443a:	60fb      	str	r3, [r7, #12]
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	681b      	ldr	r3, [r3, #0]
 8004440:	68fa      	ldr	r2, [r7, #12]
 8004442:	609a      	str	r2, [r3, #8]
 8004444:	683b      	ldr	r3, [r7, #0]
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800444c:	d03e      	beq.n	80044cc <HAL_TIM_ConfigClockSource+0xd0>
 800444e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8004452:	f200 8087 	bhi.w	8004564 <HAL_TIM_ConfigClockSource+0x168>
 8004456:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800445a:	f000 8085 	beq.w	8004568 <HAL_TIM_ConfigClockSource+0x16c>
 800445e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004462:	d87f      	bhi.n	8004564 <HAL_TIM_ConfigClockSource+0x168>
 8004464:	2b70      	cmp	r3, #112	; 0x70
 8004466:	d01a      	beq.n	800449e <HAL_TIM_ConfigClockSource+0xa2>
 8004468:	2b70      	cmp	r3, #112	; 0x70
 800446a:	d87b      	bhi.n	8004564 <HAL_TIM_ConfigClockSource+0x168>
 800446c:	2b60      	cmp	r3, #96	; 0x60
 800446e:	d050      	beq.n	8004512 <HAL_TIM_ConfigClockSource+0x116>
 8004470:	2b60      	cmp	r3, #96	; 0x60
 8004472:	d877      	bhi.n	8004564 <HAL_TIM_ConfigClockSource+0x168>
 8004474:	2b50      	cmp	r3, #80	; 0x50
 8004476:	d03c      	beq.n	80044f2 <HAL_TIM_ConfigClockSource+0xf6>
 8004478:	2b50      	cmp	r3, #80	; 0x50
 800447a:	d873      	bhi.n	8004564 <HAL_TIM_ConfigClockSource+0x168>
 800447c:	2b40      	cmp	r3, #64	; 0x40
 800447e:	d058      	beq.n	8004532 <HAL_TIM_ConfigClockSource+0x136>
 8004480:	2b40      	cmp	r3, #64	; 0x40
 8004482:	d86f      	bhi.n	8004564 <HAL_TIM_ConfigClockSource+0x168>
 8004484:	2b30      	cmp	r3, #48	; 0x30
 8004486:	d064      	beq.n	8004552 <HAL_TIM_ConfigClockSource+0x156>
 8004488:	2b30      	cmp	r3, #48	; 0x30
 800448a:	d86b      	bhi.n	8004564 <HAL_TIM_ConfigClockSource+0x168>
 800448c:	2b20      	cmp	r3, #32
 800448e:	d060      	beq.n	8004552 <HAL_TIM_ConfigClockSource+0x156>
 8004490:	2b20      	cmp	r3, #32
 8004492:	d867      	bhi.n	8004564 <HAL_TIM_ConfigClockSource+0x168>
 8004494:	2b00      	cmp	r3, #0
 8004496:	d05c      	beq.n	8004552 <HAL_TIM_ConfigClockSource+0x156>
 8004498:	2b10      	cmp	r3, #16
 800449a:	d05a      	beq.n	8004552 <HAL_TIM_ConfigClockSource+0x156>
 800449c:	e062      	b.n	8004564 <HAL_TIM_ConfigClockSource+0x168>
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	6818      	ldr	r0, [r3, #0]
 80044a2:	683b      	ldr	r3, [r7, #0]
 80044a4:	6899      	ldr	r1, [r3, #8]
 80044a6:	683b      	ldr	r3, [r7, #0]
 80044a8:	685a      	ldr	r2, [r3, #4]
 80044aa:	683b      	ldr	r3, [r7, #0]
 80044ac:	68db      	ldr	r3, [r3, #12]
 80044ae:	f000 f966 	bl	800477e <TIM_ETR_SetConfig>
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	681b      	ldr	r3, [r3, #0]
 80044b6:	689b      	ldr	r3, [r3, #8]
 80044b8:	60fb      	str	r3, [r7, #12]
 80044ba:	68fb      	ldr	r3, [r7, #12]
 80044bc:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80044c0:	60fb      	str	r3, [r7, #12]
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	681b      	ldr	r3, [r3, #0]
 80044c6:	68fa      	ldr	r2, [r7, #12]
 80044c8:	609a      	str	r2, [r3, #8]
 80044ca:	e04e      	b.n	800456a <HAL_TIM_ConfigClockSource+0x16e>
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	6818      	ldr	r0, [r3, #0]
 80044d0:	683b      	ldr	r3, [r7, #0]
 80044d2:	6899      	ldr	r1, [r3, #8]
 80044d4:	683b      	ldr	r3, [r7, #0]
 80044d6:	685a      	ldr	r2, [r3, #4]
 80044d8:	683b      	ldr	r3, [r7, #0]
 80044da:	68db      	ldr	r3, [r3, #12]
 80044dc:	f000 f94f 	bl	800477e <TIM_ETR_SetConfig>
 80044e0:	687b      	ldr	r3, [r7, #4]
 80044e2:	681b      	ldr	r3, [r3, #0]
 80044e4:	689a      	ldr	r2, [r3, #8]
 80044e6:	687b      	ldr	r3, [r7, #4]
 80044e8:	681b      	ldr	r3, [r3, #0]
 80044ea:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80044ee:	609a      	str	r2, [r3, #8]
 80044f0:	e03b      	b.n	800456a <HAL_TIM_ConfigClockSource+0x16e>
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	6818      	ldr	r0, [r3, #0]
 80044f6:	683b      	ldr	r3, [r7, #0]
 80044f8:	6859      	ldr	r1, [r3, #4]
 80044fa:	683b      	ldr	r3, [r7, #0]
 80044fc:	68db      	ldr	r3, [r3, #12]
 80044fe:	461a      	mov	r2, r3
 8004500:	f000 f8c6 	bl	8004690 <TIM_TI1_ConfigInputStage>
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	2150      	movs	r1, #80	; 0x50
 800450a:	4618      	mov	r0, r3
 800450c:	f000 f91d 	bl	800474a <TIM_ITRx_SetConfig>
 8004510:	e02b      	b.n	800456a <HAL_TIM_ConfigClockSource+0x16e>
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	6818      	ldr	r0, [r3, #0]
 8004516:	683b      	ldr	r3, [r7, #0]
 8004518:	6859      	ldr	r1, [r3, #4]
 800451a:	683b      	ldr	r3, [r7, #0]
 800451c:	68db      	ldr	r3, [r3, #12]
 800451e:	461a      	mov	r2, r3
 8004520:	f000 f8e4 	bl	80046ec <TIM_TI2_ConfigInputStage>
 8004524:	687b      	ldr	r3, [r7, #4]
 8004526:	681b      	ldr	r3, [r3, #0]
 8004528:	2160      	movs	r1, #96	; 0x60
 800452a:	4618      	mov	r0, r3
 800452c:	f000 f90d 	bl	800474a <TIM_ITRx_SetConfig>
 8004530:	e01b      	b.n	800456a <HAL_TIM_ConfigClockSource+0x16e>
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	6818      	ldr	r0, [r3, #0]
 8004536:	683b      	ldr	r3, [r7, #0]
 8004538:	6859      	ldr	r1, [r3, #4]
 800453a:	683b      	ldr	r3, [r7, #0]
 800453c:	68db      	ldr	r3, [r3, #12]
 800453e:	461a      	mov	r2, r3
 8004540:	f000 f8a6 	bl	8004690 <TIM_TI1_ConfigInputStage>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	2140      	movs	r1, #64	; 0x40
 800454a:	4618      	mov	r0, r3
 800454c:	f000 f8fd 	bl	800474a <TIM_ITRx_SetConfig>
 8004550:	e00b      	b.n	800456a <HAL_TIM_ConfigClockSource+0x16e>
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	681a      	ldr	r2, [r3, #0]
 8004556:	683b      	ldr	r3, [r7, #0]
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	4619      	mov	r1, r3
 800455c:	4610      	mov	r0, r2
 800455e:	f000 f8f4 	bl	800474a <TIM_ITRx_SetConfig>
 8004562:	e002      	b.n	800456a <HAL_TIM_ConfigClockSource+0x16e>
 8004564:	bf00      	nop
 8004566:	e000      	b.n	800456a <HAL_TIM_ConfigClockSource+0x16e>
 8004568:	bf00      	nop
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	2201      	movs	r2, #1
 800456e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004572:	687b      	ldr	r3, [r7, #4]
 8004574:	2200      	movs	r2, #0
 8004576:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800457a:	2300      	movs	r3, #0
 800457c:	4618      	mov	r0, r3
 800457e:	3710      	adds	r7, #16
 8004580:	46bd      	mov	sp, r7
 8004582:	bd80      	pop	{r7, pc}

08004584 <HAL_TIM_OC_DelayElapsedCallback>:
 8004584:	b480      	push	{r7}
 8004586:	b083      	sub	sp, #12
 8004588:	af00      	add	r7, sp, #0
 800458a:	6078      	str	r0, [r7, #4]
 800458c:	bf00      	nop
 800458e:	370c      	adds	r7, #12
 8004590:	46bd      	mov	sp, r7
 8004592:	bc80      	pop	{r7}
 8004594:	4770      	bx	lr

08004596 <HAL_TIM_IC_CaptureCallback>:
 8004596:	b480      	push	{r7}
 8004598:	b083      	sub	sp, #12
 800459a:	af00      	add	r7, sp, #0
 800459c:	6078      	str	r0, [r7, #4]
 800459e:	bf00      	nop
 80045a0:	370c      	adds	r7, #12
 80045a2:	46bd      	mov	sp, r7
 80045a4:	bc80      	pop	{r7}
 80045a6:	4770      	bx	lr

080045a8 <HAL_TIM_PWM_PulseFinishedCallback>:
 80045a8:	b480      	push	{r7}
 80045aa:	b083      	sub	sp, #12
 80045ac:	af00      	add	r7, sp, #0
 80045ae:	6078      	str	r0, [r7, #4]
 80045b0:	bf00      	nop
 80045b2:	370c      	adds	r7, #12
 80045b4:	46bd      	mov	sp, r7
 80045b6:	bc80      	pop	{r7}
 80045b8:	4770      	bx	lr

080045ba <HAL_TIM_TriggerCallback>:
 80045ba:	b480      	push	{r7}
 80045bc:	b083      	sub	sp, #12
 80045be:	af00      	add	r7, sp, #0
 80045c0:	6078      	str	r0, [r7, #4]
 80045c2:	bf00      	nop
 80045c4:	370c      	adds	r7, #12
 80045c6:	46bd      	mov	sp, r7
 80045c8:	bc80      	pop	{r7}
 80045ca:	4770      	bx	lr

080045cc <TIM_Base_SetConfig>:
 80045cc:	b480      	push	{r7}
 80045ce:	b085      	sub	sp, #20
 80045d0:	af00      	add	r7, sp, #0
 80045d2:	6078      	str	r0, [r7, #4]
 80045d4:	6039      	str	r1, [r7, #0]
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	60fb      	str	r3, [r7, #12]
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	4a29      	ldr	r2, [pc, #164]	; (8004684 <TIM_Base_SetConfig+0xb8>)
 80045e0:	4293      	cmp	r3, r2
 80045e2:	d00b      	beq.n	80045fc <TIM_Base_SetConfig+0x30>
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80045ea:	d007      	beq.n	80045fc <TIM_Base_SetConfig+0x30>
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	4a26      	ldr	r2, [pc, #152]	; (8004688 <TIM_Base_SetConfig+0xbc>)
 80045f0:	4293      	cmp	r3, r2
 80045f2:	d003      	beq.n	80045fc <TIM_Base_SetConfig+0x30>
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	4a25      	ldr	r2, [pc, #148]	; (800468c <TIM_Base_SetConfig+0xc0>)
 80045f8:	4293      	cmp	r3, r2
 80045fa:	d108      	bne.n	800460e <TIM_Base_SetConfig+0x42>
 80045fc:	68fb      	ldr	r3, [r7, #12]
 80045fe:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004602:	60fb      	str	r3, [r7, #12]
 8004604:	683b      	ldr	r3, [r7, #0]
 8004606:	685b      	ldr	r3, [r3, #4]
 8004608:	68fa      	ldr	r2, [r7, #12]
 800460a:	4313      	orrs	r3, r2
 800460c:	60fb      	str	r3, [r7, #12]
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	4a1c      	ldr	r2, [pc, #112]	; (8004684 <TIM_Base_SetConfig+0xb8>)
 8004612:	4293      	cmp	r3, r2
 8004614:	d00b      	beq.n	800462e <TIM_Base_SetConfig+0x62>
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800461c:	d007      	beq.n	800462e <TIM_Base_SetConfig+0x62>
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	4a19      	ldr	r2, [pc, #100]	; (8004688 <TIM_Base_SetConfig+0xbc>)
 8004622:	4293      	cmp	r3, r2
 8004624:	d003      	beq.n	800462e <TIM_Base_SetConfig+0x62>
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	4a18      	ldr	r2, [pc, #96]	; (800468c <TIM_Base_SetConfig+0xc0>)
 800462a:	4293      	cmp	r3, r2
 800462c:	d108      	bne.n	8004640 <TIM_Base_SetConfig+0x74>
 800462e:	68fb      	ldr	r3, [r7, #12]
 8004630:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8004634:	60fb      	str	r3, [r7, #12]
 8004636:	683b      	ldr	r3, [r7, #0]
 8004638:	68db      	ldr	r3, [r3, #12]
 800463a:	68fa      	ldr	r2, [r7, #12]
 800463c:	4313      	orrs	r3, r2
 800463e:	60fb      	str	r3, [r7, #12]
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8004646:	683b      	ldr	r3, [r7, #0]
 8004648:	695b      	ldr	r3, [r3, #20]
 800464a:	4313      	orrs	r3, r2
 800464c:	60fb      	str	r3, [r7, #12]
 800464e:	687b      	ldr	r3, [r7, #4]
 8004650:	68fa      	ldr	r2, [r7, #12]
 8004652:	601a      	str	r2, [r3, #0]
 8004654:	683b      	ldr	r3, [r7, #0]
 8004656:	689a      	ldr	r2, [r3, #8]
 8004658:	687b      	ldr	r3, [r7, #4]
 800465a:	62da      	str	r2, [r3, #44]	; 0x2c
 800465c:	683b      	ldr	r3, [r7, #0]
 800465e:	681a      	ldr	r2, [r3, #0]
 8004660:	687b      	ldr	r3, [r7, #4]
 8004662:	629a      	str	r2, [r3, #40]	; 0x28
 8004664:	687b      	ldr	r3, [r7, #4]
 8004666:	4a07      	ldr	r2, [pc, #28]	; (8004684 <TIM_Base_SetConfig+0xb8>)
 8004668:	4293      	cmp	r3, r2
 800466a:	d103      	bne.n	8004674 <TIM_Base_SetConfig+0xa8>
 800466c:	683b      	ldr	r3, [r7, #0]
 800466e:	691a      	ldr	r2, [r3, #16]
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	631a      	str	r2, [r3, #48]	; 0x30
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	2201      	movs	r2, #1
 8004678:	615a      	str	r2, [r3, #20]
 800467a:	bf00      	nop
 800467c:	3714      	adds	r7, #20
 800467e:	46bd      	mov	sp, r7
 8004680:	bc80      	pop	{r7}
 8004682:	4770      	bx	lr
 8004684:	40012c00 	.word	0x40012c00
 8004688:	40000400 	.word	0x40000400
 800468c:	40000800 	.word	0x40000800

08004690 <TIM_TI1_ConfigInputStage>:
 8004690:	b480      	push	{r7}
 8004692:	b087      	sub	sp, #28
 8004694:	af00      	add	r7, sp, #0
 8004696:	60f8      	str	r0, [r7, #12]
 8004698:	60b9      	str	r1, [r7, #8]
 800469a:	607a      	str	r2, [r7, #4]
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	6a1b      	ldr	r3, [r3, #32]
 80046a0:	617b      	str	r3, [r7, #20]
 80046a2:	68fb      	ldr	r3, [r7, #12]
 80046a4:	6a1b      	ldr	r3, [r3, #32]
 80046a6:	f023 0201 	bic.w	r2, r3, #1
 80046aa:	68fb      	ldr	r3, [r7, #12]
 80046ac:	621a      	str	r2, [r3, #32]
 80046ae:	68fb      	ldr	r3, [r7, #12]
 80046b0:	699b      	ldr	r3, [r3, #24]
 80046b2:	613b      	str	r3, [r7, #16]
 80046b4:	693b      	ldr	r3, [r7, #16]
 80046b6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80046ba:	613b      	str	r3, [r7, #16]
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	011b      	lsls	r3, r3, #4
 80046c0:	693a      	ldr	r2, [r7, #16]
 80046c2:	4313      	orrs	r3, r2
 80046c4:	613b      	str	r3, [r7, #16]
 80046c6:	697b      	ldr	r3, [r7, #20]
 80046c8:	f023 030a 	bic.w	r3, r3, #10
 80046cc:	617b      	str	r3, [r7, #20]
 80046ce:	697a      	ldr	r2, [r7, #20]
 80046d0:	68bb      	ldr	r3, [r7, #8]
 80046d2:	4313      	orrs	r3, r2
 80046d4:	617b      	str	r3, [r7, #20]
 80046d6:	68fb      	ldr	r3, [r7, #12]
 80046d8:	693a      	ldr	r2, [r7, #16]
 80046da:	619a      	str	r2, [r3, #24]
 80046dc:	68fb      	ldr	r3, [r7, #12]
 80046de:	697a      	ldr	r2, [r7, #20]
 80046e0:	621a      	str	r2, [r3, #32]
 80046e2:	bf00      	nop
 80046e4:	371c      	adds	r7, #28
 80046e6:	46bd      	mov	sp, r7
 80046e8:	bc80      	pop	{r7}
 80046ea:	4770      	bx	lr

080046ec <TIM_TI2_ConfigInputStage>:
 80046ec:	b480      	push	{r7}
 80046ee:	b087      	sub	sp, #28
 80046f0:	af00      	add	r7, sp, #0
 80046f2:	60f8      	str	r0, [r7, #12]
 80046f4:	60b9      	str	r1, [r7, #8]
 80046f6:	607a      	str	r2, [r7, #4]
 80046f8:	68fb      	ldr	r3, [r7, #12]
 80046fa:	6a1b      	ldr	r3, [r3, #32]
 80046fc:	f023 0210 	bic.w	r2, r3, #16
 8004700:	68fb      	ldr	r3, [r7, #12]
 8004702:	621a      	str	r2, [r3, #32]
 8004704:	68fb      	ldr	r3, [r7, #12]
 8004706:	699b      	ldr	r3, [r3, #24]
 8004708:	617b      	str	r3, [r7, #20]
 800470a:	68fb      	ldr	r3, [r7, #12]
 800470c:	6a1b      	ldr	r3, [r3, #32]
 800470e:	613b      	str	r3, [r7, #16]
 8004710:	697b      	ldr	r3, [r7, #20]
 8004712:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8004716:	617b      	str	r3, [r7, #20]
 8004718:	687b      	ldr	r3, [r7, #4]
 800471a:	031b      	lsls	r3, r3, #12
 800471c:	697a      	ldr	r2, [r7, #20]
 800471e:	4313      	orrs	r3, r2
 8004720:	617b      	str	r3, [r7, #20]
 8004722:	693b      	ldr	r3, [r7, #16]
 8004724:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004728:	613b      	str	r3, [r7, #16]
 800472a:	68bb      	ldr	r3, [r7, #8]
 800472c:	011b      	lsls	r3, r3, #4
 800472e:	693a      	ldr	r2, [r7, #16]
 8004730:	4313      	orrs	r3, r2
 8004732:	613b      	str	r3, [r7, #16]
 8004734:	68fb      	ldr	r3, [r7, #12]
 8004736:	697a      	ldr	r2, [r7, #20]
 8004738:	619a      	str	r2, [r3, #24]
 800473a:	68fb      	ldr	r3, [r7, #12]
 800473c:	693a      	ldr	r2, [r7, #16]
 800473e:	621a      	str	r2, [r3, #32]
 8004740:	bf00      	nop
 8004742:	371c      	adds	r7, #28
 8004744:	46bd      	mov	sp, r7
 8004746:	bc80      	pop	{r7}
 8004748:	4770      	bx	lr

0800474a <TIM_ITRx_SetConfig>:
 800474a:	b480      	push	{r7}
 800474c:	b085      	sub	sp, #20
 800474e:	af00      	add	r7, sp, #0
 8004750:	6078      	str	r0, [r7, #4]
 8004752:	6039      	str	r1, [r7, #0]
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	689b      	ldr	r3, [r3, #8]
 8004758:	60fb      	str	r3, [r7, #12]
 800475a:	68fb      	ldr	r3, [r7, #12]
 800475c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004760:	60fb      	str	r3, [r7, #12]
 8004762:	683a      	ldr	r2, [r7, #0]
 8004764:	68fb      	ldr	r3, [r7, #12]
 8004766:	4313      	orrs	r3, r2
 8004768:	f043 0307 	orr.w	r3, r3, #7
 800476c:	60fb      	str	r3, [r7, #12]
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	68fa      	ldr	r2, [r7, #12]
 8004772:	609a      	str	r2, [r3, #8]
 8004774:	bf00      	nop
 8004776:	3714      	adds	r7, #20
 8004778:	46bd      	mov	sp, r7
 800477a:	bc80      	pop	{r7}
 800477c:	4770      	bx	lr

0800477e <TIM_ETR_SetConfig>:
 800477e:	b480      	push	{r7}
 8004780:	b087      	sub	sp, #28
 8004782:	af00      	add	r7, sp, #0
 8004784:	60f8      	str	r0, [r7, #12]
 8004786:	60b9      	str	r1, [r7, #8]
 8004788:	607a      	str	r2, [r7, #4]
 800478a:	603b      	str	r3, [r7, #0]
 800478c:	68fb      	ldr	r3, [r7, #12]
 800478e:	689b      	ldr	r3, [r3, #8]
 8004790:	617b      	str	r3, [r7, #20]
 8004792:	697b      	ldr	r3, [r7, #20]
 8004794:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004798:	617b      	str	r3, [r7, #20]
 800479a:	683b      	ldr	r3, [r7, #0]
 800479c:	021a      	lsls	r2, r3, #8
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	431a      	orrs	r2, r3
 80047a2:	68bb      	ldr	r3, [r7, #8]
 80047a4:	4313      	orrs	r3, r2
 80047a6:	697a      	ldr	r2, [r7, #20]
 80047a8:	4313      	orrs	r3, r2
 80047aa:	617b      	str	r3, [r7, #20]
 80047ac:	68fb      	ldr	r3, [r7, #12]
 80047ae:	697a      	ldr	r2, [r7, #20]
 80047b0:	609a      	str	r2, [r3, #8]
 80047b2:	bf00      	nop
 80047b4:	371c      	adds	r7, #28
 80047b6:	46bd      	mov	sp, r7
 80047b8:	bc80      	pop	{r7}
 80047ba:	4770      	bx	lr

080047bc <HAL_TIMEx_MasterConfigSynchronization>:
 80047bc:	b480      	push	{r7}
 80047be:	b085      	sub	sp, #20
 80047c0:	af00      	add	r7, sp, #0
 80047c2:	6078      	str	r0, [r7, #4]
 80047c4:	6039      	str	r1, [r7, #0]
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80047cc:	2b01      	cmp	r3, #1
 80047ce:	d101      	bne.n	80047d4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80047d0:	2302      	movs	r3, #2
 80047d2:	e046      	b.n	8004862 <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	2201      	movs	r2, #1
 80047d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	2202      	movs	r2, #2
 80047e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80047e4:	687b      	ldr	r3, [r7, #4]
 80047e6:	681b      	ldr	r3, [r3, #0]
 80047e8:	685b      	ldr	r3, [r3, #4]
 80047ea:	60fb      	str	r3, [r7, #12]
 80047ec:	687b      	ldr	r3, [r7, #4]
 80047ee:	681b      	ldr	r3, [r3, #0]
 80047f0:	689b      	ldr	r3, [r3, #8]
 80047f2:	60bb      	str	r3, [r7, #8]
 80047f4:	68fb      	ldr	r3, [r7, #12]
 80047f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80047fa:	60fb      	str	r3, [r7, #12]
 80047fc:	683b      	ldr	r3, [r7, #0]
 80047fe:	681b      	ldr	r3, [r3, #0]
 8004800:	68fa      	ldr	r2, [r7, #12]
 8004802:	4313      	orrs	r3, r2
 8004804:	60fb      	str	r3, [r7, #12]
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	681b      	ldr	r3, [r3, #0]
 800480a:	68fa      	ldr	r2, [r7, #12]
 800480c:	605a      	str	r2, [r3, #4]
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	681b      	ldr	r3, [r3, #0]
 8004812:	4a16      	ldr	r2, [pc, #88]	; (800486c <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8004814:	4293      	cmp	r3, r2
 8004816:	d00e      	beq.n	8004836 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	681b      	ldr	r3, [r3, #0]
 800481c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004820:	d009      	beq.n	8004836 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8004822:	687b      	ldr	r3, [r7, #4]
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	4a12      	ldr	r2, [pc, #72]	; (8004870 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8004828:	4293      	cmp	r3, r2
 800482a:	d004      	beq.n	8004836 <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	681b      	ldr	r3, [r3, #0]
 8004830:	4a10      	ldr	r2, [pc, #64]	; (8004874 <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8004832:	4293      	cmp	r3, r2
 8004834:	d10c      	bne.n	8004850 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8004836:	68bb      	ldr	r3, [r7, #8]
 8004838:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800483c:	60bb      	str	r3, [r7, #8]
 800483e:	683b      	ldr	r3, [r7, #0]
 8004840:	685b      	ldr	r3, [r3, #4]
 8004842:	68ba      	ldr	r2, [r7, #8]
 8004844:	4313      	orrs	r3, r2
 8004846:	60bb      	str	r3, [r7, #8]
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	681b      	ldr	r3, [r3, #0]
 800484c:	68ba      	ldr	r2, [r7, #8]
 800484e:	609a      	str	r2, [r3, #8]
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	2201      	movs	r2, #1
 8004854:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	2200      	movs	r2, #0
 800485c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004860:	2300      	movs	r3, #0
 8004862:	4618      	mov	r0, r3
 8004864:	3714      	adds	r7, #20
 8004866:	46bd      	mov	sp, r7
 8004868:	bc80      	pop	{r7}
 800486a:	4770      	bx	lr
 800486c:	40012c00 	.word	0x40012c00
 8004870:	40000400 	.word	0x40000400
 8004874:	40000800 	.word	0x40000800

08004878 <HAL_TIMEx_CommutCallback>:
 8004878:	b480      	push	{r7}
 800487a:	b083      	sub	sp, #12
 800487c:	af00      	add	r7, sp, #0
 800487e:	6078      	str	r0, [r7, #4]
 8004880:	bf00      	nop
 8004882:	370c      	adds	r7, #12
 8004884:	46bd      	mov	sp, r7
 8004886:	bc80      	pop	{r7}
 8004888:	4770      	bx	lr

0800488a <HAL_TIMEx_BreakCallback>:
 800488a:	b480      	push	{r7}
 800488c:	b083      	sub	sp, #12
 800488e:	af00      	add	r7, sp, #0
 8004890:	6078      	str	r0, [r7, #4]
 8004892:	bf00      	nop
 8004894:	370c      	adds	r7, #12
 8004896:	46bd      	mov	sp, r7
 8004898:	bc80      	pop	{r7}
 800489a:	4770      	bx	lr

0800489c <HAL_UART_Init>:
 800489c:	b580      	push	{r7, lr}
 800489e:	b082      	sub	sp, #8
 80048a0:	af00      	add	r7, sp, #0
 80048a2:	6078      	str	r0, [r7, #4]
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	2b00      	cmp	r3, #0
 80048a8:	d101      	bne.n	80048ae <HAL_UART_Init+0x12>
 80048aa:	2301      	movs	r3, #1
 80048ac:	e03f      	b.n	800492e <HAL_UART_Init+0x92>
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80048b4:	b2db      	uxtb	r3, r3
 80048b6:	2b00      	cmp	r3, #0
 80048b8:	d106      	bne.n	80048c8 <HAL_UART_Init+0x2c>
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	2200      	movs	r2, #0
 80048be:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80048c2:	6878      	ldr	r0, [r7, #4]
 80048c4:	f7fc ff6a 	bl	800179c <HAL_UART_MspInit>
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	2224      	movs	r2, #36	; 0x24
 80048cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	68da      	ldr	r2, [r3, #12]
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80048de:	60da      	str	r2, [r3, #12]
 80048e0:	6878      	ldr	r0, [r7, #4]
 80048e2:	f000 fc85 	bl	80051f0 <UART_SetConfig>
 80048e6:	687b      	ldr	r3, [r7, #4]
 80048e8:	681b      	ldr	r3, [r3, #0]
 80048ea:	691a      	ldr	r2, [r3, #16]
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80048f4:	611a      	str	r2, [r3, #16]
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	681b      	ldr	r3, [r3, #0]
 80048fa:	695a      	ldr	r2, [r3, #20]
 80048fc:	687b      	ldr	r3, [r7, #4]
 80048fe:	681b      	ldr	r3, [r3, #0]
 8004900:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8004904:	615a      	str	r2, [r3, #20]
 8004906:	687b      	ldr	r3, [r7, #4]
 8004908:	681b      	ldr	r3, [r3, #0]
 800490a:	68da      	ldr	r2, [r3, #12]
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	681b      	ldr	r3, [r3, #0]
 8004910:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8004914:	60da      	str	r2, [r3, #12]
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	2200      	movs	r2, #0
 800491a:	641a      	str	r2, [r3, #64]	; 0x40
 800491c:	687b      	ldr	r3, [r7, #4]
 800491e:	2220      	movs	r2, #32
 8004920:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	2220      	movs	r2, #32
 8004928:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800492c:	2300      	movs	r3, #0
 800492e:	4618      	mov	r0, r3
 8004930:	3708      	adds	r7, #8
 8004932:	46bd      	mov	sp, r7
 8004934:	bd80      	pop	{r7, pc}

08004936 <HAL_UART_Transmit>:
 8004936:	b580      	push	{r7, lr}
 8004938:	b08a      	sub	sp, #40	; 0x28
 800493a:	af02      	add	r7, sp, #8
 800493c:	60f8      	str	r0, [r7, #12]
 800493e:	60b9      	str	r1, [r7, #8]
 8004940:	603b      	str	r3, [r7, #0]
 8004942:	4613      	mov	r3, r2
 8004944:	80fb      	strh	r3, [r7, #6]
 8004946:	2300      	movs	r3, #0
 8004948:	617b      	str	r3, [r7, #20]
 800494a:	68fb      	ldr	r3, [r7, #12]
 800494c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004950:	b2db      	uxtb	r3, r3
 8004952:	2b20      	cmp	r3, #32
 8004954:	d17c      	bne.n	8004a50 <HAL_UART_Transmit+0x11a>
 8004956:	68bb      	ldr	r3, [r7, #8]
 8004958:	2b00      	cmp	r3, #0
 800495a:	d002      	beq.n	8004962 <HAL_UART_Transmit+0x2c>
 800495c:	88fb      	ldrh	r3, [r7, #6]
 800495e:	2b00      	cmp	r3, #0
 8004960:	d101      	bne.n	8004966 <HAL_UART_Transmit+0x30>
 8004962:	2301      	movs	r3, #1
 8004964:	e075      	b.n	8004a52 <HAL_UART_Transmit+0x11c>
 8004966:	68fb      	ldr	r3, [r7, #12]
 8004968:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800496c:	2b01      	cmp	r3, #1
 800496e:	d101      	bne.n	8004974 <HAL_UART_Transmit+0x3e>
 8004970:	2302      	movs	r3, #2
 8004972:	e06e      	b.n	8004a52 <HAL_UART_Transmit+0x11c>
 8004974:	68fb      	ldr	r3, [r7, #12]
 8004976:	2201      	movs	r2, #1
 8004978:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800497c:	68fb      	ldr	r3, [r7, #12]
 800497e:	2200      	movs	r2, #0
 8004980:	641a      	str	r2, [r3, #64]	; 0x40
 8004982:	68fb      	ldr	r3, [r7, #12]
 8004984:	2221      	movs	r2, #33	; 0x21
 8004986:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800498a:	f7fd faef 	bl	8001f6c <HAL_GetTick>
 800498e:	6178      	str	r0, [r7, #20]
 8004990:	68fb      	ldr	r3, [r7, #12]
 8004992:	88fa      	ldrh	r2, [r7, #6]
 8004994:	849a      	strh	r2, [r3, #36]	; 0x24
 8004996:	68fb      	ldr	r3, [r7, #12]
 8004998:	88fa      	ldrh	r2, [r7, #6]
 800499a:	84da      	strh	r2, [r3, #38]	; 0x26
 800499c:	68fb      	ldr	r3, [r7, #12]
 800499e:	689b      	ldr	r3, [r3, #8]
 80049a0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80049a4:	d108      	bne.n	80049b8 <HAL_UART_Transmit+0x82>
 80049a6:	68fb      	ldr	r3, [r7, #12]
 80049a8:	691b      	ldr	r3, [r3, #16]
 80049aa:	2b00      	cmp	r3, #0
 80049ac:	d104      	bne.n	80049b8 <HAL_UART_Transmit+0x82>
 80049ae:	2300      	movs	r3, #0
 80049b0:	61fb      	str	r3, [r7, #28]
 80049b2:	68bb      	ldr	r3, [r7, #8]
 80049b4:	61bb      	str	r3, [r7, #24]
 80049b6:	e003      	b.n	80049c0 <HAL_UART_Transmit+0x8a>
 80049b8:	68bb      	ldr	r3, [r7, #8]
 80049ba:	61fb      	str	r3, [r7, #28]
 80049bc:	2300      	movs	r3, #0
 80049be:	61bb      	str	r3, [r7, #24]
 80049c0:	68fb      	ldr	r3, [r7, #12]
 80049c2:	2200      	movs	r2, #0
 80049c4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80049c8:	e02a      	b.n	8004a20 <HAL_UART_Transmit+0xea>
 80049ca:	683b      	ldr	r3, [r7, #0]
 80049cc:	9300      	str	r3, [sp, #0]
 80049ce:	697b      	ldr	r3, [r7, #20]
 80049d0:	2200      	movs	r2, #0
 80049d2:	2180      	movs	r1, #128	; 0x80
 80049d4:	68f8      	ldr	r0, [r7, #12]
 80049d6:	f000 fa38 	bl	8004e4a <UART_WaitOnFlagUntilTimeout>
 80049da:	4603      	mov	r3, r0
 80049dc:	2b00      	cmp	r3, #0
 80049de:	d001      	beq.n	80049e4 <HAL_UART_Transmit+0xae>
 80049e0:	2303      	movs	r3, #3
 80049e2:	e036      	b.n	8004a52 <HAL_UART_Transmit+0x11c>
 80049e4:	69fb      	ldr	r3, [r7, #28]
 80049e6:	2b00      	cmp	r3, #0
 80049e8:	d10b      	bne.n	8004a02 <HAL_UART_Transmit+0xcc>
 80049ea:	69bb      	ldr	r3, [r7, #24]
 80049ec:	881b      	ldrh	r3, [r3, #0]
 80049ee:	461a      	mov	r2, r3
 80049f0:	68fb      	ldr	r3, [r7, #12]
 80049f2:	681b      	ldr	r3, [r3, #0]
 80049f4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80049f8:	605a      	str	r2, [r3, #4]
 80049fa:	69bb      	ldr	r3, [r7, #24]
 80049fc:	3302      	adds	r3, #2
 80049fe:	61bb      	str	r3, [r7, #24]
 8004a00:	e007      	b.n	8004a12 <HAL_UART_Transmit+0xdc>
 8004a02:	69fb      	ldr	r3, [r7, #28]
 8004a04:	781a      	ldrb	r2, [r3, #0]
 8004a06:	68fb      	ldr	r3, [r7, #12]
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	605a      	str	r2, [r3, #4]
 8004a0c:	69fb      	ldr	r3, [r7, #28]
 8004a0e:	3301      	adds	r3, #1
 8004a10:	61fb      	str	r3, [r7, #28]
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004a16:	b29b      	uxth	r3, r3
 8004a18:	3b01      	subs	r3, #1
 8004a1a:	b29a      	uxth	r2, r3
 8004a1c:	68fb      	ldr	r3, [r7, #12]
 8004a1e:	84da      	strh	r2, [r3, #38]	; 0x26
 8004a20:	68fb      	ldr	r3, [r7, #12]
 8004a22:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004a24:	b29b      	uxth	r3, r3
 8004a26:	2b00      	cmp	r3, #0
 8004a28:	d1cf      	bne.n	80049ca <HAL_UART_Transmit+0x94>
 8004a2a:	683b      	ldr	r3, [r7, #0]
 8004a2c:	9300      	str	r3, [sp, #0]
 8004a2e:	697b      	ldr	r3, [r7, #20]
 8004a30:	2200      	movs	r2, #0
 8004a32:	2140      	movs	r1, #64	; 0x40
 8004a34:	68f8      	ldr	r0, [r7, #12]
 8004a36:	f000 fa08 	bl	8004e4a <UART_WaitOnFlagUntilTimeout>
 8004a3a:	4603      	mov	r3, r0
 8004a3c:	2b00      	cmp	r3, #0
 8004a3e:	d001      	beq.n	8004a44 <HAL_UART_Transmit+0x10e>
 8004a40:	2303      	movs	r3, #3
 8004a42:	e006      	b.n	8004a52 <HAL_UART_Transmit+0x11c>
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	2220      	movs	r2, #32
 8004a48:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004a4c:	2300      	movs	r3, #0
 8004a4e:	e000      	b.n	8004a52 <HAL_UART_Transmit+0x11c>
 8004a50:	2302      	movs	r3, #2
 8004a52:	4618      	mov	r0, r3
 8004a54:	3720      	adds	r7, #32
 8004a56:	46bd      	mov	sp, r7
 8004a58:	bd80      	pop	{r7, pc}

08004a5a <HAL_UART_Receive_IT>:
 8004a5a:	b580      	push	{r7, lr}
 8004a5c:	b084      	sub	sp, #16
 8004a5e:	af00      	add	r7, sp, #0
 8004a60:	60f8      	str	r0, [r7, #12]
 8004a62:	60b9      	str	r1, [r7, #8]
 8004a64:	4613      	mov	r3, r2
 8004a66:	80fb      	strh	r3, [r7, #6]
 8004a68:	68fb      	ldr	r3, [r7, #12]
 8004a6a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004a6e:	b2db      	uxtb	r3, r3
 8004a70:	2b20      	cmp	r3, #32
 8004a72:	d11d      	bne.n	8004ab0 <HAL_UART_Receive_IT+0x56>
 8004a74:	68bb      	ldr	r3, [r7, #8]
 8004a76:	2b00      	cmp	r3, #0
 8004a78:	d002      	beq.n	8004a80 <HAL_UART_Receive_IT+0x26>
 8004a7a:	88fb      	ldrh	r3, [r7, #6]
 8004a7c:	2b00      	cmp	r3, #0
 8004a7e:	d101      	bne.n	8004a84 <HAL_UART_Receive_IT+0x2a>
 8004a80:	2301      	movs	r3, #1
 8004a82:	e016      	b.n	8004ab2 <HAL_UART_Receive_IT+0x58>
 8004a84:	68fb      	ldr	r3, [r7, #12]
 8004a86:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8004a8a:	2b01      	cmp	r3, #1
 8004a8c:	d101      	bne.n	8004a92 <HAL_UART_Receive_IT+0x38>
 8004a8e:	2302      	movs	r3, #2
 8004a90:	e00f      	b.n	8004ab2 <HAL_UART_Receive_IT+0x58>
 8004a92:	68fb      	ldr	r3, [r7, #12]
 8004a94:	2201      	movs	r2, #1
 8004a96:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004a9a:	68fb      	ldr	r3, [r7, #12]
 8004a9c:	2200      	movs	r2, #0
 8004a9e:	631a      	str	r2, [r3, #48]	; 0x30
 8004aa0:	88fb      	ldrh	r3, [r7, #6]
 8004aa2:	461a      	mov	r2, r3
 8004aa4:	68b9      	ldr	r1, [r7, #8]
 8004aa6:	68f8      	ldr	r0, [r7, #12]
 8004aa8:	f000 fa19 	bl	8004ede <UART_Start_Receive_IT>
 8004aac:	4603      	mov	r3, r0
 8004aae:	e000      	b.n	8004ab2 <HAL_UART_Receive_IT+0x58>
 8004ab0:	2302      	movs	r3, #2
 8004ab2:	4618      	mov	r0, r3
 8004ab4:	3710      	adds	r7, #16
 8004ab6:	46bd      	mov	sp, r7
 8004ab8:	bd80      	pop	{r7, pc}
	...

08004abc <HAL_UART_IRQHandler>:
 8004abc:	b580      	push	{r7, lr}
 8004abe:	b08a      	sub	sp, #40	; 0x28
 8004ac0:	af00      	add	r7, sp, #0
 8004ac2:	6078      	str	r0, [r7, #4]
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	681b      	ldr	r3, [r3, #0]
 8004ac8:	681b      	ldr	r3, [r3, #0]
 8004aca:	627b      	str	r3, [r7, #36]	; 0x24
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	681b      	ldr	r3, [r3, #0]
 8004ad0:	68db      	ldr	r3, [r3, #12]
 8004ad2:	623b      	str	r3, [r7, #32]
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	695b      	ldr	r3, [r3, #20]
 8004ada:	61fb      	str	r3, [r7, #28]
 8004adc:	2300      	movs	r3, #0
 8004ade:	61bb      	str	r3, [r7, #24]
 8004ae0:	2300      	movs	r3, #0
 8004ae2:	617b      	str	r3, [r7, #20]
 8004ae4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004ae6:	f003 030f 	and.w	r3, r3, #15
 8004aea:	61bb      	str	r3, [r7, #24]
 8004aec:	69bb      	ldr	r3, [r7, #24]
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	d10d      	bne.n	8004b0e <HAL_UART_IRQHandler+0x52>
 8004af2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004af4:	f003 0320 	and.w	r3, r3, #32
 8004af8:	2b00      	cmp	r3, #0
 8004afa:	d008      	beq.n	8004b0e <HAL_UART_IRQHandler+0x52>
 8004afc:	6a3b      	ldr	r3, [r7, #32]
 8004afe:	f003 0320 	and.w	r3, r3, #32
 8004b02:	2b00      	cmp	r3, #0
 8004b04:	d003      	beq.n	8004b0e <HAL_UART_IRQHandler+0x52>
 8004b06:	6878      	ldr	r0, [r7, #4]
 8004b08:	f000 fac9 	bl	800509e <UART_Receive_IT>
 8004b0c:	e17b      	b.n	8004e06 <HAL_UART_IRQHandler+0x34a>
 8004b0e:	69bb      	ldr	r3, [r7, #24]
 8004b10:	2b00      	cmp	r3, #0
 8004b12:	f000 80b1 	beq.w	8004c78 <HAL_UART_IRQHandler+0x1bc>
 8004b16:	69fb      	ldr	r3, [r7, #28]
 8004b18:	f003 0301 	and.w	r3, r3, #1
 8004b1c:	2b00      	cmp	r3, #0
 8004b1e:	d105      	bne.n	8004b2c <HAL_UART_IRQHandler+0x70>
 8004b20:	6a3b      	ldr	r3, [r7, #32]
 8004b22:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8004b26:	2b00      	cmp	r3, #0
 8004b28:	f000 80a6 	beq.w	8004c78 <HAL_UART_IRQHandler+0x1bc>
 8004b2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b2e:	f003 0301 	and.w	r3, r3, #1
 8004b32:	2b00      	cmp	r3, #0
 8004b34:	d00a      	beq.n	8004b4c <HAL_UART_IRQHandler+0x90>
 8004b36:	6a3b      	ldr	r3, [r7, #32]
 8004b38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004b3c:	2b00      	cmp	r3, #0
 8004b3e:	d005      	beq.n	8004b4c <HAL_UART_IRQHandler+0x90>
 8004b40:	687b      	ldr	r3, [r7, #4]
 8004b42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b44:	f043 0201 	orr.w	r2, r3, #1
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	641a      	str	r2, [r3, #64]	; 0x40
 8004b4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b4e:	f003 0304 	and.w	r3, r3, #4
 8004b52:	2b00      	cmp	r3, #0
 8004b54:	d00a      	beq.n	8004b6c <HAL_UART_IRQHandler+0xb0>
 8004b56:	69fb      	ldr	r3, [r7, #28]
 8004b58:	f003 0301 	and.w	r3, r3, #1
 8004b5c:	2b00      	cmp	r3, #0
 8004b5e:	d005      	beq.n	8004b6c <HAL_UART_IRQHandler+0xb0>
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b64:	f043 0202 	orr.w	r2, r3, #2
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	641a      	str	r2, [r3, #64]	; 0x40
 8004b6c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b6e:	f003 0302 	and.w	r3, r3, #2
 8004b72:	2b00      	cmp	r3, #0
 8004b74:	d00a      	beq.n	8004b8c <HAL_UART_IRQHandler+0xd0>
 8004b76:	69fb      	ldr	r3, [r7, #28]
 8004b78:	f003 0301 	and.w	r3, r3, #1
 8004b7c:	2b00      	cmp	r3, #0
 8004b7e:	d005      	beq.n	8004b8c <HAL_UART_IRQHandler+0xd0>
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b84:	f043 0204 	orr.w	r2, r3, #4
 8004b88:	687b      	ldr	r3, [r7, #4]
 8004b8a:	641a      	str	r2, [r3, #64]	; 0x40
 8004b8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004b8e:	f003 0308 	and.w	r3, r3, #8
 8004b92:	2b00      	cmp	r3, #0
 8004b94:	d00f      	beq.n	8004bb6 <HAL_UART_IRQHandler+0xfa>
 8004b96:	6a3b      	ldr	r3, [r7, #32]
 8004b98:	f003 0320 	and.w	r3, r3, #32
 8004b9c:	2b00      	cmp	r3, #0
 8004b9e:	d104      	bne.n	8004baa <HAL_UART_IRQHandler+0xee>
 8004ba0:	69fb      	ldr	r3, [r7, #28]
 8004ba2:	f003 0301 	and.w	r3, r3, #1
 8004ba6:	2b00      	cmp	r3, #0
 8004ba8:	d005      	beq.n	8004bb6 <HAL_UART_IRQHandler+0xfa>
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bae:	f043 0208 	orr.w	r2, r3, #8
 8004bb2:	687b      	ldr	r3, [r7, #4]
 8004bb4:	641a      	str	r2, [r3, #64]	; 0x40
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bba:	2b00      	cmp	r3, #0
 8004bbc:	f000 811e 	beq.w	8004dfc <HAL_UART_IRQHandler+0x340>
 8004bc0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004bc2:	f003 0320 	and.w	r3, r3, #32
 8004bc6:	2b00      	cmp	r3, #0
 8004bc8:	d007      	beq.n	8004bda <HAL_UART_IRQHandler+0x11e>
 8004bca:	6a3b      	ldr	r3, [r7, #32]
 8004bcc:	f003 0320 	and.w	r3, r3, #32
 8004bd0:	2b00      	cmp	r3, #0
 8004bd2:	d002      	beq.n	8004bda <HAL_UART_IRQHandler+0x11e>
 8004bd4:	6878      	ldr	r0, [r7, #4]
 8004bd6:	f000 fa62 	bl	800509e <UART_Receive_IT>
 8004bda:	687b      	ldr	r3, [r7, #4]
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	695b      	ldr	r3, [r3, #20]
 8004be0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004be4:	2b00      	cmp	r3, #0
 8004be6:	bf14      	ite	ne
 8004be8:	2301      	movne	r3, #1
 8004bea:	2300      	moveq	r3, #0
 8004bec:	b2db      	uxtb	r3, r3
 8004bee:	617b      	str	r3, [r7, #20]
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004bf4:	f003 0308 	and.w	r3, r3, #8
 8004bf8:	2b00      	cmp	r3, #0
 8004bfa:	d102      	bne.n	8004c02 <HAL_UART_IRQHandler+0x146>
 8004bfc:	697b      	ldr	r3, [r7, #20]
 8004bfe:	2b00      	cmp	r3, #0
 8004c00:	d031      	beq.n	8004c66 <HAL_UART_IRQHandler+0x1aa>
 8004c02:	6878      	ldr	r0, [r7, #4]
 8004c04:	f000 f9a4 	bl	8004f50 <UART_EndRxTransfer>
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	681b      	ldr	r3, [r3, #0]
 8004c0c:	695b      	ldr	r3, [r3, #20]
 8004c0e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004c12:	2b00      	cmp	r3, #0
 8004c14:	d023      	beq.n	8004c5e <HAL_UART_IRQHandler+0x1a2>
 8004c16:	687b      	ldr	r3, [r7, #4]
 8004c18:	681b      	ldr	r3, [r3, #0]
 8004c1a:	695a      	ldr	r2, [r3, #20]
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	681b      	ldr	r3, [r3, #0]
 8004c20:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004c24:	615a      	str	r2, [r3, #20]
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c2a:	2b00      	cmp	r3, #0
 8004c2c:	d013      	beq.n	8004c56 <HAL_UART_IRQHandler+0x19a>
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c32:	4a76      	ldr	r2, [pc, #472]	; (8004e0c <HAL_UART_IRQHandler+0x350>)
 8004c34:	635a      	str	r2, [r3, #52]	; 0x34
 8004c36:	687b      	ldr	r3, [r7, #4]
 8004c38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c3a:	4618      	mov	r0, r3
 8004c3c:	f7fd fb0c 	bl	8002258 <HAL_DMA_Abort_IT>
 8004c40:	4603      	mov	r3, r0
 8004c42:	2b00      	cmp	r3, #0
 8004c44:	d016      	beq.n	8004c74 <HAL_UART_IRQHandler+0x1b8>
 8004c46:	687b      	ldr	r3, [r7, #4]
 8004c48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004c4a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004c4c:	687a      	ldr	r2, [r7, #4]
 8004c4e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8004c50:	4610      	mov	r0, r2
 8004c52:	4798      	blx	r3
 8004c54:	e00e      	b.n	8004c74 <HAL_UART_IRQHandler+0x1b8>
 8004c56:	6878      	ldr	r0, [r7, #4]
 8004c58:	f000 f8e3 	bl	8004e22 <HAL_UART_ErrorCallback>
 8004c5c:	e00a      	b.n	8004c74 <HAL_UART_IRQHandler+0x1b8>
 8004c5e:	6878      	ldr	r0, [r7, #4]
 8004c60:	f000 f8df 	bl	8004e22 <HAL_UART_ErrorCallback>
 8004c64:	e006      	b.n	8004c74 <HAL_UART_IRQHandler+0x1b8>
 8004c66:	6878      	ldr	r0, [r7, #4]
 8004c68:	f000 f8db 	bl	8004e22 <HAL_UART_ErrorCallback>
 8004c6c:	687b      	ldr	r3, [r7, #4]
 8004c6e:	2200      	movs	r2, #0
 8004c70:	641a      	str	r2, [r3, #64]	; 0x40
 8004c72:	e0c3      	b.n	8004dfc <HAL_UART_IRQHandler+0x340>
 8004c74:	bf00      	nop
 8004c76:	e0c1      	b.n	8004dfc <HAL_UART_IRQHandler+0x340>
 8004c78:	687b      	ldr	r3, [r7, #4]
 8004c7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c7c:	2b01      	cmp	r3, #1
 8004c7e:	f040 80a1 	bne.w	8004dc4 <HAL_UART_IRQHandler+0x308>
 8004c82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004c84:	f003 0310 	and.w	r3, r3, #16
 8004c88:	2b00      	cmp	r3, #0
 8004c8a:	f000 809b 	beq.w	8004dc4 <HAL_UART_IRQHandler+0x308>
 8004c8e:	6a3b      	ldr	r3, [r7, #32]
 8004c90:	f003 0310 	and.w	r3, r3, #16
 8004c94:	2b00      	cmp	r3, #0
 8004c96:	f000 8095 	beq.w	8004dc4 <HAL_UART_IRQHandler+0x308>
 8004c9a:	2300      	movs	r3, #0
 8004c9c:	60fb      	str	r3, [r7, #12]
 8004c9e:	687b      	ldr	r3, [r7, #4]
 8004ca0:	681b      	ldr	r3, [r3, #0]
 8004ca2:	681b      	ldr	r3, [r3, #0]
 8004ca4:	60fb      	str	r3, [r7, #12]
 8004ca6:	687b      	ldr	r3, [r7, #4]
 8004ca8:	681b      	ldr	r3, [r3, #0]
 8004caa:	685b      	ldr	r3, [r3, #4]
 8004cac:	60fb      	str	r3, [r7, #12]
 8004cae:	68fb      	ldr	r3, [r7, #12]
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	695b      	ldr	r3, [r3, #20]
 8004cb6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004cba:	2b00      	cmp	r3, #0
 8004cbc:	d04e      	beq.n	8004d5c <HAL_UART_IRQHandler+0x2a0>
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004cc2:	681b      	ldr	r3, [r3, #0]
 8004cc4:	685b      	ldr	r3, [r3, #4]
 8004cc6:	823b      	strh	r3, [r7, #16]
 8004cc8:	8a3b      	ldrh	r3, [r7, #16]
 8004cca:	2b00      	cmp	r3, #0
 8004ccc:	f000 8098 	beq.w	8004e00 <HAL_UART_IRQHandler+0x344>
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004cd4:	8a3a      	ldrh	r2, [r7, #16]
 8004cd6:	429a      	cmp	r2, r3
 8004cd8:	f080 8092 	bcs.w	8004e00 <HAL_UART_IRQHandler+0x344>
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	8a3a      	ldrh	r2, [r7, #16]
 8004ce0:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004ce6:	699b      	ldr	r3, [r3, #24]
 8004ce8:	2b20      	cmp	r3, #32
 8004cea:	d02b      	beq.n	8004d44 <HAL_UART_IRQHandler+0x288>
 8004cec:	687b      	ldr	r3, [r7, #4]
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	68da      	ldr	r2, [r3, #12]
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	681b      	ldr	r3, [r3, #0]
 8004cf6:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004cfa:	60da      	str	r2, [r3, #12]
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	681b      	ldr	r3, [r3, #0]
 8004d00:	695a      	ldr	r2, [r3, #20]
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	681b      	ldr	r3, [r3, #0]
 8004d06:	f022 0201 	bic.w	r2, r2, #1
 8004d0a:	615a      	str	r2, [r3, #20]
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	695a      	ldr	r2, [r3, #20]
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	681b      	ldr	r3, [r3, #0]
 8004d16:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004d1a:	615a      	str	r2, [r3, #20]
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	2220      	movs	r2, #32
 8004d20:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	2200      	movs	r2, #0
 8004d28:	631a      	str	r2, [r3, #48]	; 0x30
 8004d2a:	687b      	ldr	r3, [r7, #4]
 8004d2c:	681b      	ldr	r3, [r3, #0]
 8004d2e:	68da      	ldr	r2, [r3, #12]
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	681b      	ldr	r3, [r3, #0]
 8004d34:	f022 0210 	bic.w	r2, r2, #16
 8004d38:	60da      	str	r2, [r3, #12]
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004d3e:	4618      	mov	r0, r3
 8004d40:	f7fd fa4f 	bl	80021e2 <HAL_DMA_Abort>
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004d4c:	b29b      	uxth	r3, r3
 8004d4e:	1ad3      	subs	r3, r2, r3
 8004d50:	b29b      	uxth	r3, r3
 8004d52:	4619      	mov	r1, r3
 8004d54:	6878      	ldr	r0, [r7, #4]
 8004d56:	f000 f86d 	bl	8004e34 <HAL_UARTEx_RxEventCallback>
 8004d5a:	e051      	b.n	8004e00 <HAL_UART_IRQHandler+0x344>
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004d64:	b29b      	uxth	r3, r3
 8004d66:	1ad3      	subs	r3, r2, r3
 8004d68:	827b      	strh	r3, [r7, #18]
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004d6e:	b29b      	uxth	r3, r3
 8004d70:	2b00      	cmp	r3, #0
 8004d72:	d047      	beq.n	8004e04 <HAL_UART_IRQHandler+0x348>
 8004d74:	8a7b      	ldrh	r3, [r7, #18]
 8004d76:	2b00      	cmp	r3, #0
 8004d78:	d044      	beq.n	8004e04 <HAL_UART_IRQHandler+0x348>
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	68da      	ldr	r2, [r3, #12]
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8004d88:	60da      	str	r2, [r3, #12]
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	681b      	ldr	r3, [r3, #0]
 8004d8e:	695a      	ldr	r2, [r3, #20]
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	f022 0201 	bic.w	r2, r2, #1
 8004d98:	615a      	str	r2, [r3, #20]
 8004d9a:	687b      	ldr	r3, [r7, #4]
 8004d9c:	2220      	movs	r2, #32
 8004d9e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	2200      	movs	r2, #0
 8004da6:	631a      	str	r2, [r3, #48]	; 0x30
 8004da8:	687b      	ldr	r3, [r7, #4]
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	68da      	ldr	r2, [r3, #12]
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	681b      	ldr	r3, [r3, #0]
 8004db2:	f022 0210 	bic.w	r2, r2, #16
 8004db6:	60da      	str	r2, [r3, #12]
 8004db8:	8a7b      	ldrh	r3, [r7, #18]
 8004dba:	4619      	mov	r1, r3
 8004dbc:	6878      	ldr	r0, [r7, #4]
 8004dbe:	f000 f839 	bl	8004e34 <HAL_UARTEx_RxEventCallback>
 8004dc2:	e01f      	b.n	8004e04 <HAL_UART_IRQHandler+0x348>
 8004dc4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004dc6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004dca:	2b00      	cmp	r3, #0
 8004dcc:	d008      	beq.n	8004de0 <HAL_UART_IRQHandler+0x324>
 8004dce:	6a3b      	ldr	r3, [r7, #32]
 8004dd0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004dd4:	2b00      	cmp	r3, #0
 8004dd6:	d003      	beq.n	8004de0 <HAL_UART_IRQHandler+0x324>
 8004dd8:	6878      	ldr	r0, [r7, #4]
 8004dda:	f000 f8f9 	bl	8004fd0 <UART_Transmit_IT>
 8004dde:	e012      	b.n	8004e06 <HAL_UART_IRQHandler+0x34a>
 8004de0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004de2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004de6:	2b00      	cmp	r3, #0
 8004de8:	d00d      	beq.n	8004e06 <HAL_UART_IRQHandler+0x34a>
 8004dea:	6a3b      	ldr	r3, [r7, #32]
 8004dec:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004df0:	2b00      	cmp	r3, #0
 8004df2:	d008      	beq.n	8004e06 <HAL_UART_IRQHandler+0x34a>
 8004df4:	6878      	ldr	r0, [r7, #4]
 8004df6:	f000 f93a 	bl	800506e <UART_EndTransmit_IT>
 8004dfa:	e004      	b.n	8004e06 <HAL_UART_IRQHandler+0x34a>
 8004dfc:	bf00      	nop
 8004dfe:	e002      	b.n	8004e06 <HAL_UART_IRQHandler+0x34a>
 8004e00:	bf00      	nop
 8004e02:	e000      	b.n	8004e06 <HAL_UART_IRQHandler+0x34a>
 8004e04:	bf00      	nop
 8004e06:	3728      	adds	r7, #40	; 0x28
 8004e08:	46bd      	mov	sp, r7
 8004e0a:	bd80      	pop	{r7, pc}
 8004e0c:	08004fa9 	.word	0x08004fa9

08004e10 <HAL_UART_TxCpltCallback>:
 8004e10:	b480      	push	{r7}
 8004e12:	b083      	sub	sp, #12
 8004e14:	af00      	add	r7, sp, #0
 8004e16:	6078      	str	r0, [r7, #4]
 8004e18:	bf00      	nop
 8004e1a:	370c      	adds	r7, #12
 8004e1c:	46bd      	mov	sp, r7
 8004e1e:	bc80      	pop	{r7}
 8004e20:	4770      	bx	lr

08004e22 <HAL_UART_ErrorCallback>:
 8004e22:	b480      	push	{r7}
 8004e24:	b083      	sub	sp, #12
 8004e26:	af00      	add	r7, sp, #0
 8004e28:	6078      	str	r0, [r7, #4]
 8004e2a:	bf00      	nop
 8004e2c:	370c      	adds	r7, #12
 8004e2e:	46bd      	mov	sp, r7
 8004e30:	bc80      	pop	{r7}
 8004e32:	4770      	bx	lr

08004e34 <HAL_UARTEx_RxEventCallback>:
 8004e34:	b480      	push	{r7}
 8004e36:	b083      	sub	sp, #12
 8004e38:	af00      	add	r7, sp, #0
 8004e3a:	6078      	str	r0, [r7, #4]
 8004e3c:	460b      	mov	r3, r1
 8004e3e:	807b      	strh	r3, [r7, #2]
 8004e40:	bf00      	nop
 8004e42:	370c      	adds	r7, #12
 8004e44:	46bd      	mov	sp, r7
 8004e46:	bc80      	pop	{r7}
 8004e48:	4770      	bx	lr

08004e4a <UART_WaitOnFlagUntilTimeout>:
 8004e4a:	b580      	push	{r7, lr}
 8004e4c:	b084      	sub	sp, #16
 8004e4e:	af00      	add	r7, sp, #0
 8004e50:	60f8      	str	r0, [r7, #12]
 8004e52:	60b9      	str	r1, [r7, #8]
 8004e54:	603b      	str	r3, [r7, #0]
 8004e56:	4613      	mov	r3, r2
 8004e58:	71fb      	strb	r3, [r7, #7]
 8004e5a:	e02c      	b.n	8004eb6 <UART_WaitOnFlagUntilTimeout+0x6c>
 8004e5c:	69bb      	ldr	r3, [r7, #24]
 8004e5e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e62:	d028      	beq.n	8004eb6 <UART_WaitOnFlagUntilTimeout+0x6c>
 8004e64:	69bb      	ldr	r3, [r7, #24]
 8004e66:	2b00      	cmp	r3, #0
 8004e68:	d007      	beq.n	8004e7a <UART_WaitOnFlagUntilTimeout+0x30>
 8004e6a:	f7fd f87f 	bl	8001f6c <HAL_GetTick>
 8004e6e:	4602      	mov	r2, r0
 8004e70:	683b      	ldr	r3, [r7, #0]
 8004e72:	1ad3      	subs	r3, r2, r3
 8004e74:	69ba      	ldr	r2, [r7, #24]
 8004e76:	429a      	cmp	r2, r3
 8004e78:	d21d      	bcs.n	8004eb6 <UART_WaitOnFlagUntilTimeout+0x6c>
 8004e7a:	68fb      	ldr	r3, [r7, #12]
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	68da      	ldr	r2, [r3, #12]
 8004e80:	68fb      	ldr	r3, [r7, #12]
 8004e82:	681b      	ldr	r3, [r3, #0]
 8004e84:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8004e88:	60da      	str	r2, [r3, #12]
 8004e8a:	68fb      	ldr	r3, [r7, #12]
 8004e8c:	681b      	ldr	r3, [r3, #0]
 8004e8e:	695a      	ldr	r2, [r3, #20]
 8004e90:	68fb      	ldr	r3, [r7, #12]
 8004e92:	681b      	ldr	r3, [r3, #0]
 8004e94:	f022 0201 	bic.w	r2, r2, #1
 8004e98:	615a      	str	r2, [r3, #20]
 8004e9a:	68fb      	ldr	r3, [r7, #12]
 8004e9c:	2220      	movs	r2, #32
 8004e9e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8004ea2:	68fb      	ldr	r3, [r7, #12]
 8004ea4:	2220      	movs	r2, #32
 8004ea6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004eaa:	68fb      	ldr	r3, [r7, #12]
 8004eac:	2200      	movs	r2, #0
 8004eae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004eb2:	2303      	movs	r3, #3
 8004eb4:	e00f      	b.n	8004ed6 <UART_WaitOnFlagUntilTimeout+0x8c>
 8004eb6:	68fb      	ldr	r3, [r7, #12]
 8004eb8:	681b      	ldr	r3, [r3, #0]
 8004eba:	681a      	ldr	r2, [r3, #0]
 8004ebc:	68bb      	ldr	r3, [r7, #8]
 8004ebe:	4013      	ands	r3, r2
 8004ec0:	68ba      	ldr	r2, [r7, #8]
 8004ec2:	429a      	cmp	r2, r3
 8004ec4:	bf0c      	ite	eq
 8004ec6:	2301      	moveq	r3, #1
 8004ec8:	2300      	movne	r3, #0
 8004eca:	b2db      	uxtb	r3, r3
 8004ecc:	461a      	mov	r2, r3
 8004ece:	79fb      	ldrb	r3, [r7, #7]
 8004ed0:	429a      	cmp	r2, r3
 8004ed2:	d0c3      	beq.n	8004e5c <UART_WaitOnFlagUntilTimeout+0x12>
 8004ed4:	2300      	movs	r3, #0
 8004ed6:	4618      	mov	r0, r3
 8004ed8:	3710      	adds	r7, #16
 8004eda:	46bd      	mov	sp, r7
 8004edc:	bd80      	pop	{r7, pc}

08004ede <UART_Start_Receive_IT>:
 8004ede:	b480      	push	{r7}
 8004ee0:	b085      	sub	sp, #20
 8004ee2:	af00      	add	r7, sp, #0
 8004ee4:	60f8      	str	r0, [r7, #12]
 8004ee6:	60b9      	str	r1, [r7, #8]
 8004ee8:	4613      	mov	r3, r2
 8004eea:	80fb      	strh	r3, [r7, #6]
 8004eec:	68fb      	ldr	r3, [r7, #12]
 8004eee:	68ba      	ldr	r2, [r7, #8]
 8004ef0:	629a      	str	r2, [r3, #40]	; 0x28
 8004ef2:	68fb      	ldr	r3, [r7, #12]
 8004ef4:	88fa      	ldrh	r2, [r7, #6]
 8004ef6:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004ef8:	68fb      	ldr	r3, [r7, #12]
 8004efa:	88fa      	ldrh	r2, [r7, #6]
 8004efc:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004efe:	68fb      	ldr	r3, [r7, #12]
 8004f00:	2200      	movs	r2, #0
 8004f02:	641a      	str	r2, [r3, #64]	; 0x40
 8004f04:	68fb      	ldr	r3, [r7, #12]
 8004f06:	2222      	movs	r2, #34	; 0x22
 8004f08:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004f0c:	68fb      	ldr	r3, [r7, #12]
 8004f0e:	2200      	movs	r2, #0
 8004f10:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004f14:	68fb      	ldr	r3, [r7, #12]
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	68da      	ldr	r2, [r3, #12]
 8004f1a:	68fb      	ldr	r3, [r7, #12]
 8004f1c:	681b      	ldr	r3, [r3, #0]
 8004f1e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004f22:	60da      	str	r2, [r3, #12]
 8004f24:	68fb      	ldr	r3, [r7, #12]
 8004f26:	681b      	ldr	r3, [r3, #0]
 8004f28:	695a      	ldr	r2, [r3, #20]
 8004f2a:	68fb      	ldr	r3, [r7, #12]
 8004f2c:	681b      	ldr	r3, [r3, #0]
 8004f2e:	f042 0201 	orr.w	r2, r2, #1
 8004f32:	615a      	str	r2, [r3, #20]
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	68da      	ldr	r2, [r3, #12]
 8004f3a:	68fb      	ldr	r3, [r7, #12]
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	f042 0220 	orr.w	r2, r2, #32
 8004f42:	60da      	str	r2, [r3, #12]
 8004f44:	2300      	movs	r3, #0
 8004f46:	4618      	mov	r0, r3
 8004f48:	3714      	adds	r7, #20
 8004f4a:	46bd      	mov	sp, r7
 8004f4c:	bc80      	pop	{r7}
 8004f4e:	4770      	bx	lr

08004f50 <UART_EndRxTransfer>:
 8004f50:	b480      	push	{r7}
 8004f52:	b083      	sub	sp, #12
 8004f54:	af00      	add	r7, sp, #0
 8004f56:	6078      	str	r0, [r7, #4]
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	681b      	ldr	r3, [r3, #0]
 8004f5c:	68da      	ldr	r2, [r3, #12]
 8004f5e:	687b      	ldr	r3, [r7, #4]
 8004f60:	681b      	ldr	r3, [r3, #0]
 8004f62:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 8004f66:	60da      	str	r2, [r3, #12]
 8004f68:	687b      	ldr	r3, [r7, #4]
 8004f6a:	681b      	ldr	r3, [r3, #0]
 8004f6c:	695a      	ldr	r2, [r3, #20]
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	681b      	ldr	r3, [r3, #0]
 8004f72:	f022 0201 	bic.w	r2, r2, #1
 8004f76:	615a      	str	r2, [r3, #20]
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f7c:	2b01      	cmp	r3, #1
 8004f7e:	d107      	bne.n	8004f90 <UART_EndRxTransfer+0x40>
 8004f80:	687b      	ldr	r3, [r7, #4]
 8004f82:	681b      	ldr	r3, [r3, #0]
 8004f84:	68da      	ldr	r2, [r3, #12]
 8004f86:	687b      	ldr	r3, [r7, #4]
 8004f88:	681b      	ldr	r3, [r3, #0]
 8004f8a:	f022 0210 	bic.w	r2, r2, #16
 8004f8e:	60da      	str	r2, [r3, #12]
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	2220      	movs	r2, #32
 8004f94:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004f98:	687b      	ldr	r3, [r7, #4]
 8004f9a:	2200      	movs	r2, #0
 8004f9c:	631a      	str	r2, [r3, #48]	; 0x30
 8004f9e:	bf00      	nop
 8004fa0:	370c      	adds	r7, #12
 8004fa2:	46bd      	mov	sp, r7
 8004fa4:	bc80      	pop	{r7}
 8004fa6:	4770      	bx	lr

08004fa8 <UART_DMAAbortOnError>:
 8004fa8:	b580      	push	{r7, lr}
 8004faa:	b084      	sub	sp, #16
 8004fac:	af00      	add	r7, sp, #0
 8004fae:	6078      	str	r0, [r7, #4]
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fb4:	60fb      	str	r3, [r7, #12]
 8004fb6:	68fb      	ldr	r3, [r7, #12]
 8004fb8:	2200      	movs	r2, #0
 8004fba:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004fbc:	68fb      	ldr	r3, [r7, #12]
 8004fbe:	2200      	movs	r2, #0
 8004fc0:	84da      	strh	r2, [r3, #38]	; 0x26
 8004fc2:	68f8      	ldr	r0, [r7, #12]
 8004fc4:	f7ff ff2d 	bl	8004e22 <HAL_UART_ErrorCallback>
 8004fc8:	bf00      	nop
 8004fca:	3710      	adds	r7, #16
 8004fcc:	46bd      	mov	sp, r7
 8004fce:	bd80      	pop	{r7, pc}

08004fd0 <UART_Transmit_IT>:
 8004fd0:	b480      	push	{r7}
 8004fd2:	b085      	sub	sp, #20
 8004fd4:	af00      	add	r7, sp, #0
 8004fd6:	6078      	str	r0, [r7, #4]
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004fde:	b2db      	uxtb	r3, r3
 8004fe0:	2b21      	cmp	r3, #33	; 0x21
 8004fe2:	d13e      	bne.n	8005062 <UART_Transmit_IT+0x92>
 8004fe4:	687b      	ldr	r3, [r7, #4]
 8004fe6:	689b      	ldr	r3, [r3, #8]
 8004fe8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004fec:	d114      	bne.n	8005018 <UART_Transmit_IT+0x48>
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	691b      	ldr	r3, [r3, #16]
 8004ff2:	2b00      	cmp	r3, #0
 8004ff4:	d110      	bne.n	8005018 <UART_Transmit_IT+0x48>
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	6a1b      	ldr	r3, [r3, #32]
 8004ffa:	60fb      	str	r3, [r7, #12]
 8004ffc:	68fb      	ldr	r3, [r7, #12]
 8004ffe:	881b      	ldrh	r3, [r3, #0]
 8005000:	461a      	mov	r2, r3
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	681b      	ldr	r3, [r3, #0]
 8005006:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800500a:	605a      	str	r2, [r3, #4]
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	6a1b      	ldr	r3, [r3, #32]
 8005010:	1c9a      	adds	r2, r3, #2
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	621a      	str	r2, [r3, #32]
 8005016:	e008      	b.n	800502a <UART_Transmit_IT+0x5a>
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	6a1b      	ldr	r3, [r3, #32]
 800501c:	1c59      	adds	r1, r3, #1
 800501e:	687a      	ldr	r2, [r7, #4]
 8005020:	6211      	str	r1, [r2, #32]
 8005022:	781a      	ldrb	r2, [r3, #0]
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	605a      	str	r2, [r3, #4]
 800502a:	687b      	ldr	r3, [r7, #4]
 800502c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800502e:	b29b      	uxth	r3, r3
 8005030:	3b01      	subs	r3, #1
 8005032:	b29b      	uxth	r3, r3
 8005034:	687a      	ldr	r2, [r7, #4]
 8005036:	4619      	mov	r1, r3
 8005038:	84d1      	strh	r1, [r2, #38]	; 0x26
 800503a:	2b00      	cmp	r3, #0
 800503c:	d10f      	bne.n	800505e <UART_Transmit_IT+0x8e>
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	68da      	ldr	r2, [r3, #12]
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	681b      	ldr	r3, [r3, #0]
 8005048:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800504c:	60da      	str	r2, [r3, #12]
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	681b      	ldr	r3, [r3, #0]
 8005052:	68da      	ldr	r2, [r3, #12]
 8005054:	687b      	ldr	r3, [r7, #4]
 8005056:	681b      	ldr	r3, [r3, #0]
 8005058:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800505c:	60da      	str	r2, [r3, #12]
 800505e:	2300      	movs	r3, #0
 8005060:	e000      	b.n	8005064 <UART_Transmit_IT+0x94>
 8005062:	2302      	movs	r3, #2
 8005064:	4618      	mov	r0, r3
 8005066:	3714      	adds	r7, #20
 8005068:	46bd      	mov	sp, r7
 800506a:	bc80      	pop	{r7}
 800506c:	4770      	bx	lr

0800506e <UART_EndTransmit_IT>:
 800506e:	b580      	push	{r7, lr}
 8005070:	b082      	sub	sp, #8
 8005072:	af00      	add	r7, sp, #0
 8005074:	6078      	str	r0, [r7, #4]
 8005076:	687b      	ldr	r3, [r7, #4]
 8005078:	681b      	ldr	r3, [r3, #0]
 800507a:	68da      	ldr	r2, [r3, #12]
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	681b      	ldr	r3, [r3, #0]
 8005080:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005084:	60da      	str	r2, [r3, #12]
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	2220      	movs	r2, #32
 800508a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800508e:	6878      	ldr	r0, [r7, #4]
 8005090:	f7ff febe 	bl	8004e10 <HAL_UART_TxCpltCallback>
 8005094:	2300      	movs	r3, #0
 8005096:	4618      	mov	r0, r3
 8005098:	3708      	adds	r7, #8
 800509a:	46bd      	mov	sp, r7
 800509c:	bd80      	pop	{r7, pc}

0800509e <UART_Receive_IT>:
 800509e:	b580      	push	{r7, lr}
 80050a0:	b086      	sub	sp, #24
 80050a2:	af00      	add	r7, sp, #0
 80050a4:	6078      	str	r0, [r7, #4]
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80050ac:	b2db      	uxtb	r3, r3
 80050ae:	2b22      	cmp	r3, #34	; 0x22
 80050b0:	f040 8099 	bne.w	80051e6 <UART_Receive_IT+0x148>
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	689b      	ldr	r3, [r3, #8]
 80050b8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80050bc:	d117      	bne.n	80050ee <UART_Receive_IT+0x50>
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	691b      	ldr	r3, [r3, #16]
 80050c2:	2b00      	cmp	r3, #0
 80050c4:	d113      	bne.n	80050ee <UART_Receive_IT+0x50>
 80050c6:	2300      	movs	r3, #0
 80050c8:	617b      	str	r3, [r7, #20]
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80050ce:	613b      	str	r3, [r7, #16]
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	685b      	ldr	r3, [r3, #4]
 80050d6:	b29b      	uxth	r3, r3
 80050d8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80050dc:	b29a      	uxth	r2, r3
 80050de:	693b      	ldr	r3, [r7, #16]
 80050e0:	801a      	strh	r2, [r3, #0]
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80050e6:	1c9a      	adds	r2, r3, #2
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	629a      	str	r2, [r3, #40]	; 0x28
 80050ec:	e026      	b.n	800513c <UART_Receive_IT+0x9e>
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80050f2:	617b      	str	r3, [r7, #20]
 80050f4:	2300      	movs	r3, #0
 80050f6:	613b      	str	r3, [r7, #16]
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	689b      	ldr	r3, [r3, #8]
 80050fc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8005100:	d007      	beq.n	8005112 <UART_Receive_IT+0x74>
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	689b      	ldr	r3, [r3, #8]
 8005106:	2b00      	cmp	r3, #0
 8005108:	d10a      	bne.n	8005120 <UART_Receive_IT+0x82>
 800510a:	687b      	ldr	r3, [r7, #4]
 800510c:	691b      	ldr	r3, [r3, #16]
 800510e:	2b00      	cmp	r3, #0
 8005110:	d106      	bne.n	8005120 <UART_Receive_IT+0x82>
 8005112:	687b      	ldr	r3, [r7, #4]
 8005114:	681b      	ldr	r3, [r3, #0]
 8005116:	685b      	ldr	r3, [r3, #4]
 8005118:	b2da      	uxtb	r2, r3
 800511a:	697b      	ldr	r3, [r7, #20]
 800511c:	701a      	strb	r2, [r3, #0]
 800511e:	e008      	b.n	8005132 <UART_Receive_IT+0x94>
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	681b      	ldr	r3, [r3, #0]
 8005124:	685b      	ldr	r3, [r3, #4]
 8005126:	b2db      	uxtb	r3, r3
 8005128:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800512c:	b2da      	uxtb	r2, r3
 800512e:	697b      	ldr	r3, [r7, #20]
 8005130:	701a      	strb	r2, [r3, #0]
 8005132:	687b      	ldr	r3, [r7, #4]
 8005134:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005136:	1c5a      	adds	r2, r3, #1
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	629a      	str	r2, [r3, #40]	; 0x28
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8005140:	b29b      	uxth	r3, r3
 8005142:	3b01      	subs	r3, #1
 8005144:	b29b      	uxth	r3, r3
 8005146:	687a      	ldr	r2, [r7, #4]
 8005148:	4619      	mov	r1, r3
 800514a:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800514c:	2b00      	cmp	r3, #0
 800514e:	d148      	bne.n	80051e2 <UART_Receive_IT+0x144>
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	681b      	ldr	r3, [r3, #0]
 8005154:	68da      	ldr	r2, [r3, #12]
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	681b      	ldr	r3, [r3, #0]
 800515a:	f022 0220 	bic.w	r2, r2, #32
 800515e:	60da      	str	r2, [r3, #12]
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	681b      	ldr	r3, [r3, #0]
 8005164:	68da      	ldr	r2, [r3, #12]
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	681b      	ldr	r3, [r3, #0]
 800516a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800516e:	60da      	str	r2, [r3, #12]
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	681b      	ldr	r3, [r3, #0]
 8005174:	695a      	ldr	r2, [r3, #20]
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	681b      	ldr	r3, [r3, #0]
 800517a:	f022 0201 	bic.w	r2, r2, #1
 800517e:	615a      	str	r2, [r3, #20]
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	2220      	movs	r2, #32
 8005184:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800518c:	2b01      	cmp	r3, #1
 800518e:	d123      	bne.n	80051d8 <UART_Receive_IT+0x13a>
 8005190:	687b      	ldr	r3, [r7, #4]
 8005192:	2200      	movs	r2, #0
 8005194:	631a      	str	r2, [r3, #48]	; 0x30
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	681b      	ldr	r3, [r3, #0]
 800519a:	68da      	ldr	r2, [r3, #12]
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	f022 0210 	bic.w	r2, r2, #16
 80051a4:	60da      	str	r2, [r3, #12]
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	681b      	ldr	r3, [r3, #0]
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	f003 0310 	and.w	r3, r3, #16
 80051b0:	2b10      	cmp	r3, #16
 80051b2:	d10a      	bne.n	80051ca <UART_Receive_IT+0x12c>
 80051b4:	2300      	movs	r3, #0
 80051b6:	60fb      	str	r3, [r7, #12]
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	681b      	ldr	r3, [r3, #0]
 80051bc:	681b      	ldr	r3, [r3, #0]
 80051be:	60fb      	str	r3, [r7, #12]
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	681b      	ldr	r3, [r3, #0]
 80051c4:	685b      	ldr	r3, [r3, #4]
 80051c6:	60fb      	str	r3, [r7, #12]
 80051c8:	68fb      	ldr	r3, [r7, #12]
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80051ce:	4619      	mov	r1, r3
 80051d0:	6878      	ldr	r0, [r7, #4]
 80051d2:	f7ff fe2f 	bl	8004e34 <HAL_UARTEx_RxEventCallback>
 80051d6:	e002      	b.n	80051de <UART_Receive_IT+0x140>
 80051d8:	6878      	ldr	r0, [r7, #4]
 80051da:	f7fb ff55 	bl	8001088 <HAL_UART_RxCpltCallback>
 80051de:	2300      	movs	r3, #0
 80051e0:	e002      	b.n	80051e8 <UART_Receive_IT+0x14a>
 80051e2:	2300      	movs	r3, #0
 80051e4:	e000      	b.n	80051e8 <UART_Receive_IT+0x14a>
 80051e6:	2302      	movs	r3, #2
 80051e8:	4618      	mov	r0, r3
 80051ea:	3718      	adds	r7, #24
 80051ec:	46bd      	mov	sp, r7
 80051ee:	bd80      	pop	{r7, pc}

080051f0 <UART_SetConfig>:
 80051f0:	b580      	push	{r7, lr}
 80051f2:	b084      	sub	sp, #16
 80051f4:	af00      	add	r7, sp, #0
 80051f6:	6078      	str	r0, [r7, #4]
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	681b      	ldr	r3, [r3, #0]
 80051fc:	691b      	ldr	r3, [r3, #16]
 80051fe:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	68da      	ldr	r2, [r3, #12]
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	681b      	ldr	r3, [r3, #0]
 800520a:	430a      	orrs	r2, r1
 800520c:	611a      	str	r2, [r3, #16]
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	689a      	ldr	r2, [r3, #8]
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	691b      	ldr	r3, [r3, #16]
 8005216:	431a      	orrs	r2, r3
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	695b      	ldr	r3, [r3, #20]
 800521c:	4313      	orrs	r3, r2
 800521e:	60bb      	str	r3, [r7, #8]
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	681b      	ldr	r3, [r3, #0]
 8005224:	68db      	ldr	r3, [r3, #12]
 8005226:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800522a:	f023 030c 	bic.w	r3, r3, #12
 800522e:	687a      	ldr	r2, [r7, #4]
 8005230:	6812      	ldr	r2, [r2, #0]
 8005232:	68b9      	ldr	r1, [r7, #8]
 8005234:	430b      	orrs	r3, r1
 8005236:	60d3      	str	r3, [r2, #12]
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	681b      	ldr	r3, [r3, #0]
 800523c:	695b      	ldr	r3, [r3, #20]
 800523e:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	699a      	ldr	r2, [r3, #24]
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	430a      	orrs	r2, r1
 800524c:	615a      	str	r2, [r3, #20]
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	681b      	ldr	r3, [r3, #0]
 8005252:	4a2c      	ldr	r2, [pc, #176]	; (8005304 <UART_SetConfig+0x114>)
 8005254:	4293      	cmp	r3, r2
 8005256:	d103      	bne.n	8005260 <UART_SetConfig+0x70>
 8005258:	f7fe fef4 	bl	8004044 <HAL_RCC_GetPCLK2Freq>
 800525c:	60f8      	str	r0, [r7, #12]
 800525e:	e002      	b.n	8005266 <UART_SetConfig+0x76>
 8005260:	f7fe fedc 	bl	800401c <HAL_RCC_GetPCLK1Freq>
 8005264:	60f8      	str	r0, [r7, #12]
 8005266:	68fa      	ldr	r2, [r7, #12]
 8005268:	4613      	mov	r3, r2
 800526a:	009b      	lsls	r3, r3, #2
 800526c:	4413      	add	r3, r2
 800526e:	009a      	lsls	r2, r3, #2
 8005270:	441a      	add	r2, r3
 8005272:	687b      	ldr	r3, [r7, #4]
 8005274:	685b      	ldr	r3, [r3, #4]
 8005276:	009b      	lsls	r3, r3, #2
 8005278:	fbb2 f3f3 	udiv	r3, r2, r3
 800527c:	4a22      	ldr	r2, [pc, #136]	; (8005308 <UART_SetConfig+0x118>)
 800527e:	fba2 2303 	umull	r2, r3, r2, r3
 8005282:	095b      	lsrs	r3, r3, #5
 8005284:	0119      	lsls	r1, r3, #4
 8005286:	68fa      	ldr	r2, [r7, #12]
 8005288:	4613      	mov	r3, r2
 800528a:	009b      	lsls	r3, r3, #2
 800528c:	4413      	add	r3, r2
 800528e:	009a      	lsls	r2, r3, #2
 8005290:	441a      	add	r2, r3
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	685b      	ldr	r3, [r3, #4]
 8005296:	009b      	lsls	r3, r3, #2
 8005298:	fbb2 f2f3 	udiv	r2, r2, r3
 800529c:	4b1a      	ldr	r3, [pc, #104]	; (8005308 <UART_SetConfig+0x118>)
 800529e:	fba3 0302 	umull	r0, r3, r3, r2
 80052a2:	095b      	lsrs	r3, r3, #5
 80052a4:	2064      	movs	r0, #100	; 0x64
 80052a6:	fb00 f303 	mul.w	r3, r0, r3
 80052aa:	1ad3      	subs	r3, r2, r3
 80052ac:	011b      	lsls	r3, r3, #4
 80052ae:	3332      	adds	r3, #50	; 0x32
 80052b0:	4a15      	ldr	r2, [pc, #84]	; (8005308 <UART_SetConfig+0x118>)
 80052b2:	fba2 2303 	umull	r2, r3, r2, r3
 80052b6:	095b      	lsrs	r3, r3, #5
 80052b8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80052bc:	4419      	add	r1, r3
 80052be:	68fa      	ldr	r2, [r7, #12]
 80052c0:	4613      	mov	r3, r2
 80052c2:	009b      	lsls	r3, r3, #2
 80052c4:	4413      	add	r3, r2
 80052c6:	009a      	lsls	r2, r3, #2
 80052c8:	441a      	add	r2, r3
 80052ca:	687b      	ldr	r3, [r7, #4]
 80052cc:	685b      	ldr	r3, [r3, #4]
 80052ce:	009b      	lsls	r3, r3, #2
 80052d0:	fbb2 f2f3 	udiv	r2, r2, r3
 80052d4:	4b0c      	ldr	r3, [pc, #48]	; (8005308 <UART_SetConfig+0x118>)
 80052d6:	fba3 0302 	umull	r0, r3, r3, r2
 80052da:	095b      	lsrs	r3, r3, #5
 80052dc:	2064      	movs	r0, #100	; 0x64
 80052de:	fb00 f303 	mul.w	r3, r0, r3
 80052e2:	1ad3      	subs	r3, r2, r3
 80052e4:	011b      	lsls	r3, r3, #4
 80052e6:	3332      	adds	r3, #50	; 0x32
 80052e8:	4a07      	ldr	r2, [pc, #28]	; (8005308 <UART_SetConfig+0x118>)
 80052ea:	fba2 2303 	umull	r2, r3, r2, r3
 80052ee:	095b      	lsrs	r3, r3, #5
 80052f0:	f003 020f 	and.w	r2, r3, #15
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	681b      	ldr	r3, [r3, #0]
 80052f8:	440a      	add	r2, r1
 80052fa:	609a      	str	r2, [r3, #8]
 80052fc:	bf00      	nop
 80052fe:	3710      	adds	r7, #16
 8005300:	46bd      	mov	sp, r7
 8005302:	bd80      	pop	{r7, pc}
 8005304:	40013800 	.word	0x40013800
 8005308:	51eb851f 	.word	0x51eb851f

0800530c <__errno>:
 800530c:	4b01      	ldr	r3, [pc, #4]	; (8005314 <__errno+0x8>)
 800530e:	6818      	ldr	r0, [r3, #0]
 8005310:	4770      	bx	lr
 8005312:	bf00      	nop
 8005314:	2000000c 	.word	0x2000000c

08005318 <__libc_init_array>:
 8005318:	b570      	push	{r4, r5, r6, lr}
 800531a:	2600      	movs	r6, #0
 800531c:	4d0c      	ldr	r5, [pc, #48]	; (8005350 <__libc_init_array+0x38>)
 800531e:	4c0d      	ldr	r4, [pc, #52]	; (8005354 <__libc_init_array+0x3c>)
 8005320:	1b64      	subs	r4, r4, r5
 8005322:	10a4      	asrs	r4, r4, #2
 8005324:	42a6      	cmp	r6, r4
 8005326:	d109      	bne.n	800533c <__libc_init_array+0x24>
 8005328:	f002 ff2e 	bl	8008188 <_init>
 800532c:	2600      	movs	r6, #0
 800532e:	4d0a      	ldr	r5, [pc, #40]	; (8005358 <__libc_init_array+0x40>)
 8005330:	4c0a      	ldr	r4, [pc, #40]	; (800535c <__libc_init_array+0x44>)
 8005332:	1b64      	subs	r4, r4, r5
 8005334:	10a4      	asrs	r4, r4, #2
 8005336:	42a6      	cmp	r6, r4
 8005338:	d105      	bne.n	8005346 <__libc_init_array+0x2e>
 800533a:	bd70      	pop	{r4, r5, r6, pc}
 800533c:	f855 3b04 	ldr.w	r3, [r5], #4
 8005340:	4798      	blx	r3
 8005342:	3601      	adds	r6, #1
 8005344:	e7ee      	b.n	8005324 <__libc_init_array+0xc>
 8005346:	f855 3b04 	ldr.w	r3, [r5], #4
 800534a:	4798      	blx	r3
 800534c:	3601      	adds	r6, #1
 800534e:	e7f2      	b.n	8005336 <__libc_init_array+0x1e>
 8005350:	08008734 	.word	0x08008734
 8005354:	08008734 	.word	0x08008734
 8005358:	08008734 	.word	0x08008734
 800535c:	08008738 	.word	0x08008738

08005360 <memset>:
 8005360:	4603      	mov	r3, r0
 8005362:	4402      	add	r2, r0
 8005364:	4293      	cmp	r3, r2
 8005366:	d100      	bne.n	800536a <memset+0xa>
 8005368:	4770      	bx	lr
 800536a:	f803 1b01 	strb.w	r1, [r3], #1
 800536e:	e7f9      	b.n	8005364 <memset+0x4>

08005370 <__cvt>:
 8005370:	2b00      	cmp	r3, #0
 8005372:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005376:	461f      	mov	r7, r3
 8005378:	bfbb      	ittet	lt
 800537a:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 800537e:	461f      	movlt	r7, r3
 8005380:	2300      	movge	r3, #0
 8005382:	232d      	movlt	r3, #45	; 0x2d
 8005384:	b088      	sub	sp, #32
 8005386:	4614      	mov	r4, r2
 8005388:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800538a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800538c:	7013      	strb	r3, [r2, #0]
 800538e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005390:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8005394:	f023 0820 	bic.w	r8, r3, #32
 8005398:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800539c:	d005      	beq.n	80053aa <__cvt+0x3a>
 800539e:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80053a2:	d100      	bne.n	80053a6 <__cvt+0x36>
 80053a4:	3501      	adds	r5, #1
 80053a6:	2302      	movs	r3, #2
 80053a8:	e000      	b.n	80053ac <__cvt+0x3c>
 80053aa:	2303      	movs	r3, #3
 80053ac:	aa07      	add	r2, sp, #28
 80053ae:	9204      	str	r2, [sp, #16]
 80053b0:	aa06      	add	r2, sp, #24
 80053b2:	e9cd a202 	strd	sl, r2, [sp, #8]
 80053b6:	e9cd 3500 	strd	r3, r5, [sp]
 80053ba:	4622      	mov	r2, r4
 80053bc:	463b      	mov	r3, r7
 80053be:	f000 fd17 	bl	8005df0 <_dtoa_r>
 80053c2:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80053c6:	4606      	mov	r6, r0
 80053c8:	d102      	bne.n	80053d0 <__cvt+0x60>
 80053ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80053cc:	07db      	lsls	r3, r3, #31
 80053ce:	d522      	bpl.n	8005416 <__cvt+0xa6>
 80053d0:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80053d4:	eb06 0905 	add.w	r9, r6, r5
 80053d8:	d110      	bne.n	80053fc <__cvt+0x8c>
 80053da:	7833      	ldrb	r3, [r6, #0]
 80053dc:	2b30      	cmp	r3, #48	; 0x30
 80053de:	d10a      	bne.n	80053f6 <__cvt+0x86>
 80053e0:	2200      	movs	r2, #0
 80053e2:	2300      	movs	r3, #0
 80053e4:	4620      	mov	r0, r4
 80053e6:	4639      	mov	r1, r7
 80053e8:	f7fb fade 	bl	80009a8 <__aeabi_dcmpeq>
 80053ec:	b918      	cbnz	r0, 80053f6 <__cvt+0x86>
 80053ee:	f1c5 0501 	rsb	r5, r5, #1
 80053f2:	f8ca 5000 	str.w	r5, [sl]
 80053f6:	f8da 3000 	ldr.w	r3, [sl]
 80053fa:	4499      	add	r9, r3
 80053fc:	2200      	movs	r2, #0
 80053fe:	2300      	movs	r3, #0
 8005400:	4620      	mov	r0, r4
 8005402:	4639      	mov	r1, r7
 8005404:	f7fb fad0 	bl	80009a8 <__aeabi_dcmpeq>
 8005408:	b108      	cbz	r0, 800540e <__cvt+0x9e>
 800540a:	f8cd 901c 	str.w	r9, [sp, #28]
 800540e:	2230      	movs	r2, #48	; 0x30
 8005410:	9b07      	ldr	r3, [sp, #28]
 8005412:	454b      	cmp	r3, r9
 8005414:	d307      	bcc.n	8005426 <__cvt+0xb6>
 8005416:	4630      	mov	r0, r6
 8005418:	9b07      	ldr	r3, [sp, #28]
 800541a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800541c:	1b9b      	subs	r3, r3, r6
 800541e:	6013      	str	r3, [r2, #0]
 8005420:	b008      	add	sp, #32
 8005422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005426:	1c59      	adds	r1, r3, #1
 8005428:	9107      	str	r1, [sp, #28]
 800542a:	701a      	strb	r2, [r3, #0]
 800542c:	e7f0      	b.n	8005410 <__cvt+0xa0>

0800542e <__exponent>:
 800542e:	4603      	mov	r3, r0
 8005430:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005432:	2900      	cmp	r1, #0
 8005434:	f803 2b02 	strb.w	r2, [r3], #2
 8005438:	bfb6      	itet	lt
 800543a:	222d      	movlt	r2, #45	; 0x2d
 800543c:	222b      	movge	r2, #43	; 0x2b
 800543e:	4249      	neglt	r1, r1
 8005440:	2909      	cmp	r1, #9
 8005442:	7042      	strb	r2, [r0, #1]
 8005444:	dd2b      	ble.n	800549e <__exponent+0x70>
 8005446:	f10d 0407 	add.w	r4, sp, #7
 800544a:	46a4      	mov	ip, r4
 800544c:	270a      	movs	r7, #10
 800544e:	fb91 f6f7 	sdiv	r6, r1, r7
 8005452:	460a      	mov	r2, r1
 8005454:	46a6      	mov	lr, r4
 8005456:	fb07 1516 	mls	r5, r7, r6, r1
 800545a:	2a63      	cmp	r2, #99	; 0x63
 800545c:	f105 0530 	add.w	r5, r5, #48	; 0x30
 8005460:	4631      	mov	r1, r6
 8005462:	f104 34ff 	add.w	r4, r4, #4294967295
 8005466:	f80e 5c01 	strb.w	r5, [lr, #-1]
 800546a:	dcf0      	bgt.n	800544e <__exponent+0x20>
 800546c:	3130      	adds	r1, #48	; 0x30
 800546e:	f1ae 0502 	sub.w	r5, lr, #2
 8005472:	f804 1c01 	strb.w	r1, [r4, #-1]
 8005476:	4629      	mov	r1, r5
 8005478:	1c44      	adds	r4, r0, #1
 800547a:	4561      	cmp	r1, ip
 800547c:	d30a      	bcc.n	8005494 <__exponent+0x66>
 800547e:	f10d 0209 	add.w	r2, sp, #9
 8005482:	eba2 020e 	sub.w	r2, r2, lr
 8005486:	4565      	cmp	r5, ip
 8005488:	bf88      	it	hi
 800548a:	2200      	movhi	r2, #0
 800548c:	4413      	add	r3, r2
 800548e:	1a18      	subs	r0, r3, r0
 8005490:	b003      	add	sp, #12
 8005492:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005494:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005498:	f804 2f01 	strb.w	r2, [r4, #1]!
 800549c:	e7ed      	b.n	800547a <__exponent+0x4c>
 800549e:	2330      	movs	r3, #48	; 0x30
 80054a0:	3130      	adds	r1, #48	; 0x30
 80054a2:	7083      	strb	r3, [r0, #2]
 80054a4:	70c1      	strb	r1, [r0, #3]
 80054a6:	1d03      	adds	r3, r0, #4
 80054a8:	e7f1      	b.n	800548e <__exponent+0x60>
	...

080054ac <_printf_float>:
 80054ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80054b0:	b091      	sub	sp, #68	; 0x44
 80054b2:	460c      	mov	r4, r1
 80054b4:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 80054b8:	4616      	mov	r6, r2
 80054ba:	461f      	mov	r7, r3
 80054bc:	4605      	mov	r5, r0
 80054be:	f001 fa85 	bl	80069cc <_localeconv_r>
 80054c2:	6803      	ldr	r3, [r0, #0]
 80054c4:	4618      	mov	r0, r3
 80054c6:	9309      	str	r3, [sp, #36]	; 0x24
 80054c8:	f7fa fe42 	bl	8000150 <strlen>
 80054cc:	2300      	movs	r3, #0
 80054ce:	930e      	str	r3, [sp, #56]	; 0x38
 80054d0:	f8d8 3000 	ldr.w	r3, [r8]
 80054d4:	900a      	str	r0, [sp, #40]	; 0x28
 80054d6:	3307      	adds	r3, #7
 80054d8:	f023 0307 	bic.w	r3, r3, #7
 80054dc:	f103 0208 	add.w	r2, r3, #8
 80054e0:	f894 9018 	ldrb.w	r9, [r4, #24]
 80054e4:	f8d4 b000 	ldr.w	fp, [r4]
 80054e8:	f8c8 2000 	str.w	r2, [r8]
 80054ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054f0:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80054f4:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 80054f8:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 80054fc:	930b      	str	r3, [sp, #44]	; 0x2c
 80054fe:	f04f 32ff 	mov.w	r2, #4294967295
 8005502:	4640      	mov	r0, r8
 8005504:	4b9c      	ldr	r3, [pc, #624]	; (8005778 <_printf_float+0x2cc>)
 8005506:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005508:	f7fb fa80 	bl	8000a0c <__aeabi_dcmpun>
 800550c:	bb70      	cbnz	r0, 800556c <_printf_float+0xc0>
 800550e:	f04f 32ff 	mov.w	r2, #4294967295
 8005512:	4640      	mov	r0, r8
 8005514:	4b98      	ldr	r3, [pc, #608]	; (8005778 <_printf_float+0x2cc>)
 8005516:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005518:	f7fb fa5a 	bl	80009d0 <__aeabi_dcmple>
 800551c:	bb30      	cbnz	r0, 800556c <_printf_float+0xc0>
 800551e:	2200      	movs	r2, #0
 8005520:	2300      	movs	r3, #0
 8005522:	4640      	mov	r0, r8
 8005524:	4651      	mov	r1, sl
 8005526:	f7fb fa49 	bl	80009bc <__aeabi_dcmplt>
 800552a:	b110      	cbz	r0, 8005532 <_printf_float+0x86>
 800552c:	232d      	movs	r3, #45	; 0x2d
 800552e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005532:	4b92      	ldr	r3, [pc, #584]	; (800577c <_printf_float+0x2d0>)
 8005534:	4892      	ldr	r0, [pc, #584]	; (8005780 <_printf_float+0x2d4>)
 8005536:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 800553a:	bf94      	ite	ls
 800553c:	4698      	movls	r8, r3
 800553e:	4680      	movhi	r8, r0
 8005540:	2303      	movs	r3, #3
 8005542:	f04f 0a00 	mov.w	sl, #0
 8005546:	6123      	str	r3, [r4, #16]
 8005548:	f02b 0304 	bic.w	r3, fp, #4
 800554c:	6023      	str	r3, [r4, #0]
 800554e:	4633      	mov	r3, r6
 8005550:	4621      	mov	r1, r4
 8005552:	4628      	mov	r0, r5
 8005554:	9700      	str	r7, [sp, #0]
 8005556:	aa0f      	add	r2, sp, #60	; 0x3c
 8005558:	f000 f9d4 	bl	8005904 <_printf_common>
 800555c:	3001      	adds	r0, #1
 800555e:	f040 8090 	bne.w	8005682 <_printf_float+0x1d6>
 8005562:	f04f 30ff 	mov.w	r0, #4294967295
 8005566:	b011      	add	sp, #68	; 0x44
 8005568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800556c:	4642      	mov	r2, r8
 800556e:	4653      	mov	r3, sl
 8005570:	4640      	mov	r0, r8
 8005572:	4651      	mov	r1, sl
 8005574:	f7fb fa4a 	bl	8000a0c <__aeabi_dcmpun>
 8005578:	b148      	cbz	r0, 800558e <_printf_float+0xe2>
 800557a:	f1ba 0f00 	cmp.w	sl, #0
 800557e:	bfb8      	it	lt
 8005580:	232d      	movlt	r3, #45	; 0x2d
 8005582:	4880      	ldr	r0, [pc, #512]	; (8005784 <_printf_float+0x2d8>)
 8005584:	bfb8      	it	lt
 8005586:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800558a:	4b7f      	ldr	r3, [pc, #508]	; (8005788 <_printf_float+0x2dc>)
 800558c:	e7d3      	b.n	8005536 <_printf_float+0x8a>
 800558e:	6863      	ldr	r3, [r4, #4]
 8005590:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8005594:	1c5a      	adds	r2, r3, #1
 8005596:	d142      	bne.n	800561e <_printf_float+0x172>
 8005598:	2306      	movs	r3, #6
 800559a:	6063      	str	r3, [r4, #4]
 800559c:	2200      	movs	r2, #0
 800559e:	9206      	str	r2, [sp, #24]
 80055a0:	aa0e      	add	r2, sp, #56	; 0x38
 80055a2:	e9cd 9204 	strd	r9, r2, [sp, #16]
 80055a6:	aa0d      	add	r2, sp, #52	; 0x34
 80055a8:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 80055ac:	9203      	str	r2, [sp, #12]
 80055ae:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 80055b2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80055b6:	6023      	str	r3, [r4, #0]
 80055b8:	6863      	ldr	r3, [r4, #4]
 80055ba:	4642      	mov	r2, r8
 80055bc:	9300      	str	r3, [sp, #0]
 80055be:	4628      	mov	r0, r5
 80055c0:	4653      	mov	r3, sl
 80055c2:	910b      	str	r1, [sp, #44]	; 0x2c
 80055c4:	f7ff fed4 	bl	8005370 <__cvt>
 80055c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80055ca:	4680      	mov	r8, r0
 80055cc:	2947      	cmp	r1, #71	; 0x47
 80055ce:	990d      	ldr	r1, [sp, #52]	; 0x34
 80055d0:	d108      	bne.n	80055e4 <_printf_float+0x138>
 80055d2:	1cc8      	adds	r0, r1, #3
 80055d4:	db02      	blt.n	80055dc <_printf_float+0x130>
 80055d6:	6863      	ldr	r3, [r4, #4]
 80055d8:	4299      	cmp	r1, r3
 80055da:	dd40      	ble.n	800565e <_printf_float+0x1b2>
 80055dc:	f1a9 0902 	sub.w	r9, r9, #2
 80055e0:	fa5f f989 	uxtb.w	r9, r9
 80055e4:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80055e8:	d81f      	bhi.n	800562a <_printf_float+0x17e>
 80055ea:	464a      	mov	r2, r9
 80055ec:	3901      	subs	r1, #1
 80055ee:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80055f2:	910d      	str	r1, [sp, #52]	; 0x34
 80055f4:	f7ff ff1b 	bl	800542e <__exponent>
 80055f8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80055fa:	4682      	mov	sl, r0
 80055fc:	1813      	adds	r3, r2, r0
 80055fe:	2a01      	cmp	r2, #1
 8005600:	6123      	str	r3, [r4, #16]
 8005602:	dc02      	bgt.n	800560a <_printf_float+0x15e>
 8005604:	6822      	ldr	r2, [r4, #0]
 8005606:	07d2      	lsls	r2, r2, #31
 8005608:	d501      	bpl.n	800560e <_printf_float+0x162>
 800560a:	3301      	adds	r3, #1
 800560c:	6123      	str	r3, [r4, #16]
 800560e:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8005612:	2b00      	cmp	r3, #0
 8005614:	d09b      	beq.n	800554e <_printf_float+0xa2>
 8005616:	232d      	movs	r3, #45	; 0x2d
 8005618:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800561c:	e797      	b.n	800554e <_printf_float+0xa2>
 800561e:	2947      	cmp	r1, #71	; 0x47
 8005620:	d1bc      	bne.n	800559c <_printf_float+0xf0>
 8005622:	2b00      	cmp	r3, #0
 8005624:	d1ba      	bne.n	800559c <_printf_float+0xf0>
 8005626:	2301      	movs	r3, #1
 8005628:	e7b7      	b.n	800559a <_printf_float+0xee>
 800562a:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 800562e:	d118      	bne.n	8005662 <_printf_float+0x1b6>
 8005630:	2900      	cmp	r1, #0
 8005632:	6863      	ldr	r3, [r4, #4]
 8005634:	dd0b      	ble.n	800564e <_printf_float+0x1a2>
 8005636:	6121      	str	r1, [r4, #16]
 8005638:	b913      	cbnz	r3, 8005640 <_printf_float+0x194>
 800563a:	6822      	ldr	r2, [r4, #0]
 800563c:	07d0      	lsls	r0, r2, #31
 800563e:	d502      	bpl.n	8005646 <_printf_float+0x19a>
 8005640:	3301      	adds	r3, #1
 8005642:	440b      	add	r3, r1
 8005644:	6123      	str	r3, [r4, #16]
 8005646:	f04f 0a00 	mov.w	sl, #0
 800564a:	65a1      	str	r1, [r4, #88]	; 0x58
 800564c:	e7df      	b.n	800560e <_printf_float+0x162>
 800564e:	b913      	cbnz	r3, 8005656 <_printf_float+0x1aa>
 8005650:	6822      	ldr	r2, [r4, #0]
 8005652:	07d2      	lsls	r2, r2, #31
 8005654:	d501      	bpl.n	800565a <_printf_float+0x1ae>
 8005656:	3302      	adds	r3, #2
 8005658:	e7f4      	b.n	8005644 <_printf_float+0x198>
 800565a:	2301      	movs	r3, #1
 800565c:	e7f2      	b.n	8005644 <_printf_float+0x198>
 800565e:	f04f 0967 	mov.w	r9, #103	; 0x67
 8005662:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005664:	4299      	cmp	r1, r3
 8005666:	db05      	blt.n	8005674 <_printf_float+0x1c8>
 8005668:	6823      	ldr	r3, [r4, #0]
 800566a:	6121      	str	r1, [r4, #16]
 800566c:	07d8      	lsls	r0, r3, #31
 800566e:	d5ea      	bpl.n	8005646 <_printf_float+0x19a>
 8005670:	1c4b      	adds	r3, r1, #1
 8005672:	e7e7      	b.n	8005644 <_printf_float+0x198>
 8005674:	2900      	cmp	r1, #0
 8005676:	bfcc      	ite	gt
 8005678:	2201      	movgt	r2, #1
 800567a:	f1c1 0202 	rsble	r2, r1, #2
 800567e:	4413      	add	r3, r2
 8005680:	e7e0      	b.n	8005644 <_printf_float+0x198>
 8005682:	6823      	ldr	r3, [r4, #0]
 8005684:	055a      	lsls	r2, r3, #21
 8005686:	d407      	bmi.n	8005698 <_printf_float+0x1ec>
 8005688:	6923      	ldr	r3, [r4, #16]
 800568a:	4642      	mov	r2, r8
 800568c:	4631      	mov	r1, r6
 800568e:	4628      	mov	r0, r5
 8005690:	47b8      	blx	r7
 8005692:	3001      	adds	r0, #1
 8005694:	d12b      	bne.n	80056ee <_printf_float+0x242>
 8005696:	e764      	b.n	8005562 <_printf_float+0xb6>
 8005698:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 800569c:	f240 80dd 	bls.w	800585a <_printf_float+0x3ae>
 80056a0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80056a4:	2200      	movs	r2, #0
 80056a6:	2300      	movs	r3, #0
 80056a8:	f7fb f97e 	bl	80009a8 <__aeabi_dcmpeq>
 80056ac:	2800      	cmp	r0, #0
 80056ae:	d033      	beq.n	8005718 <_printf_float+0x26c>
 80056b0:	2301      	movs	r3, #1
 80056b2:	4631      	mov	r1, r6
 80056b4:	4628      	mov	r0, r5
 80056b6:	4a35      	ldr	r2, [pc, #212]	; (800578c <_printf_float+0x2e0>)
 80056b8:	47b8      	blx	r7
 80056ba:	3001      	adds	r0, #1
 80056bc:	f43f af51 	beq.w	8005562 <_printf_float+0xb6>
 80056c0:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80056c4:	429a      	cmp	r2, r3
 80056c6:	db02      	blt.n	80056ce <_printf_float+0x222>
 80056c8:	6823      	ldr	r3, [r4, #0]
 80056ca:	07d8      	lsls	r0, r3, #31
 80056cc:	d50f      	bpl.n	80056ee <_printf_float+0x242>
 80056ce:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80056d2:	4631      	mov	r1, r6
 80056d4:	4628      	mov	r0, r5
 80056d6:	47b8      	blx	r7
 80056d8:	3001      	adds	r0, #1
 80056da:	f43f af42 	beq.w	8005562 <_printf_float+0xb6>
 80056de:	f04f 0800 	mov.w	r8, #0
 80056e2:	f104 091a 	add.w	r9, r4, #26
 80056e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80056e8:	3b01      	subs	r3, #1
 80056ea:	4543      	cmp	r3, r8
 80056ec:	dc09      	bgt.n	8005702 <_printf_float+0x256>
 80056ee:	6823      	ldr	r3, [r4, #0]
 80056f0:	079b      	lsls	r3, r3, #30
 80056f2:	f100 8102 	bmi.w	80058fa <_printf_float+0x44e>
 80056f6:	68e0      	ldr	r0, [r4, #12]
 80056f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80056fa:	4298      	cmp	r0, r3
 80056fc:	bfb8      	it	lt
 80056fe:	4618      	movlt	r0, r3
 8005700:	e731      	b.n	8005566 <_printf_float+0xba>
 8005702:	2301      	movs	r3, #1
 8005704:	464a      	mov	r2, r9
 8005706:	4631      	mov	r1, r6
 8005708:	4628      	mov	r0, r5
 800570a:	47b8      	blx	r7
 800570c:	3001      	adds	r0, #1
 800570e:	f43f af28 	beq.w	8005562 <_printf_float+0xb6>
 8005712:	f108 0801 	add.w	r8, r8, #1
 8005716:	e7e6      	b.n	80056e6 <_printf_float+0x23a>
 8005718:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800571a:	2b00      	cmp	r3, #0
 800571c:	dc38      	bgt.n	8005790 <_printf_float+0x2e4>
 800571e:	2301      	movs	r3, #1
 8005720:	4631      	mov	r1, r6
 8005722:	4628      	mov	r0, r5
 8005724:	4a19      	ldr	r2, [pc, #100]	; (800578c <_printf_float+0x2e0>)
 8005726:	47b8      	blx	r7
 8005728:	3001      	adds	r0, #1
 800572a:	f43f af1a 	beq.w	8005562 <_printf_float+0xb6>
 800572e:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8005732:	4313      	orrs	r3, r2
 8005734:	d102      	bne.n	800573c <_printf_float+0x290>
 8005736:	6823      	ldr	r3, [r4, #0]
 8005738:	07d9      	lsls	r1, r3, #31
 800573a:	d5d8      	bpl.n	80056ee <_printf_float+0x242>
 800573c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8005740:	4631      	mov	r1, r6
 8005742:	4628      	mov	r0, r5
 8005744:	47b8      	blx	r7
 8005746:	3001      	adds	r0, #1
 8005748:	f43f af0b 	beq.w	8005562 <_printf_float+0xb6>
 800574c:	f04f 0900 	mov.w	r9, #0
 8005750:	f104 0a1a 	add.w	sl, r4, #26
 8005754:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005756:	425b      	negs	r3, r3
 8005758:	454b      	cmp	r3, r9
 800575a:	dc01      	bgt.n	8005760 <_printf_float+0x2b4>
 800575c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800575e:	e794      	b.n	800568a <_printf_float+0x1de>
 8005760:	2301      	movs	r3, #1
 8005762:	4652      	mov	r2, sl
 8005764:	4631      	mov	r1, r6
 8005766:	4628      	mov	r0, r5
 8005768:	47b8      	blx	r7
 800576a:	3001      	adds	r0, #1
 800576c:	f43f aef9 	beq.w	8005562 <_printf_float+0xb6>
 8005770:	f109 0901 	add.w	r9, r9, #1
 8005774:	e7ee      	b.n	8005754 <_printf_float+0x2a8>
 8005776:	bf00      	nop
 8005778:	7fefffff 	.word	0x7fefffff
 800577c:	0800835c 	.word	0x0800835c
 8005780:	08008360 	.word	0x08008360
 8005784:	08008368 	.word	0x08008368
 8005788:	08008364 	.word	0x08008364
 800578c:	0800836c 	.word	0x0800836c
 8005790:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005792:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005794:	429a      	cmp	r2, r3
 8005796:	bfa8      	it	ge
 8005798:	461a      	movge	r2, r3
 800579a:	2a00      	cmp	r2, #0
 800579c:	4691      	mov	r9, r2
 800579e:	dc37      	bgt.n	8005810 <_printf_float+0x364>
 80057a0:	f04f 0b00 	mov.w	fp, #0
 80057a4:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80057a8:	f104 021a 	add.w	r2, r4, #26
 80057ac:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 80057b0:	ebaa 0309 	sub.w	r3, sl, r9
 80057b4:	455b      	cmp	r3, fp
 80057b6:	dc33      	bgt.n	8005820 <_printf_float+0x374>
 80057b8:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80057bc:	429a      	cmp	r2, r3
 80057be:	db3b      	blt.n	8005838 <_printf_float+0x38c>
 80057c0:	6823      	ldr	r3, [r4, #0]
 80057c2:	07da      	lsls	r2, r3, #31
 80057c4:	d438      	bmi.n	8005838 <_printf_float+0x38c>
 80057c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80057c8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80057ca:	eba3 020a 	sub.w	r2, r3, sl
 80057ce:	eba3 0901 	sub.w	r9, r3, r1
 80057d2:	4591      	cmp	r9, r2
 80057d4:	bfa8      	it	ge
 80057d6:	4691      	movge	r9, r2
 80057d8:	f1b9 0f00 	cmp.w	r9, #0
 80057dc:	dc34      	bgt.n	8005848 <_printf_float+0x39c>
 80057de:	f04f 0800 	mov.w	r8, #0
 80057e2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80057e6:	f104 0a1a 	add.w	sl, r4, #26
 80057ea:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80057ee:	1a9b      	subs	r3, r3, r2
 80057f0:	eba3 0309 	sub.w	r3, r3, r9
 80057f4:	4543      	cmp	r3, r8
 80057f6:	f77f af7a 	ble.w	80056ee <_printf_float+0x242>
 80057fa:	2301      	movs	r3, #1
 80057fc:	4652      	mov	r2, sl
 80057fe:	4631      	mov	r1, r6
 8005800:	4628      	mov	r0, r5
 8005802:	47b8      	blx	r7
 8005804:	3001      	adds	r0, #1
 8005806:	f43f aeac 	beq.w	8005562 <_printf_float+0xb6>
 800580a:	f108 0801 	add.w	r8, r8, #1
 800580e:	e7ec      	b.n	80057ea <_printf_float+0x33e>
 8005810:	4613      	mov	r3, r2
 8005812:	4631      	mov	r1, r6
 8005814:	4642      	mov	r2, r8
 8005816:	4628      	mov	r0, r5
 8005818:	47b8      	blx	r7
 800581a:	3001      	adds	r0, #1
 800581c:	d1c0      	bne.n	80057a0 <_printf_float+0x2f4>
 800581e:	e6a0      	b.n	8005562 <_printf_float+0xb6>
 8005820:	2301      	movs	r3, #1
 8005822:	4631      	mov	r1, r6
 8005824:	4628      	mov	r0, r5
 8005826:	920b      	str	r2, [sp, #44]	; 0x2c
 8005828:	47b8      	blx	r7
 800582a:	3001      	adds	r0, #1
 800582c:	f43f ae99 	beq.w	8005562 <_printf_float+0xb6>
 8005830:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005832:	f10b 0b01 	add.w	fp, fp, #1
 8005836:	e7b9      	b.n	80057ac <_printf_float+0x300>
 8005838:	4631      	mov	r1, r6
 800583a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800583e:	4628      	mov	r0, r5
 8005840:	47b8      	blx	r7
 8005842:	3001      	adds	r0, #1
 8005844:	d1bf      	bne.n	80057c6 <_printf_float+0x31a>
 8005846:	e68c      	b.n	8005562 <_printf_float+0xb6>
 8005848:	464b      	mov	r3, r9
 800584a:	4631      	mov	r1, r6
 800584c:	4628      	mov	r0, r5
 800584e:	eb08 020a 	add.w	r2, r8, sl
 8005852:	47b8      	blx	r7
 8005854:	3001      	adds	r0, #1
 8005856:	d1c2      	bne.n	80057de <_printf_float+0x332>
 8005858:	e683      	b.n	8005562 <_printf_float+0xb6>
 800585a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800585c:	2a01      	cmp	r2, #1
 800585e:	dc01      	bgt.n	8005864 <_printf_float+0x3b8>
 8005860:	07db      	lsls	r3, r3, #31
 8005862:	d537      	bpl.n	80058d4 <_printf_float+0x428>
 8005864:	2301      	movs	r3, #1
 8005866:	4642      	mov	r2, r8
 8005868:	4631      	mov	r1, r6
 800586a:	4628      	mov	r0, r5
 800586c:	47b8      	blx	r7
 800586e:	3001      	adds	r0, #1
 8005870:	f43f ae77 	beq.w	8005562 <_printf_float+0xb6>
 8005874:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8005878:	4631      	mov	r1, r6
 800587a:	4628      	mov	r0, r5
 800587c:	47b8      	blx	r7
 800587e:	3001      	adds	r0, #1
 8005880:	f43f ae6f 	beq.w	8005562 <_printf_float+0xb6>
 8005884:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8005888:	2200      	movs	r2, #0
 800588a:	2300      	movs	r3, #0
 800588c:	f7fb f88c 	bl	80009a8 <__aeabi_dcmpeq>
 8005890:	b9d8      	cbnz	r0, 80058ca <_printf_float+0x41e>
 8005892:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005894:	f108 0201 	add.w	r2, r8, #1
 8005898:	3b01      	subs	r3, #1
 800589a:	4631      	mov	r1, r6
 800589c:	4628      	mov	r0, r5
 800589e:	47b8      	blx	r7
 80058a0:	3001      	adds	r0, #1
 80058a2:	d10e      	bne.n	80058c2 <_printf_float+0x416>
 80058a4:	e65d      	b.n	8005562 <_printf_float+0xb6>
 80058a6:	2301      	movs	r3, #1
 80058a8:	464a      	mov	r2, r9
 80058aa:	4631      	mov	r1, r6
 80058ac:	4628      	mov	r0, r5
 80058ae:	47b8      	blx	r7
 80058b0:	3001      	adds	r0, #1
 80058b2:	f43f ae56 	beq.w	8005562 <_printf_float+0xb6>
 80058b6:	f108 0801 	add.w	r8, r8, #1
 80058ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80058bc:	3b01      	subs	r3, #1
 80058be:	4543      	cmp	r3, r8
 80058c0:	dcf1      	bgt.n	80058a6 <_printf_float+0x3fa>
 80058c2:	4653      	mov	r3, sl
 80058c4:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80058c8:	e6e0      	b.n	800568c <_printf_float+0x1e0>
 80058ca:	f04f 0800 	mov.w	r8, #0
 80058ce:	f104 091a 	add.w	r9, r4, #26
 80058d2:	e7f2      	b.n	80058ba <_printf_float+0x40e>
 80058d4:	2301      	movs	r3, #1
 80058d6:	4642      	mov	r2, r8
 80058d8:	e7df      	b.n	800589a <_printf_float+0x3ee>
 80058da:	2301      	movs	r3, #1
 80058dc:	464a      	mov	r2, r9
 80058de:	4631      	mov	r1, r6
 80058e0:	4628      	mov	r0, r5
 80058e2:	47b8      	blx	r7
 80058e4:	3001      	adds	r0, #1
 80058e6:	f43f ae3c 	beq.w	8005562 <_printf_float+0xb6>
 80058ea:	f108 0801 	add.w	r8, r8, #1
 80058ee:	68e3      	ldr	r3, [r4, #12]
 80058f0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80058f2:	1a5b      	subs	r3, r3, r1
 80058f4:	4543      	cmp	r3, r8
 80058f6:	dcf0      	bgt.n	80058da <_printf_float+0x42e>
 80058f8:	e6fd      	b.n	80056f6 <_printf_float+0x24a>
 80058fa:	f04f 0800 	mov.w	r8, #0
 80058fe:	f104 0919 	add.w	r9, r4, #25
 8005902:	e7f4      	b.n	80058ee <_printf_float+0x442>

08005904 <_printf_common>:
 8005904:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005908:	4616      	mov	r6, r2
 800590a:	4699      	mov	r9, r3
 800590c:	688a      	ldr	r2, [r1, #8]
 800590e:	690b      	ldr	r3, [r1, #16]
 8005910:	4607      	mov	r7, r0
 8005912:	4293      	cmp	r3, r2
 8005914:	bfb8      	it	lt
 8005916:	4613      	movlt	r3, r2
 8005918:	6033      	str	r3, [r6, #0]
 800591a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800591e:	460c      	mov	r4, r1
 8005920:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005924:	b10a      	cbz	r2, 800592a <_printf_common+0x26>
 8005926:	3301      	adds	r3, #1
 8005928:	6033      	str	r3, [r6, #0]
 800592a:	6823      	ldr	r3, [r4, #0]
 800592c:	0699      	lsls	r1, r3, #26
 800592e:	bf42      	ittt	mi
 8005930:	6833      	ldrmi	r3, [r6, #0]
 8005932:	3302      	addmi	r3, #2
 8005934:	6033      	strmi	r3, [r6, #0]
 8005936:	6825      	ldr	r5, [r4, #0]
 8005938:	f015 0506 	ands.w	r5, r5, #6
 800593c:	d106      	bne.n	800594c <_printf_common+0x48>
 800593e:	f104 0a19 	add.w	sl, r4, #25
 8005942:	68e3      	ldr	r3, [r4, #12]
 8005944:	6832      	ldr	r2, [r6, #0]
 8005946:	1a9b      	subs	r3, r3, r2
 8005948:	42ab      	cmp	r3, r5
 800594a:	dc28      	bgt.n	800599e <_printf_common+0x9a>
 800594c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8005950:	1e13      	subs	r3, r2, #0
 8005952:	6822      	ldr	r2, [r4, #0]
 8005954:	bf18      	it	ne
 8005956:	2301      	movne	r3, #1
 8005958:	0692      	lsls	r2, r2, #26
 800595a:	d42d      	bmi.n	80059b8 <_printf_common+0xb4>
 800595c:	4649      	mov	r1, r9
 800595e:	4638      	mov	r0, r7
 8005960:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005964:	47c0      	blx	r8
 8005966:	3001      	adds	r0, #1
 8005968:	d020      	beq.n	80059ac <_printf_common+0xa8>
 800596a:	6823      	ldr	r3, [r4, #0]
 800596c:	68e5      	ldr	r5, [r4, #12]
 800596e:	f003 0306 	and.w	r3, r3, #6
 8005972:	2b04      	cmp	r3, #4
 8005974:	bf18      	it	ne
 8005976:	2500      	movne	r5, #0
 8005978:	6832      	ldr	r2, [r6, #0]
 800597a:	f04f 0600 	mov.w	r6, #0
 800597e:	68a3      	ldr	r3, [r4, #8]
 8005980:	bf08      	it	eq
 8005982:	1aad      	subeq	r5, r5, r2
 8005984:	6922      	ldr	r2, [r4, #16]
 8005986:	bf08      	it	eq
 8005988:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800598c:	4293      	cmp	r3, r2
 800598e:	bfc4      	itt	gt
 8005990:	1a9b      	subgt	r3, r3, r2
 8005992:	18ed      	addgt	r5, r5, r3
 8005994:	341a      	adds	r4, #26
 8005996:	42b5      	cmp	r5, r6
 8005998:	d11a      	bne.n	80059d0 <_printf_common+0xcc>
 800599a:	2000      	movs	r0, #0
 800599c:	e008      	b.n	80059b0 <_printf_common+0xac>
 800599e:	2301      	movs	r3, #1
 80059a0:	4652      	mov	r2, sl
 80059a2:	4649      	mov	r1, r9
 80059a4:	4638      	mov	r0, r7
 80059a6:	47c0      	blx	r8
 80059a8:	3001      	adds	r0, #1
 80059aa:	d103      	bne.n	80059b4 <_printf_common+0xb0>
 80059ac:	f04f 30ff 	mov.w	r0, #4294967295
 80059b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80059b4:	3501      	adds	r5, #1
 80059b6:	e7c4      	b.n	8005942 <_printf_common+0x3e>
 80059b8:	2030      	movs	r0, #48	; 0x30
 80059ba:	18e1      	adds	r1, r4, r3
 80059bc:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80059c0:	1c5a      	adds	r2, r3, #1
 80059c2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80059c6:	4422      	add	r2, r4
 80059c8:	3302      	adds	r3, #2
 80059ca:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80059ce:	e7c5      	b.n	800595c <_printf_common+0x58>
 80059d0:	2301      	movs	r3, #1
 80059d2:	4622      	mov	r2, r4
 80059d4:	4649      	mov	r1, r9
 80059d6:	4638      	mov	r0, r7
 80059d8:	47c0      	blx	r8
 80059da:	3001      	adds	r0, #1
 80059dc:	d0e6      	beq.n	80059ac <_printf_common+0xa8>
 80059de:	3601      	adds	r6, #1
 80059e0:	e7d9      	b.n	8005996 <_printf_common+0x92>
	...

080059e4 <_printf_i>:
 80059e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80059e8:	7e0f      	ldrb	r7, [r1, #24]
 80059ea:	4691      	mov	r9, r2
 80059ec:	2f78      	cmp	r7, #120	; 0x78
 80059ee:	4680      	mov	r8, r0
 80059f0:	460c      	mov	r4, r1
 80059f2:	469a      	mov	sl, r3
 80059f4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80059f6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80059fa:	d807      	bhi.n	8005a0c <_printf_i+0x28>
 80059fc:	2f62      	cmp	r7, #98	; 0x62
 80059fe:	d80a      	bhi.n	8005a16 <_printf_i+0x32>
 8005a00:	2f00      	cmp	r7, #0
 8005a02:	f000 80d9 	beq.w	8005bb8 <_printf_i+0x1d4>
 8005a06:	2f58      	cmp	r7, #88	; 0x58
 8005a08:	f000 80a4 	beq.w	8005b54 <_printf_i+0x170>
 8005a0c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005a10:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8005a14:	e03a      	b.n	8005a8c <_printf_i+0xa8>
 8005a16:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8005a1a:	2b15      	cmp	r3, #21
 8005a1c:	d8f6      	bhi.n	8005a0c <_printf_i+0x28>
 8005a1e:	a101      	add	r1, pc, #4	; (adr r1, 8005a24 <_printf_i+0x40>)
 8005a20:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005a24:	08005a7d 	.word	0x08005a7d
 8005a28:	08005a91 	.word	0x08005a91
 8005a2c:	08005a0d 	.word	0x08005a0d
 8005a30:	08005a0d 	.word	0x08005a0d
 8005a34:	08005a0d 	.word	0x08005a0d
 8005a38:	08005a0d 	.word	0x08005a0d
 8005a3c:	08005a91 	.word	0x08005a91
 8005a40:	08005a0d 	.word	0x08005a0d
 8005a44:	08005a0d 	.word	0x08005a0d
 8005a48:	08005a0d 	.word	0x08005a0d
 8005a4c:	08005a0d 	.word	0x08005a0d
 8005a50:	08005b9f 	.word	0x08005b9f
 8005a54:	08005ac1 	.word	0x08005ac1
 8005a58:	08005b81 	.word	0x08005b81
 8005a5c:	08005a0d 	.word	0x08005a0d
 8005a60:	08005a0d 	.word	0x08005a0d
 8005a64:	08005bc1 	.word	0x08005bc1
 8005a68:	08005a0d 	.word	0x08005a0d
 8005a6c:	08005ac1 	.word	0x08005ac1
 8005a70:	08005a0d 	.word	0x08005a0d
 8005a74:	08005a0d 	.word	0x08005a0d
 8005a78:	08005b89 	.word	0x08005b89
 8005a7c:	682b      	ldr	r3, [r5, #0]
 8005a7e:	1d1a      	adds	r2, r3, #4
 8005a80:	681b      	ldr	r3, [r3, #0]
 8005a82:	602a      	str	r2, [r5, #0]
 8005a84:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005a88:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005a8c:	2301      	movs	r3, #1
 8005a8e:	e0a4      	b.n	8005bda <_printf_i+0x1f6>
 8005a90:	6820      	ldr	r0, [r4, #0]
 8005a92:	6829      	ldr	r1, [r5, #0]
 8005a94:	0606      	lsls	r6, r0, #24
 8005a96:	f101 0304 	add.w	r3, r1, #4
 8005a9a:	d50a      	bpl.n	8005ab2 <_printf_i+0xce>
 8005a9c:	680e      	ldr	r6, [r1, #0]
 8005a9e:	602b      	str	r3, [r5, #0]
 8005aa0:	2e00      	cmp	r6, #0
 8005aa2:	da03      	bge.n	8005aac <_printf_i+0xc8>
 8005aa4:	232d      	movs	r3, #45	; 0x2d
 8005aa6:	4276      	negs	r6, r6
 8005aa8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005aac:	230a      	movs	r3, #10
 8005aae:	485e      	ldr	r0, [pc, #376]	; (8005c28 <_printf_i+0x244>)
 8005ab0:	e019      	b.n	8005ae6 <_printf_i+0x102>
 8005ab2:	680e      	ldr	r6, [r1, #0]
 8005ab4:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005ab8:	602b      	str	r3, [r5, #0]
 8005aba:	bf18      	it	ne
 8005abc:	b236      	sxthne	r6, r6
 8005abe:	e7ef      	b.n	8005aa0 <_printf_i+0xbc>
 8005ac0:	682b      	ldr	r3, [r5, #0]
 8005ac2:	6820      	ldr	r0, [r4, #0]
 8005ac4:	1d19      	adds	r1, r3, #4
 8005ac6:	6029      	str	r1, [r5, #0]
 8005ac8:	0601      	lsls	r1, r0, #24
 8005aca:	d501      	bpl.n	8005ad0 <_printf_i+0xec>
 8005acc:	681e      	ldr	r6, [r3, #0]
 8005ace:	e002      	b.n	8005ad6 <_printf_i+0xf2>
 8005ad0:	0646      	lsls	r6, r0, #25
 8005ad2:	d5fb      	bpl.n	8005acc <_printf_i+0xe8>
 8005ad4:	881e      	ldrh	r6, [r3, #0]
 8005ad6:	2f6f      	cmp	r7, #111	; 0x6f
 8005ad8:	bf0c      	ite	eq
 8005ada:	2308      	moveq	r3, #8
 8005adc:	230a      	movne	r3, #10
 8005ade:	4852      	ldr	r0, [pc, #328]	; (8005c28 <_printf_i+0x244>)
 8005ae0:	2100      	movs	r1, #0
 8005ae2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8005ae6:	6865      	ldr	r5, [r4, #4]
 8005ae8:	2d00      	cmp	r5, #0
 8005aea:	bfa8      	it	ge
 8005aec:	6821      	ldrge	r1, [r4, #0]
 8005aee:	60a5      	str	r5, [r4, #8]
 8005af0:	bfa4      	itt	ge
 8005af2:	f021 0104 	bicge.w	r1, r1, #4
 8005af6:	6021      	strge	r1, [r4, #0]
 8005af8:	b90e      	cbnz	r6, 8005afe <_printf_i+0x11a>
 8005afa:	2d00      	cmp	r5, #0
 8005afc:	d04d      	beq.n	8005b9a <_printf_i+0x1b6>
 8005afe:	4615      	mov	r5, r2
 8005b00:	fbb6 f1f3 	udiv	r1, r6, r3
 8005b04:	fb03 6711 	mls	r7, r3, r1, r6
 8005b08:	5dc7      	ldrb	r7, [r0, r7]
 8005b0a:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8005b0e:	4637      	mov	r7, r6
 8005b10:	42bb      	cmp	r3, r7
 8005b12:	460e      	mov	r6, r1
 8005b14:	d9f4      	bls.n	8005b00 <_printf_i+0x11c>
 8005b16:	2b08      	cmp	r3, #8
 8005b18:	d10b      	bne.n	8005b32 <_printf_i+0x14e>
 8005b1a:	6823      	ldr	r3, [r4, #0]
 8005b1c:	07de      	lsls	r6, r3, #31
 8005b1e:	d508      	bpl.n	8005b32 <_printf_i+0x14e>
 8005b20:	6923      	ldr	r3, [r4, #16]
 8005b22:	6861      	ldr	r1, [r4, #4]
 8005b24:	4299      	cmp	r1, r3
 8005b26:	bfde      	ittt	le
 8005b28:	2330      	movle	r3, #48	; 0x30
 8005b2a:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005b2e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8005b32:	1b52      	subs	r2, r2, r5
 8005b34:	6122      	str	r2, [r4, #16]
 8005b36:	464b      	mov	r3, r9
 8005b38:	4621      	mov	r1, r4
 8005b3a:	4640      	mov	r0, r8
 8005b3c:	f8cd a000 	str.w	sl, [sp]
 8005b40:	aa03      	add	r2, sp, #12
 8005b42:	f7ff fedf 	bl	8005904 <_printf_common>
 8005b46:	3001      	adds	r0, #1
 8005b48:	d14c      	bne.n	8005be4 <_printf_i+0x200>
 8005b4a:	f04f 30ff 	mov.w	r0, #4294967295
 8005b4e:	b004      	add	sp, #16
 8005b50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005b54:	4834      	ldr	r0, [pc, #208]	; (8005c28 <_printf_i+0x244>)
 8005b56:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8005b5a:	6829      	ldr	r1, [r5, #0]
 8005b5c:	6823      	ldr	r3, [r4, #0]
 8005b5e:	f851 6b04 	ldr.w	r6, [r1], #4
 8005b62:	6029      	str	r1, [r5, #0]
 8005b64:	061d      	lsls	r5, r3, #24
 8005b66:	d514      	bpl.n	8005b92 <_printf_i+0x1ae>
 8005b68:	07df      	lsls	r7, r3, #31
 8005b6a:	bf44      	itt	mi
 8005b6c:	f043 0320 	orrmi.w	r3, r3, #32
 8005b70:	6023      	strmi	r3, [r4, #0]
 8005b72:	b91e      	cbnz	r6, 8005b7c <_printf_i+0x198>
 8005b74:	6823      	ldr	r3, [r4, #0]
 8005b76:	f023 0320 	bic.w	r3, r3, #32
 8005b7a:	6023      	str	r3, [r4, #0]
 8005b7c:	2310      	movs	r3, #16
 8005b7e:	e7af      	b.n	8005ae0 <_printf_i+0xfc>
 8005b80:	6823      	ldr	r3, [r4, #0]
 8005b82:	f043 0320 	orr.w	r3, r3, #32
 8005b86:	6023      	str	r3, [r4, #0]
 8005b88:	2378      	movs	r3, #120	; 0x78
 8005b8a:	4828      	ldr	r0, [pc, #160]	; (8005c2c <_printf_i+0x248>)
 8005b8c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8005b90:	e7e3      	b.n	8005b5a <_printf_i+0x176>
 8005b92:	0659      	lsls	r1, r3, #25
 8005b94:	bf48      	it	mi
 8005b96:	b2b6      	uxthmi	r6, r6
 8005b98:	e7e6      	b.n	8005b68 <_printf_i+0x184>
 8005b9a:	4615      	mov	r5, r2
 8005b9c:	e7bb      	b.n	8005b16 <_printf_i+0x132>
 8005b9e:	682b      	ldr	r3, [r5, #0]
 8005ba0:	6826      	ldr	r6, [r4, #0]
 8005ba2:	1d18      	adds	r0, r3, #4
 8005ba4:	6961      	ldr	r1, [r4, #20]
 8005ba6:	6028      	str	r0, [r5, #0]
 8005ba8:	0635      	lsls	r5, r6, #24
 8005baa:	681b      	ldr	r3, [r3, #0]
 8005bac:	d501      	bpl.n	8005bb2 <_printf_i+0x1ce>
 8005bae:	6019      	str	r1, [r3, #0]
 8005bb0:	e002      	b.n	8005bb8 <_printf_i+0x1d4>
 8005bb2:	0670      	lsls	r0, r6, #25
 8005bb4:	d5fb      	bpl.n	8005bae <_printf_i+0x1ca>
 8005bb6:	8019      	strh	r1, [r3, #0]
 8005bb8:	2300      	movs	r3, #0
 8005bba:	4615      	mov	r5, r2
 8005bbc:	6123      	str	r3, [r4, #16]
 8005bbe:	e7ba      	b.n	8005b36 <_printf_i+0x152>
 8005bc0:	682b      	ldr	r3, [r5, #0]
 8005bc2:	2100      	movs	r1, #0
 8005bc4:	1d1a      	adds	r2, r3, #4
 8005bc6:	602a      	str	r2, [r5, #0]
 8005bc8:	681d      	ldr	r5, [r3, #0]
 8005bca:	6862      	ldr	r2, [r4, #4]
 8005bcc:	4628      	mov	r0, r5
 8005bce:	f000 ff09 	bl	80069e4 <memchr>
 8005bd2:	b108      	cbz	r0, 8005bd8 <_printf_i+0x1f4>
 8005bd4:	1b40      	subs	r0, r0, r5
 8005bd6:	6060      	str	r0, [r4, #4]
 8005bd8:	6863      	ldr	r3, [r4, #4]
 8005bda:	6123      	str	r3, [r4, #16]
 8005bdc:	2300      	movs	r3, #0
 8005bde:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005be2:	e7a8      	b.n	8005b36 <_printf_i+0x152>
 8005be4:	462a      	mov	r2, r5
 8005be6:	4649      	mov	r1, r9
 8005be8:	4640      	mov	r0, r8
 8005bea:	6923      	ldr	r3, [r4, #16]
 8005bec:	47d0      	blx	sl
 8005bee:	3001      	adds	r0, #1
 8005bf0:	d0ab      	beq.n	8005b4a <_printf_i+0x166>
 8005bf2:	6823      	ldr	r3, [r4, #0]
 8005bf4:	079b      	lsls	r3, r3, #30
 8005bf6:	d413      	bmi.n	8005c20 <_printf_i+0x23c>
 8005bf8:	68e0      	ldr	r0, [r4, #12]
 8005bfa:	9b03      	ldr	r3, [sp, #12]
 8005bfc:	4298      	cmp	r0, r3
 8005bfe:	bfb8      	it	lt
 8005c00:	4618      	movlt	r0, r3
 8005c02:	e7a4      	b.n	8005b4e <_printf_i+0x16a>
 8005c04:	2301      	movs	r3, #1
 8005c06:	4632      	mov	r2, r6
 8005c08:	4649      	mov	r1, r9
 8005c0a:	4640      	mov	r0, r8
 8005c0c:	47d0      	blx	sl
 8005c0e:	3001      	adds	r0, #1
 8005c10:	d09b      	beq.n	8005b4a <_printf_i+0x166>
 8005c12:	3501      	adds	r5, #1
 8005c14:	68e3      	ldr	r3, [r4, #12]
 8005c16:	9903      	ldr	r1, [sp, #12]
 8005c18:	1a5b      	subs	r3, r3, r1
 8005c1a:	42ab      	cmp	r3, r5
 8005c1c:	dcf2      	bgt.n	8005c04 <_printf_i+0x220>
 8005c1e:	e7eb      	b.n	8005bf8 <_printf_i+0x214>
 8005c20:	2500      	movs	r5, #0
 8005c22:	f104 0619 	add.w	r6, r4, #25
 8005c26:	e7f5      	b.n	8005c14 <_printf_i+0x230>
 8005c28:	0800836e 	.word	0x0800836e
 8005c2c:	0800837f 	.word	0x0800837f

08005c30 <sniprintf>:
 8005c30:	b40c      	push	{r2, r3}
 8005c32:	b530      	push	{r4, r5, lr}
 8005c34:	4b17      	ldr	r3, [pc, #92]	; (8005c94 <sniprintf+0x64>)
 8005c36:	1e0c      	subs	r4, r1, #0
 8005c38:	681d      	ldr	r5, [r3, #0]
 8005c3a:	b09d      	sub	sp, #116	; 0x74
 8005c3c:	da08      	bge.n	8005c50 <sniprintf+0x20>
 8005c3e:	238b      	movs	r3, #139	; 0x8b
 8005c40:	f04f 30ff 	mov.w	r0, #4294967295
 8005c44:	602b      	str	r3, [r5, #0]
 8005c46:	b01d      	add	sp, #116	; 0x74
 8005c48:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005c4c:	b002      	add	sp, #8
 8005c4e:	4770      	bx	lr
 8005c50:	f44f 7302 	mov.w	r3, #520	; 0x208
 8005c54:	f8ad 3014 	strh.w	r3, [sp, #20]
 8005c58:	bf0c      	ite	eq
 8005c5a:	4623      	moveq	r3, r4
 8005c5c:	f104 33ff 	addne.w	r3, r4, #4294967295
 8005c60:	9304      	str	r3, [sp, #16]
 8005c62:	9307      	str	r3, [sp, #28]
 8005c64:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005c68:	9002      	str	r0, [sp, #8]
 8005c6a:	9006      	str	r0, [sp, #24]
 8005c6c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8005c70:	4628      	mov	r0, r5
 8005c72:	ab21      	add	r3, sp, #132	; 0x84
 8005c74:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8005c76:	a902      	add	r1, sp, #8
 8005c78:	9301      	str	r3, [sp, #4]
 8005c7a:	f001 fb9d 	bl	80073b8 <_svfiprintf_r>
 8005c7e:	1c43      	adds	r3, r0, #1
 8005c80:	bfbc      	itt	lt
 8005c82:	238b      	movlt	r3, #139	; 0x8b
 8005c84:	602b      	strlt	r3, [r5, #0]
 8005c86:	2c00      	cmp	r4, #0
 8005c88:	d0dd      	beq.n	8005c46 <sniprintf+0x16>
 8005c8a:	2200      	movs	r2, #0
 8005c8c:	9b02      	ldr	r3, [sp, #8]
 8005c8e:	701a      	strb	r2, [r3, #0]
 8005c90:	e7d9      	b.n	8005c46 <sniprintf+0x16>
 8005c92:	bf00      	nop
 8005c94:	2000000c 	.word	0x2000000c

08005c98 <siprintf>:
 8005c98:	b40e      	push	{r1, r2, r3}
 8005c9a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8005c9e:	b500      	push	{lr}
 8005ca0:	b09c      	sub	sp, #112	; 0x70
 8005ca2:	ab1d      	add	r3, sp, #116	; 0x74
 8005ca4:	9002      	str	r0, [sp, #8]
 8005ca6:	9006      	str	r0, [sp, #24]
 8005ca8:	9107      	str	r1, [sp, #28]
 8005caa:	9104      	str	r1, [sp, #16]
 8005cac:	4808      	ldr	r0, [pc, #32]	; (8005cd0 <siprintf+0x38>)
 8005cae:	4909      	ldr	r1, [pc, #36]	; (8005cd4 <siprintf+0x3c>)
 8005cb0:	f853 2b04 	ldr.w	r2, [r3], #4
 8005cb4:	9105      	str	r1, [sp, #20]
 8005cb6:	6800      	ldr	r0, [r0, #0]
 8005cb8:	a902      	add	r1, sp, #8
 8005cba:	9301      	str	r3, [sp, #4]
 8005cbc:	f001 fb7c 	bl	80073b8 <_svfiprintf_r>
 8005cc0:	2200      	movs	r2, #0
 8005cc2:	9b02      	ldr	r3, [sp, #8]
 8005cc4:	701a      	strb	r2, [r3, #0]
 8005cc6:	b01c      	add	sp, #112	; 0x70
 8005cc8:	f85d eb04 	ldr.w	lr, [sp], #4
 8005ccc:	b003      	add	sp, #12
 8005cce:	4770      	bx	lr
 8005cd0:	2000000c 	.word	0x2000000c
 8005cd4:	ffff0208 	.word	0xffff0208

08005cd8 <quorem>:
 8005cd8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cdc:	6903      	ldr	r3, [r0, #16]
 8005cde:	690c      	ldr	r4, [r1, #16]
 8005ce0:	4607      	mov	r7, r0
 8005ce2:	42a3      	cmp	r3, r4
 8005ce4:	f2c0 8082 	blt.w	8005dec <quorem+0x114>
 8005ce8:	3c01      	subs	r4, #1
 8005cea:	f100 0514 	add.w	r5, r0, #20
 8005cee:	f101 0814 	add.w	r8, r1, #20
 8005cf2:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8005cf6:	9301      	str	r3, [sp, #4]
 8005cf8:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8005cfc:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8005d00:	3301      	adds	r3, #1
 8005d02:	429a      	cmp	r2, r3
 8005d04:	fbb2 f6f3 	udiv	r6, r2, r3
 8005d08:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8005d0c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8005d10:	d331      	bcc.n	8005d76 <quorem+0x9e>
 8005d12:	f04f 0e00 	mov.w	lr, #0
 8005d16:	4640      	mov	r0, r8
 8005d18:	46ac      	mov	ip, r5
 8005d1a:	46f2      	mov	sl, lr
 8005d1c:	f850 2b04 	ldr.w	r2, [r0], #4
 8005d20:	b293      	uxth	r3, r2
 8005d22:	fb06 e303 	mla	r3, r6, r3, lr
 8005d26:	0c12      	lsrs	r2, r2, #16
 8005d28:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8005d2c:	b29b      	uxth	r3, r3
 8005d2e:	fb06 e202 	mla	r2, r6, r2, lr
 8005d32:	ebaa 0303 	sub.w	r3, sl, r3
 8005d36:	f8dc a000 	ldr.w	sl, [ip]
 8005d3a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8005d3e:	fa1f fa8a 	uxth.w	sl, sl
 8005d42:	4453      	add	r3, sl
 8005d44:	f8dc a000 	ldr.w	sl, [ip]
 8005d48:	b292      	uxth	r2, r2
 8005d4a:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8005d4e:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005d52:	b29b      	uxth	r3, r3
 8005d54:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005d58:	4581      	cmp	r9, r0
 8005d5a:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8005d5e:	f84c 3b04 	str.w	r3, [ip], #4
 8005d62:	d2db      	bcs.n	8005d1c <quorem+0x44>
 8005d64:	f855 300b 	ldr.w	r3, [r5, fp]
 8005d68:	b92b      	cbnz	r3, 8005d76 <quorem+0x9e>
 8005d6a:	9b01      	ldr	r3, [sp, #4]
 8005d6c:	3b04      	subs	r3, #4
 8005d6e:	429d      	cmp	r5, r3
 8005d70:	461a      	mov	r2, r3
 8005d72:	d32f      	bcc.n	8005dd4 <quorem+0xfc>
 8005d74:	613c      	str	r4, [r7, #16]
 8005d76:	4638      	mov	r0, r7
 8005d78:	f001 f8ce 	bl	8006f18 <__mcmp>
 8005d7c:	2800      	cmp	r0, #0
 8005d7e:	db25      	blt.n	8005dcc <quorem+0xf4>
 8005d80:	4628      	mov	r0, r5
 8005d82:	f04f 0c00 	mov.w	ip, #0
 8005d86:	3601      	adds	r6, #1
 8005d88:	f858 1b04 	ldr.w	r1, [r8], #4
 8005d8c:	f8d0 e000 	ldr.w	lr, [r0]
 8005d90:	b28b      	uxth	r3, r1
 8005d92:	ebac 0303 	sub.w	r3, ip, r3
 8005d96:	fa1f f28e 	uxth.w	r2, lr
 8005d9a:	4413      	add	r3, r2
 8005d9c:	0c0a      	lsrs	r2, r1, #16
 8005d9e:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8005da2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005da6:	b29b      	uxth	r3, r3
 8005da8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005dac:	45c1      	cmp	r9, r8
 8005dae:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8005db2:	f840 3b04 	str.w	r3, [r0], #4
 8005db6:	d2e7      	bcs.n	8005d88 <quorem+0xb0>
 8005db8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8005dbc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8005dc0:	b922      	cbnz	r2, 8005dcc <quorem+0xf4>
 8005dc2:	3b04      	subs	r3, #4
 8005dc4:	429d      	cmp	r5, r3
 8005dc6:	461a      	mov	r2, r3
 8005dc8:	d30a      	bcc.n	8005de0 <quorem+0x108>
 8005dca:	613c      	str	r4, [r7, #16]
 8005dcc:	4630      	mov	r0, r6
 8005dce:	b003      	add	sp, #12
 8005dd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005dd4:	6812      	ldr	r2, [r2, #0]
 8005dd6:	3b04      	subs	r3, #4
 8005dd8:	2a00      	cmp	r2, #0
 8005dda:	d1cb      	bne.n	8005d74 <quorem+0x9c>
 8005ddc:	3c01      	subs	r4, #1
 8005dde:	e7c6      	b.n	8005d6e <quorem+0x96>
 8005de0:	6812      	ldr	r2, [r2, #0]
 8005de2:	3b04      	subs	r3, #4
 8005de4:	2a00      	cmp	r2, #0
 8005de6:	d1f0      	bne.n	8005dca <quorem+0xf2>
 8005de8:	3c01      	subs	r4, #1
 8005dea:	e7eb      	b.n	8005dc4 <quorem+0xec>
 8005dec:	2000      	movs	r0, #0
 8005dee:	e7ee      	b.n	8005dce <quorem+0xf6>

08005df0 <_dtoa_r>:
 8005df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005df4:	4616      	mov	r6, r2
 8005df6:	461f      	mov	r7, r3
 8005df8:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8005dfa:	b099      	sub	sp, #100	; 0x64
 8005dfc:	4605      	mov	r5, r0
 8005dfe:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8005e02:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8005e06:	b974      	cbnz	r4, 8005e26 <_dtoa_r+0x36>
 8005e08:	2010      	movs	r0, #16
 8005e0a:	f000 fde3 	bl	80069d4 <malloc>
 8005e0e:	4602      	mov	r2, r0
 8005e10:	6268      	str	r0, [r5, #36]	; 0x24
 8005e12:	b920      	cbnz	r0, 8005e1e <_dtoa_r+0x2e>
 8005e14:	21ea      	movs	r1, #234	; 0xea
 8005e16:	4ba8      	ldr	r3, [pc, #672]	; (80060b8 <_dtoa_r+0x2c8>)
 8005e18:	48a8      	ldr	r0, [pc, #672]	; (80060bc <_dtoa_r+0x2cc>)
 8005e1a:	f001 fbdd 	bl	80075d8 <__assert_func>
 8005e1e:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8005e22:	6004      	str	r4, [r0, #0]
 8005e24:	60c4      	str	r4, [r0, #12]
 8005e26:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005e28:	6819      	ldr	r1, [r3, #0]
 8005e2a:	b151      	cbz	r1, 8005e42 <_dtoa_r+0x52>
 8005e2c:	685a      	ldr	r2, [r3, #4]
 8005e2e:	2301      	movs	r3, #1
 8005e30:	4093      	lsls	r3, r2
 8005e32:	604a      	str	r2, [r1, #4]
 8005e34:	608b      	str	r3, [r1, #8]
 8005e36:	4628      	mov	r0, r5
 8005e38:	f000 fe30 	bl	8006a9c <_Bfree>
 8005e3c:	2200      	movs	r2, #0
 8005e3e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8005e40:	601a      	str	r2, [r3, #0]
 8005e42:	1e3b      	subs	r3, r7, #0
 8005e44:	bfaf      	iteee	ge
 8005e46:	2300      	movge	r3, #0
 8005e48:	2201      	movlt	r2, #1
 8005e4a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8005e4e:	9305      	strlt	r3, [sp, #20]
 8005e50:	bfa8      	it	ge
 8005e52:	f8c8 3000 	strge.w	r3, [r8]
 8005e56:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8005e5a:	4b99      	ldr	r3, [pc, #612]	; (80060c0 <_dtoa_r+0x2d0>)
 8005e5c:	bfb8      	it	lt
 8005e5e:	f8c8 2000 	strlt.w	r2, [r8]
 8005e62:	ea33 0309 	bics.w	r3, r3, r9
 8005e66:	d119      	bne.n	8005e9c <_dtoa_r+0xac>
 8005e68:	f242 730f 	movw	r3, #9999	; 0x270f
 8005e6c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005e6e:	6013      	str	r3, [r2, #0]
 8005e70:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8005e74:	4333      	orrs	r3, r6
 8005e76:	f000 857f 	beq.w	8006978 <_dtoa_r+0xb88>
 8005e7a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005e7c:	b953      	cbnz	r3, 8005e94 <_dtoa_r+0xa4>
 8005e7e:	4b91      	ldr	r3, [pc, #580]	; (80060c4 <_dtoa_r+0x2d4>)
 8005e80:	e022      	b.n	8005ec8 <_dtoa_r+0xd8>
 8005e82:	4b91      	ldr	r3, [pc, #580]	; (80060c8 <_dtoa_r+0x2d8>)
 8005e84:	9303      	str	r3, [sp, #12]
 8005e86:	3308      	adds	r3, #8
 8005e88:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8005e8a:	6013      	str	r3, [r2, #0]
 8005e8c:	9803      	ldr	r0, [sp, #12]
 8005e8e:	b019      	add	sp, #100	; 0x64
 8005e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005e94:	4b8b      	ldr	r3, [pc, #556]	; (80060c4 <_dtoa_r+0x2d4>)
 8005e96:	9303      	str	r3, [sp, #12]
 8005e98:	3303      	adds	r3, #3
 8005e9a:	e7f5      	b.n	8005e88 <_dtoa_r+0x98>
 8005e9c:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8005ea0:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8005ea4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005ea8:	2200      	movs	r2, #0
 8005eaa:	2300      	movs	r3, #0
 8005eac:	f7fa fd7c 	bl	80009a8 <__aeabi_dcmpeq>
 8005eb0:	4680      	mov	r8, r0
 8005eb2:	b158      	cbz	r0, 8005ecc <_dtoa_r+0xdc>
 8005eb4:	2301      	movs	r3, #1
 8005eb6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8005eb8:	6013      	str	r3, [r2, #0]
 8005eba:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8005ebc:	2b00      	cmp	r3, #0
 8005ebe:	f000 8558 	beq.w	8006972 <_dtoa_r+0xb82>
 8005ec2:	4882      	ldr	r0, [pc, #520]	; (80060cc <_dtoa_r+0x2dc>)
 8005ec4:	6018      	str	r0, [r3, #0]
 8005ec6:	1e43      	subs	r3, r0, #1
 8005ec8:	9303      	str	r3, [sp, #12]
 8005eca:	e7df      	b.n	8005e8c <_dtoa_r+0x9c>
 8005ecc:	ab16      	add	r3, sp, #88	; 0x58
 8005ece:	9301      	str	r3, [sp, #4]
 8005ed0:	ab17      	add	r3, sp, #92	; 0x5c
 8005ed2:	9300      	str	r3, [sp, #0]
 8005ed4:	4628      	mov	r0, r5
 8005ed6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8005eda:	f001 f8c5 	bl	8007068 <__d2b>
 8005ede:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8005ee2:	4683      	mov	fp, r0
 8005ee4:	2c00      	cmp	r4, #0
 8005ee6:	d07f      	beq.n	8005fe8 <_dtoa_r+0x1f8>
 8005ee8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005eec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005eee:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8005ef2:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005ef6:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8005efa:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8005efe:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8005f02:	2200      	movs	r2, #0
 8005f04:	4b72      	ldr	r3, [pc, #456]	; (80060d0 <_dtoa_r+0x2e0>)
 8005f06:	f7fa f92f 	bl	8000168 <__aeabi_dsub>
 8005f0a:	a365      	add	r3, pc, #404	; (adr r3, 80060a0 <_dtoa_r+0x2b0>)
 8005f0c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f10:	f7fa fae2 	bl	80004d8 <__aeabi_dmul>
 8005f14:	a364      	add	r3, pc, #400	; (adr r3, 80060a8 <_dtoa_r+0x2b8>)
 8005f16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f1a:	f7fa f927 	bl	800016c <__adddf3>
 8005f1e:	4606      	mov	r6, r0
 8005f20:	4620      	mov	r0, r4
 8005f22:	460f      	mov	r7, r1
 8005f24:	f7fa fa6e 	bl	8000404 <__aeabi_i2d>
 8005f28:	a361      	add	r3, pc, #388	; (adr r3, 80060b0 <_dtoa_r+0x2c0>)
 8005f2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f2e:	f7fa fad3 	bl	80004d8 <__aeabi_dmul>
 8005f32:	4602      	mov	r2, r0
 8005f34:	460b      	mov	r3, r1
 8005f36:	4630      	mov	r0, r6
 8005f38:	4639      	mov	r1, r7
 8005f3a:	f7fa f917 	bl	800016c <__adddf3>
 8005f3e:	4606      	mov	r6, r0
 8005f40:	460f      	mov	r7, r1
 8005f42:	f7fa fd79 	bl	8000a38 <__aeabi_d2iz>
 8005f46:	2200      	movs	r2, #0
 8005f48:	4682      	mov	sl, r0
 8005f4a:	2300      	movs	r3, #0
 8005f4c:	4630      	mov	r0, r6
 8005f4e:	4639      	mov	r1, r7
 8005f50:	f7fa fd34 	bl	80009bc <__aeabi_dcmplt>
 8005f54:	b148      	cbz	r0, 8005f6a <_dtoa_r+0x17a>
 8005f56:	4650      	mov	r0, sl
 8005f58:	f7fa fa54 	bl	8000404 <__aeabi_i2d>
 8005f5c:	4632      	mov	r2, r6
 8005f5e:	463b      	mov	r3, r7
 8005f60:	f7fa fd22 	bl	80009a8 <__aeabi_dcmpeq>
 8005f64:	b908      	cbnz	r0, 8005f6a <_dtoa_r+0x17a>
 8005f66:	f10a 3aff 	add.w	sl, sl, #4294967295
 8005f6a:	f1ba 0f16 	cmp.w	sl, #22
 8005f6e:	d858      	bhi.n	8006022 <_dtoa_r+0x232>
 8005f70:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8005f74:	4b57      	ldr	r3, [pc, #348]	; (80060d4 <_dtoa_r+0x2e4>)
 8005f76:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8005f7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f7e:	f7fa fd1d 	bl	80009bc <__aeabi_dcmplt>
 8005f82:	2800      	cmp	r0, #0
 8005f84:	d04f      	beq.n	8006026 <_dtoa_r+0x236>
 8005f86:	2300      	movs	r3, #0
 8005f88:	f10a 3aff 	add.w	sl, sl, #4294967295
 8005f8c:	930f      	str	r3, [sp, #60]	; 0x3c
 8005f8e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005f90:	1b1c      	subs	r4, r3, r4
 8005f92:	1e63      	subs	r3, r4, #1
 8005f94:	9309      	str	r3, [sp, #36]	; 0x24
 8005f96:	bf49      	itett	mi
 8005f98:	f1c4 0301 	rsbmi	r3, r4, #1
 8005f9c:	2300      	movpl	r3, #0
 8005f9e:	9306      	strmi	r3, [sp, #24]
 8005fa0:	2300      	movmi	r3, #0
 8005fa2:	bf54      	ite	pl
 8005fa4:	9306      	strpl	r3, [sp, #24]
 8005fa6:	9309      	strmi	r3, [sp, #36]	; 0x24
 8005fa8:	f1ba 0f00 	cmp.w	sl, #0
 8005fac:	db3d      	blt.n	800602a <_dtoa_r+0x23a>
 8005fae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005fb0:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 8005fb4:	4453      	add	r3, sl
 8005fb6:	9309      	str	r3, [sp, #36]	; 0x24
 8005fb8:	2300      	movs	r3, #0
 8005fba:	930a      	str	r3, [sp, #40]	; 0x28
 8005fbc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005fbe:	2b09      	cmp	r3, #9
 8005fc0:	f200 808c 	bhi.w	80060dc <_dtoa_r+0x2ec>
 8005fc4:	2b05      	cmp	r3, #5
 8005fc6:	bfc4      	itt	gt
 8005fc8:	3b04      	subgt	r3, #4
 8005fca:	9322      	strgt	r3, [sp, #136]	; 0x88
 8005fcc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005fce:	bfc8      	it	gt
 8005fd0:	2400      	movgt	r4, #0
 8005fd2:	f1a3 0302 	sub.w	r3, r3, #2
 8005fd6:	bfd8      	it	le
 8005fd8:	2401      	movle	r4, #1
 8005fda:	2b03      	cmp	r3, #3
 8005fdc:	f200 808a 	bhi.w	80060f4 <_dtoa_r+0x304>
 8005fe0:	e8df f003 	tbb	[pc, r3]
 8005fe4:	5b4d4f2d 	.word	0x5b4d4f2d
 8005fe8:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 8005fec:	441c      	add	r4, r3
 8005fee:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8005ff2:	2b20      	cmp	r3, #32
 8005ff4:	bfc3      	ittte	gt
 8005ff6:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8005ffa:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 8005ffe:	fa09 f303 	lslgt.w	r3, r9, r3
 8006002:	f1c3 0320 	rsble	r3, r3, #32
 8006006:	bfc6      	itte	gt
 8006008:	fa26 f000 	lsrgt.w	r0, r6, r0
 800600c:	4318      	orrgt	r0, r3
 800600e:	fa06 f003 	lslle.w	r0, r6, r3
 8006012:	f7fa f9e7 	bl	80003e4 <__aeabi_ui2d>
 8006016:	2301      	movs	r3, #1
 8006018:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800601c:	3c01      	subs	r4, #1
 800601e:	9313      	str	r3, [sp, #76]	; 0x4c
 8006020:	e76f      	b.n	8005f02 <_dtoa_r+0x112>
 8006022:	2301      	movs	r3, #1
 8006024:	e7b2      	b.n	8005f8c <_dtoa_r+0x19c>
 8006026:	900f      	str	r0, [sp, #60]	; 0x3c
 8006028:	e7b1      	b.n	8005f8e <_dtoa_r+0x19e>
 800602a:	9b06      	ldr	r3, [sp, #24]
 800602c:	eba3 030a 	sub.w	r3, r3, sl
 8006030:	9306      	str	r3, [sp, #24]
 8006032:	f1ca 0300 	rsb	r3, sl, #0
 8006036:	930a      	str	r3, [sp, #40]	; 0x28
 8006038:	2300      	movs	r3, #0
 800603a:	930e      	str	r3, [sp, #56]	; 0x38
 800603c:	e7be      	b.n	8005fbc <_dtoa_r+0x1cc>
 800603e:	2300      	movs	r3, #0
 8006040:	930b      	str	r3, [sp, #44]	; 0x2c
 8006042:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006044:	2b00      	cmp	r3, #0
 8006046:	dc58      	bgt.n	80060fa <_dtoa_r+0x30a>
 8006048:	f04f 0901 	mov.w	r9, #1
 800604c:	464b      	mov	r3, r9
 800604e:	f8cd 9020 	str.w	r9, [sp, #32]
 8006052:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 8006056:	2200      	movs	r2, #0
 8006058:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800605a:	6042      	str	r2, [r0, #4]
 800605c:	2204      	movs	r2, #4
 800605e:	f102 0614 	add.w	r6, r2, #20
 8006062:	429e      	cmp	r6, r3
 8006064:	6841      	ldr	r1, [r0, #4]
 8006066:	d94e      	bls.n	8006106 <_dtoa_r+0x316>
 8006068:	4628      	mov	r0, r5
 800606a:	f000 fcd7 	bl	8006a1c <_Balloc>
 800606e:	9003      	str	r0, [sp, #12]
 8006070:	2800      	cmp	r0, #0
 8006072:	d14c      	bne.n	800610e <_dtoa_r+0x31e>
 8006074:	4602      	mov	r2, r0
 8006076:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 800607a:	4b17      	ldr	r3, [pc, #92]	; (80060d8 <_dtoa_r+0x2e8>)
 800607c:	e6cc      	b.n	8005e18 <_dtoa_r+0x28>
 800607e:	2301      	movs	r3, #1
 8006080:	e7de      	b.n	8006040 <_dtoa_r+0x250>
 8006082:	2300      	movs	r3, #0
 8006084:	930b      	str	r3, [sp, #44]	; 0x2c
 8006086:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006088:	eb0a 0903 	add.w	r9, sl, r3
 800608c:	f109 0301 	add.w	r3, r9, #1
 8006090:	2b01      	cmp	r3, #1
 8006092:	9308      	str	r3, [sp, #32]
 8006094:	bfb8      	it	lt
 8006096:	2301      	movlt	r3, #1
 8006098:	e7dd      	b.n	8006056 <_dtoa_r+0x266>
 800609a:	2301      	movs	r3, #1
 800609c:	e7f2      	b.n	8006084 <_dtoa_r+0x294>
 800609e:	bf00      	nop
 80060a0:	636f4361 	.word	0x636f4361
 80060a4:	3fd287a7 	.word	0x3fd287a7
 80060a8:	8b60c8b3 	.word	0x8b60c8b3
 80060ac:	3fc68a28 	.word	0x3fc68a28
 80060b0:	509f79fb 	.word	0x509f79fb
 80060b4:	3fd34413 	.word	0x3fd34413
 80060b8:	0800839d 	.word	0x0800839d
 80060bc:	080083b4 	.word	0x080083b4
 80060c0:	7ff00000 	.word	0x7ff00000
 80060c4:	08008399 	.word	0x08008399
 80060c8:	08008390 	.word	0x08008390
 80060cc:	0800836d 	.word	0x0800836d
 80060d0:	3ff80000 	.word	0x3ff80000
 80060d4:	080084a8 	.word	0x080084a8
 80060d8:	0800840f 	.word	0x0800840f
 80060dc:	2401      	movs	r4, #1
 80060de:	2300      	movs	r3, #0
 80060e0:	940b      	str	r4, [sp, #44]	; 0x2c
 80060e2:	9322      	str	r3, [sp, #136]	; 0x88
 80060e4:	f04f 39ff 	mov.w	r9, #4294967295
 80060e8:	2200      	movs	r2, #0
 80060ea:	2312      	movs	r3, #18
 80060ec:	f8cd 9020 	str.w	r9, [sp, #32]
 80060f0:	9223      	str	r2, [sp, #140]	; 0x8c
 80060f2:	e7b0      	b.n	8006056 <_dtoa_r+0x266>
 80060f4:	2301      	movs	r3, #1
 80060f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80060f8:	e7f4      	b.n	80060e4 <_dtoa_r+0x2f4>
 80060fa:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 80060fe:	464b      	mov	r3, r9
 8006100:	f8cd 9020 	str.w	r9, [sp, #32]
 8006104:	e7a7      	b.n	8006056 <_dtoa_r+0x266>
 8006106:	3101      	adds	r1, #1
 8006108:	6041      	str	r1, [r0, #4]
 800610a:	0052      	lsls	r2, r2, #1
 800610c:	e7a7      	b.n	800605e <_dtoa_r+0x26e>
 800610e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006110:	9a03      	ldr	r2, [sp, #12]
 8006112:	601a      	str	r2, [r3, #0]
 8006114:	9b08      	ldr	r3, [sp, #32]
 8006116:	2b0e      	cmp	r3, #14
 8006118:	f200 80a8 	bhi.w	800626c <_dtoa_r+0x47c>
 800611c:	2c00      	cmp	r4, #0
 800611e:	f000 80a5 	beq.w	800626c <_dtoa_r+0x47c>
 8006122:	f1ba 0f00 	cmp.w	sl, #0
 8006126:	dd34      	ble.n	8006192 <_dtoa_r+0x3a2>
 8006128:	4a9a      	ldr	r2, [pc, #616]	; (8006394 <_dtoa_r+0x5a4>)
 800612a:	f00a 030f 	and.w	r3, sl, #15
 800612e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8006132:	f41a 7f80 	tst.w	sl, #256	; 0x100
 8006136:	e9d3 3400 	ldrd	r3, r4, [r3]
 800613a:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 800613e:	ea4f 142a 	mov.w	r4, sl, asr #4
 8006142:	d016      	beq.n	8006172 <_dtoa_r+0x382>
 8006144:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8006148:	4b93      	ldr	r3, [pc, #588]	; (8006398 <_dtoa_r+0x5a8>)
 800614a:	2703      	movs	r7, #3
 800614c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8006150:	f7fa faec 	bl	800072c <__aeabi_ddiv>
 8006154:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006158:	f004 040f 	and.w	r4, r4, #15
 800615c:	4e8e      	ldr	r6, [pc, #568]	; (8006398 <_dtoa_r+0x5a8>)
 800615e:	b954      	cbnz	r4, 8006176 <_dtoa_r+0x386>
 8006160:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8006164:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006168:	f7fa fae0 	bl	800072c <__aeabi_ddiv>
 800616c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006170:	e029      	b.n	80061c6 <_dtoa_r+0x3d6>
 8006172:	2702      	movs	r7, #2
 8006174:	e7f2      	b.n	800615c <_dtoa_r+0x36c>
 8006176:	07e1      	lsls	r1, r4, #31
 8006178:	d508      	bpl.n	800618c <_dtoa_r+0x39c>
 800617a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 800617e:	e9d6 2300 	ldrd	r2, r3, [r6]
 8006182:	f7fa f9a9 	bl	80004d8 <__aeabi_dmul>
 8006186:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800618a:	3701      	adds	r7, #1
 800618c:	1064      	asrs	r4, r4, #1
 800618e:	3608      	adds	r6, #8
 8006190:	e7e5      	b.n	800615e <_dtoa_r+0x36e>
 8006192:	f000 80a5 	beq.w	80062e0 <_dtoa_r+0x4f0>
 8006196:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800619a:	f1ca 0400 	rsb	r4, sl, #0
 800619e:	4b7d      	ldr	r3, [pc, #500]	; (8006394 <_dtoa_r+0x5a4>)
 80061a0:	f004 020f 	and.w	r2, r4, #15
 80061a4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80061a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061ac:	f7fa f994 	bl	80004d8 <__aeabi_dmul>
 80061b0:	2702      	movs	r7, #2
 80061b2:	2300      	movs	r3, #0
 80061b4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80061b8:	4e77      	ldr	r6, [pc, #476]	; (8006398 <_dtoa_r+0x5a8>)
 80061ba:	1124      	asrs	r4, r4, #4
 80061bc:	2c00      	cmp	r4, #0
 80061be:	f040 8084 	bne.w	80062ca <_dtoa_r+0x4da>
 80061c2:	2b00      	cmp	r3, #0
 80061c4:	d1d2      	bne.n	800616c <_dtoa_r+0x37c>
 80061c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80061c8:	2b00      	cmp	r3, #0
 80061ca:	f000 808b 	beq.w	80062e4 <_dtoa_r+0x4f4>
 80061ce:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80061d2:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80061d6:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80061da:	2200      	movs	r2, #0
 80061dc:	4b6f      	ldr	r3, [pc, #444]	; (800639c <_dtoa_r+0x5ac>)
 80061de:	f7fa fbed 	bl	80009bc <__aeabi_dcmplt>
 80061e2:	2800      	cmp	r0, #0
 80061e4:	d07e      	beq.n	80062e4 <_dtoa_r+0x4f4>
 80061e6:	9b08      	ldr	r3, [sp, #32]
 80061e8:	2b00      	cmp	r3, #0
 80061ea:	d07b      	beq.n	80062e4 <_dtoa_r+0x4f4>
 80061ec:	f1b9 0f00 	cmp.w	r9, #0
 80061f0:	dd38      	ble.n	8006264 <_dtoa_r+0x474>
 80061f2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80061f6:	2200      	movs	r2, #0
 80061f8:	4b69      	ldr	r3, [pc, #420]	; (80063a0 <_dtoa_r+0x5b0>)
 80061fa:	f7fa f96d 	bl	80004d8 <__aeabi_dmul>
 80061fe:	464c      	mov	r4, r9
 8006200:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006204:	f10a 38ff 	add.w	r8, sl, #4294967295
 8006208:	3701      	adds	r7, #1
 800620a:	4638      	mov	r0, r7
 800620c:	f7fa f8fa 	bl	8000404 <__aeabi_i2d>
 8006210:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006214:	f7fa f960 	bl	80004d8 <__aeabi_dmul>
 8006218:	2200      	movs	r2, #0
 800621a:	4b62      	ldr	r3, [pc, #392]	; (80063a4 <_dtoa_r+0x5b4>)
 800621c:	f7f9 ffa6 	bl	800016c <__adddf3>
 8006220:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8006224:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8006228:	9611      	str	r6, [sp, #68]	; 0x44
 800622a:	2c00      	cmp	r4, #0
 800622c:	d15d      	bne.n	80062ea <_dtoa_r+0x4fa>
 800622e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006232:	2200      	movs	r2, #0
 8006234:	4b5c      	ldr	r3, [pc, #368]	; (80063a8 <_dtoa_r+0x5b8>)
 8006236:	f7f9 ff97 	bl	8000168 <__aeabi_dsub>
 800623a:	4602      	mov	r2, r0
 800623c:	460b      	mov	r3, r1
 800623e:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8006242:	4633      	mov	r3, r6
 8006244:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006246:	f7fa fbd7 	bl	80009f8 <__aeabi_dcmpgt>
 800624a:	2800      	cmp	r0, #0
 800624c:	f040 829c 	bne.w	8006788 <_dtoa_r+0x998>
 8006250:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006254:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006256:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800625a:	f7fa fbaf 	bl	80009bc <__aeabi_dcmplt>
 800625e:	2800      	cmp	r0, #0
 8006260:	f040 8290 	bne.w	8006784 <_dtoa_r+0x994>
 8006264:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8006268:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800626c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800626e:	2b00      	cmp	r3, #0
 8006270:	f2c0 8152 	blt.w	8006518 <_dtoa_r+0x728>
 8006274:	f1ba 0f0e 	cmp.w	sl, #14
 8006278:	f300 814e 	bgt.w	8006518 <_dtoa_r+0x728>
 800627c:	4b45      	ldr	r3, [pc, #276]	; (8006394 <_dtoa_r+0x5a4>)
 800627e:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8006282:	e9d3 3400 	ldrd	r3, r4, [r3]
 8006286:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800628a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800628c:	2b00      	cmp	r3, #0
 800628e:	f280 80db 	bge.w	8006448 <_dtoa_r+0x658>
 8006292:	9b08      	ldr	r3, [sp, #32]
 8006294:	2b00      	cmp	r3, #0
 8006296:	f300 80d7 	bgt.w	8006448 <_dtoa_r+0x658>
 800629a:	f040 8272 	bne.w	8006782 <_dtoa_r+0x992>
 800629e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80062a2:	2200      	movs	r2, #0
 80062a4:	4b40      	ldr	r3, [pc, #256]	; (80063a8 <_dtoa_r+0x5b8>)
 80062a6:	f7fa f917 	bl	80004d8 <__aeabi_dmul>
 80062aa:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80062ae:	f7fa fb99 	bl	80009e4 <__aeabi_dcmpge>
 80062b2:	9c08      	ldr	r4, [sp, #32]
 80062b4:	4626      	mov	r6, r4
 80062b6:	2800      	cmp	r0, #0
 80062b8:	f040 8248 	bne.w	800674c <_dtoa_r+0x95c>
 80062bc:	2331      	movs	r3, #49	; 0x31
 80062be:	9f03      	ldr	r7, [sp, #12]
 80062c0:	f10a 0a01 	add.w	sl, sl, #1
 80062c4:	f807 3b01 	strb.w	r3, [r7], #1
 80062c8:	e244      	b.n	8006754 <_dtoa_r+0x964>
 80062ca:	07e2      	lsls	r2, r4, #31
 80062cc:	d505      	bpl.n	80062da <_dtoa_r+0x4ea>
 80062ce:	e9d6 2300 	ldrd	r2, r3, [r6]
 80062d2:	f7fa f901 	bl	80004d8 <__aeabi_dmul>
 80062d6:	2301      	movs	r3, #1
 80062d8:	3701      	adds	r7, #1
 80062da:	1064      	asrs	r4, r4, #1
 80062dc:	3608      	adds	r6, #8
 80062de:	e76d      	b.n	80061bc <_dtoa_r+0x3cc>
 80062e0:	2702      	movs	r7, #2
 80062e2:	e770      	b.n	80061c6 <_dtoa_r+0x3d6>
 80062e4:	46d0      	mov	r8, sl
 80062e6:	9c08      	ldr	r4, [sp, #32]
 80062e8:	e78f      	b.n	800620a <_dtoa_r+0x41a>
 80062ea:	9903      	ldr	r1, [sp, #12]
 80062ec:	4b29      	ldr	r3, [pc, #164]	; (8006394 <_dtoa_r+0x5a4>)
 80062ee:	4421      	add	r1, r4
 80062f0:	9112      	str	r1, [sp, #72]	; 0x48
 80062f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80062f4:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 80062f8:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 80062fc:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8006300:	2900      	cmp	r1, #0
 8006302:	d055      	beq.n	80063b0 <_dtoa_r+0x5c0>
 8006304:	2000      	movs	r0, #0
 8006306:	4929      	ldr	r1, [pc, #164]	; (80063ac <_dtoa_r+0x5bc>)
 8006308:	f7fa fa10 	bl	800072c <__aeabi_ddiv>
 800630c:	463b      	mov	r3, r7
 800630e:	4632      	mov	r2, r6
 8006310:	f7f9 ff2a 	bl	8000168 <__aeabi_dsub>
 8006314:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8006318:	9f03      	ldr	r7, [sp, #12]
 800631a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800631e:	f7fa fb8b 	bl	8000a38 <__aeabi_d2iz>
 8006322:	4604      	mov	r4, r0
 8006324:	f7fa f86e 	bl	8000404 <__aeabi_i2d>
 8006328:	4602      	mov	r2, r0
 800632a:	460b      	mov	r3, r1
 800632c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006330:	f7f9 ff1a 	bl	8000168 <__aeabi_dsub>
 8006334:	4602      	mov	r2, r0
 8006336:	460b      	mov	r3, r1
 8006338:	3430      	adds	r4, #48	; 0x30
 800633a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800633e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8006342:	f807 4b01 	strb.w	r4, [r7], #1
 8006346:	f7fa fb39 	bl	80009bc <__aeabi_dcmplt>
 800634a:	2800      	cmp	r0, #0
 800634c:	d174      	bne.n	8006438 <_dtoa_r+0x648>
 800634e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8006352:	2000      	movs	r0, #0
 8006354:	4911      	ldr	r1, [pc, #68]	; (800639c <_dtoa_r+0x5ac>)
 8006356:	f7f9 ff07 	bl	8000168 <__aeabi_dsub>
 800635a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800635e:	f7fa fb2d 	bl	80009bc <__aeabi_dcmplt>
 8006362:	2800      	cmp	r0, #0
 8006364:	f040 80b7 	bne.w	80064d6 <_dtoa_r+0x6e6>
 8006368:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800636a:	429f      	cmp	r7, r3
 800636c:	f43f af7a 	beq.w	8006264 <_dtoa_r+0x474>
 8006370:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8006374:	2200      	movs	r2, #0
 8006376:	4b0a      	ldr	r3, [pc, #40]	; (80063a0 <_dtoa_r+0x5b0>)
 8006378:	f7fa f8ae 	bl	80004d8 <__aeabi_dmul>
 800637c:	2200      	movs	r2, #0
 800637e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8006382:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8006386:	4b06      	ldr	r3, [pc, #24]	; (80063a0 <_dtoa_r+0x5b0>)
 8006388:	f7fa f8a6 	bl	80004d8 <__aeabi_dmul>
 800638c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006390:	e7c3      	b.n	800631a <_dtoa_r+0x52a>
 8006392:	bf00      	nop
 8006394:	080084a8 	.word	0x080084a8
 8006398:	08008480 	.word	0x08008480
 800639c:	3ff00000 	.word	0x3ff00000
 80063a0:	40240000 	.word	0x40240000
 80063a4:	401c0000 	.word	0x401c0000
 80063a8:	40140000 	.word	0x40140000
 80063ac:	3fe00000 	.word	0x3fe00000
 80063b0:	4630      	mov	r0, r6
 80063b2:	4639      	mov	r1, r7
 80063b4:	f7fa f890 	bl	80004d8 <__aeabi_dmul>
 80063b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80063ba:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80063be:	9c03      	ldr	r4, [sp, #12]
 80063c0:	9314      	str	r3, [sp, #80]	; 0x50
 80063c2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80063c6:	f7fa fb37 	bl	8000a38 <__aeabi_d2iz>
 80063ca:	9015      	str	r0, [sp, #84]	; 0x54
 80063cc:	f7fa f81a 	bl	8000404 <__aeabi_i2d>
 80063d0:	4602      	mov	r2, r0
 80063d2:	460b      	mov	r3, r1
 80063d4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80063d8:	f7f9 fec6 	bl	8000168 <__aeabi_dsub>
 80063dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80063de:	4606      	mov	r6, r0
 80063e0:	3330      	adds	r3, #48	; 0x30
 80063e2:	f804 3b01 	strb.w	r3, [r4], #1
 80063e6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80063e8:	460f      	mov	r7, r1
 80063ea:	429c      	cmp	r4, r3
 80063ec:	f04f 0200 	mov.w	r2, #0
 80063f0:	d124      	bne.n	800643c <_dtoa_r+0x64c>
 80063f2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80063f6:	4bb0      	ldr	r3, [pc, #704]	; (80066b8 <_dtoa_r+0x8c8>)
 80063f8:	f7f9 feb8 	bl	800016c <__adddf3>
 80063fc:	4602      	mov	r2, r0
 80063fe:	460b      	mov	r3, r1
 8006400:	4630      	mov	r0, r6
 8006402:	4639      	mov	r1, r7
 8006404:	f7fa faf8 	bl	80009f8 <__aeabi_dcmpgt>
 8006408:	2800      	cmp	r0, #0
 800640a:	d163      	bne.n	80064d4 <_dtoa_r+0x6e4>
 800640c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8006410:	2000      	movs	r0, #0
 8006412:	49a9      	ldr	r1, [pc, #676]	; (80066b8 <_dtoa_r+0x8c8>)
 8006414:	f7f9 fea8 	bl	8000168 <__aeabi_dsub>
 8006418:	4602      	mov	r2, r0
 800641a:	460b      	mov	r3, r1
 800641c:	4630      	mov	r0, r6
 800641e:	4639      	mov	r1, r7
 8006420:	f7fa facc 	bl	80009bc <__aeabi_dcmplt>
 8006424:	2800      	cmp	r0, #0
 8006426:	f43f af1d 	beq.w	8006264 <_dtoa_r+0x474>
 800642a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800642c:	1e7b      	subs	r3, r7, #1
 800642e:	9314      	str	r3, [sp, #80]	; 0x50
 8006430:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8006434:	2b30      	cmp	r3, #48	; 0x30
 8006436:	d0f8      	beq.n	800642a <_dtoa_r+0x63a>
 8006438:	46c2      	mov	sl, r8
 800643a:	e03b      	b.n	80064b4 <_dtoa_r+0x6c4>
 800643c:	4b9f      	ldr	r3, [pc, #636]	; (80066bc <_dtoa_r+0x8cc>)
 800643e:	f7fa f84b 	bl	80004d8 <__aeabi_dmul>
 8006442:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8006446:	e7bc      	b.n	80063c2 <_dtoa_r+0x5d2>
 8006448:	9f03      	ldr	r7, [sp, #12]
 800644a:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800644e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8006452:	4640      	mov	r0, r8
 8006454:	4649      	mov	r1, r9
 8006456:	f7fa f969 	bl	800072c <__aeabi_ddiv>
 800645a:	f7fa faed 	bl	8000a38 <__aeabi_d2iz>
 800645e:	4604      	mov	r4, r0
 8006460:	f7f9 ffd0 	bl	8000404 <__aeabi_i2d>
 8006464:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8006468:	f7fa f836 	bl	80004d8 <__aeabi_dmul>
 800646c:	4602      	mov	r2, r0
 800646e:	460b      	mov	r3, r1
 8006470:	4640      	mov	r0, r8
 8006472:	4649      	mov	r1, r9
 8006474:	f7f9 fe78 	bl	8000168 <__aeabi_dsub>
 8006478:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800647c:	f807 6b01 	strb.w	r6, [r7], #1
 8006480:	9e03      	ldr	r6, [sp, #12]
 8006482:	f8dd c020 	ldr.w	ip, [sp, #32]
 8006486:	1bbe      	subs	r6, r7, r6
 8006488:	45b4      	cmp	ip, r6
 800648a:	4602      	mov	r2, r0
 800648c:	460b      	mov	r3, r1
 800648e:	d136      	bne.n	80064fe <_dtoa_r+0x70e>
 8006490:	f7f9 fe6c 	bl	800016c <__adddf3>
 8006494:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8006498:	4680      	mov	r8, r0
 800649a:	4689      	mov	r9, r1
 800649c:	f7fa faac 	bl	80009f8 <__aeabi_dcmpgt>
 80064a0:	bb58      	cbnz	r0, 80064fa <_dtoa_r+0x70a>
 80064a2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80064a6:	4640      	mov	r0, r8
 80064a8:	4649      	mov	r1, r9
 80064aa:	f7fa fa7d 	bl	80009a8 <__aeabi_dcmpeq>
 80064ae:	b108      	cbz	r0, 80064b4 <_dtoa_r+0x6c4>
 80064b0:	07e1      	lsls	r1, r4, #31
 80064b2:	d422      	bmi.n	80064fa <_dtoa_r+0x70a>
 80064b4:	4628      	mov	r0, r5
 80064b6:	4659      	mov	r1, fp
 80064b8:	f000 faf0 	bl	8006a9c <_Bfree>
 80064bc:	2300      	movs	r3, #0
 80064be:	703b      	strb	r3, [r7, #0]
 80064c0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80064c2:	f10a 0001 	add.w	r0, sl, #1
 80064c6:	6018      	str	r0, [r3, #0]
 80064c8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80064ca:	2b00      	cmp	r3, #0
 80064cc:	f43f acde 	beq.w	8005e8c <_dtoa_r+0x9c>
 80064d0:	601f      	str	r7, [r3, #0]
 80064d2:	e4db      	b.n	8005e8c <_dtoa_r+0x9c>
 80064d4:	4627      	mov	r7, r4
 80064d6:	463b      	mov	r3, r7
 80064d8:	461f      	mov	r7, r3
 80064da:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80064de:	2a39      	cmp	r2, #57	; 0x39
 80064e0:	d107      	bne.n	80064f2 <_dtoa_r+0x702>
 80064e2:	9a03      	ldr	r2, [sp, #12]
 80064e4:	429a      	cmp	r2, r3
 80064e6:	d1f7      	bne.n	80064d8 <_dtoa_r+0x6e8>
 80064e8:	2230      	movs	r2, #48	; 0x30
 80064ea:	9903      	ldr	r1, [sp, #12]
 80064ec:	f108 0801 	add.w	r8, r8, #1
 80064f0:	700a      	strb	r2, [r1, #0]
 80064f2:	781a      	ldrb	r2, [r3, #0]
 80064f4:	3201      	adds	r2, #1
 80064f6:	701a      	strb	r2, [r3, #0]
 80064f8:	e79e      	b.n	8006438 <_dtoa_r+0x648>
 80064fa:	46d0      	mov	r8, sl
 80064fc:	e7eb      	b.n	80064d6 <_dtoa_r+0x6e6>
 80064fe:	2200      	movs	r2, #0
 8006500:	4b6e      	ldr	r3, [pc, #440]	; (80066bc <_dtoa_r+0x8cc>)
 8006502:	f7f9 ffe9 	bl	80004d8 <__aeabi_dmul>
 8006506:	2200      	movs	r2, #0
 8006508:	2300      	movs	r3, #0
 800650a:	4680      	mov	r8, r0
 800650c:	4689      	mov	r9, r1
 800650e:	f7fa fa4b 	bl	80009a8 <__aeabi_dcmpeq>
 8006512:	2800      	cmp	r0, #0
 8006514:	d09b      	beq.n	800644e <_dtoa_r+0x65e>
 8006516:	e7cd      	b.n	80064b4 <_dtoa_r+0x6c4>
 8006518:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800651a:	2a00      	cmp	r2, #0
 800651c:	f000 80d0 	beq.w	80066c0 <_dtoa_r+0x8d0>
 8006520:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8006522:	2a01      	cmp	r2, #1
 8006524:	f300 80ae 	bgt.w	8006684 <_dtoa_r+0x894>
 8006528:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800652a:	2a00      	cmp	r2, #0
 800652c:	f000 80a6 	beq.w	800667c <_dtoa_r+0x88c>
 8006530:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8006534:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006536:	9f06      	ldr	r7, [sp, #24]
 8006538:	9a06      	ldr	r2, [sp, #24]
 800653a:	2101      	movs	r1, #1
 800653c:	441a      	add	r2, r3
 800653e:	9206      	str	r2, [sp, #24]
 8006540:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006542:	4628      	mov	r0, r5
 8006544:	441a      	add	r2, r3
 8006546:	9209      	str	r2, [sp, #36]	; 0x24
 8006548:	f000 fb5e 	bl	8006c08 <__i2b>
 800654c:	4606      	mov	r6, r0
 800654e:	2f00      	cmp	r7, #0
 8006550:	dd0c      	ble.n	800656c <_dtoa_r+0x77c>
 8006552:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006554:	2b00      	cmp	r3, #0
 8006556:	dd09      	ble.n	800656c <_dtoa_r+0x77c>
 8006558:	42bb      	cmp	r3, r7
 800655a:	bfa8      	it	ge
 800655c:	463b      	movge	r3, r7
 800655e:	9a06      	ldr	r2, [sp, #24]
 8006560:	1aff      	subs	r7, r7, r3
 8006562:	1ad2      	subs	r2, r2, r3
 8006564:	9206      	str	r2, [sp, #24]
 8006566:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006568:	1ad3      	subs	r3, r2, r3
 800656a:	9309      	str	r3, [sp, #36]	; 0x24
 800656c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800656e:	b1f3      	cbz	r3, 80065ae <_dtoa_r+0x7be>
 8006570:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006572:	2b00      	cmp	r3, #0
 8006574:	f000 80a8 	beq.w	80066c8 <_dtoa_r+0x8d8>
 8006578:	2c00      	cmp	r4, #0
 800657a:	dd10      	ble.n	800659e <_dtoa_r+0x7ae>
 800657c:	4631      	mov	r1, r6
 800657e:	4622      	mov	r2, r4
 8006580:	4628      	mov	r0, r5
 8006582:	f000 fbff 	bl	8006d84 <__pow5mult>
 8006586:	465a      	mov	r2, fp
 8006588:	4601      	mov	r1, r0
 800658a:	4606      	mov	r6, r0
 800658c:	4628      	mov	r0, r5
 800658e:	f000 fb51 	bl	8006c34 <__multiply>
 8006592:	4680      	mov	r8, r0
 8006594:	4659      	mov	r1, fp
 8006596:	4628      	mov	r0, r5
 8006598:	f000 fa80 	bl	8006a9c <_Bfree>
 800659c:	46c3      	mov	fp, r8
 800659e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80065a0:	1b1a      	subs	r2, r3, r4
 80065a2:	d004      	beq.n	80065ae <_dtoa_r+0x7be>
 80065a4:	4659      	mov	r1, fp
 80065a6:	4628      	mov	r0, r5
 80065a8:	f000 fbec 	bl	8006d84 <__pow5mult>
 80065ac:	4683      	mov	fp, r0
 80065ae:	2101      	movs	r1, #1
 80065b0:	4628      	mov	r0, r5
 80065b2:	f000 fb29 	bl	8006c08 <__i2b>
 80065b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80065b8:	4604      	mov	r4, r0
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	f340 8086 	ble.w	80066cc <_dtoa_r+0x8dc>
 80065c0:	461a      	mov	r2, r3
 80065c2:	4601      	mov	r1, r0
 80065c4:	4628      	mov	r0, r5
 80065c6:	f000 fbdd 	bl	8006d84 <__pow5mult>
 80065ca:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80065cc:	4604      	mov	r4, r0
 80065ce:	2b01      	cmp	r3, #1
 80065d0:	dd7f      	ble.n	80066d2 <_dtoa_r+0x8e2>
 80065d2:	f04f 0800 	mov.w	r8, #0
 80065d6:	6923      	ldr	r3, [r4, #16]
 80065d8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80065dc:	6918      	ldr	r0, [r3, #16]
 80065de:	f000 fac5 	bl	8006b6c <__hi0bits>
 80065e2:	f1c0 0020 	rsb	r0, r0, #32
 80065e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80065e8:	4418      	add	r0, r3
 80065ea:	f010 001f 	ands.w	r0, r0, #31
 80065ee:	f000 8092 	beq.w	8006716 <_dtoa_r+0x926>
 80065f2:	f1c0 0320 	rsb	r3, r0, #32
 80065f6:	2b04      	cmp	r3, #4
 80065f8:	f340 808a 	ble.w	8006710 <_dtoa_r+0x920>
 80065fc:	f1c0 001c 	rsb	r0, r0, #28
 8006600:	9b06      	ldr	r3, [sp, #24]
 8006602:	4407      	add	r7, r0
 8006604:	4403      	add	r3, r0
 8006606:	9306      	str	r3, [sp, #24]
 8006608:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800660a:	4403      	add	r3, r0
 800660c:	9309      	str	r3, [sp, #36]	; 0x24
 800660e:	9b06      	ldr	r3, [sp, #24]
 8006610:	2b00      	cmp	r3, #0
 8006612:	dd05      	ble.n	8006620 <_dtoa_r+0x830>
 8006614:	4659      	mov	r1, fp
 8006616:	461a      	mov	r2, r3
 8006618:	4628      	mov	r0, r5
 800661a:	f000 fc0d 	bl	8006e38 <__lshift>
 800661e:	4683      	mov	fp, r0
 8006620:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006622:	2b00      	cmp	r3, #0
 8006624:	dd05      	ble.n	8006632 <_dtoa_r+0x842>
 8006626:	4621      	mov	r1, r4
 8006628:	461a      	mov	r2, r3
 800662a:	4628      	mov	r0, r5
 800662c:	f000 fc04 	bl	8006e38 <__lshift>
 8006630:	4604      	mov	r4, r0
 8006632:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006634:	2b00      	cmp	r3, #0
 8006636:	d070      	beq.n	800671a <_dtoa_r+0x92a>
 8006638:	4621      	mov	r1, r4
 800663a:	4658      	mov	r0, fp
 800663c:	f000 fc6c 	bl	8006f18 <__mcmp>
 8006640:	2800      	cmp	r0, #0
 8006642:	da6a      	bge.n	800671a <_dtoa_r+0x92a>
 8006644:	2300      	movs	r3, #0
 8006646:	4659      	mov	r1, fp
 8006648:	220a      	movs	r2, #10
 800664a:	4628      	mov	r0, r5
 800664c:	f000 fa48 	bl	8006ae0 <__multadd>
 8006650:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006652:	4683      	mov	fp, r0
 8006654:	f10a 3aff 	add.w	sl, sl, #4294967295
 8006658:	2b00      	cmp	r3, #0
 800665a:	f000 8194 	beq.w	8006986 <_dtoa_r+0xb96>
 800665e:	4631      	mov	r1, r6
 8006660:	2300      	movs	r3, #0
 8006662:	220a      	movs	r2, #10
 8006664:	4628      	mov	r0, r5
 8006666:	f000 fa3b 	bl	8006ae0 <__multadd>
 800666a:	f1b9 0f00 	cmp.w	r9, #0
 800666e:	4606      	mov	r6, r0
 8006670:	f300 8093 	bgt.w	800679a <_dtoa_r+0x9aa>
 8006674:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006676:	2b02      	cmp	r3, #2
 8006678:	dc57      	bgt.n	800672a <_dtoa_r+0x93a>
 800667a:	e08e      	b.n	800679a <_dtoa_r+0x9aa>
 800667c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800667e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8006682:	e757      	b.n	8006534 <_dtoa_r+0x744>
 8006684:	9b08      	ldr	r3, [sp, #32]
 8006686:	1e5c      	subs	r4, r3, #1
 8006688:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800668a:	42a3      	cmp	r3, r4
 800668c:	bfb7      	itett	lt
 800668e:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8006690:	1b1c      	subge	r4, r3, r4
 8006692:	1ae2      	sublt	r2, r4, r3
 8006694:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8006696:	bfbe      	ittt	lt
 8006698:	940a      	strlt	r4, [sp, #40]	; 0x28
 800669a:	189b      	addlt	r3, r3, r2
 800669c:	930e      	strlt	r3, [sp, #56]	; 0x38
 800669e:	9b08      	ldr	r3, [sp, #32]
 80066a0:	bfb8      	it	lt
 80066a2:	2400      	movlt	r4, #0
 80066a4:	2b00      	cmp	r3, #0
 80066a6:	bfbb      	ittet	lt
 80066a8:	9b06      	ldrlt	r3, [sp, #24]
 80066aa:	9a08      	ldrlt	r2, [sp, #32]
 80066ac:	9f06      	ldrge	r7, [sp, #24]
 80066ae:	1a9f      	sublt	r7, r3, r2
 80066b0:	bfac      	ite	ge
 80066b2:	9b08      	ldrge	r3, [sp, #32]
 80066b4:	2300      	movlt	r3, #0
 80066b6:	e73f      	b.n	8006538 <_dtoa_r+0x748>
 80066b8:	3fe00000 	.word	0x3fe00000
 80066bc:	40240000 	.word	0x40240000
 80066c0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80066c2:	9f06      	ldr	r7, [sp, #24]
 80066c4:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80066c6:	e742      	b.n	800654e <_dtoa_r+0x75e>
 80066c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80066ca:	e76b      	b.n	80065a4 <_dtoa_r+0x7b4>
 80066cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80066ce:	2b01      	cmp	r3, #1
 80066d0:	dc19      	bgt.n	8006706 <_dtoa_r+0x916>
 80066d2:	9b04      	ldr	r3, [sp, #16]
 80066d4:	b9bb      	cbnz	r3, 8006706 <_dtoa_r+0x916>
 80066d6:	9b05      	ldr	r3, [sp, #20]
 80066d8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80066dc:	b99b      	cbnz	r3, 8006706 <_dtoa_r+0x916>
 80066de:	9b05      	ldr	r3, [sp, #20]
 80066e0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80066e4:	0d1b      	lsrs	r3, r3, #20
 80066e6:	051b      	lsls	r3, r3, #20
 80066e8:	b183      	cbz	r3, 800670c <_dtoa_r+0x91c>
 80066ea:	f04f 0801 	mov.w	r8, #1
 80066ee:	9b06      	ldr	r3, [sp, #24]
 80066f0:	3301      	adds	r3, #1
 80066f2:	9306      	str	r3, [sp, #24]
 80066f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80066f6:	3301      	adds	r3, #1
 80066f8:	9309      	str	r3, [sp, #36]	; 0x24
 80066fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80066fc:	2b00      	cmp	r3, #0
 80066fe:	f47f af6a 	bne.w	80065d6 <_dtoa_r+0x7e6>
 8006702:	2001      	movs	r0, #1
 8006704:	e76f      	b.n	80065e6 <_dtoa_r+0x7f6>
 8006706:	f04f 0800 	mov.w	r8, #0
 800670a:	e7f6      	b.n	80066fa <_dtoa_r+0x90a>
 800670c:	4698      	mov	r8, r3
 800670e:	e7f4      	b.n	80066fa <_dtoa_r+0x90a>
 8006710:	f43f af7d 	beq.w	800660e <_dtoa_r+0x81e>
 8006714:	4618      	mov	r0, r3
 8006716:	301c      	adds	r0, #28
 8006718:	e772      	b.n	8006600 <_dtoa_r+0x810>
 800671a:	9b08      	ldr	r3, [sp, #32]
 800671c:	2b00      	cmp	r3, #0
 800671e:	dc36      	bgt.n	800678e <_dtoa_r+0x99e>
 8006720:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006722:	2b02      	cmp	r3, #2
 8006724:	dd33      	ble.n	800678e <_dtoa_r+0x99e>
 8006726:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800672a:	f1b9 0f00 	cmp.w	r9, #0
 800672e:	d10d      	bne.n	800674c <_dtoa_r+0x95c>
 8006730:	4621      	mov	r1, r4
 8006732:	464b      	mov	r3, r9
 8006734:	2205      	movs	r2, #5
 8006736:	4628      	mov	r0, r5
 8006738:	f000 f9d2 	bl	8006ae0 <__multadd>
 800673c:	4601      	mov	r1, r0
 800673e:	4604      	mov	r4, r0
 8006740:	4658      	mov	r0, fp
 8006742:	f000 fbe9 	bl	8006f18 <__mcmp>
 8006746:	2800      	cmp	r0, #0
 8006748:	f73f adb8 	bgt.w	80062bc <_dtoa_r+0x4cc>
 800674c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800674e:	9f03      	ldr	r7, [sp, #12]
 8006750:	ea6f 0a03 	mvn.w	sl, r3
 8006754:	f04f 0800 	mov.w	r8, #0
 8006758:	4621      	mov	r1, r4
 800675a:	4628      	mov	r0, r5
 800675c:	f000 f99e 	bl	8006a9c <_Bfree>
 8006760:	2e00      	cmp	r6, #0
 8006762:	f43f aea7 	beq.w	80064b4 <_dtoa_r+0x6c4>
 8006766:	f1b8 0f00 	cmp.w	r8, #0
 800676a:	d005      	beq.n	8006778 <_dtoa_r+0x988>
 800676c:	45b0      	cmp	r8, r6
 800676e:	d003      	beq.n	8006778 <_dtoa_r+0x988>
 8006770:	4641      	mov	r1, r8
 8006772:	4628      	mov	r0, r5
 8006774:	f000 f992 	bl	8006a9c <_Bfree>
 8006778:	4631      	mov	r1, r6
 800677a:	4628      	mov	r0, r5
 800677c:	f000 f98e 	bl	8006a9c <_Bfree>
 8006780:	e698      	b.n	80064b4 <_dtoa_r+0x6c4>
 8006782:	2400      	movs	r4, #0
 8006784:	4626      	mov	r6, r4
 8006786:	e7e1      	b.n	800674c <_dtoa_r+0x95c>
 8006788:	46c2      	mov	sl, r8
 800678a:	4626      	mov	r6, r4
 800678c:	e596      	b.n	80062bc <_dtoa_r+0x4cc>
 800678e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006790:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006794:	2b00      	cmp	r3, #0
 8006796:	f000 80fd 	beq.w	8006994 <_dtoa_r+0xba4>
 800679a:	2f00      	cmp	r7, #0
 800679c:	dd05      	ble.n	80067aa <_dtoa_r+0x9ba>
 800679e:	4631      	mov	r1, r6
 80067a0:	463a      	mov	r2, r7
 80067a2:	4628      	mov	r0, r5
 80067a4:	f000 fb48 	bl	8006e38 <__lshift>
 80067a8:	4606      	mov	r6, r0
 80067aa:	f1b8 0f00 	cmp.w	r8, #0
 80067ae:	d05c      	beq.n	800686a <_dtoa_r+0xa7a>
 80067b0:	4628      	mov	r0, r5
 80067b2:	6871      	ldr	r1, [r6, #4]
 80067b4:	f000 f932 	bl	8006a1c <_Balloc>
 80067b8:	4607      	mov	r7, r0
 80067ba:	b928      	cbnz	r0, 80067c8 <_dtoa_r+0x9d8>
 80067bc:	4602      	mov	r2, r0
 80067be:	f240 21ea 	movw	r1, #746	; 0x2ea
 80067c2:	4b7f      	ldr	r3, [pc, #508]	; (80069c0 <_dtoa_r+0xbd0>)
 80067c4:	f7ff bb28 	b.w	8005e18 <_dtoa_r+0x28>
 80067c8:	6932      	ldr	r2, [r6, #16]
 80067ca:	f106 010c 	add.w	r1, r6, #12
 80067ce:	3202      	adds	r2, #2
 80067d0:	0092      	lsls	r2, r2, #2
 80067d2:	300c      	adds	r0, #12
 80067d4:	f000 f914 	bl	8006a00 <memcpy>
 80067d8:	2201      	movs	r2, #1
 80067da:	4639      	mov	r1, r7
 80067dc:	4628      	mov	r0, r5
 80067de:	f000 fb2b 	bl	8006e38 <__lshift>
 80067e2:	46b0      	mov	r8, r6
 80067e4:	4606      	mov	r6, r0
 80067e6:	9b03      	ldr	r3, [sp, #12]
 80067e8:	3301      	adds	r3, #1
 80067ea:	9308      	str	r3, [sp, #32]
 80067ec:	9b03      	ldr	r3, [sp, #12]
 80067ee:	444b      	add	r3, r9
 80067f0:	930a      	str	r3, [sp, #40]	; 0x28
 80067f2:	9b04      	ldr	r3, [sp, #16]
 80067f4:	f003 0301 	and.w	r3, r3, #1
 80067f8:	9309      	str	r3, [sp, #36]	; 0x24
 80067fa:	9b08      	ldr	r3, [sp, #32]
 80067fc:	4621      	mov	r1, r4
 80067fe:	3b01      	subs	r3, #1
 8006800:	4658      	mov	r0, fp
 8006802:	9304      	str	r3, [sp, #16]
 8006804:	f7ff fa68 	bl	8005cd8 <quorem>
 8006808:	4603      	mov	r3, r0
 800680a:	4641      	mov	r1, r8
 800680c:	3330      	adds	r3, #48	; 0x30
 800680e:	9006      	str	r0, [sp, #24]
 8006810:	4658      	mov	r0, fp
 8006812:	930b      	str	r3, [sp, #44]	; 0x2c
 8006814:	f000 fb80 	bl	8006f18 <__mcmp>
 8006818:	4632      	mov	r2, r6
 800681a:	4681      	mov	r9, r0
 800681c:	4621      	mov	r1, r4
 800681e:	4628      	mov	r0, r5
 8006820:	f000 fb96 	bl	8006f50 <__mdiff>
 8006824:	68c2      	ldr	r2, [r0, #12]
 8006826:	4607      	mov	r7, r0
 8006828:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800682a:	bb02      	cbnz	r2, 800686e <_dtoa_r+0xa7e>
 800682c:	4601      	mov	r1, r0
 800682e:	4658      	mov	r0, fp
 8006830:	f000 fb72 	bl	8006f18 <__mcmp>
 8006834:	4602      	mov	r2, r0
 8006836:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006838:	4639      	mov	r1, r7
 800683a:	4628      	mov	r0, r5
 800683c:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 8006840:	f000 f92c 	bl	8006a9c <_Bfree>
 8006844:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006846:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006848:	9f08      	ldr	r7, [sp, #32]
 800684a:	ea43 0102 	orr.w	r1, r3, r2
 800684e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006850:	430b      	orrs	r3, r1
 8006852:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006854:	d10d      	bne.n	8006872 <_dtoa_r+0xa82>
 8006856:	2b39      	cmp	r3, #57	; 0x39
 8006858:	d029      	beq.n	80068ae <_dtoa_r+0xabe>
 800685a:	f1b9 0f00 	cmp.w	r9, #0
 800685e:	dd01      	ble.n	8006864 <_dtoa_r+0xa74>
 8006860:	9b06      	ldr	r3, [sp, #24]
 8006862:	3331      	adds	r3, #49	; 0x31
 8006864:	9a04      	ldr	r2, [sp, #16]
 8006866:	7013      	strb	r3, [r2, #0]
 8006868:	e776      	b.n	8006758 <_dtoa_r+0x968>
 800686a:	4630      	mov	r0, r6
 800686c:	e7b9      	b.n	80067e2 <_dtoa_r+0x9f2>
 800686e:	2201      	movs	r2, #1
 8006870:	e7e2      	b.n	8006838 <_dtoa_r+0xa48>
 8006872:	f1b9 0f00 	cmp.w	r9, #0
 8006876:	db06      	blt.n	8006886 <_dtoa_r+0xa96>
 8006878:	9922      	ldr	r1, [sp, #136]	; 0x88
 800687a:	ea41 0909 	orr.w	r9, r1, r9
 800687e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006880:	ea59 0101 	orrs.w	r1, r9, r1
 8006884:	d120      	bne.n	80068c8 <_dtoa_r+0xad8>
 8006886:	2a00      	cmp	r2, #0
 8006888:	ddec      	ble.n	8006864 <_dtoa_r+0xa74>
 800688a:	4659      	mov	r1, fp
 800688c:	2201      	movs	r2, #1
 800688e:	4628      	mov	r0, r5
 8006890:	9308      	str	r3, [sp, #32]
 8006892:	f000 fad1 	bl	8006e38 <__lshift>
 8006896:	4621      	mov	r1, r4
 8006898:	4683      	mov	fp, r0
 800689a:	f000 fb3d 	bl	8006f18 <__mcmp>
 800689e:	2800      	cmp	r0, #0
 80068a0:	9b08      	ldr	r3, [sp, #32]
 80068a2:	dc02      	bgt.n	80068aa <_dtoa_r+0xaba>
 80068a4:	d1de      	bne.n	8006864 <_dtoa_r+0xa74>
 80068a6:	07da      	lsls	r2, r3, #31
 80068a8:	d5dc      	bpl.n	8006864 <_dtoa_r+0xa74>
 80068aa:	2b39      	cmp	r3, #57	; 0x39
 80068ac:	d1d8      	bne.n	8006860 <_dtoa_r+0xa70>
 80068ae:	2339      	movs	r3, #57	; 0x39
 80068b0:	9a04      	ldr	r2, [sp, #16]
 80068b2:	7013      	strb	r3, [r2, #0]
 80068b4:	463b      	mov	r3, r7
 80068b6:	461f      	mov	r7, r3
 80068b8:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 80068bc:	3b01      	subs	r3, #1
 80068be:	2a39      	cmp	r2, #57	; 0x39
 80068c0:	d050      	beq.n	8006964 <_dtoa_r+0xb74>
 80068c2:	3201      	adds	r2, #1
 80068c4:	701a      	strb	r2, [r3, #0]
 80068c6:	e747      	b.n	8006758 <_dtoa_r+0x968>
 80068c8:	2a00      	cmp	r2, #0
 80068ca:	dd03      	ble.n	80068d4 <_dtoa_r+0xae4>
 80068cc:	2b39      	cmp	r3, #57	; 0x39
 80068ce:	d0ee      	beq.n	80068ae <_dtoa_r+0xabe>
 80068d0:	3301      	adds	r3, #1
 80068d2:	e7c7      	b.n	8006864 <_dtoa_r+0xa74>
 80068d4:	9a08      	ldr	r2, [sp, #32]
 80068d6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80068d8:	f802 3c01 	strb.w	r3, [r2, #-1]
 80068dc:	428a      	cmp	r2, r1
 80068de:	d02a      	beq.n	8006936 <_dtoa_r+0xb46>
 80068e0:	4659      	mov	r1, fp
 80068e2:	2300      	movs	r3, #0
 80068e4:	220a      	movs	r2, #10
 80068e6:	4628      	mov	r0, r5
 80068e8:	f000 f8fa 	bl	8006ae0 <__multadd>
 80068ec:	45b0      	cmp	r8, r6
 80068ee:	4683      	mov	fp, r0
 80068f0:	f04f 0300 	mov.w	r3, #0
 80068f4:	f04f 020a 	mov.w	r2, #10
 80068f8:	4641      	mov	r1, r8
 80068fa:	4628      	mov	r0, r5
 80068fc:	d107      	bne.n	800690e <_dtoa_r+0xb1e>
 80068fe:	f000 f8ef 	bl	8006ae0 <__multadd>
 8006902:	4680      	mov	r8, r0
 8006904:	4606      	mov	r6, r0
 8006906:	9b08      	ldr	r3, [sp, #32]
 8006908:	3301      	adds	r3, #1
 800690a:	9308      	str	r3, [sp, #32]
 800690c:	e775      	b.n	80067fa <_dtoa_r+0xa0a>
 800690e:	f000 f8e7 	bl	8006ae0 <__multadd>
 8006912:	4631      	mov	r1, r6
 8006914:	4680      	mov	r8, r0
 8006916:	2300      	movs	r3, #0
 8006918:	220a      	movs	r2, #10
 800691a:	4628      	mov	r0, r5
 800691c:	f000 f8e0 	bl	8006ae0 <__multadd>
 8006920:	4606      	mov	r6, r0
 8006922:	e7f0      	b.n	8006906 <_dtoa_r+0xb16>
 8006924:	f1b9 0f00 	cmp.w	r9, #0
 8006928:	bfcc      	ite	gt
 800692a:	464f      	movgt	r7, r9
 800692c:	2701      	movle	r7, #1
 800692e:	f04f 0800 	mov.w	r8, #0
 8006932:	9a03      	ldr	r2, [sp, #12]
 8006934:	4417      	add	r7, r2
 8006936:	4659      	mov	r1, fp
 8006938:	2201      	movs	r2, #1
 800693a:	4628      	mov	r0, r5
 800693c:	9308      	str	r3, [sp, #32]
 800693e:	f000 fa7b 	bl	8006e38 <__lshift>
 8006942:	4621      	mov	r1, r4
 8006944:	4683      	mov	fp, r0
 8006946:	f000 fae7 	bl	8006f18 <__mcmp>
 800694a:	2800      	cmp	r0, #0
 800694c:	dcb2      	bgt.n	80068b4 <_dtoa_r+0xac4>
 800694e:	d102      	bne.n	8006956 <_dtoa_r+0xb66>
 8006950:	9b08      	ldr	r3, [sp, #32]
 8006952:	07db      	lsls	r3, r3, #31
 8006954:	d4ae      	bmi.n	80068b4 <_dtoa_r+0xac4>
 8006956:	463b      	mov	r3, r7
 8006958:	461f      	mov	r7, r3
 800695a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800695e:	2a30      	cmp	r2, #48	; 0x30
 8006960:	d0fa      	beq.n	8006958 <_dtoa_r+0xb68>
 8006962:	e6f9      	b.n	8006758 <_dtoa_r+0x968>
 8006964:	9a03      	ldr	r2, [sp, #12]
 8006966:	429a      	cmp	r2, r3
 8006968:	d1a5      	bne.n	80068b6 <_dtoa_r+0xac6>
 800696a:	2331      	movs	r3, #49	; 0x31
 800696c:	f10a 0a01 	add.w	sl, sl, #1
 8006970:	e779      	b.n	8006866 <_dtoa_r+0xa76>
 8006972:	4b14      	ldr	r3, [pc, #80]	; (80069c4 <_dtoa_r+0xbd4>)
 8006974:	f7ff baa8 	b.w	8005ec8 <_dtoa_r+0xd8>
 8006978:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800697a:	2b00      	cmp	r3, #0
 800697c:	f47f aa81 	bne.w	8005e82 <_dtoa_r+0x92>
 8006980:	4b11      	ldr	r3, [pc, #68]	; (80069c8 <_dtoa_r+0xbd8>)
 8006982:	f7ff baa1 	b.w	8005ec8 <_dtoa_r+0xd8>
 8006986:	f1b9 0f00 	cmp.w	r9, #0
 800698a:	dc03      	bgt.n	8006994 <_dtoa_r+0xba4>
 800698c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800698e:	2b02      	cmp	r3, #2
 8006990:	f73f aecb 	bgt.w	800672a <_dtoa_r+0x93a>
 8006994:	9f03      	ldr	r7, [sp, #12]
 8006996:	4621      	mov	r1, r4
 8006998:	4658      	mov	r0, fp
 800699a:	f7ff f99d 	bl	8005cd8 <quorem>
 800699e:	9a03      	ldr	r2, [sp, #12]
 80069a0:	f100 0330 	add.w	r3, r0, #48	; 0x30
 80069a4:	f807 3b01 	strb.w	r3, [r7], #1
 80069a8:	1aba      	subs	r2, r7, r2
 80069aa:	4591      	cmp	r9, r2
 80069ac:	ddba      	ble.n	8006924 <_dtoa_r+0xb34>
 80069ae:	4659      	mov	r1, fp
 80069b0:	2300      	movs	r3, #0
 80069b2:	220a      	movs	r2, #10
 80069b4:	4628      	mov	r0, r5
 80069b6:	f000 f893 	bl	8006ae0 <__multadd>
 80069ba:	4683      	mov	fp, r0
 80069bc:	e7eb      	b.n	8006996 <_dtoa_r+0xba6>
 80069be:	bf00      	nop
 80069c0:	0800840f 	.word	0x0800840f
 80069c4:	0800836c 	.word	0x0800836c
 80069c8:	08008390 	.word	0x08008390

080069cc <_localeconv_r>:
 80069cc:	4800      	ldr	r0, [pc, #0]	; (80069d0 <_localeconv_r+0x4>)
 80069ce:	4770      	bx	lr
 80069d0:	20000160 	.word	0x20000160

080069d4 <malloc>:
 80069d4:	4b02      	ldr	r3, [pc, #8]	; (80069e0 <malloc+0xc>)
 80069d6:	4601      	mov	r1, r0
 80069d8:	6818      	ldr	r0, [r3, #0]
 80069da:	f000 bc1d 	b.w	8007218 <_malloc_r>
 80069de:	bf00      	nop
 80069e0:	2000000c 	.word	0x2000000c

080069e4 <memchr>:
 80069e4:	4603      	mov	r3, r0
 80069e6:	b510      	push	{r4, lr}
 80069e8:	b2c9      	uxtb	r1, r1
 80069ea:	4402      	add	r2, r0
 80069ec:	4293      	cmp	r3, r2
 80069ee:	4618      	mov	r0, r3
 80069f0:	d101      	bne.n	80069f6 <memchr+0x12>
 80069f2:	2000      	movs	r0, #0
 80069f4:	e003      	b.n	80069fe <memchr+0x1a>
 80069f6:	7804      	ldrb	r4, [r0, #0]
 80069f8:	3301      	adds	r3, #1
 80069fa:	428c      	cmp	r4, r1
 80069fc:	d1f6      	bne.n	80069ec <memchr+0x8>
 80069fe:	bd10      	pop	{r4, pc}

08006a00 <memcpy>:
 8006a00:	440a      	add	r2, r1
 8006a02:	4291      	cmp	r1, r2
 8006a04:	f100 33ff 	add.w	r3, r0, #4294967295
 8006a08:	d100      	bne.n	8006a0c <memcpy+0xc>
 8006a0a:	4770      	bx	lr
 8006a0c:	b510      	push	{r4, lr}
 8006a0e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006a12:	4291      	cmp	r1, r2
 8006a14:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006a18:	d1f9      	bne.n	8006a0e <memcpy+0xe>
 8006a1a:	bd10      	pop	{r4, pc}

08006a1c <_Balloc>:
 8006a1c:	b570      	push	{r4, r5, r6, lr}
 8006a1e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006a20:	4604      	mov	r4, r0
 8006a22:	460d      	mov	r5, r1
 8006a24:	b976      	cbnz	r6, 8006a44 <_Balloc+0x28>
 8006a26:	2010      	movs	r0, #16
 8006a28:	f7ff ffd4 	bl	80069d4 <malloc>
 8006a2c:	4602      	mov	r2, r0
 8006a2e:	6260      	str	r0, [r4, #36]	; 0x24
 8006a30:	b920      	cbnz	r0, 8006a3c <_Balloc+0x20>
 8006a32:	2166      	movs	r1, #102	; 0x66
 8006a34:	4b17      	ldr	r3, [pc, #92]	; (8006a94 <_Balloc+0x78>)
 8006a36:	4818      	ldr	r0, [pc, #96]	; (8006a98 <_Balloc+0x7c>)
 8006a38:	f000 fdce 	bl	80075d8 <__assert_func>
 8006a3c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006a40:	6006      	str	r6, [r0, #0]
 8006a42:	60c6      	str	r6, [r0, #12]
 8006a44:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8006a46:	68f3      	ldr	r3, [r6, #12]
 8006a48:	b183      	cbz	r3, 8006a6c <_Balloc+0x50>
 8006a4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006a4c:	68db      	ldr	r3, [r3, #12]
 8006a4e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006a52:	b9b8      	cbnz	r0, 8006a84 <_Balloc+0x68>
 8006a54:	2101      	movs	r1, #1
 8006a56:	fa01 f605 	lsl.w	r6, r1, r5
 8006a5a:	1d72      	adds	r2, r6, #5
 8006a5c:	4620      	mov	r0, r4
 8006a5e:	0092      	lsls	r2, r2, #2
 8006a60:	f000 fb5e 	bl	8007120 <_calloc_r>
 8006a64:	b160      	cbz	r0, 8006a80 <_Balloc+0x64>
 8006a66:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8006a6a:	e00e      	b.n	8006a8a <_Balloc+0x6e>
 8006a6c:	2221      	movs	r2, #33	; 0x21
 8006a6e:	2104      	movs	r1, #4
 8006a70:	4620      	mov	r0, r4
 8006a72:	f000 fb55 	bl	8007120 <_calloc_r>
 8006a76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006a78:	60f0      	str	r0, [r6, #12]
 8006a7a:	68db      	ldr	r3, [r3, #12]
 8006a7c:	2b00      	cmp	r3, #0
 8006a7e:	d1e4      	bne.n	8006a4a <_Balloc+0x2e>
 8006a80:	2000      	movs	r0, #0
 8006a82:	bd70      	pop	{r4, r5, r6, pc}
 8006a84:	6802      	ldr	r2, [r0, #0]
 8006a86:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8006a8a:	2300      	movs	r3, #0
 8006a8c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006a90:	e7f7      	b.n	8006a82 <_Balloc+0x66>
 8006a92:	bf00      	nop
 8006a94:	0800839d 	.word	0x0800839d
 8006a98:	08008420 	.word	0x08008420

08006a9c <_Bfree>:
 8006a9c:	b570      	push	{r4, r5, r6, lr}
 8006a9e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8006aa0:	4605      	mov	r5, r0
 8006aa2:	460c      	mov	r4, r1
 8006aa4:	b976      	cbnz	r6, 8006ac4 <_Bfree+0x28>
 8006aa6:	2010      	movs	r0, #16
 8006aa8:	f7ff ff94 	bl	80069d4 <malloc>
 8006aac:	4602      	mov	r2, r0
 8006aae:	6268      	str	r0, [r5, #36]	; 0x24
 8006ab0:	b920      	cbnz	r0, 8006abc <_Bfree+0x20>
 8006ab2:	218a      	movs	r1, #138	; 0x8a
 8006ab4:	4b08      	ldr	r3, [pc, #32]	; (8006ad8 <_Bfree+0x3c>)
 8006ab6:	4809      	ldr	r0, [pc, #36]	; (8006adc <_Bfree+0x40>)
 8006ab8:	f000 fd8e 	bl	80075d8 <__assert_func>
 8006abc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006ac0:	6006      	str	r6, [r0, #0]
 8006ac2:	60c6      	str	r6, [r0, #12]
 8006ac4:	b13c      	cbz	r4, 8006ad6 <_Bfree+0x3a>
 8006ac6:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8006ac8:	6862      	ldr	r2, [r4, #4]
 8006aca:	68db      	ldr	r3, [r3, #12]
 8006acc:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006ad0:	6021      	str	r1, [r4, #0]
 8006ad2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8006ad6:	bd70      	pop	{r4, r5, r6, pc}
 8006ad8:	0800839d 	.word	0x0800839d
 8006adc:	08008420 	.word	0x08008420

08006ae0 <__multadd>:
 8006ae0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006ae4:	4607      	mov	r7, r0
 8006ae6:	460c      	mov	r4, r1
 8006ae8:	461e      	mov	r6, r3
 8006aea:	2000      	movs	r0, #0
 8006aec:	690d      	ldr	r5, [r1, #16]
 8006aee:	f101 0c14 	add.w	ip, r1, #20
 8006af2:	f8dc 3000 	ldr.w	r3, [ip]
 8006af6:	3001      	adds	r0, #1
 8006af8:	b299      	uxth	r1, r3
 8006afa:	fb02 6101 	mla	r1, r2, r1, r6
 8006afe:	0c1e      	lsrs	r6, r3, #16
 8006b00:	0c0b      	lsrs	r3, r1, #16
 8006b02:	fb02 3306 	mla	r3, r2, r6, r3
 8006b06:	b289      	uxth	r1, r1
 8006b08:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8006b0c:	4285      	cmp	r5, r0
 8006b0e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8006b12:	f84c 1b04 	str.w	r1, [ip], #4
 8006b16:	dcec      	bgt.n	8006af2 <__multadd+0x12>
 8006b18:	b30e      	cbz	r6, 8006b5e <__multadd+0x7e>
 8006b1a:	68a3      	ldr	r3, [r4, #8]
 8006b1c:	42ab      	cmp	r3, r5
 8006b1e:	dc19      	bgt.n	8006b54 <__multadd+0x74>
 8006b20:	6861      	ldr	r1, [r4, #4]
 8006b22:	4638      	mov	r0, r7
 8006b24:	3101      	adds	r1, #1
 8006b26:	f7ff ff79 	bl	8006a1c <_Balloc>
 8006b2a:	4680      	mov	r8, r0
 8006b2c:	b928      	cbnz	r0, 8006b3a <__multadd+0x5a>
 8006b2e:	4602      	mov	r2, r0
 8006b30:	21b5      	movs	r1, #181	; 0xb5
 8006b32:	4b0c      	ldr	r3, [pc, #48]	; (8006b64 <__multadd+0x84>)
 8006b34:	480c      	ldr	r0, [pc, #48]	; (8006b68 <__multadd+0x88>)
 8006b36:	f000 fd4f 	bl	80075d8 <__assert_func>
 8006b3a:	6922      	ldr	r2, [r4, #16]
 8006b3c:	f104 010c 	add.w	r1, r4, #12
 8006b40:	3202      	adds	r2, #2
 8006b42:	0092      	lsls	r2, r2, #2
 8006b44:	300c      	adds	r0, #12
 8006b46:	f7ff ff5b 	bl	8006a00 <memcpy>
 8006b4a:	4621      	mov	r1, r4
 8006b4c:	4638      	mov	r0, r7
 8006b4e:	f7ff ffa5 	bl	8006a9c <_Bfree>
 8006b52:	4644      	mov	r4, r8
 8006b54:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006b58:	3501      	adds	r5, #1
 8006b5a:	615e      	str	r6, [r3, #20]
 8006b5c:	6125      	str	r5, [r4, #16]
 8006b5e:	4620      	mov	r0, r4
 8006b60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b64:	0800840f 	.word	0x0800840f
 8006b68:	08008420 	.word	0x08008420

08006b6c <__hi0bits>:
 8006b6c:	0c02      	lsrs	r2, r0, #16
 8006b6e:	0412      	lsls	r2, r2, #16
 8006b70:	4603      	mov	r3, r0
 8006b72:	b9ca      	cbnz	r2, 8006ba8 <__hi0bits+0x3c>
 8006b74:	0403      	lsls	r3, r0, #16
 8006b76:	2010      	movs	r0, #16
 8006b78:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8006b7c:	bf04      	itt	eq
 8006b7e:	021b      	lsleq	r3, r3, #8
 8006b80:	3008      	addeq	r0, #8
 8006b82:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8006b86:	bf04      	itt	eq
 8006b88:	011b      	lsleq	r3, r3, #4
 8006b8a:	3004      	addeq	r0, #4
 8006b8c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8006b90:	bf04      	itt	eq
 8006b92:	009b      	lsleq	r3, r3, #2
 8006b94:	3002      	addeq	r0, #2
 8006b96:	2b00      	cmp	r3, #0
 8006b98:	db05      	blt.n	8006ba6 <__hi0bits+0x3a>
 8006b9a:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8006b9e:	f100 0001 	add.w	r0, r0, #1
 8006ba2:	bf08      	it	eq
 8006ba4:	2020      	moveq	r0, #32
 8006ba6:	4770      	bx	lr
 8006ba8:	2000      	movs	r0, #0
 8006baa:	e7e5      	b.n	8006b78 <__hi0bits+0xc>

08006bac <__lo0bits>:
 8006bac:	6803      	ldr	r3, [r0, #0]
 8006bae:	4602      	mov	r2, r0
 8006bb0:	f013 0007 	ands.w	r0, r3, #7
 8006bb4:	d00b      	beq.n	8006bce <__lo0bits+0x22>
 8006bb6:	07d9      	lsls	r1, r3, #31
 8006bb8:	d421      	bmi.n	8006bfe <__lo0bits+0x52>
 8006bba:	0798      	lsls	r0, r3, #30
 8006bbc:	bf49      	itett	mi
 8006bbe:	085b      	lsrmi	r3, r3, #1
 8006bc0:	089b      	lsrpl	r3, r3, #2
 8006bc2:	2001      	movmi	r0, #1
 8006bc4:	6013      	strmi	r3, [r2, #0]
 8006bc6:	bf5c      	itt	pl
 8006bc8:	2002      	movpl	r0, #2
 8006bca:	6013      	strpl	r3, [r2, #0]
 8006bcc:	4770      	bx	lr
 8006bce:	b299      	uxth	r1, r3
 8006bd0:	b909      	cbnz	r1, 8006bd6 <__lo0bits+0x2a>
 8006bd2:	2010      	movs	r0, #16
 8006bd4:	0c1b      	lsrs	r3, r3, #16
 8006bd6:	b2d9      	uxtb	r1, r3
 8006bd8:	b909      	cbnz	r1, 8006bde <__lo0bits+0x32>
 8006bda:	3008      	adds	r0, #8
 8006bdc:	0a1b      	lsrs	r3, r3, #8
 8006bde:	0719      	lsls	r1, r3, #28
 8006be0:	bf04      	itt	eq
 8006be2:	091b      	lsreq	r3, r3, #4
 8006be4:	3004      	addeq	r0, #4
 8006be6:	0799      	lsls	r1, r3, #30
 8006be8:	bf04      	itt	eq
 8006bea:	089b      	lsreq	r3, r3, #2
 8006bec:	3002      	addeq	r0, #2
 8006bee:	07d9      	lsls	r1, r3, #31
 8006bf0:	d403      	bmi.n	8006bfa <__lo0bits+0x4e>
 8006bf2:	085b      	lsrs	r3, r3, #1
 8006bf4:	f100 0001 	add.w	r0, r0, #1
 8006bf8:	d003      	beq.n	8006c02 <__lo0bits+0x56>
 8006bfa:	6013      	str	r3, [r2, #0]
 8006bfc:	4770      	bx	lr
 8006bfe:	2000      	movs	r0, #0
 8006c00:	4770      	bx	lr
 8006c02:	2020      	movs	r0, #32
 8006c04:	4770      	bx	lr
	...

08006c08 <__i2b>:
 8006c08:	b510      	push	{r4, lr}
 8006c0a:	460c      	mov	r4, r1
 8006c0c:	2101      	movs	r1, #1
 8006c0e:	f7ff ff05 	bl	8006a1c <_Balloc>
 8006c12:	4602      	mov	r2, r0
 8006c14:	b928      	cbnz	r0, 8006c22 <__i2b+0x1a>
 8006c16:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8006c1a:	4b04      	ldr	r3, [pc, #16]	; (8006c2c <__i2b+0x24>)
 8006c1c:	4804      	ldr	r0, [pc, #16]	; (8006c30 <__i2b+0x28>)
 8006c1e:	f000 fcdb 	bl	80075d8 <__assert_func>
 8006c22:	2301      	movs	r3, #1
 8006c24:	6144      	str	r4, [r0, #20]
 8006c26:	6103      	str	r3, [r0, #16]
 8006c28:	bd10      	pop	{r4, pc}
 8006c2a:	bf00      	nop
 8006c2c:	0800840f 	.word	0x0800840f
 8006c30:	08008420 	.word	0x08008420

08006c34 <__multiply>:
 8006c34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c38:	4691      	mov	r9, r2
 8006c3a:	690a      	ldr	r2, [r1, #16]
 8006c3c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006c40:	460c      	mov	r4, r1
 8006c42:	429a      	cmp	r2, r3
 8006c44:	bfbe      	ittt	lt
 8006c46:	460b      	movlt	r3, r1
 8006c48:	464c      	movlt	r4, r9
 8006c4a:	4699      	movlt	r9, r3
 8006c4c:	6927      	ldr	r7, [r4, #16]
 8006c4e:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8006c52:	68a3      	ldr	r3, [r4, #8]
 8006c54:	6861      	ldr	r1, [r4, #4]
 8006c56:	eb07 060a 	add.w	r6, r7, sl
 8006c5a:	42b3      	cmp	r3, r6
 8006c5c:	b085      	sub	sp, #20
 8006c5e:	bfb8      	it	lt
 8006c60:	3101      	addlt	r1, #1
 8006c62:	f7ff fedb 	bl	8006a1c <_Balloc>
 8006c66:	b930      	cbnz	r0, 8006c76 <__multiply+0x42>
 8006c68:	4602      	mov	r2, r0
 8006c6a:	f240 115d 	movw	r1, #349	; 0x15d
 8006c6e:	4b43      	ldr	r3, [pc, #268]	; (8006d7c <__multiply+0x148>)
 8006c70:	4843      	ldr	r0, [pc, #268]	; (8006d80 <__multiply+0x14c>)
 8006c72:	f000 fcb1 	bl	80075d8 <__assert_func>
 8006c76:	f100 0514 	add.w	r5, r0, #20
 8006c7a:	462b      	mov	r3, r5
 8006c7c:	2200      	movs	r2, #0
 8006c7e:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8006c82:	4543      	cmp	r3, r8
 8006c84:	d321      	bcc.n	8006cca <__multiply+0x96>
 8006c86:	f104 0314 	add.w	r3, r4, #20
 8006c8a:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8006c8e:	f109 0314 	add.w	r3, r9, #20
 8006c92:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8006c96:	9202      	str	r2, [sp, #8]
 8006c98:	1b3a      	subs	r2, r7, r4
 8006c9a:	3a15      	subs	r2, #21
 8006c9c:	f022 0203 	bic.w	r2, r2, #3
 8006ca0:	3204      	adds	r2, #4
 8006ca2:	f104 0115 	add.w	r1, r4, #21
 8006ca6:	428f      	cmp	r7, r1
 8006ca8:	bf38      	it	cc
 8006caa:	2204      	movcc	r2, #4
 8006cac:	9201      	str	r2, [sp, #4]
 8006cae:	9a02      	ldr	r2, [sp, #8]
 8006cb0:	9303      	str	r3, [sp, #12]
 8006cb2:	429a      	cmp	r2, r3
 8006cb4:	d80c      	bhi.n	8006cd0 <__multiply+0x9c>
 8006cb6:	2e00      	cmp	r6, #0
 8006cb8:	dd03      	ble.n	8006cc2 <__multiply+0x8e>
 8006cba:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006cbe:	2b00      	cmp	r3, #0
 8006cc0:	d059      	beq.n	8006d76 <__multiply+0x142>
 8006cc2:	6106      	str	r6, [r0, #16]
 8006cc4:	b005      	add	sp, #20
 8006cc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006cca:	f843 2b04 	str.w	r2, [r3], #4
 8006cce:	e7d8      	b.n	8006c82 <__multiply+0x4e>
 8006cd0:	f8b3 a000 	ldrh.w	sl, [r3]
 8006cd4:	f1ba 0f00 	cmp.w	sl, #0
 8006cd8:	d023      	beq.n	8006d22 <__multiply+0xee>
 8006cda:	46a9      	mov	r9, r5
 8006cdc:	f04f 0c00 	mov.w	ip, #0
 8006ce0:	f104 0e14 	add.w	lr, r4, #20
 8006ce4:	f85e 2b04 	ldr.w	r2, [lr], #4
 8006ce8:	f8d9 1000 	ldr.w	r1, [r9]
 8006cec:	fa1f fb82 	uxth.w	fp, r2
 8006cf0:	b289      	uxth	r1, r1
 8006cf2:	fb0a 110b 	mla	r1, sl, fp, r1
 8006cf6:	4461      	add	r1, ip
 8006cf8:	f8d9 c000 	ldr.w	ip, [r9]
 8006cfc:	0c12      	lsrs	r2, r2, #16
 8006cfe:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8006d02:	fb0a c202 	mla	r2, sl, r2, ip
 8006d06:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8006d0a:	b289      	uxth	r1, r1
 8006d0c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8006d10:	4577      	cmp	r7, lr
 8006d12:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8006d16:	f849 1b04 	str.w	r1, [r9], #4
 8006d1a:	d8e3      	bhi.n	8006ce4 <__multiply+0xb0>
 8006d1c:	9a01      	ldr	r2, [sp, #4]
 8006d1e:	f845 c002 	str.w	ip, [r5, r2]
 8006d22:	9a03      	ldr	r2, [sp, #12]
 8006d24:	3304      	adds	r3, #4
 8006d26:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8006d2a:	f1b9 0f00 	cmp.w	r9, #0
 8006d2e:	d020      	beq.n	8006d72 <__multiply+0x13e>
 8006d30:	46ae      	mov	lr, r5
 8006d32:	f04f 0a00 	mov.w	sl, #0
 8006d36:	6829      	ldr	r1, [r5, #0]
 8006d38:	f104 0c14 	add.w	ip, r4, #20
 8006d3c:	f8bc b000 	ldrh.w	fp, [ip]
 8006d40:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8006d44:	b289      	uxth	r1, r1
 8006d46:	fb09 220b 	mla	r2, r9, fp, r2
 8006d4a:	4492      	add	sl, r2
 8006d4c:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8006d50:	f84e 1b04 	str.w	r1, [lr], #4
 8006d54:	f85c 2b04 	ldr.w	r2, [ip], #4
 8006d58:	f8be 1000 	ldrh.w	r1, [lr]
 8006d5c:	0c12      	lsrs	r2, r2, #16
 8006d5e:	fb09 1102 	mla	r1, r9, r2, r1
 8006d62:	4567      	cmp	r7, ip
 8006d64:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8006d68:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006d6c:	d8e6      	bhi.n	8006d3c <__multiply+0x108>
 8006d6e:	9a01      	ldr	r2, [sp, #4]
 8006d70:	50a9      	str	r1, [r5, r2]
 8006d72:	3504      	adds	r5, #4
 8006d74:	e79b      	b.n	8006cae <__multiply+0x7a>
 8006d76:	3e01      	subs	r6, #1
 8006d78:	e79d      	b.n	8006cb6 <__multiply+0x82>
 8006d7a:	bf00      	nop
 8006d7c:	0800840f 	.word	0x0800840f
 8006d80:	08008420 	.word	0x08008420

08006d84 <__pow5mult>:
 8006d84:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006d88:	4615      	mov	r5, r2
 8006d8a:	f012 0203 	ands.w	r2, r2, #3
 8006d8e:	4606      	mov	r6, r0
 8006d90:	460f      	mov	r7, r1
 8006d92:	d007      	beq.n	8006da4 <__pow5mult+0x20>
 8006d94:	4c25      	ldr	r4, [pc, #148]	; (8006e2c <__pow5mult+0xa8>)
 8006d96:	3a01      	subs	r2, #1
 8006d98:	2300      	movs	r3, #0
 8006d9a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8006d9e:	f7ff fe9f 	bl	8006ae0 <__multadd>
 8006da2:	4607      	mov	r7, r0
 8006da4:	10ad      	asrs	r5, r5, #2
 8006da6:	d03d      	beq.n	8006e24 <__pow5mult+0xa0>
 8006da8:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8006daa:	b97c      	cbnz	r4, 8006dcc <__pow5mult+0x48>
 8006dac:	2010      	movs	r0, #16
 8006dae:	f7ff fe11 	bl	80069d4 <malloc>
 8006db2:	4602      	mov	r2, r0
 8006db4:	6270      	str	r0, [r6, #36]	; 0x24
 8006db6:	b928      	cbnz	r0, 8006dc4 <__pow5mult+0x40>
 8006db8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8006dbc:	4b1c      	ldr	r3, [pc, #112]	; (8006e30 <__pow5mult+0xac>)
 8006dbe:	481d      	ldr	r0, [pc, #116]	; (8006e34 <__pow5mult+0xb0>)
 8006dc0:	f000 fc0a 	bl	80075d8 <__assert_func>
 8006dc4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8006dc8:	6004      	str	r4, [r0, #0]
 8006dca:	60c4      	str	r4, [r0, #12]
 8006dcc:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8006dd0:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8006dd4:	b94c      	cbnz	r4, 8006dea <__pow5mult+0x66>
 8006dd6:	f240 2171 	movw	r1, #625	; 0x271
 8006dda:	4630      	mov	r0, r6
 8006ddc:	f7ff ff14 	bl	8006c08 <__i2b>
 8006de0:	2300      	movs	r3, #0
 8006de2:	4604      	mov	r4, r0
 8006de4:	f8c8 0008 	str.w	r0, [r8, #8]
 8006de8:	6003      	str	r3, [r0, #0]
 8006dea:	f04f 0900 	mov.w	r9, #0
 8006dee:	07eb      	lsls	r3, r5, #31
 8006df0:	d50a      	bpl.n	8006e08 <__pow5mult+0x84>
 8006df2:	4639      	mov	r1, r7
 8006df4:	4622      	mov	r2, r4
 8006df6:	4630      	mov	r0, r6
 8006df8:	f7ff ff1c 	bl	8006c34 <__multiply>
 8006dfc:	4680      	mov	r8, r0
 8006dfe:	4639      	mov	r1, r7
 8006e00:	4630      	mov	r0, r6
 8006e02:	f7ff fe4b 	bl	8006a9c <_Bfree>
 8006e06:	4647      	mov	r7, r8
 8006e08:	106d      	asrs	r5, r5, #1
 8006e0a:	d00b      	beq.n	8006e24 <__pow5mult+0xa0>
 8006e0c:	6820      	ldr	r0, [r4, #0]
 8006e0e:	b938      	cbnz	r0, 8006e20 <__pow5mult+0x9c>
 8006e10:	4622      	mov	r2, r4
 8006e12:	4621      	mov	r1, r4
 8006e14:	4630      	mov	r0, r6
 8006e16:	f7ff ff0d 	bl	8006c34 <__multiply>
 8006e1a:	6020      	str	r0, [r4, #0]
 8006e1c:	f8c0 9000 	str.w	r9, [r0]
 8006e20:	4604      	mov	r4, r0
 8006e22:	e7e4      	b.n	8006dee <__pow5mult+0x6a>
 8006e24:	4638      	mov	r0, r7
 8006e26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006e2a:	bf00      	nop
 8006e2c:	08008570 	.word	0x08008570
 8006e30:	0800839d 	.word	0x0800839d
 8006e34:	08008420 	.word	0x08008420

08006e38 <__lshift>:
 8006e38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006e3c:	460c      	mov	r4, r1
 8006e3e:	4607      	mov	r7, r0
 8006e40:	4691      	mov	r9, r2
 8006e42:	6923      	ldr	r3, [r4, #16]
 8006e44:	6849      	ldr	r1, [r1, #4]
 8006e46:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8006e4a:	68a3      	ldr	r3, [r4, #8]
 8006e4c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8006e50:	f108 0601 	add.w	r6, r8, #1
 8006e54:	42b3      	cmp	r3, r6
 8006e56:	db0b      	blt.n	8006e70 <__lshift+0x38>
 8006e58:	4638      	mov	r0, r7
 8006e5a:	f7ff fddf 	bl	8006a1c <_Balloc>
 8006e5e:	4605      	mov	r5, r0
 8006e60:	b948      	cbnz	r0, 8006e76 <__lshift+0x3e>
 8006e62:	4602      	mov	r2, r0
 8006e64:	f240 11d9 	movw	r1, #473	; 0x1d9
 8006e68:	4b29      	ldr	r3, [pc, #164]	; (8006f10 <__lshift+0xd8>)
 8006e6a:	482a      	ldr	r0, [pc, #168]	; (8006f14 <__lshift+0xdc>)
 8006e6c:	f000 fbb4 	bl	80075d8 <__assert_func>
 8006e70:	3101      	adds	r1, #1
 8006e72:	005b      	lsls	r3, r3, #1
 8006e74:	e7ee      	b.n	8006e54 <__lshift+0x1c>
 8006e76:	2300      	movs	r3, #0
 8006e78:	f100 0114 	add.w	r1, r0, #20
 8006e7c:	f100 0210 	add.w	r2, r0, #16
 8006e80:	4618      	mov	r0, r3
 8006e82:	4553      	cmp	r3, sl
 8006e84:	db37      	blt.n	8006ef6 <__lshift+0xbe>
 8006e86:	6920      	ldr	r0, [r4, #16]
 8006e88:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006e8c:	f104 0314 	add.w	r3, r4, #20
 8006e90:	f019 091f 	ands.w	r9, r9, #31
 8006e94:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8006e98:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8006e9c:	d02f      	beq.n	8006efe <__lshift+0xc6>
 8006e9e:	468a      	mov	sl, r1
 8006ea0:	f04f 0c00 	mov.w	ip, #0
 8006ea4:	f1c9 0e20 	rsb	lr, r9, #32
 8006ea8:	681a      	ldr	r2, [r3, #0]
 8006eaa:	fa02 f209 	lsl.w	r2, r2, r9
 8006eae:	ea42 020c 	orr.w	r2, r2, ip
 8006eb2:	f84a 2b04 	str.w	r2, [sl], #4
 8006eb6:	f853 2b04 	ldr.w	r2, [r3], #4
 8006eba:	4298      	cmp	r0, r3
 8006ebc:	fa22 fc0e 	lsr.w	ip, r2, lr
 8006ec0:	d8f2      	bhi.n	8006ea8 <__lshift+0x70>
 8006ec2:	1b03      	subs	r3, r0, r4
 8006ec4:	3b15      	subs	r3, #21
 8006ec6:	f023 0303 	bic.w	r3, r3, #3
 8006eca:	3304      	adds	r3, #4
 8006ecc:	f104 0215 	add.w	r2, r4, #21
 8006ed0:	4290      	cmp	r0, r2
 8006ed2:	bf38      	it	cc
 8006ed4:	2304      	movcc	r3, #4
 8006ed6:	f841 c003 	str.w	ip, [r1, r3]
 8006eda:	f1bc 0f00 	cmp.w	ip, #0
 8006ede:	d001      	beq.n	8006ee4 <__lshift+0xac>
 8006ee0:	f108 0602 	add.w	r6, r8, #2
 8006ee4:	3e01      	subs	r6, #1
 8006ee6:	4638      	mov	r0, r7
 8006ee8:	4621      	mov	r1, r4
 8006eea:	612e      	str	r6, [r5, #16]
 8006eec:	f7ff fdd6 	bl	8006a9c <_Bfree>
 8006ef0:	4628      	mov	r0, r5
 8006ef2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006ef6:	f842 0f04 	str.w	r0, [r2, #4]!
 8006efa:	3301      	adds	r3, #1
 8006efc:	e7c1      	b.n	8006e82 <__lshift+0x4a>
 8006efe:	3904      	subs	r1, #4
 8006f00:	f853 2b04 	ldr.w	r2, [r3], #4
 8006f04:	4298      	cmp	r0, r3
 8006f06:	f841 2f04 	str.w	r2, [r1, #4]!
 8006f0a:	d8f9      	bhi.n	8006f00 <__lshift+0xc8>
 8006f0c:	e7ea      	b.n	8006ee4 <__lshift+0xac>
 8006f0e:	bf00      	nop
 8006f10:	0800840f 	.word	0x0800840f
 8006f14:	08008420 	.word	0x08008420

08006f18 <__mcmp>:
 8006f18:	4603      	mov	r3, r0
 8006f1a:	690a      	ldr	r2, [r1, #16]
 8006f1c:	6900      	ldr	r0, [r0, #16]
 8006f1e:	b530      	push	{r4, r5, lr}
 8006f20:	1a80      	subs	r0, r0, r2
 8006f22:	d10d      	bne.n	8006f40 <__mcmp+0x28>
 8006f24:	3314      	adds	r3, #20
 8006f26:	3114      	adds	r1, #20
 8006f28:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8006f2c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8006f30:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8006f34:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8006f38:	4295      	cmp	r5, r2
 8006f3a:	d002      	beq.n	8006f42 <__mcmp+0x2a>
 8006f3c:	d304      	bcc.n	8006f48 <__mcmp+0x30>
 8006f3e:	2001      	movs	r0, #1
 8006f40:	bd30      	pop	{r4, r5, pc}
 8006f42:	42a3      	cmp	r3, r4
 8006f44:	d3f4      	bcc.n	8006f30 <__mcmp+0x18>
 8006f46:	e7fb      	b.n	8006f40 <__mcmp+0x28>
 8006f48:	f04f 30ff 	mov.w	r0, #4294967295
 8006f4c:	e7f8      	b.n	8006f40 <__mcmp+0x28>
	...

08006f50 <__mdiff>:
 8006f50:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f54:	460d      	mov	r5, r1
 8006f56:	4607      	mov	r7, r0
 8006f58:	4611      	mov	r1, r2
 8006f5a:	4628      	mov	r0, r5
 8006f5c:	4614      	mov	r4, r2
 8006f5e:	f7ff ffdb 	bl	8006f18 <__mcmp>
 8006f62:	1e06      	subs	r6, r0, #0
 8006f64:	d111      	bne.n	8006f8a <__mdiff+0x3a>
 8006f66:	4631      	mov	r1, r6
 8006f68:	4638      	mov	r0, r7
 8006f6a:	f7ff fd57 	bl	8006a1c <_Balloc>
 8006f6e:	4602      	mov	r2, r0
 8006f70:	b928      	cbnz	r0, 8006f7e <__mdiff+0x2e>
 8006f72:	f240 2132 	movw	r1, #562	; 0x232
 8006f76:	4b3a      	ldr	r3, [pc, #232]	; (8007060 <__mdiff+0x110>)
 8006f78:	483a      	ldr	r0, [pc, #232]	; (8007064 <__mdiff+0x114>)
 8006f7a:	f000 fb2d 	bl	80075d8 <__assert_func>
 8006f7e:	2301      	movs	r3, #1
 8006f80:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8006f84:	4610      	mov	r0, r2
 8006f86:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006f8a:	bfa4      	itt	ge
 8006f8c:	4623      	movge	r3, r4
 8006f8e:	462c      	movge	r4, r5
 8006f90:	4638      	mov	r0, r7
 8006f92:	6861      	ldr	r1, [r4, #4]
 8006f94:	bfa6      	itte	ge
 8006f96:	461d      	movge	r5, r3
 8006f98:	2600      	movge	r6, #0
 8006f9a:	2601      	movlt	r6, #1
 8006f9c:	f7ff fd3e 	bl	8006a1c <_Balloc>
 8006fa0:	4602      	mov	r2, r0
 8006fa2:	b918      	cbnz	r0, 8006fac <__mdiff+0x5c>
 8006fa4:	f44f 7110 	mov.w	r1, #576	; 0x240
 8006fa8:	4b2d      	ldr	r3, [pc, #180]	; (8007060 <__mdiff+0x110>)
 8006faa:	e7e5      	b.n	8006f78 <__mdiff+0x28>
 8006fac:	f102 0814 	add.w	r8, r2, #20
 8006fb0:	46c2      	mov	sl, r8
 8006fb2:	f04f 0c00 	mov.w	ip, #0
 8006fb6:	6927      	ldr	r7, [r4, #16]
 8006fb8:	60c6      	str	r6, [r0, #12]
 8006fba:	692e      	ldr	r6, [r5, #16]
 8006fbc:	f104 0014 	add.w	r0, r4, #20
 8006fc0:	f105 0914 	add.w	r9, r5, #20
 8006fc4:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 8006fc8:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8006fcc:	3410      	adds	r4, #16
 8006fce:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8006fd2:	f859 3b04 	ldr.w	r3, [r9], #4
 8006fd6:	fa1f f18b 	uxth.w	r1, fp
 8006fda:	448c      	add	ip, r1
 8006fdc:	b299      	uxth	r1, r3
 8006fde:	0c1b      	lsrs	r3, r3, #16
 8006fe0:	ebac 0101 	sub.w	r1, ip, r1
 8006fe4:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8006fe8:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8006fec:	b289      	uxth	r1, r1
 8006fee:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8006ff2:	454e      	cmp	r6, r9
 8006ff4:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8006ff8:	f84a 3b04 	str.w	r3, [sl], #4
 8006ffc:	d8e7      	bhi.n	8006fce <__mdiff+0x7e>
 8006ffe:	1b73      	subs	r3, r6, r5
 8007000:	3b15      	subs	r3, #21
 8007002:	f023 0303 	bic.w	r3, r3, #3
 8007006:	3515      	adds	r5, #21
 8007008:	3304      	adds	r3, #4
 800700a:	42ae      	cmp	r6, r5
 800700c:	bf38      	it	cc
 800700e:	2304      	movcc	r3, #4
 8007010:	4418      	add	r0, r3
 8007012:	4443      	add	r3, r8
 8007014:	461e      	mov	r6, r3
 8007016:	4605      	mov	r5, r0
 8007018:	4575      	cmp	r5, lr
 800701a:	d30e      	bcc.n	800703a <__mdiff+0xea>
 800701c:	f10e 0103 	add.w	r1, lr, #3
 8007020:	1a09      	subs	r1, r1, r0
 8007022:	f021 0103 	bic.w	r1, r1, #3
 8007026:	3803      	subs	r0, #3
 8007028:	4586      	cmp	lr, r0
 800702a:	bf38      	it	cc
 800702c:	2100      	movcc	r1, #0
 800702e:	4419      	add	r1, r3
 8007030:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8007034:	b18b      	cbz	r3, 800705a <__mdiff+0x10a>
 8007036:	6117      	str	r7, [r2, #16]
 8007038:	e7a4      	b.n	8006f84 <__mdiff+0x34>
 800703a:	f855 8b04 	ldr.w	r8, [r5], #4
 800703e:	fa1f f188 	uxth.w	r1, r8
 8007042:	4461      	add	r1, ip
 8007044:	140c      	asrs	r4, r1, #16
 8007046:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800704a:	b289      	uxth	r1, r1
 800704c:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8007050:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8007054:	f846 1b04 	str.w	r1, [r6], #4
 8007058:	e7de      	b.n	8007018 <__mdiff+0xc8>
 800705a:	3f01      	subs	r7, #1
 800705c:	e7e8      	b.n	8007030 <__mdiff+0xe0>
 800705e:	bf00      	nop
 8007060:	0800840f 	.word	0x0800840f
 8007064:	08008420 	.word	0x08008420

08007068 <__d2b>:
 8007068:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800706c:	2101      	movs	r1, #1
 800706e:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 8007072:	4690      	mov	r8, r2
 8007074:	461d      	mov	r5, r3
 8007076:	f7ff fcd1 	bl	8006a1c <_Balloc>
 800707a:	4604      	mov	r4, r0
 800707c:	b930      	cbnz	r0, 800708c <__d2b+0x24>
 800707e:	4602      	mov	r2, r0
 8007080:	f240 310a 	movw	r1, #778	; 0x30a
 8007084:	4b24      	ldr	r3, [pc, #144]	; (8007118 <__d2b+0xb0>)
 8007086:	4825      	ldr	r0, [pc, #148]	; (800711c <__d2b+0xb4>)
 8007088:	f000 faa6 	bl	80075d8 <__assert_func>
 800708c:	f3c5 0313 	ubfx	r3, r5, #0, #20
 8007090:	f3c5 550a 	ubfx	r5, r5, #20, #11
 8007094:	bb2d      	cbnz	r5, 80070e2 <__d2b+0x7a>
 8007096:	9301      	str	r3, [sp, #4]
 8007098:	f1b8 0300 	subs.w	r3, r8, #0
 800709c:	d026      	beq.n	80070ec <__d2b+0x84>
 800709e:	4668      	mov	r0, sp
 80070a0:	9300      	str	r3, [sp, #0]
 80070a2:	f7ff fd83 	bl	8006bac <__lo0bits>
 80070a6:	9900      	ldr	r1, [sp, #0]
 80070a8:	b1f0      	cbz	r0, 80070e8 <__d2b+0x80>
 80070aa:	9a01      	ldr	r2, [sp, #4]
 80070ac:	f1c0 0320 	rsb	r3, r0, #32
 80070b0:	fa02 f303 	lsl.w	r3, r2, r3
 80070b4:	430b      	orrs	r3, r1
 80070b6:	40c2      	lsrs	r2, r0
 80070b8:	6163      	str	r3, [r4, #20]
 80070ba:	9201      	str	r2, [sp, #4]
 80070bc:	9b01      	ldr	r3, [sp, #4]
 80070be:	2b00      	cmp	r3, #0
 80070c0:	bf14      	ite	ne
 80070c2:	2102      	movne	r1, #2
 80070c4:	2101      	moveq	r1, #1
 80070c6:	61a3      	str	r3, [r4, #24]
 80070c8:	6121      	str	r1, [r4, #16]
 80070ca:	b1c5      	cbz	r5, 80070fe <__d2b+0x96>
 80070cc:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80070d0:	4405      	add	r5, r0
 80070d2:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80070d6:	603d      	str	r5, [r7, #0]
 80070d8:	6030      	str	r0, [r6, #0]
 80070da:	4620      	mov	r0, r4
 80070dc:	b002      	add	sp, #8
 80070de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80070e2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80070e6:	e7d6      	b.n	8007096 <__d2b+0x2e>
 80070e8:	6161      	str	r1, [r4, #20]
 80070ea:	e7e7      	b.n	80070bc <__d2b+0x54>
 80070ec:	a801      	add	r0, sp, #4
 80070ee:	f7ff fd5d 	bl	8006bac <__lo0bits>
 80070f2:	2101      	movs	r1, #1
 80070f4:	9b01      	ldr	r3, [sp, #4]
 80070f6:	6121      	str	r1, [r4, #16]
 80070f8:	6163      	str	r3, [r4, #20]
 80070fa:	3020      	adds	r0, #32
 80070fc:	e7e5      	b.n	80070ca <__d2b+0x62>
 80070fe:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 8007102:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8007106:	6038      	str	r0, [r7, #0]
 8007108:	6918      	ldr	r0, [r3, #16]
 800710a:	f7ff fd2f 	bl	8006b6c <__hi0bits>
 800710e:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 8007112:	6031      	str	r1, [r6, #0]
 8007114:	e7e1      	b.n	80070da <__d2b+0x72>
 8007116:	bf00      	nop
 8007118:	0800840f 	.word	0x0800840f
 800711c:	08008420 	.word	0x08008420

08007120 <_calloc_r>:
 8007120:	b570      	push	{r4, r5, r6, lr}
 8007122:	fba1 5402 	umull	r5, r4, r1, r2
 8007126:	b934      	cbnz	r4, 8007136 <_calloc_r+0x16>
 8007128:	4629      	mov	r1, r5
 800712a:	f000 f875 	bl	8007218 <_malloc_r>
 800712e:	4606      	mov	r6, r0
 8007130:	b928      	cbnz	r0, 800713e <_calloc_r+0x1e>
 8007132:	4630      	mov	r0, r6
 8007134:	bd70      	pop	{r4, r5, r6, pc}
 8007136:	220c      	movs	r2, #12
 8007138:	2600      	movs	r6, #0
 800713a:	6002      	str	r2, [r0, #0]
 800713c:	e7f9      	b.n	8007132 <_calloc_r+0x12>
 800713e:	462a      	mov	r2, r5
 8007140:	4621      	mov	r1, r4
 8007142:	f7fe f90d 	bl	8005360 <memset>
 8007146:	e7f4      	b.n	8007132 <_calloc_r+0x12>

08007148 <_free_r>:
 8007148:	b538      	push	{r3, r4, r5, lr}
 800714a:	4605      	mov	r5, r0
 800714c:	2900      	cmp	r1, #0
 800714e:	d040      	beq.n	80071d2 <_free_r+0x8a>
 8007150:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007154:	1f0c      	subs	r4, r1, #4
 8007156:	2b00      	cmp	r3, #0
 8007158:	bfb8      	it	lt
 800715a:	18e4      	addlt	r4, r4, r3
 800715c:	f000 fa98 	bl	8007690 <__malloc_lock>
 8007160:	4a1c      	ldr	r2, [pc, #112]	; (80071d4 <_free_r+0x8c>)
 8007162:	6813      	ldr	r3, [r2, #0]
 8007164:	b933      	cbnz	r3, 8007174 <_free_r+0x2c>
 8007166:	6063      	str	r3, [r4, #4]
 8007168:	6014      	str	r4, [r2, #0]
 800716a:	4628      	mov	r0, r5
 800716c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007170:	f000 ba94 	b.w	800769c <__malloc_unlock>
 8007174:	42a3      	cmp	r3, r4
 8007176:	d908      	bls.n	800718a <_free_r+0x42>
 8007178:	6820      	ldr	r0, [r4, #0]
 800717a:	1821      	adds	r1, r4, r0
 800717c:	428b      	cmp	r3, r1
 800717e:	bf01      	itttt	eq
 8007180:	6819      	ldreq	r1, [r3, #0]
 8007182:	685b      	ldreq	r3, [r3, #4]
 8007184:	1809      	addeq	r1, r1, r0
 8007186:	6021      	streq	r1, [r4, #0]
 8007188:	e7ed      	b.n	8007166 <_free_r+0x1e>
 800718a:	461a      	mov	r2, r3
 800718c:	685b      	ldr	r3, [r3, #4]
 800718e:	b10b      	cbz	r3, 8007194 <_free_r+0x4c>
 8007190:	42a3      	cmp	r3, r4
 8007192:	d9fa      	bls.n	800718a <_free_r+0x42>
 8007194:	6811      	ldr	r1, [r2, #0]
 8007196:	1850      	adds	r0, r2, r1
 8007198:	42a0      	cmp	r0, r4
 800719a:	d10b      	bne.n	80071b4 <_free_r+0x6c>
 800719c:	6820      	ldr	r0, [r4, #0]
 800719e:	4401      	add	r1, r0
 80071a0:	1850      	adds	r0, r2, r1
 80071a2:	4283      	cmp	r3, r0
 80071a4:	6011      	str	r1, [r2, #0]
 80071a6:	d1e0      	bne.n	800716a <_free_r+0x22>
 80071a8:	6818      	ldr	r0, [r3, #0]
 80071aa:	685b      	ldr	r3, [r3, #4]
 80071ac:	4401      	add	r1, r0
 80071ae:	6011      	str	r1, [r2, #0]
 80071b0:	6053      	str	r3, [r2, #4]
 80071b2:	e7da      	b.n	800716a <_free_r+0x22>
 80071b4:	d902      	bls.n	80071bc <_free_r+0x74>
 80071b6:	230c      	movs	r3, #12
 80071b8:	602b      	str	r3, [r5, #0]
 80071ba:	e7d6      	b.n	800716a <_free_r+0x22>
 80071bc:	6820      	ldr	r0, [r4, #0]
 80071be:	1821      	adds	r1, r4, r0
 80071c0:	428b      	cmp	r3, r1
 80071c2:	bf01      	itttt	eq
 80071c4:	6819      	ldreq	r1, [r3, #0]
 80071c6:	685b      	ldreq	r3, [r3, #4]
 80071c8:	1809      	addeq	r1, r1, r0
 80071ca:	6021      	streq	r1, [r4, #0]
 80071cc:	6063      	str	r3, [r4, #4]
 80071ce:	6054      	str	r4, [r2, #4]
 80071d0:	e7cb      	b.n	800716a <_free_r+0x22>
 80071d2:	bd38      	pop	{r3, r4, r5, pc}
 80071d4:	200006ac 	.word	0x200006ac

080071d8 <sbrk_aligned>:
 80071d8:	b570      	push	{r4, r5, r6, lr}
 80071da:	4e0e      	ldr	r6, [pc, #56]	; (8007214 <sbrk_aligned+0x3c>)
 80071dc:	460c      	mov	r4, r1
 80071de:	6831      	ldr	r1, [r6, #0]
 80071e0:	4605      	mov	r5, r0
 80071e2:	b911      	cbnz	r1, 80071ea <sbrk_aligned+0x12>
 80071e4:	f000 f9e8 	bl	80075b8 <_sbrk_r>
 80071e8:	6030      	str	r0, [r6, #0]
 80071ea:	4621      	mov	r1, r4
 80071ec:	4628      	mov	r0, r5
 80071ee:	f000 f9e3 	bl	80075b8 <_sbrk_r>
 80071f2:	1c43      	adds	r3, r0, #1
 80071f4:	d00a      	beq.n	800720c <sbrk_aligned+0x34>
 80071f6:	1cc4      	adds	r4, r0, #3
 80071f8:	f024 0403 	bic.w	r4, r4, #3
 80071fc:	42a0      	cmp	r0, r4
 80071fe:	d007      	beq.n	8007210 <sbrk_aligned+0x38>
 8007200:	1a21      	subs	r1, r4, r0
 8007202:	4628      	mov	r0, r5
 8007204:	f000 f9d8 	bl	80075b8 <_sbrk_r>
 8007208:	3001      	adds	r0, #1
 800720a:	d101      	bne.n	8007210 <sbrk_aligned+0x38>
 800720c:	f04f 34ff 	mov.w	r4, #4294967295
 8007210:	4620      	mov	r0, r4
 8007212:	bd70      	pop	{r4, r5, r6, pc}
 8007214:	200006b0 	.word	0x200006b0

08007218 <_malloc_r>:
 8007218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800721c:	1ccd      	adds	r5, r1, #3
 800721e:	f025 0503 	bic.w	r5, r5, #3
 8007222:	3508      	adds	r5, #8
 8007224:	2d0c      	cmp	r5, #12
 8007226:	bf38      	it	cc
 8007228:	250c      	movcc	r5, #12
 800722a:	2d00      	cmp	r5, #0
 800722c:	4607      	mov	r7, r0
 800722e:	db01      	blt.n	8007234 <_malloc_r+0x1c>
 8007230:	42a9      	cmp	r1, r5
 8007232:	d905      	bls.n	8007240 <_malloc_r+0x28>
 8007234:	230c      	movs	r3, #12
 8007236:	2600      	movs	r6, #0
 8007238:	603b      	str	r3, [r7, #0]
 800723a:	4630      	mov	r0, r6
 800723c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007240:	4e2e      	ldr	r6, [pc, #184]	; (80072fc <_malloc_r+0xe4>)
 8007242:	f000 fa25 	bl	8007690 <__malloc_lock>
 8007246:	6833      	ldr	r3, [r6, #0]
 8007248:	461c      	mov	r4, r3
 800724a:	bb34      	cbnz	r4, 800729a <_malloc_r+0x82>
 800724c:	4629      	mov	r1, r5
 800724e:	4638      	mov	r0, r7
 8007250:	f7ff ffc2 	bl	80071d8 <sbrk_aligned>
 8007254:	1c43      	adds	r3, r0, #1
 8007256:	4604      	mov	r4, r0
 8007258:	d14d      	bne.n	80072f6 <_malloc_r+0xde>
 800725a:	6834      	ldr	r4, [r6, #0]
 800725c:	4626      	mov	r6, r4
 800725e:	2e00      	cmp	r6, #0
 8007260:	d140      	bne.n	80072e4 <_malloc_r+0xcc>
 8007262:	6823      	ldr	r3, [r4, #0]
 8007264:	4631      	mov	r1, r6
 8007266:	4638      	mov	r0, r7
 8007268:	eb04 0803 	add.w	r8, r4, r3
 800726c:	f000 f9a4 	bl	80075b8 <_sbrk_r>
 8007270:	4580      	cmp	r8, r0
 8007272:	d13a      	bne.n	80072ea <_malloc_r+0xd2>
 8007274:	6821      	ldr	r1, [r4, #0]
 8007276:	3503      	adds	r5, #3
 8007278:	1a6d      	subs	r5, r5, r1
 800727a:	f025 0503 	bic.w	r5, r5, #3
 800727e:	3508      	adds	r5, #8
 8007280:	2d0c      	cmp	r5, #12
 8007282:	bf38      	it	cc
 8007284:	250c      	movcc	r5, #12
 8007286:	4638      	mov	r0, r7
 8007288:	4629      	mov	r1, r5
 800728a:	f7ff ffa5 	bl	80071d8 <sbrk_aligned>
 800728e:	3001      	adds	r0, #1
 8007290:	d02b      	beq.n	80072ea <_malloc_r+0xd2>
 8007292:	6823      	ldr	r3, [r4, #0]
 8007294:	442b      	add	r3, r5
 8007296:	6023      	str	r3, [r4, #0]
 8007298:	e00e      	b.n	80072b8 <_malloc_r+0xa0>
 800729a:	6822      	ldr	r2, [r4, #0]
 800729c:	1b52      	subs	r2, r2, r5
 800729e:	d41e      	bmi.n	80072de <_malloc_r+0xc6>
 80072a0:	2a0b      	cmp	r2, #11
 80072a2:	d916      	bls.n	80072d2 <_malloc_r+0xba>
 80072a4:	1961      	adds	r1, r4, r5
 80072a6:	42a3      	cmp	r3, r4
 80072a8:	6025      	str	r5, [r4, #0]
 80072aa:	bf18      	it	ne
 80072ac:	6059      	strne	r1, [r3, #4]
 80072ae:	6863      	ldr	r3, [r4, #4]
 80072b0:	bf08      	it	eq
 80072b2:	6031      	streq	r1, [r6, #0]
 80072b4:	5162      	str	r2, [r4, r5]
 80072b6:	604b      	str	r3, [r1, #4]
 80072b8:	4638      	mov	r0, r7
 80072ba:	f104 060b 	add.w	r6, r4, #11
 80072be:	f000 f9ed 	bl	800769c <__malloc_unlock>
 80072c2:	f026 0607 	bic.w	r6, r6, #7
 80072c6:	1d23      	adds	r3, r4, #4
 80072c8:	1af2      	subs	r2, r6, r3
 80072ca:	d0b6      	beq.n	800723a <_malloc_r+0x22>
 80072cc:	1b9b      	subs	r3, r3, r6
 80072ce:	50a3      	str	r3, [r4, r2]
 80072d0:	e7b3      	b.n	800723a <_malloc_r+0x22>
 80072d2:	6862      	ldr	r2, [r4, #4]
 80072d4:	42a3      	cmp	r3, r4
 80072d6:	bf0c      	ite	eq
 80072d8:	6032      	streq	r2, [r6, #0]
 80072da:	605a      	strne	r2, [r3, #4]
 80072dc:	e7ec      	b.n	80072b8 <_malloc_r+0xa0>
 80072de:	4623      	mov	r3, r4
 80072e0:	6864      	ldr	r4, [r4, #4]
 80072e2:	e7b2      	b.n	800724a <_malloc_r+0x32>
 80072e4:	4634      	mov	r4, r6
 80072e6:	6876      	ldr	r6, [r6, #4]
 80072e8:	e7b9      	b.n	800725e <_malloc_r+0x46>
 80072ea:	230c      	movs	r3, #12
 80072ec:	4638      	mov	r0, r7
 80072ee:	603b      	str	r3, [r7, #0]
 80072f0:	f000 f9d4 	bl	800769c <__malloc_unlock>
 80072f4:	e7a1      	b.n	800723a <_malloc_r+0x22>
 80072f6:	6025      	str	r5, [r4, #0]
 80072f8:	e7de      	b.n	80072b8 <_malloc_r+0xa0>
 80072fa:	bf00      	nop
 80072fc:	200006ac 	.word	0x200006ac

08007300 <__ssputs_r>:
 8007300:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007304:	688e      	ldr	r6, [r1, #8]
 8007306:	4682      	mov	sl, r0
 8007308:	429e      	cmp	r6, r3
 800730a:	460c      	mov	r4, r1
 800730c:	4690      	mov	r8, r2
 800730e:	461f      	mov	r7, r3
 8007310:	d838      	bhi.n	8007384 <__ssputs_r+0x84>
 8007312:	898a      	ldrh	r2, [r1, #12]
 8007314:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8007318:	d032      	beq.n	8007380 <__ssputs_r+0x80>
 800731a:	6825      	ldr	r5, [r4, #0]
 800731c:	6909      	ldr	r1, [r1, #16]
 800731e:	3301      	adds	r3, #1
 8007320:	eba5 0901 	sub.w	r9, r5, r1
 8007324:	6965      	ldr	r5, [r4, #20]
 8007326:	444b      	add	r3, r9
 8007328:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800732c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8007330:	106d      	asrs	r5, r5, #1
 8007332:	429d      	cmp	r5, r3
 8007334:	bf38      	it	cc
 8007336:	461d      	movcc	r5, r3
 8007338:	0553      	lsls	r3, r2, #21
 800733a:	d531      	bpl.n	80073a0 <__ssputs_r+0xa0>
 800733c:	4629      	mov	r1, r5
 800733e:	f7ff ff6b 	bl	8007218 <_malloc_r>
 8007342:	4606      	mov	r6, r0
 8007344:	b950      	cbnz	r0, 800735c <__ssputs_r+0x5c>
 8007346:	230c      	movs	r3, #12
 8007348:	f04f 30ff 	mov.w	r0, #4294967295
 800734c:	f8ca 3000 	str.w	r3, [sl]
 8007350:	89a3      	ldrh	r3, [r4, #12]
 8007352:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007356:	81a3      	strh	r3, [r4, #12]
 8007358:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800735c:	464a      	mov	r2, r9
 800735e:	6921      	ldr	r1, [r4, #16]
 8007360:	f7ff fb4e 	bl	8006a00 <memcpy>
 8007364:	89a3      	ldrh	r3, [r4, #12]
 8007366:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800736a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800736e:	81a3      	strh	r3, [r4, #12]
 8007370:	6126      	str	r6, [r4, #16]
 8007372:	444e      	add	r6, r9
 8007374:	6026      	str	r6, [r4, #0]
 8007376:	463e      	mov	r6, r7
 8007378:	6165      	str	r5, [r4, #20]
 800737a:	eba5 0509 	sub.w	r5, r5, r9
 800737e:	60a5      	str	r5, [r4, #8]
 8007380:	42be      	cmp	r6, r7
 8007382:	d900      	bls.n	8007386 <__ssputs_r+0x86>
 8007384:	463e      	mov	r6, r7
 8007386:	4632      	mov	r2, r6
 8007388:	4641      	mov	r1, r8
 800738a:	6820      	ldr	r0, [r4, #0]
 800738c:	f000 f966 	bl	800765c <memmove>
 8007390:	68a3      	ldr	r3, [r4, #8]
 8007392:	2000      	movs	r0, #0
 8007394:	1b9b      	subs	r3, r3, r6
 8007396:	60a3      	str	r3, [r4, #8]
 8007398:	6823      	ldr	r3, [r4, #0]
 800739a:	4433      	add	r3, r6
 800739c:	6023      	str	r3, [r4, #0]
 800739e:	e7db      	b.n	8007358 <__ssputs_r+0x58>
 80073a0:	462a      	mov	r2, r5
 80073a2:	f000 f981 	bl	80076a8 <_realloc_r>
 80073a6:	4606      	mov	r6, r0
 80073a8:	2800      	cmp	r0, #0
 80073aa:	d1e1      	bne.n	8007370 <__ssputs_r+0x70>
 80073ac:	4650      	mov	r0, sl
 80073ae:	6921      	ldr	r1, [r4, #16]
 80073b0:	f7ff feca 	bl	8007148 <_free_r>
 80073b4:	e7c7      	b.n	8007346 <__ssputs_r+0x46>
	...

080073b8 <_svfiprintf_r>:
 80073b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80073bc:	4698      	mov	r8, r3
 80073be:	898b      	ldrh	r3, [r1, #12]
 80073c0:	4607      	mov	r7, r0
 80073c2:	061b      	lsls	r3, r3, #24
 80073c4:	460d      	mov	r5, r1
 80073c6:	4614      	mov	r4, r2
 80073c8:	b09d      	sub	sp, #116	; 0x74
 80073ca:	d50e      	bpl.n	80073ea <_svfiprintf_r+0x32>
 80073cc:	690b      	ldr	r3, [r1, #16]
 80073ce:	b963      	cbnz	r3, 80073ea <_svfiprintf_r+0x32>
 80073d0:	2140      	movs	r1, #64	; 0x40
 80073d2:	f7ff ff21 	bl	8007218 <_malloc_r>
 80073d6:	6028      	str	r0, [r5, #0]
 80073d8:	6128      	str	r0, [r5, #16]
 80073da:	b920      	cbnz	r0, 80073e6 <_svfiprintf_r+0x2e>
 80073dc:	230c      	movs	r3, #12
 80073de:	603b      	str	r3, [r7, #0]
 80073e0:	f04f 30ff 	mov.w	r0, #4294967295
 80073e4:	e0d1      	b.n	800758a <_svfiprintf_r+0x1d2>
 80073e6:	2340      	movs	r3, #64	; 0x40
 80073e8:	616b      	str	r3, [r5, #20]
 80073ea:	2300      	movs	r3, #0
 80073ec:	9309      	str	r3, [sp, #36]	; 0x24
 80073ee:	2320      	movs	r3, #32
 80073f0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80073f4:	2330      	movs	r3, #48	; 0x30
 80073f6:	f04f 0901 	mov.w	r9, #1
 80073fa:	f8cd 800c 	str.w	r8, [sp, #12]
 80073fe:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 80075a4 <_svfiprintf_r+0x1ec>
 8007402:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8007406:	4623      	mov	r3, r4
 8007408:	469a      	mov	sl, r3
 800740a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800740e:	b10a      	cbz	r2, 8007414 <_svfiprintf_r+0x5c>
 8007410:	2a25      	cmp	r2, #37	; 0x25
 8007412:	d1f9      	bne.n	8007408 <_svfiprintf_r+0x50>
 8007414:	ebba 0b04 	subs.w	fp, sl, r4
 8007418:	d00b      	beq.n	8007432 <_svfiprintf_r+0x7a>
 800741a:	465b      	mov	r3, fp
 800741c:	4622      	mov	r2, r4
 800741e:	4629      	mov	r1, r5
 8007420:	4638      	mov	r0, r7
 8007422:	f7ff ff6d 	bl	8007300 <__ssputs_r>
 8007426:	3001      	adds	r0, #1
 8007428:	f000 80aa 	beq.w	8007580 <_svfiprintf_r+0x1c8>
 800742c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800742e:	445a      	add	r2, fp
 8007430:	9209      	str	r2, [sp, #36]	; 0x24
 8007432:	f89a 3000 	ldrb.w	r3, [sl]
 8007436:	2b00      	cmp	r3, #0
 8007438:	f000 80a2 	beq.w	8007580 <_svfiprintf_r+0x1c8>
 800743c:	2300      	movs	r3, #0
 800743e:	f04f 32ff 	mov.w	r2, #4294967295
 8007442:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007446:	f10a 0a01 	add.w	sl, sl, #1
 800744a:	9304      	str	r3, [sp, #16]
 800744c:	9307      	str	r3, [sp, #28]
 800744e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007452:	931a      	str	r3, [sp, #104]	; 0x68
 8007454:	4654      	mov	r4, sl
 8007456:	2205      	movs	r2, #5
 8007458:	f814 1b01 	ldrb.w	r1, [r4], #1
 800745c:	4851      	ldr	r0, [pc, #324]	; (80075a4 <_svfiprintf_r+0x1ec>)
 800745e:	f7ff fac1 	bl	80069e4 <memchr>
 8007462:	9a04      	ldr	r2, [sp, #16]
 8007464:	b9d8      	cbnz	r0, 800749e <_svfiprintf_r+0xe6>
 8007466:	06d0      	lsls	r0, r2, #27
 8007468:	bf44      	itt	mi
 800746a:	2320      	movmi	r3, #32
 800746c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007470:	0711      	lsls	r1, r2, #28
 8007472:	bf44      	itt	mi
 8007474:	232b      	movmi	r3, #43	; 0x2b
 8007476:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800747a:	f89a 3000 	ldrb.w	r3, [sl]
 800747e:	2b2a      	cmp	r3, #42	; 0x2a
 8007480:	d015      	beq.n	80074ae <_svfiprintf_r+0xf6>
 8007482:	4654      	mov	r4, sl
 8007484:	2000      	movs	r0, #0
 8007486:	f04f 0c0a 	mov.w	ip, #10
 800748a:	9a07      	ldr	r2, [sp, #28]
 800748c:	4621      	mov	r1, r4
 800748e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007492:	3b30      	subs	r3, #48	; 0x30
 8007494:	2b09      	cmp	r3, #9
 8007496:	d94e      	bls.n	8007536 <_svfiprintf_r+0x17e>
 8007498:	b1b0      	cbz	r0, 80074c8 <_svfiprintf_r+0x110>
 800749a:	9207      	str	r2, [sp, #28]
 800749c:	e014      	b.n	80074c8 <_svfiprintf_r+0x110>
 800749e:	eba0 0308 	sub.w	r3, r0, r8
 80074a2:	fa09 f303 	lsl.w	r3, r9, r3
 80074a6:	4313      	orrs	r3, r2
 80074a8:	46a2      	mov	sl, r4
 80074aa:	9304      	str	r3, [sp, #16]
 80074ac:	e7d2      	b.n	8007454 <_svfiprintf_r+0x9c>
 80074ae:	9b03      	ldr	r3, [sp, #12]
 80074b0:	1d19      	adds	r1, r3, #4
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	9103      	str	r1, [sp, #12]
 80074b6:	2b00      	cmp	r3, #0
 80074b8:	bfbb      	ittet	lt
 80074ba:	425b      	neglt	r3, r3
 80074bc:	f042 0202 	orrlt.w	r2, r2, #2
 80074c0:	9307      	strge	r3, [sp, #28]
 80074c2:	9307      	strlt	r3, [sp, #28]
 80074c4:	bfb8      	it	lt
 80074c6:	9204      	strlt	r2, [sp, #16]
 80074c8:	7823      	ldrb	r3, [r4, #0]
 80074ca:	2b2e      	cmp	r3, #46	; 0x2e
 80074cc:	d10c      	bne.n	80074e8 <_svfiprintf_r+0x130>
 80074ce:	7863      	ldrb	r3, [r4, #1]
 80074d0:	2b2a      	cmp	r3, #42	; 0x2a
 80074d2:	d135      	bne.n	8007540 <_svfiprintf_r+0x188>
 80074d4:	9b03      	ldr	r3, [sp, #12]
 80074d6:	3402      	adds	r4, #2
 80074d8:	1d1a      	adds	r2, r3, #4
 80074da:	681b      	ldr	r3, [r3, #0]
 80074dc:	9203      	str	r2, [sp, #12]
 80074de:	2b00      	cmp	r3, #0
 80074e0:	bfb8      	it	lt
 80074e2:	f04f 33ff 	movlt.w	r3, #4294967295
 80074e6:	9305      	str	r3, [sp, #20]
 80074e8:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 80075a8 <_svfiprintf_r+0x1f0>
 80074ec:	2203      	movs	r2, #3
 80074ee:	4650      	mov	r0, sl
 80074f0:	7821      	ldrb	r1, [r4, #0]
 80074f2:	f7ff fa77 	bl	80069e4 <memchr>
 80074f6:	b140      	cbz	r0, 800750a <_svfiprintf_r+0x152>
 80074f8:	2340      	movs	r3, #64	; 0x40
 80074fa:	eba0 000a 	sub.w	r0, r0, sl
 80074fe:	fa03 f000 	lsl.w	r0, r3, r0
 8007502:	9b04      	ldr	r3, [sp, #16]
 8007504:	3401      	adds	r4, #1
 8007506:	4303      	orrs	r3, r0
 8007508:	9304      	str	r3, [sp, #16]
 800750a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800750e:	2206      	movs	r2, #6
 8007510:	4826      	ldr	r0, [pc, #152]	; (80075ac <_svfiprintf_r+0x1f4>)
 8007512:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8007516:	f7ff fa65 	bl	80069e4 <memchr>
 800751a:	2800      	cmp	r0, #0
 800751c:	d038      	beq.n	8007590 <_svfiprintf_r+0x1d8>
 800751e:	4b24      	ldr	r3, [pc, #144]	; (80075b0 <_svfiprintf_r+0x1f8>)
 8007520:	bb1b      	cbnz	r3, 800756a <_svfiprintf_r+0x1b2>
 8007522:	9b03      	ldr	r3, [sp, #12]
 8007524:	3307      	adds	r3, #7
 8007526:	f023 0307 	bic.w	r3, r3, #7
 800752a:	3308      	adds	r3, #8
 800752c:	9303      	str	r3, [sp, #12]
 800752e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007530:	4433      	add	r3, r6
 8007532:	9309      	str	r3, [sp, #36]	; 0x24
 8007534:	e767      	b.n	8007406 <_svfiprintf_r+0x4e>
 8007536:	460c      	mov	r4, r1
 8007538:	2001      	movs	r0, #1
 800753a:	fb0c 3202 	mla	r2, ip, r2, r3
 800753e:	e7a5      	b.n	800748c <_svfiprintf_r+0xd4>
 8007540:	2300      	movs	r3, #0
 8007542:	f04f 0c0a 	mov.w	ip, #10
 8007546:	4619      	mov	r1, r3
 8007548:	3401      	adds	r4, #1
 800754a:	9305      	str	r3, [sp, #20]
 800754c:	4620      	mov	r0, r4
 800754e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007552:	3a30      	subs	r2, #48	; 0x30
 8007554:	2a09      	cmp	r2, #9
 8007556:	d903      	bls.n	8007560 <_svfiprintf_r+0x1a8>
 8007558:	2b00      	cmp	r3, #0
 800755a:	d0c5      	beq.n	80074e8 <_svfiprintf_r+0x130>
 800755c:	9105      	str	r1, [sp, #20]
 800755e:	e7c3      	b.n	80074e8 <_svfiprintf_r+0x130>
 8007560:	4604      	mov	r4, r0
 8007562:	2301      	movs	r3, #1
 8007564:	fb0c 2101 	mla	r1, ip, r1, r2
 8007568:	e7f0      	b.n	800754c <_svfiprintf_r+0x194>
 800756a:	ab03      	add	r3, sp, #12
 800756c:	9300      	str	r3, [sp, #0]
 800756e:	462a      	mov	r2, r5
 8007570:	4638      	mov	r0, r7
 8007572:	4b10      	ldr	r3, [pc, #64]	; (80075b4 <_svfiprintf_r+0x1fc>)
 8007574:	a904      	add	r1, sp, #16
 8007576:	f7fd ff99 	bl	80054ac <_printf_float>
 800757a:	1c42      	adds	r2, r0, #1
 800757c:	4606      	mov	r6, r0
 800757e:	d1d6      	bne.n	800752e <_svfiprintf_r+0x176>
 8007580:	89ab      	ldrh	r3, [r5, #12]
 8007582:	065b      	lsls	r3, r3, #25
 8007584:	f53f af2c 	bmi.w	80073e0 <_svfiprintf_r+0x28>
 8007588:	9809      	ldr	r0, [sp, #36]	; 0x24
 800758a:	b01d      	add	sp, #116	; 0x74
 800758c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007590:	ab03      	add	r3, sp, #12
 8007592:	9300      	str	r3, [sp, #0]
 8007594:	462a      	mov	r2, r5
 8007596:	4638      	mov	r0, r7
 8007598:	4b06      	ldr	r3, [pc, #24]	; (80075b4 <_svfiprintf_r+0x1fc>)
 800759a:	a904      	add	r1, sp, #16
 800759c:	f7fe fa22 	bl	80059e4 <_printf_i>
 80075a0:	e7eb      	b.n	800757a <_svfiprintf_r+0x1c2>
 80075a2:	bf00      	nop
 80075a4:	0800857c 	.word	0x0800857c
 80075a8:	08008582 	.word	0x08008582
 80075ac:	08008586 	.word	0x08008586
 80075b0:	080054ad 	.word	0x080054ad
 80075b4:	08007301 	.word	0x08007301

080075b8 <_sbrk_r>:
 80075b8:	b538      	push	{r3, r4, r5, lr}
 80075ba:	2300      	movs	r3, #0
 80075bc:	4d05      	ldr	r5, [pc, #20]	; (80075d4 <_sbrk_r+0x1c>)
 80075be:	4604      	mov	r4, r0
 80075c0:	4608      	mov	r0, r1
 80075c2:	602b      	str	r3, [r5, #0]
 80075c4:	f7fa fa02 	bl	80019cc <_sbrk>
 80075c8:	1c43      	adds	r3, r0, #1
 80075ca:	d102      	bne.n	80075d2 <_sbrk_r+0x1a>
 80075cc:	682b      	ldr	r3, [r5, #0]
 80075ce:	b103      	cbz	r3, 80075d2 <_sbrk_r+0x1a>
 80075d0:	6023      	str	r3, [r4, #0]
 80075d2:	bd38      	pop	{r3, r4, r5, pc}
 80075d4:	200006b4 	.word	0x200006b4

080075d8 <__assert_func>:
 80075d8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80075da:	4614      	mov	r4, r2
 80075dc:	461a      	mov	r2, r3
 80075de:	4b09      	ldr	r3, [pc, #36]	; (8007604 <__assert_func+0x2c>)
 80075e0:	4605      	mov	r5, r0
 80075e2:	681b      	ldr	r3, [r3, #0]
 80075e4:	68d8      	ldr	r0, [r3, #12]
 80075e6:	b14c      	cbz	r4, 80075fc <__assert_func+0x24>
 80075e8:	4b07      	ldr	r3, [pc, #28]	; (8007608 <__assert_func+0x30>)
 80075ea:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80075ee:	9100      	str	r1, [sp, #0]
 80075f0:	462b      	mov	r3, r5
 80075f2:	4906      	ldr	r1, [pc, #24]	; (800760c <__assert_func+0x34>)
 80075f4:	f000 f80e 	bl	8007614 <fiprintf>
 80075f8:	f000 faaa 	bl	8007b50 <abort>
 80075fc:	4b04      	ldr	r3, [pc, #16]	; (8007610 <__assert_func+0x38>)
 80075fe:	461c      	mov	r4, r3
 8007600:	e7f3      	b.n	80075ea <__assert_func+0x12>
 8007602:	bf00      	nop
 8007604:	2000000c 	.word	0x2000000c
 8007608:	0800858d 	.word	0x0800858d
 800760c:	0800859a 	.word	0x0800859a
 8007610:	080085c8 	.word	0x080085c8

08007614 <fiprintf>:
 8007614:	b40e      	push	{r1, r2, r3}
 8007616:	b503      	push	{r0, r1, lr}
 8007618:	4601      	mov	r1, r0
 800761a:	ab03      	add	r3, sp, #12
 800761c:	4805      	ldr	r0, [pc, #20]	; (8007634 <fiprintf+0x20>)
 800761e:	f853 2b04 	ldr.w	r2, [r3], #4
 8007622:	6800      	ldr	r0, [r0, #0]
 8007624:	9301      	str	r3, [sp, #4]
 8007626:	f000 f895 	bl	8007754 <_vfiprintf_r>
 800762a:	b002      	add	sp, #8
 800762c:	f85d eb04 	ldr.w	lr, [sp], #4
 8007630:	b003      	add	sp, #12
 8007632:	4770      	bx	lr
 8007634:	2000000c 	.word	0x2000000c

08007638 <__ascii_mbtowc>:
 8007638:	b082      	sub	sp, #8
 800763a:	b901      	cbnz	r1, 800763e <__ascii_mbtowc+0x6>
 800763c:	a901      	add	r1, sp, #4
 800763e:	b142      	cbz	r2, 8007652 <__ascii_mbtowc+0x1a>
 8007640:	b14b      	cbz	r3, 8007656 <__ascii_mbtowc+0x1e>
 8007642:	7813      	ldrb	r3, [r2, #0]
 8007644:	600b      	str	r3, [r1, #0]
 8007646:	7812      	ldrb	r2, [r2, #0]
 8007648:	1e10      	subs	r0, r2, #0
 800764a:	bf18      	it	ne
 800764c:	2001      	movne	r0, #1
 800764e:	b002      	add	sp, #8
 8007650:	4770      	bx	lr
 8007652:	4610      	mov	r0, r2
 8007654:	e7fb      	b.n	800764e <__ascii_mbtowc+0x16>
 8007656:	f06f 0001 	mvn.w	r0, #1
 800765a:	e7f8      	b.n	800764e <__ascii_mbtowc+0x16>

0800765c <memmove>:
 800765c:	4288      	cmp	r0, r1
 800765e:	b510      	push	{r4, lr}
 8007660:	eb01 0402 	add.w	r4, r1, r2
 8007664:	d902      	bls.n	800766c <memmove+0x10>
 8007666:	4284      	cmp	r4, r0
 8007668:	4623      	mov	r3, r4
 800766a:	d807      	bhi.n	800767c <memmove+0x20>
 800766c:	1e43      	subs	r3, r0, #1
 800766e:	42a1      	cmp	r1, r4
 8007670:	d008      	beq.n	8007684 <memmove+0x28>
 8007672:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007676:	f803 2f01 	strb.w	r2, [r3, #1]!
 800767a:	e7f8      	b.n	800766e <memmove+0x12>
 800767c:	4601      	mov	r1, r0
 800767e:	4402      	add	r2, r0
 8007680:	428a      	cmp	r2, r1
 8007682:	d100      	bne.n	8007686 <memmove+0x2a>
 8007684:	bd10      	pop	{r4, pc}
 8007686:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800768a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800768e:	e7f7      	b.n	8007680 <memmove+0x24>

08007690 <__malloc_lock>:
 8007690:	4801      	ldr	r0, [pc, #4]	; (8007698 <__malloc_lock+0x8>)
 8007692:	f000 bc19 	b.w	8007ec8 <__retarget_lock_acquire_recursive>
 8007696:	bf00      	nop
 8007698:	200006b8 	.word	0x200006b8

0800769c <__malloc_unlock>:
 800769c:	4801      	ldr	r0, [pc, #4]	; (80076a4 <__malloc_unlock+0x8>)
 800769e:	f000 bc14 	b.w	8007eca <__retarget_lock_release_recursive>
 80076a2:	bf00      	nop
 80076a4:	200006b8 	.word	0x200006b8

080076a8 <_realloc_r>:
 80076a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80076ac:	4680      	mov	r8, r0
 80076ae:	4614      	mov	r4, r2
 80076b0:	460e      	mov	r6, r1
 80076b2:	b921      	cbnz	r1, 80076be <_realloc_r+0x16>
 80076b4:	4611      	mov	r1, r2
 80076b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80076ba:	f7ff bdad 	b.w	8007218 <_malloc_r>
 80076be:	b92a      	cbnz	r2, 80076cc <_realloc_r+0x24>
 80076c0:	f7ff fd42 	bl	8007148 <_free_r>
 80076c4:	4625      	mov	r5, r4
 80076c6:	4628      	mov	r0, r5
 80076c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80076cc:	f000 fc64 	bl	8007f98 <_malloc_usable_size_r>
 80076d0:	4284      	cmp	r4, r0
 80076d2:	4607      	mov	r7, r0
 80076d4:	d802      	bhi.n	80076dc <_realloc_r+0x34>
 80076d6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80076da:	d812      	bhi.n	8007702 <_realloc_r+0x5a>
 80076dc:	4621      	mov	r1, r4
 80076de:	4640      	mov	r0, r8
 80076e0:	f7ff fd9a 	bl	8007218 <_malloc_r>
 80076e4:	4605      	mov	r5, r0
 80076e6:	2800      	cmp	r0, #0
 80076e8:	d0ed      	beq.n	80076c6 <_realloc_r+0x1e>
 80076ea:	42bc      	cmp	r4, r7
 80076ec:	4622      	mov	r2, r4
 80076ee:	4631      	mov	r1, r6
 80076f0:	bf28      	it	cs
 80076f2:	463a      	movcs	r2, r7
 80076f4:	f7ff f984 	bl	8006a00 <memcpy>
 80076f8:	4631      	mov	r1, r6
 80076fa:	4640      	mov	r0, r8
 80076fc:	f7ff fd24 	bl	8007148 <_free_r>
 8007700:	e7e1      	b.n	80076c6 <_realloc_r+0x1e>
 8007702:	4635      	mov	r5, r6
 8007704:	e7df      	b.n	80076c6 <_realloc_r+0x1e>

08007706 <__sfputc_r>:
 8007706:	6893      	ldr	r3, [r2, #8]
 8007708:	b410      	push	{r4}
 800770a:	3b01      	subs	r3, #1
 800770c:	2b00      	cmp	r3, #0
 800770e:	6093      	str	r3, [r2, #8]
 8007710:	da07      	bge.n	8007722 <__sfputc_r+0x1c>
 8007712:	6994      	ldr	r4, [r2, #24]
 8007714:	42a3      	cmp	r3, r4
 8007716:	db01      	blt.n	800771c <__sfputc_r+0x16>
 8007718:	290a      	cmp	r1, #10
 800771a:	d102      	bne.n	8007722 <__sfputc_r+0x1c>
 800771c:	bc10      	pop	{r4}
 800771e:	f000 b949 	b.w	80079b4 <__swbuf_r>
 8007722:	6813      	ldr	r3, [r2, #0]
 8007724:	1c58      	adds	r0, r3, #1
 8007726:	6010      	str	r0, [r2, #0]
 8007728:	7019      	strb	r1, [r3, #0]
 800772a:	4608      	mov	r0, r1
 800772c:	bc10      	pop	{r4}
 800772e:	4770      	bx	lr

08007730 <__sfputs_r>:
 8007730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007732:	4606      	mov	r6, r0
 8007734:	460f      	mov	r7, r1
 8007736:	4614      	mov	r4, r2
 8007738:	18d5      	adds	r5, r2, r3
 800773a:	42ac      	cmp	r4, r5
 800773c:	d101      	bne.n	8007742 <__sfputs_r+0x12>
 800773e:	2000      	movs	r0, #0
 8007740:	e007      	b.n	8007752 <__sfputs_r+0x22>
 8007742:	463a      	mov	r2, r7
 8007744:	4630      	mov	r0, r6
 8007746:	f814 1b01 	ldrb.w	r1, [r4], #1
 800774a:	f7ff ffdc 	bl	8007706 <__sfputc_r>
 800774e:	1c43      	adds	r3, r0, #1
 8007750:	d1f3      	bne.n	800773a <__sfputs_r+0xa>
 8007752:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007754 <_vfiprintf_r>:
 8007754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007758:	460d      	mov	r5, r1
 800775a:	4614      	mov	r4, r2
 800775c:	4698      	mov	r8, r3
 800775e:	4606      	mov	r6, r0
 8007760:	b09d      	sub	sp, #116	; 0x74
 8007762:	b118      	cbz	r0, 800776c <_vfiprintf_r+0x18>
 8007764:	6983      	ldr	r3, [r0, #24]
 8007766:	b90b      	cbnz	r3, 800776c <_vfiprintf_r+0x18>
 8007768:	f000 fb10 	bl	8007d8c <__sinit>
 800776c:	4b89      	ldr	r3, [pc, #548]	; (8007994 <_vfiprintf_r+0x240>)
 800776e:	429d      	cmp	r5, r3
 8007770:	d11b      	bne.n	80077aa <_vfiprintf_r+0x56>
 8007772:	6875      	ldr	r5, [r6, #4]
 8007774:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007776:	07d9      	lsls	r1, r3, #31
 8007778:	d405      	bmi.n	8007786 <_vfiprintf_r+0x32>
 800777a:	89ab      	ldrh	r3, [r5, #12]
 800777c:	059a      	lsls	r2, r3, #22
 800777e:	d402      	bmi.n	8007786 <_vfiprintf_r+0x32>
 8007780:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007782:	f000 fba1 	bl	8007ec8 <__retarget_lock_acquire_recursive>
 8007786:	89ab      	ldrh	r3, [r5, #12]
 8007788:	071b      	lsls	r3, r3, #28
 800778a:	d501      	bpl.n	8007790 <_vfiprintf_r+0x3c>
 800778c:	692b      	ldr	r3, [r5, #16]
 800778e:	b9eb      	cbnz	r3, 80077cc <_vfiprintf_r+0x78>
 8007790:	4629      	mov	r1, r5
 8007792:	4630      	mov	r0, r6
 8007794:	f000 f96e 	bl	8007a74 <__swsetup_r>
 8007798:	b1c0      	cbz	r0, 80077cc <_vfiprintf_r+0x78>
 800779a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800779c:	07dc      	lsls	r4, r3, #31
 800779e:	d50e      	bpl.n	80077be <_vfiprintf_r+0x6a>
 80077a0:	f04f 30ff 	mov.w	r0, #4294967295
 80077a4:	b01d      	add	sp, #116	; 0x74
 80077a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80077aa:	4b7b      	ldr	r3, [pc, #492]	; (8007998 <_vfiprintf_r+0x244>)
 80077ac:	429d      	cmp	r5, r3
 80077ae:	d101      	bne.n	80077b4 <_vfiprintf_r+0x60>
 80077b0:	68b5      	ldr	r5, [r6, #8]
 80077b2:	e7df      	b.n	8007774 <_vfiprintf_r+0x20>
 80077b4:	4b79      	ldr	r3, [pc, #484]	; (800799c <_vfiprintf_r+0x248>)
 80077b6:	429d      	cmp	r5, r3
 80077b8:	bf08      	it	eq
 80077ba:	68f5      	ldreq	r5, [r6, #12]
 80077bc:	e7da      	b.n	8007774 <_vfiprintf_r+0x20>
 80077be:	89ab      	ldrh	r3, [r5, #12]
 80077c0:	0598      	lsls	r0, r3, #22
 80077c2:	d4ed      	bmi.n	80077a0 <_vfiprintf_r+0x4c>
 80077c4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80077c6:	f000 fb80 	bl	8007eca <__retarget_lock_release_recursive>
 80077ca:	e7e9      	b.n	80077a0 <_vfiprintf_r+0x4c>
 80077cc:	2300      	movs	r3, #0
 80077ce:	9309      	str	r3, [sp, #36]	; 0x24
 80077d0:	2320      	movs	r3, #32
 80077d2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80077d6:	2330      	movs	r3, #48	; 0x30
 80077d8:	f04f 0901 	mov.w	r9, #1
 80077dc:	f8cd 800c 	str.w	r8, [sp, #12]
 80077e0:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 80079a0 <_vfiprintf_r+0x24c>
 80077e4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80077e8:	4623      	mov	r3, r4
 80077ea:	469a      	mov	sl, r3
 80077ec:	f813 2b01 	ldrb.w	r2, [r3], #1
 80077f0:	b10a      	cbz	r2, 80077f6 <_vfiprintf_r+0xa2>
 80077f2:	2a25      	cmp	r2, #37	; 0x25
 80077f4:	d1f9      	bne.n	80077ea <_vfiprintf_r+0x96>
 80077f6:	ebba 0b04 	subs.w	fp, sl, r4
 80077fa:	d00b      	beq.n	8007814 <_vfiprintf_r+0xc0>
 80077fc:	465b      	mov	r3, fp
 80077fe:	4622      	mov	r2, r4
 8007800:	4629      	mov	r1, r5
 8007802:	4630      	mov	r0, r6
 8007804:	f7ff ff94 	bl	8007730 <__sfputs_r>
 8007808:	3001      	adds	r0, #1
 800780a:	f000 80aa 	beq.w	8007962 <_vfiprintf_r+0x20e>
 800780e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007810:	445a      	add	r2, fp
 8007812:	9209      	str	r2, [sp, #36]	; 0x24
 8007814:	f89a 3000 	ldrb.w	r3, [sl]
 8007818:	2b00      	cmp	r3, #0
 800781a:	f000 80a2 	beq.w	8007962 <_vfiprintf_r+0x20e>
 800781e:	2300      	movs	r3, #0
 8007820:	f04f 32ff 	mov.w	r2, #4294967295
 8007824:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007828:	f10a 0a01 	add.w	sl, sl, #1
 800782c:	9304      	str	r3, [sp, #16]
 800782e:	9307      	str	r3, [sp, #28]
 8007830:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8007834:	931a      	str	r3, [sp, #104]	; 0x68
 8007836:	4654      	mov	r4, sl
 8007838:	2205      	movs	r2, #5
 800783a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800783e:	4858      	ldr	r0, [pc, #352]	; (80079a0 <_vfiprintf_r+0x24c>)
 8007840:	f7ff f8d0 	bl	80069e4 <memchr>
 8007844:	9a04      	ldr	r2, [sp, #16]
 8007846:	b9d8      	cbnz	r0, 8007880 <_vfiprintf_r+0x12c>
 8007848:	06d1      	lsls	r1, r2, #27
 800784a:	bf44      	itt	mi
 800784c:	2320      	movmi	r3, #32
 800784e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8007852:	0713      	lsls	r3, r2, #28
 8007854:	bf44      	itt	mi
 8007856:	232b      	movmi	r3, #43	; 0x2b
 8007858:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800785c:	f89a 3000 	ldrb.w	r3, [sl]
 8007860:	2b2a      	cmp	r3, #42	; 0x2a
 8007862:	d015      	beq.n	8007890 <_vfiprintf_r+0x13c>
 8007864:	4654      	mov	r4, sl
 8007866:	2000      	movs	r0, #0
 8007868:	f04f 0c0a 	mov.w	ip, #10
 800786c:	9a07      	ldr	r2, [sp, #28]
 800786e:	4621      	mov	r1, r4
 8007870:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007874:	3b30      	subs	r3, #48	; 0x30
 8007876:	2b09      	cmp	r3, #9
 8007878:	d94e      	bls.n	8007918 <_vfiprintf_r+0x1c4>
 800787a:	b1b0      	cbz	r0, 80078aa <_vfiprintf_r+0x156>
 800787c:	9207      	str	r2, [sp, #28]
 800787e:	e014      	b.n	80078aa <_vfiprintf_r+0x156>
 8007880:	eba0 0308 	sub.w	r3, r0, r8
 8007884:	fa09 f303 	lsl.w	r3, r9, r3
 8007888:	4313      	orrs	r3, r2
 800788a:	46a2      	mov	sl, r4
 800788c:	9304      	str	r3, [sp, #16]
 800788e:	e7d2      	b.n	8007836 <_vfiprintf_r+0xe2>
 8007890:	9b03      	ldr	r3, [sp, #12]
 8007892:	1d19      	adds	r1, r3, #4
 8007894:	681b      	ldr	r3, [r3, #0]
 8007896:	9103      	str	r1, [sp, #12]
 8007898:	2b00      	cmp	r3, #0
 800789a:	bfbb      	ittet	lt
 800789c:	425b      	neglt	r3, r3
 800789e:	f042 0202 	orrlt.w	r2, r2, #2
 80078a2:	9307      	strge	r3, [sp, #28]
 80078a4:	9307      	strlt	r3, [sp, #28]
 80078a6:	bfb8      	it	lt
 80078a8:	9204      	strlt	r2, [sp, #16]
 80078aa:	7823      	ldrb	r3, [r4, #0]
 80078ac:	2b2e      	cmp	r3, #46	; 0x2e
 80078ae:	d10c      	bne.n	80078ca <_vfiprintf_r+0x176>
 80078b0:	7863      	ldrb	r3, [r4, #1]
 80078b2:	2b2a      	cmp	r3, #42	; 0x2a
 80078b4:	d135      	bne.n	8007922 <_vfiprintf_r+0x1ce>
 80078b6:	9b03      	ldr	r3, [sp, #12]
 80078b8:	3402      	adds	r4, #2
 80078ba:	1d1a      	adds	r2, r3, #4
 80078bc:	681b      	ldr	r3, [r3, #0]
 80078be:	9203      	str	r2, [sp, #12]
 80078c0:	2b00      	cmp	r3, #0
 80078c2:	bfb8      	it	lt
 80078c4:	f04f 33ff 	movlt.w	r3, #4294967295
 80078c8:	9305      	str	r3, [sp, #20]
 80078ca:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 80079a4 <_vfiprintf_r+0x250>
 80078ce:	2203      	movs	r2, #3
 80078d0:	4650      	mov	r0, sl
 80078d2:	7821      	ldrb	r1, [r4, #0]
 80078d4:	f7ff f886 	bl	80069e4 <memchr>
 80078d8:	b140      	cbz	r0, 80078ec <_vfiprintf_r+0x198>
 80078da:	2340      	movs	r3, #64	; 0x40
 80078dc:	eba0 000a 	sub.w	r0, r0, sl
 80078e0:	fa03 f000 	lsl.w	r0, r3, r0
 80078e4:	9b04      	ldr	r3, [sp, #16]
 80078e6:	3401      	adds	r4, #1
 80078e8:	4303      	orrs	r3, r0
 80078ea:	9304      	str	r3, [sp, #16]
 80078ec:	f814 1b01 	ldrb.w	r1, [r4], #1
 80078f0:	2206      	movs	r2, #6
 80078f2:	482d      	ldr	r0, [pc, #180]	; (80079a8 <_vfiprintf_r+0x254>)
 80078f4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80078f8:	f7ff f874 	bl	80069e4 <memchr>
 80078fc:	2800      	cmp	r0, #0
 80078fe:	d03f      	beq.n	8007980 <_vfiprintf_r+0x22c>
 8007900:	4b2a      	ldr	r3, [pc, #168]	; (80079ac <_vfiprintf_r+0x258>)
 8007902:	bb1b      	cbnz	r3, 800794c <_vfiprintf_r+0x1f8>
 8007904:	9b03      	ldr	r3, [sp, #12]
 8007906:	3307      	adds	r3, #7
 8007908:	f023 0307 	bic.w	r3, r3, #7
 800790c:	3308      	adds	r3, #8
 800790e:	9303      	str	r3, [sp, #12]
 8007910:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007912:	443b      	add	r3, r7
 8007914:	9309      	str	r3, [sp, #36]	; 0x24
 8007916:	e767      	b.n	80077e8 <_vfiprintf_r+0x94>
 8007918:	460c      	mov	r4, r1
 800791a:	2001      	movs	r0, #1
 800791c:	fb0c 3202 	mla	r2, ip, r2, r3
 8007920:	e7a5      	b.n	800786e <_vfiprintf_r+0x11a>
 8007922:	2300      	movs	r3, #0
 8007924:	f04f 0c0a 	mov.w	ip, #10
 8007928:	4619      	mov	r1, r3
 800792a:	3401      	adds	r4, #1
 800792c:	9305      	str	r3, [sp, #20]
 800792e:	4620      	mov	r0, r4
 8007930:	f810 2b01 	ldrb.w	r2, [r0], #1
 8007934:	3a30      	subs	r2, #48	; 0x30
 8007936:	2a09      	cmp	r2, #9
 8007938:	d903      	bls.n	8007942 <_vfiprintf_r+0x1ee>
 800793a:	2b00      	cmp	r3, #0
 800793c:	d0c5      	beq.n	80078ca <_vfiprintf_r+0x176>
 800793e:	9105      	str	r1, [sp, #20]
 8007940:	e7c3      	b.n	80078ca <_vfiprintf_r+0x176>
 8007942:	4604      	mov	r4, r0
 8007944:	2301      	movs	r3, #1
 8007946:	fb0c 2101 	mla	r1, ip, r1, r2
 800794a:	e7f0      	b.n	800792e <_vfiprintf_r+0x1da>
 800794c:	ab03      	add	r3, sp, #12
 800794e:	9300      	str	r3, [sp, #0]
 8007950:	462a      	mov	r2, r5
 8007952:	4630      	mov	r0, r6
 8007954:	4b16      	ldr	r3, [pc, #88]	; (80079b0 <_vfiprintf_r+0x25c>)
 8007956:	a904      	add	r1, sp, #16
 8007958:	f7fd fda8 	bl	80054ac <_printf_float>
 800795c:	4607      	mov	r7, r0
 800795e:	1c78      	adds	r0, r7, #1
 8007960:	d1d6      	bne.n	8007910 <_vfiprintf_r+0x1bc>
 8007962:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007964:	07d9      	lsls	r1, r3, #31
 8007966:	d405      	bmi.n	8007974 <_vfiprintf_r+0x220>
 8007968:	89ab      	ldrh	r3, [r5, #12]
 800796a:	059a      	lsls	r2, r3, #22
 800796c:	d402      	bmi.n	8007974 <_vfiprintf_r+0x220>
 800796e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8007970:	f000 faab 	bl	8007eca <__retarget_lock_release_recursive>
 8007974:	89ab      	ldrh	r3, [r5, #12]
 8007976:	065b      	lsls	r3, r3, #25
 8007978:	f53f af12 	bmi.w	80077a0 <_vfiprintf_r+0x4c>
 800797c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800797e:	e711      	b.n	80077a4 <_vfiprintf_r+0x50>
 8007980:	ab03      	add	r3, sp, #12
 8007982:	9300      	str	r3, [sp, #0]
 8007984:	462a      	mov	r2, r5
 8007986:	4630      	mov	r0, r6
 8007988:	4b09      	ldr	r3, [pc, #36]	; (80079b0 <_vfiprintf_r+0x25c>)
 800798a:	a904      	add	r1, sp, #16
 800798c:	f7fe f82a 	bl	80059e4 <_printf_i>
 8007990:	e7e4      	b.n	800795c <_vfiprintf_r+0x208>
 8007992:	bf00      	nop
 8007994:	080086f4 	.word	0x080086f4
 8007998:	08008714 	.word	0x08008714
 800799c:	080086d4 	.word	0x080086d4
 80079a0:	0800857c 	.word	0x0800857c
 80079a4:	08008582 	.word	0x08008582
 80079a8:	08008586 	.word	0x08008586
 80079ac:	080054ad 	.word	0x080054ad
 80079b0:	08007731 	.word	0x08007731

080079b4 <__swbuf_r>:
 80079b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80079b6:	460e      	mov	r6, r1
 80079b8:	4614      	mov	r4, r2
 80079ba:	4605      	mov	r5, r0
 80079bc:	b118      	cbz	r0, 80079c6 <__swbuf_r+0x12>
 80079be:	6983      	ldr	r3, [r0, #24]
 80079c0:	b90b      	cbnz	r3, 80079c6 <__swbuf_r+0x12>
 80079c2:	f000 f9e3 	bl	8007d8c <__sinit>
 80079c6:	4b21      	ldr	r3, [pc, #132]	; (8007a4c <__swbuf_r+0x98>)
 80079c8:	429c      	cmp	r4, r3
 80079ca:	d12b      	bne.n	8007a24 <__swbuf_r+0x70>
 80079cc:	686c      	ldr	r4, [r5, #4]
 80079ce:	69a3      	ldr	r3, [r4, #24]
 80079d0:	60a3      	str	r3, [r4, #8]
 80079d2:	89a3      	ldrh	r3, [r4, #12]
 80079d4:	071a      	lsls	r2, r3, #28
 80079d6:	d52f      	bpl.n	8007a38 <__swbuf_r+0x84>
 80079d8:	6923      	ldr	r3, [r4, #16]
 80079da:	b36b      	cbz	r3, 8007a38 <__swbuf_r+0x84>
 80079dc:	6923      	ldr	r3, [r4, #16]
 80079de:	6820      	ldr	r0, [r4, #0]
 80079e0:	b2f6      	uxtb	r6, r6
 80079e2:	1ac0      	subs	r0, r0, r3
 80079e4:	6963      	ldr	r3, [r4, #20]
 80079e6:	4637      	mov	r7, r6
 80079e8:	4283      	cmp	r3, r0
 80079ea:	dc04      	bgt.n	80079f6 <__swbuf_r+0x42>
 80079ec:	4621      	mov	r1, r4
 80079ee:	4628      	mov	r0, r5
 80079f0:	f000 f938 	bl	8007c64 <_fflush_r>
 80079f4:	bb30      	cbnz	r0, 8007a44 <__swbuf_r+0x90>
 80079f6:	68a3      	ldr	r3, [r4, #8]
 80079f8:	3001      	adds	r0, #1
 80079fa:	3b01      	subs	r3, #1
 80079fc:	60a3      	str	r3, [r4, #8]
 80079fe:	6823      	ldr	r3, [r4, #0]
 8007a00:	1c5a      	adds	r2, r3, #1
 8007a02:	6022      	str	r2, [r4, #0]
 8007a04:	701e      	strb	r6, [r3, #0]
 8007a06:	6963      	ldr	r3, [r4, #20]
 8007a08:	4283      	cmp	r3, r0
 8007a0a:	d004      	beq.n	8007a16 <__swbuf_r+0x62>
 8007a0c:	89a3      	ldrh	r3, [r4, #12]
 8007a0e:	07db      	lsls	r3, r3, #31
 8007a10:	d506      	bpl.n	8007a20 <__swbuf_r+0x6c>
 8007a12:	2e0a      	cmp	r6, #10
 8007a14:	d104      	bne.n	8007a20 <__swbuf_r+0x6c>
 8007a16:	4621      	mov	r1, r4
 8007a18:	4628      	mov	r0, r5
 8007a1a:	f000 f923 	bl	8007c64 <_fflush_r>
 8007a1e:	b988      	cbnz	r0, 8007a44 <__swbuf_r+0x90>
 8007a20:	4638      	mov	r0, r7
 8007a22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007a24:	4b0a      	ldr	r3, [pc, #40]	; (8007a50 <__swbuf_r+0x9c>)
 8007a26:	429c      	cmp	r4, r3
 8007a28:	d101      	bne.n	8007a2e <__swbuf_r+0x7a>
 8007a2a:	68ac      	ldr	r4, [r5, #8]
 8007a2c:	e7cf      	b.n	80079ce <__swbuf_r+0x1a>
 8007a2e:	4b09      	ldr	r3, [pc, #36]	; (8007a54 <__swbuf_r+0xa0>)
 8007a30:	429c      	cmp	r4, r3
 8007a32:	bf08      	it	eq
 8007a34:	68ec      	ldreq	r4, [r5, #12]
 8007a36:	e7ca      	b.n	80079ce <__swbuf_r+0x1a>
 8007a38:	4621      	mov	r1, r4
 8007a3a:	4628      	mov	r0, r5
 8007a3c:	f000 f81a 	bl	8007a74 <__swsetup_r>
 8007a40:	2800      	cmp	r0, #0
 8007a42:	d0cb      	beq.n	80079dc <__swbuf_r+0x28>
 8007a44:	f04f 37ff 	mov.w	r7, #4294967295
 8007a48:	e7ea      	b.n	8007a20 <__swbuf_r+0x6c>
 8007a4a:	bf00      	nop
 8007a4c:	080086f4 	.word	0x080086f4
 8007a50:	08008714 	.word	0x08008714
 8007a54:	080086d4 	.word	0x080086d4

08007a58 <__ascii_wctomb>:
 8007a58:	4603      	mov	r3, r0
 8007a5a:	4608      	mov	r0, r1
 8007a5c:	b141      	cbz	r1, 8007a70 <__ascii_wctomb+0x18>
 8007a5e:	2aff      	cmp	r2, #255	; 0xff
 8007a60:	d904      	bls.n	8007a6c <__ascii_wctomb+0x14>
 8007a62:	228a      	movs	r2, #138	; 0x8a
 8007a64:	f04f 30ff 	mov.w	r0, #4294967295
 8007a68:	601a      	str	r2, [r3, #0]
 8007a6a:	4770      	bx	lr
 8007a6c:	2001      	movs	r0, #1
 8007a6e:	700a      	strb	r2, [r1, #0]
 8007a70:	4770      	bx	lr
	...

08007a74 <__swsetup_r>:
 8007a74:	4b32      	ldr	r3, [pc, #200]	; (8007b40 <__swsetup_r+0xcc>)
 8007a76:	b570      	push	{r4, r5, r6, lr}
 8007a78:	681d      	ldr	r5, [r3, #0]
 8007a7a:	4606      	mov	r6, r0
 8007a7c:	460c      	mov	r4, r1
 8007a7e:	b125      	cbz	r5, 8007a8a <__swsetup_r+0x16>
 8007a80:	69ab      	ldr	r3, [r5, #24]
 8007a82:	b913      	cbnz	r3, 8007a8a <__swsetup_r+0x16>
 8007a84:	4628      	mov	r0, r5
 8007a86:	f000 f981 	bl	8007d8c <__sinit>
 8007a8a:	4b2e      	ldr	r3, [pc, #184]	; (8007b44 <__swsetup_r+0xd0>)
 8007a8c:	429c      	cmp	r4, r3
 8007a8e:	d10f      	bne.n	8007ab0 <__swsetup_r+0x3c>
 8007a90:	686c      	ldr	r4, [r5, #4]
 8007a92:	89a3      	ldrh	r3, [r4, #12]
 8007a94:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007a98:	0719      	lsls	r1, r3, #28
 8007a9a:	d42c      	bmi.n	8007af6 <__swsetup_r+0x82>
 8007a9c:	06dd      	lsls	r5, r3, #27
 8007a9e:	d411      	bmi.n	8007ac4 <__swsetup_r+0x50>
 8007aa0:	2309      	movs	r3, #9
 8007aa2:	6033      	str	r3, [r6, #0]
 8007aa4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8007aa8:	f04f 30ff 	mov.w	r0, #4294967295
 8007aac:	81a3      	strh	r3, [r4, #12]
 8007aae:	e03e      	b.n	8007b2e <__swsetup_r+0xba>
 8007ab0:	4b25      	ldr	r3, [pc, #148]	; (8007b48 <__swsetup_r+0xd4>)
 8007ab2:	429c      	cmp	r4, r3
 8007ab4:	d101      	bne.n	8007aba <__swsetup_r+0x46>
 8007ab6:	68ac      	ldr	r4, [r5, #8]
 8007ab8:	e7eb      	b.n	8007a92 <__swsetup_r+0x1e>
 8007aba:	4b24      	ldr	r3, [pc, #144]	; (8007b4c <__swsetup_r+0xd8>)
 8007abc:	429c      	cmp	r4, r3
 8007abe:	bf08      	it	eq
 8007ac0:	68ec      	ldreq	r4, [r5, #12]
 8007ac2:	e7e6      	b.n	8007a92 <__swsetup_r+0x1e>
 8007ac4:	0758      	lsls	r0, r3, #29
 8007ac6:	d512      	bpl.n	8007aee <__swsetup_r+0x7a>
 8007ac8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007aca:	b141      	cbz	r1, 8007ade <__swsetup_r+0x6a>
 8007acc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007ad0:	4299      	cmp	r1, r3
 8007ad2:	d002      	beq.n	8007ada <__swsetup_r+0x66>
 8007ad4:	4630      	mov	r0, r6
 8007ad6:	f7ff fb37 	bl	8007148 <_free_r>
 8007ada:	2300      	movs	r3, #0
 8007adc:	6363      	str	r3, [r4, #52]	; 0x34
 8007ade:	89a3      	ldrh	r3, [r4, #12]
 8007ae0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8007ae4:	81a3      	strh	r3, [r4, #12]
 8007ae6:	2300      	movs	r3, #0
 8007ae8:	6063      	str	r3, [r4, #4]
 8007aea:	6923      	ldr	r3, [r4, #16]
 8007aec:	6023      	str	r3, [r4, #0]
 8007aee:	89a3      	ldrh	r3, [r4, #12]
 8007af0:	f043 0308 	orr.w	r3, r3, #8
 8007af4:	81a3      	strh	r3, [r4, #12]
 8007af6:	6923      	ldr	r3, [r4, #16]
 8007af8:	b94b      	cbnz	r3, 8007b0e <__swsetup_r+0x9a>
 8007afa:	89a3      	ldrh	r3, [r4, #12]
 8007afc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8007b00:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007b04:	d003      	beq.n	8007b0e <__swsetup_r+0x9a>
 8007b06:	4621      	mov	r1, r4
 8007b08:	4630      	mov	r0, r6
 8007b0a:	f000 fa05 	bl	8007f18 <__smakebuf_r>
 8007b0e:	89a0      	ldrh	r0, [r4, #12]
 8007b10:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8007b14:	f010 0301 	ands.w	r3, r0, #1
 8007b18:	d00a      	beq.n	8007b30 <__swsetup_r+0xbc>
 8007b1a:	2300      	movs	r3, #0
 8007b1c:	60a3      	str	r3, [r4, #8]
 8007b1e:	6963      	ldr	r3, [r4, #20]
 8007b20:	425b      	negs	r3, r3
 8007b22:	61a3      	str	r3, [r4, #24]
 8007b24:	6923      	ldr	r3, [r4, #16]
 8007b26:	b943      	cbnz	r3, 8007b3a <__swsetup_r+0xc6>
 8007b28:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8007b2c:	d1ba      	bne.n	8007aa4 <__swsetup_r+0x30>
 8007b2e:	bd70      	pop	{r4, r5, r6, pc}
 8007b30:	0781      	lsls	r1, r0, #30
 8007b32:	bf58      	it	pl
 8007b34:	6963      	ldrpl	r3, [r4, #20]
 8007b36:	60a3      	str	r3, [r4, #8]
 8007b38:	e7f4      	b.n	8007b24 <__swsetup_r+0xb0>
 8007b3a:	2000      	movs	r0, #0
 8007b3c:	e7f7      	b.n	8007b2e <__swsetup_r+0xba>
 8007b3e:	bf00      	nop
 8007b40:	2000000c 	.word	0x2000000c
 8007b44:	080086f4 	.word	0x080086f4
 8007b48:	08008714 	.word	0x08008714
 8007b4c:	080086d4 	.word	0x080086d4

08007b50 <abort>:
 8007b50:	2006      	movs	r0, #6
 8007b52:	b508      	push	{r3, lr}
 8007b54:	f000 fa50 	bl	8007ff8 <raise>
 8007b58:	2001      	movs	r0, #1
 8007b5a:	f7f9 fec4 	bl	80018e6 <_exit>
	...

08007b60 <__sflush_r>:
 8007b60:	898a      	ldrh	r2, [r1, #12]
 8007b62:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b64:	4605      	mov	r5, r0
 8007b66:	0710      	lsls	r0, r2, #28
 8007b68:	460c      	mov	r4, r1
 8007b6a:	d457      	bmi.n	8007c1c <__sflush_r+0xbc>
 8007b6c:	684b      	ldr	r3, [r1, #4]
 8007b6e:	2b00      	cmp	r3, #0
 8007b70:	dc04      	bgt.n	8007b7c <__sflush_r+0x1c>
 8007b72:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8007b74:	2b00      	cmp	r3, #0
 8007b76:	dc01      	bgt.n	8007b7c <__sflush_r+0x1c>
 8007b78:	2000      	movs	r0, #0
 8007b7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007b7c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007b7e:	2e00      	cmp	r6, #0
 8007b80:	d0fa      	beq.n	8007b78 <__sflush_r+0x18>
 8007b82:	2300      	movs	r3, #0
 8007b84:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8007b88:	682f      	ldr	r7, [r5, #0]
 8007b8a:	602b      	str	r3, [r5, #0]
 8007b8c:	d032      	beq.n	8007bf4 <__sflush_r+0x94>
 8007b8e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8007b90:	89a3      	ldrh	r3, [r4, #12]
 8007b92:	075a      	lsls	r2, r3, #29
 8007b94:	d505      	bpl.n	8007ba2 <__sflush_r+0x42>
 8007b96:	6863      	ldr	r3, [r4, #4]
 8007b98:	1ac0      	subs	r0, r0, r3
 8007b9a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007b9c:	b10b      	cbz	r3, 8007ba2 <__sflush_r+0x42>
 8007b9e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007ba0:	1ac0      	subs	r0, r0, r3
 8007ba2:	2300      	movs	r3, #0
 8007ba4:	4602      	mov	r2, r0
 8007ba6:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8007ba8:	4628      	mov	r0, r5
 8007baa:	6a21      	ldr	r1, [r4, #32]
 8007bac:	47b0      	blx	r6
 8007bae:	1c43      	adds	r3, r0, #1
 8007bb0:	89a3      	ldrh	r3, [r4, #12]
 8007bb2:	d106      	bne.n	8007bc2 <__sflush_r+0x62>
 8007bb4:	6829      	ldr	r1, [r5, #0]
 8007bb6:	291d      	cmp	r1, #29
 8007bb8:	d82c      	bhi.n	8007c14 <__sflush_r+0xb4>
 8007bba:	4a29      	ldr	r2, [pc, #164]	; (8007c60 <__sflush_r+0x100>)
 8007bbc:	40ca      	lsrs	r2, r1
 8007bbe:	07d6      	lsls	r6, r2, #31
 8007bc0:	d528      	bpl.n	8007c14 <__sflush_r+0xb4>
 8007bc2:	2200      	movs	r2, #0
 8007bc4:	6062      	str	r2, [r4, #4]
 8007bc6:	6922      	ldr	r2, [r4, #16]
 8007bc8:	04d9      	lsls	r1, r3, #19
 8007bca:	6022      	str	r2, [r4, #0]
 8007bcc:	d504      	bpl.n	8007bd8 <__sflush_r+0x78>
 8007bce:	1c42      	adds	r2, r0, #1
 8007bd0:	d101      	bne.n	8007bd6 <__sflush_r+0x76>
 8007bd2:	682b      	ldr	r3, [r5, #0]
 8007bd4:	b903      	cbnz	r3, 8007bd8 <__sflush_r+0x78>
 8007bd6:	6560      	str	r0, [r4, #84]	; 0x54
 8007bd8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007bda:	602f      	str	r7, [r5, #0]
 8007bdc:	2900      	cmp	r1, #0
 8007bde:	d0cb      	beq.n	8007b78 <__sflush_r+0x18>
 8007be0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007be4:	4299      	cmp	r1, r3
 8007be6:	d002      	beq.n	8007bee <__sflush_r+0x8e>
 8007be8:	4628      	mov	r0, r5
 8007bea:	f7ff faad 	bl	8007148 <_free_r>
 8007bee:	2000      	movs	r0, #0
 8007bf0:	6360      	str	r0, [r4, #52]	; 0x34
 8007bf2:	e7c2      	b.n	8007b7a <__sflush_r+0x1a>
 8007bf4:	6a21      	ldr	r1, [r4, #32]
 8007bf6:	2301      	movs	r3, #1
 8007bf8:	4628      	mov	r0, r5
 8007bfa:	47b0      	blx	r6
 8007bfc:	1c41      	adds	r1, r0, #1
 8007bfe:	d1c7      	bne.n	8007b90 <__sflush_r+0x30>
 8007c00:	682b      	ldr	r3, [r5, #0]
 8007c02:	2b00      	cmp	r3, #0
 8007c04:	d0c4      	beq.n	8007b90 <__sflush_r+0x30>
 8007c06:	2b1d      	cmp	r3, #29
 8007c08:	d001      	beq.n	8007c0e <__sflush_r+0xae>
 8007c0a:	2b16      	cmp	r3, #22
 8007c0c:	d101      	bne.n	8007c12 <__sflush_r+0xb2>
 8007c0e:	602f      	str	r7, [r5, #0]
 8007c10:	e7b2      	b.n	8007b78 <__sflush_r+0x18>
 8007c12:	89a3      	ldrh	r3, [r4, #12]
 8007c14:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007c18:	81a3      	strh	r3, [r4, #12]
 8007c1a:	e7ae      	b.n	8007b7a <__sflush_r+0x1a>
 8007c1c:	690f      	ldr	r7, [r1, #16]
 8007c1e:	2f00      	cmp	r7, #0
 8007c20:	d0aa      	beq.n	8007b78 <__sflush_r+0x18>
 8007c22:	0793      	lsls	r3, r2, #30
 8007c24:	bf18      	it	ne
 8007c26:	2300      	movne	r3, #0
 8007c28:	680e      	ldr	r6, [r1, #0]
 8007c2a:	bf08      	it	eq
 8007c2c:	694b      	ldreq	r3, [r1, #20]
 8007c2e:	1bf6      	subs	r6, r6, r7
 8007c30:	600f      	str	r7, [r1, #0]
 8007c32:	608b      	str	r3, [r1, #8]
 8007c34:	2e00      	cmp	r6, #0
 8007c36:	dd9f      	ble.n	8007b78 <__sflush_r+0x18>
 8007c38:	4633      	mov	r3, r6
 8007c3a:	463a      	mov	r2, r7
 8007c3c:	4628      	mov	r0, r5
 8007c3e:	6a21      	ldr	r1, [r4, #32]
 8007c40:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8007c44:	47e0      	blx	ip
 8007c46:	2800      	cmp	r0, #0
 8007c48:	dc06      	bgt.n	8007c58 <__sflush_r+0xf8>
 8007c4a:	89a3      	ldrh	r3, [r4, #12]
 8007c4c:	f04f 30ff 	mov.w	r0, #4294967295
 8007c50:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8007c54:	81a3      	strh	r3, [r4, #12]
 8007c56:	e790      	b.n	8007b7a <__sflush_r+0x1a>
 8007c58:	4407      	add	r7, r0
 8007c5a:	1a36      	subs	r6, r6, r0
 8007c5c:	e7ea      	b.n	8007c34 <__sflush_r+0xd4>
 8007c5e:	bf00      	nop
 8007c60:	20400001 	.word	0x20400001

08007c64 <_fflush_r>:
 8007c64:	b538      	push	{r3, r4, r5, lr}
 8007c66:	690b      	ldr	r3, [r1, #16]
 8007c68:	4605      	mov	r5, r0
 8007c6a:	460c      	mov	r4, r1
 8007c6c:	b913      	cbnz	r3, 8007c74 <_fflush_r+0x10>
 8007c6e:	2500      	movs	r5, #0
 8007c70:	4628      	mov	r0, r5
 8007c72:	bd38      	pop	{r3, r4, r5, pc}
 8007c74:	b118      	cbz	r0, 8007c7e <_fflush_r+0x1a>
 8007c76:	6983      	ldr	r3, [r0, #24]
 8007c78:	b90b      	cbnz	r3, 8007c7e <_fflush_r+0x1a>
 8007c7a:	f000 f887 	bl	8007d8c <__sinit>
 8007c7e:	4b14      	ldr	r3, [pc, #80]	; (8007cd0 <_fflush_r+0x6c>)
 8007c80:	429c      	cmp	r4, r3
 8007c82:	d11b      	bne.n	8007cbc <_fflush_r+0x58>
 8007c84:	686c      	ldr	r4, [r5, #4]
 8007c86:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007c8a:	2b00      	cmp	r3, #0
 8007c8c:	d0ef      	beq.n	8007c6e <_fflush_r+0xa>
 8007c8e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8007c90:	07d0      	lsls	r0, r2, #31
 8007c92:	d404      	bmi.n	8007c9e <_fflush_r+0x3a>
 8007c94:	0599      	lsls	r1, r3, #22
 8007c96:	d402      	bmi.n	8007c9e <_fflush_r+0x3a>
 8007c98:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007c9a:	f000 f915 	bl	8007ec8 <__retarget_lock_acquire_recursive>
 8007c9e:	4628      	mov	r0, r5
 8007ca0:	4621      	mov	r1, r4
 8007ca2:	f7ff ff5d 	bl	8007b60 <__sflush_r>
 8007ca6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007ca8:	4605      	mov	r5, r0
 8007caa:	07da      	lsls	r2, r3, #31
 8007cac:	d4e0      	bmi.n	8007c70 <_fflush_r+0xc>
 8007cae:	89a3      	ldrh	r3, [r4, #12]
 8007cb0:	059b      	lsls	r3, r3, #22
 8007cb2:	d4dd      	bmi.n	8007c70 <_fflush_r+0xc>
 8007cb4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007cb6:	f000 f908 	bl	8007eca <__retarget_lock_release_recursive>
 8007cba:	e7d9      	b.n	8007c70 <_fflush_r+0xc>
 8007cbc:	4b05      	ldr	r3, [pc, #20]	; (8007cd4 <_fflush_r+0x70>)
 8007cbe:	429c      	cmp	r4, r3
 8007cc0:	d101      	bne.n	8007cc6 <_fflush_r+0x62>
 8007cc2:	68ac      	ldr	r4, [r5, #8]
 8007cc4:	e7df      	b.n	8007c86 <_fflush_r+0x22>
 8007cc6:	4b04      	ldr	r3, [pc, #16]	; (8007cd8 <_fflush_r+0x74>)
 8007cc8:	429c      	cmp	r4, r3
 8007cca:	bf08      	it	eq
 8007ccc:	68ec      	ldreq	r4, [r5, #12]
 8007cce:	e7da      	b.n	8007c86 <_fflush_r+0x22>
 8007cd0:	080086f4 	.word	0x080086f4
 8007cd4:	08008714 	.word	0x08008714
 8007cd8:	080086d4 	.word	0x080086d4

08007cdc <std>:
 8007cdc:	2300      	movs	r3, #0
 8007cde:	b510      	push	{r4, lr}
 8007ce0:	4604      	mov	r4, r0
 8007ce2:	e9c0 3300 	strd	r3, r3, [r0]
 8007ce6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007cea:	6083      	str	r3, [r0, #8]
 8007cec:	8181      	strh	r1, [r0, #12]
 8007cee:	6643      	str	r3, [r0, #100]	; 0x64
 8007cf0:	81c2      	strh	r2, [r0, #14]
 8007cf2:	6183      	str	r3, [r0, #24]
 8007cf4:	4619      	mov	r1, r3
 8007cf6:	2208      	movs	r2, #8
 8007cf8:	305c      	adds	r0, #92	; 0x5c
 8007cfa:	f7fd fb31 	bl	8005360 <memset>
 8007cfe:	4b05      	ldr	r3, [pc, #20]	; (8007d14 <std+0x38>)
 8007d00:	6224      	str	r4, [r4, #32]
 8007d02:	6263      	str	r3, [r4, #36]	; 0x24
 8007d04:	4b04      	ldr	r3, [pc, #16]	; (8007d18 <std+0x3c>)
 8007d06:	62a3      	str	r3, [r4, #40]	; 0x28
 8007d08:	4b04      	ldr	r3, [pc, #16]	; (8007d1c <std+0x40>)
 8007d0a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007d0c:	4b04      	ldr	r3, [pc, #16]	; (8007d20 <std+0x44>)
 8007d0e:	6323      	str	r3, [r4, #48]	; 0x30
 8007d10:	bd10      	pop	{r4, pc}
 8007d12:	bf00      	nop
 8007d14:	08008031 	.word	0x08008031
 8007d18:	08008053 	.word	0x08008053
 8007d1c:	0800808b 	.word	0x0800808b
 8007d20:	080080af 	.word	0x080080af

08007d24 <_cleanup_r>:
 8007d24:	4901      	ldr	r1, [pc, #4]	; (8007d2c <_cleanup_r+0x8>)
 8007d26:	f000 b8af 	b.w	8007e88 <_fwalk_reent>
 8007d2a:	bf00      	nop
 8007d2c:	08007c65 	.word	0x08007c65

08007d30 <__sfmoreglue>:
 8007d30:	2268      	movs	r2, #104	; 0x68
 8007d32:	b570      	push	{r4, r5, r6, lr}
 8007d34:	1e4d      	subs	r5, r1, #1
 8007d36:	4355      	muls	r5, r2
 8007d38:	460e      	mov	r6, r1
 8007d3a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8007d3e:	f7ff fa6b 	bl	8007218 <_malloc_r>
 8007d42:	4604      	mov	r4, r0
 8007d44:	b140      	cbz	r0, 8007d58 <__sfmoreglue+0x28>
 8007d46:	2100      	movs	r1, #0
 8007d48:	e9c0 1600 	strd	r1, r6, [r0]
 8007d4c:	300c      	adds	r0, #12
 8007d4e:	60a0      	str	r0, [r4, #8]
 8007d50:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8007d54:	f7fd fb04 	bl	8005360 <memset>
 8007d58:	4620      	mov	r0, r4
 8007d5a:	bd70      	pop	{r4, r5, r6, pc}

08007d5c <__sfp_lock_acquire>:
 8007d5c:	4801      	ldr	r0, [pc, #4]	; (8007d64 <__sfp_lock_acquire+0x8>)
 8007d5e:	f000 b8b3 	b.w	8007ec8 <__retarget_lock_acquire_recursive>
 8007d62:	bf00      	nop
 8007d64:	200006b9 	.word	0x200006b9

08007d68 <__sfp_lock_release>:
 8007d68:	4801      	ldr	r0, [pc, #4]	; (8007d70 <__sfp_lock_release+0x8>)
 8007d6a:	f000 b8ae 	b.w	8007eca <__retarget_lock_release_recursive>
 8007d6e:	bf00      	nop
 8007d70:	200006b9 	.word	0x200006b9

08007d74 <__sinit_lock_acquire>:
 8007d74:	4801      	ldr	r0, [pc, #4]	; (8007d7c <__sinit_lock_acquire+0x8>)
 8007d76:	f000 b8a7 	b.w	8007ec8 <__retarget_lock_acquire_recursive>
 8007d7a:	bf00      	nop
 8007d7c:	200006ba 	.word	0x200006ba

08007d80 <__sinit_lock_release>:
 8007d80:	4801      	ldr	r0, [pc, #4]	; (8007d88 <__sinit_lock_release+0x8>)
 8007d82:	f000 b8a2 	b.w	8007eca <__retarget_lock_release_recursive>
 8007d86:	bf00      	nop
 8007d88:	200006ba 	.word	0x200006ba

08007d8c <__sinit>:
 8007d8c:	b510      	push	{r4, lr}
 8007d8e:	4604      	mov	r4, r0
 8007d90:	f7ff fff0 	bl	8007d74 <__sinit_lock_acquire>
 8007d94:	69a3      	ldr	r3, [r4, #24]
 8007d96:	b11b      	cbz	r3, 8007da0 <__sinit+0x14>
 8007d98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007d9c:	f7ff bff0 	b.w	8007d80 <__sinit_lock_release>
 8007da0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8007da4:	6523      	str	r3, [r4, #80]	; 0x50
 8007da6:	4b13      	ldr	r3, [pc, #76]	; (8007df4 <__sinit+0x68>)
 8007da8:	4a13      	ldr	r2, [pc, #76]	; (8007df8 <__sinit+0x6c>)
 8007daa:	681b      	ldr	r3, [r3, #0]
 8007dac:	62a2      	str	r2, [r4, #40]	; 0x28
 8007dae:	42a3      	cmp	r3, r4
 8007db0:	bf08      	it	eq
 8007db2:	2301      	moveq	r3, #1
 8007db4:	4620      	mov	r0, r4
 8007db6:	bf08      	it	eq
 8007db8:	61a3      	streq	r3, [r4, #24]
 8007dba:	f000 f81f 	bl	8007dfc <__sfp>
 8007dbe:	6060      	str	r0, [r4, #4]
 8007dc0:	4620      	mov	r0, r4
 8007dc2:	f000 f81b 	bl	8007dfc <__sfp>
 8007dc6:	60a0      	str	r0, [r4, #8]
 8007dc8:	4620      	mov	r0, r4
 8007dca:	f000 f817 	bl	8007dfc <__sfp>
 8007dce:	2200      	movs	r2, #0
 8007dd0:	2104      	movs	r1, #4
 8007dd2:	60e0      	str	r0, [r4, #12]
 8007dd4:	6860      	ldr	r0, [r4, #4]
 8007dd6:	f7ff ff81 	bl	8007cdc <std>
 8007dda:	2201      	movs	r2, #1
 8007ddc:	2109      	movs	r1, #9
 8007dde:	68a0      	ldr	r0, [r4, #8]
 8007de0:	f7ff ff7c 	bl	8007cdc <std>
 8007de4:	2202      	movs	r2, #2
 8007de6:	2112      	movs	r1, #18
 8007de8:	68e0      	ldr	r0, [r4, #12]
 8007dea:	f7ff ff77 	bl	8007cdc <std>
 8007dee:	2301      	movs	r3, #1
 8007df0:	61a3      	str	r3, [r4, #24]
 8007df2:	e7d1      	b.n	8007d98 <__sinit+0xc>
 8007df4:	08008358 	.word	0x08008358
 8007df8:	08007d25 	.word	0x08007d25

08007dfc <__sfp>:
 8007dfc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007dfe:	4607      	mov	r7, r0
 8007e00:	f7ff ffac 	bl	8007d5c <__sfp_lock_acquire>
 8007e04:	4b1e      	ldr	r3, [pc, #120]	; (8007e80 <__sfp+0x84>)
 8007e06:	681e      	ldr	r6, [r3, #0]
 8007e08:	69b3      	ldr	r3, [r6, #24]
 8007e0a:	b913      	cbnz	r3, 8007e12 <__sfp+0x16>
 8007e0c:	4630      	mov	r0, r6
 8007e0e:	f7ff ffbd 	bl	8007d8c <__sinit>
 8007e12:	3648      	adds	r6, #72	; 0x48
 8007e14:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8007e18:	3b01      	subs	r3, #1
 8007e1a:	d503      	bpl.n	8007e24 <__sfp+0x28>
 8007e1c:	6833      	ldr	r3, [r6, #0]
 8007e1e:	b30b      	cbz	r3, 8007e64 <__sfp+0x68>
 8007e20:	6836      	ldr	r6, [r6, #0]
 8007e22:	e7f7      	b.n	8007e14 <__sfp+0x18>
 8007e24:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8007e28:	b9d5      	cbnz	r5, 8007e60 <__sfp+0x64>
 8007e2a:	4b16      	ldr	r3, [pc, #88]	; (8007e84 <__sfp+0x88>)
 8007e2c:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8007e30:	60e3      	str	r3, [r4, #12]
 8007e32:	6665      	str	r5, [r4, #100]	; 0x64
 8007e34:	f000 f847 	bl	8007ec6 <__retarget_lock_init_recursive>
 8007e38:	f7ff ff96 	bl	8007d68 <__sfp_lock_release>
 8007e3c:	2208      	movs	r2, #8
 8007e3e:	4629      	mov	r1, r5
 8007e40:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8007e44:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8007e48:	6025      	str	r5, [r4, #0]
 8007e4a:	61a5      	str	r5, [r4, #24]
 8007e4c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8007e50:	f7fd fa86 	bl	8005360 <memset>
 8007e54:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8007e58:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8007e5c:	4620      	mov	r0, r4
 8007e5e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007e60:	3468      	adds	r4, #104	; 0x68
 8007e62:	e7d9      	b.n	8007e18 <__sfp+0x1c>
 8007e64:	2104      	movs	r1, #4
 8007e66:	4638      	mov	r0, r7
 8007e68:	f7ff ff62 	bl	8007d30 <__sfmoreglue>
 8007e6c:	4604      	mov	r4, r0
 8007e6e:	6030      	str	r0, [r6, #0]
 8007e70:	2800      	cmp	r0, #0
 8007e72:	d1d5      	bne.n	8007e20 <__sfp+0x24>
 8007e74:	f7ff ff78 	bl	8007d68 <__sfp_lock_release>
 8007e78:	230c      	movs	r3, #12
 8007e7a:	603b      	str	r3, [r7, #0]
 8007e7c:	e7ee      	b.n	8007e5c <__sfp+0x60>
 8007e7e:	bf00      	nop
 8007e80:	08008358 	.word	0x08008358
 8007e84:	ffff0001 	.word	0xffff0001

08007e88 <_fwalk_reent>:
 8007e88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007e8c:	4606      	mov	r6, r0
 8007e8e:	4688      	mov	r8, r1
 8007e90:	2700      	movs	r7, #0
 8007e92:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8007e96:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8007e9a:	f1b9 0901 	subs.w	r9, r9, #1
 8007e9e:	d505      	bpl.n	8007eac <_fwalk_reent+0x24>
 8007ea0:	6824      	ldr	r4, [r4, #0]
 8007ea2:	2c00      	cmp	r4, #0
 8007ea4:	d1f7      	bne.n	8007e96 <_fwalk_reent+0xe>
 8007ea6:	4638      	mov	r0, r7
 8007ea8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007eac:	89ab      	ldrh	r3, [r5, #12]
 8007eae:	2b01      	cmp	r3, #1
 8007eb0:	d907      	bls.n	8007ec2 <_fwalk_reent+0x3a>
 8007eb2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007eb6:	3301      	adds	r3, #1
 8007eb8:	d003      	beq.n	8007ec2 <_fwalk_reent+0x3a>
 8007eba:	4629      	mov	r1, r5
 8007ebc:	4630      	mov	r0, r6
 8007ebe:	47c0      	blx	r8
 8007ec0:	4307      	orrs	r7, r0
 8007ec2:	3568      	adds	r5, #104	; 0x68
 8007ec4:	e7e9      	b.n	8007e9a <_fwalk_reent+0x12>

08007ec6 <__retarget_lock_init_recursive>:
 8007ec6:	4770      	bx	lr

08007ec8 <__retarget_lock_acquire_recursive>:
 8007ec8:	4770      	bx	lr

08007eca <__retarget_lock_release_recursive>:
 8007eca:	4770      	bx	lr

08007ecc <__swhatbuf_r>:
 8007ecc:	b570      	push	{r4, r5, r6, lr}
 8007ece:	460e      	mov	r6, r1
 8007ed0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007ed4:	4614      	mov	r4, r2
 8007ed6:	2900      	cmp	r1, #0
 8007ed8:	461d      	mov	r5, r3
 8007eda:	b096      	sub	sp, #88	; 0x58
 8007edc:	da08      	bge.n	8007ef0 <__swhatbuf_r+0x24>
 8007ede:	2200      	movs	r2, #0
 8007ee0:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8007ee4:	602a      	str	r2, [r5, #0]
 8007ee6:	061a      	lsls	r2, r3, #24
 8007ee8:	d410      	bmi.n	8007f0c <__swhatbuf_r+0x40>
 8007eea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8007eee:	e00e      	b.n	8007f0e <__swhatbuf_r+0x42>
 8007ef0:	466a      	mov	r2, sp
 8007ef2:	f000 f903 	bl	80080fc <_fstat_r>
 8007ef6:	2800      	cmp	r0, #0
 8007ef8:	dbf1      	blt.n	8007ede <__swhatbuf_r+0x12>
 8007efa:	9a01      	ldr	r2, [sp, #4]
 8007efc:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8007f00:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8007f04:	425a      	negs	r2, r3
 8007f06:	415a      	adcs	r2, r3
 8007f08:	602a      	str	r2, [r5, #0]
 8007f0a:	e7ee      	b.n	8007eea <__swhatbuf_r+0x1e>
 8007f0c:	2340      	movs	r3, #64	; 0x40
 8007f0e:	2000      	movs	r0, #0
 8007f10:	6023      	str	r3, [r4, #0]
 8007f12:	b016      	add	sp, #88	; 0x58
 8007f14:	bd70      	pop	{r4, r5, r6, pc}
	...

08007f18 <__smakebuf_r>:
 8007f18:	898b      	ldrh	r3, [r1, #12]
 8007f1a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007f1c:	079d      	lsls	r5, r3, #30
 8007f1e:	4606      	mov	r6, r0
 8007f20:	460c      	mov	r4, r1
 8007f22:	d507      	bpl.n	8007f34 <__smakebuf_r+0x1c>
 8007f24:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8007f28:	6023      	str	r3, [r4, #0]
 8007f2a:	6123      	str	r3, [r4, #16]
 8007f2c:	2301      	movs	r3, #1
 8007f2e:	6163      	str	r3, [r4, #20]
 8007f30:	b002      	add	sp, #8
 8007f32:	bd70      	pop	{r4, r5, r6, pc}
 8007f34:	466a      	mov	r2, sp
 8007f36:	ab01      	add	r3, sp, #4
 8007f38:	f7ff ffc8 	bl	8007ecc <__swhatbuf_r>
 8007f3c:	9900      	ldr	r1, [sp, #0]
 8007f3e:	4605      	mov	r5, r0
 8007f40:	4630      	mov	r0, r6
 8007f42:	f7ff f969 	bl	8007218 <_malloc_r>
 8007f46:	b948      	cbnz	r0, 8007f5c <__smakebuf_r+0x44>
 8007f48:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007f4c:	059a      	lsls	r2, r3, #22
 8007f4e:	d4ef      	bmi.n	8007f30 <__smakebuf_r+0x18>
 8007f50:	f023 0303 	bic.w	r3, r3, #3
 8007f54:	f043 0302 	orr.w	r3, r3, #2
 8007f58:	81a3      	strh	r3, [r4, #12]
 8007f5a:	e7e3      	b.n	8007f24 <__smakebuf_r+0xc>
 8007f5c:	4b0d      	ldr	r3, [pc, #52]	; (8007f94 <__smakebuf_r+0x7c>)
 8007f5e:	62b3      	str	r3, [r6, #40]	; 0x28
 8007f60:	89a3      	ldrh	r3, [r4, #12]
 8007f62:	6020      	str	r0, [r4, #0]
 8007f64:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007f68:	81a3      	strh	r3, [r4, #12]
 8007f6a:	9b00      	ldr	r3, [sp, #0]
 8007f6c:	6120      	str	r0, [r4, #16]
 8007f6e:	6163      	str	r3, [r4, #20]
 8007f70:	9b01      	ldr	r3, [sp, #4]
 8007f72:	b15b      	cbz	r3, 8007f8c <__smakebuf_r+0x74>
 8007f74:	4630      	mov	r0, r6
 8007f76:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007f7a:	f000 f8d1 	bl	8008120 <_isatty_r>
 8007f7e:	b128      	cbz	r0, 8007f8c <__smakebuf_r+0x74>
 8007f80:	89a3      	ldrh	r3, [r4, #12]
 8007f82:	f023 0303 	bic.w	r3, r3, #3
 8007f86:	f043 0301 	orr.w	r3, r3, #1
 8007f8a:	81a3      	strh	r3, [r4, #12]
 8007f8c:	89a0      	ldrh	r0, [r4, #12]
 8007f8e:	4305      	orrs	r5, r0
 8007f90:	81a5      	strh	r5, [r4, #12]
 8007f92:	e7cd      	b.n	8007f30 <__smakebuf_r+0x18>
 8007f94:	08007d25 	.word	0x08007d25

08007f98 <_malloc_usable_size_r>:
 8007f98:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007f9c:	1f18      	subs	r0, r3, #4
 8007f9e:	2b00      	cmp	r3, #0
 8007fa0:	bfbc      	itt	lt
 8007fa2:	580b      	ldrlt	r3, [r1, r0]
 8007fa4:	18c0      	addlt	r0, r0, r3
 8007fa6:	4770      	bx	lr

08007fa8 <_raise_r>:
 8007fa8:	291f      	cmp	r1, #31
 8007faa:	b538      	push	{r3, r4, r5, lr}
 8007fac:	4604      	mov	r4, r0
 8007fae:	460d      	mov	r5, r1
 8007fb0:	d904      	bls.n	8007fbc <_raise_r+0x14>
 8007fb2:	2316      	movs	r3, #22
 8007fb4:	6003      	str	r3, [r0, #0]
 8007fb6:	f04f 30ff 	mov.w	r0, #4294967295
 8007fba:	bd38      	pop	{r3, r4, r5, pc}
 8007fbc:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8007fbe:	b112      	cbz	r2, 8007fc6 <_raise_r+0x1e>
 8007fc0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8007fc4:	b94b      	cbnz	r3, 8007fda <_raise_r+0x32>
 8007fc6:	4620      	mov	r0, r4
 8007fc8:	f000 f830 	bl	800802c <_getpid_r>
 8007fcc:	462a      	mov	r2, r5
 8007fce:	4601      	mov	r1, r0
 8007fd0:	4620      	mov	r0, r4
 8007fd2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007fd6:	f000 b817 	b.w	8008008 <_kill_r>
 8007fda:	2b01      	cmp	r3, #1
 8007fdc:	d00a      	beq.n	8007ff4 <_raise_r+0x4c>
 8007fde:	1c59      	adds	r1, r3, #1
 8007fe0:	d103      	bne.n	8007fea <_raise_r+0x42>
 8007fe2:	2316      	movs	r3, #22
 8007fe4:	6003      	str	r3, [r0, #0]
 8007fe6:	2001      	movs	r0, #1
 8007fe8:	e7e7      	b.n	8007fba <_raise_r+0x12>
 8007fea:	2400      	movs	r4, #0
 8007fec:	4628      	mov	r0, r5
 8007fee:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8007ff2:	4798      	blx	r3
 8007ff4:	2000      	movs	r0, #0
 8007ff6:	e7e0      	b.n	8007fba <_raise_r+0x12>

08007ff8 <raise>:
 8007ff8:	4b02      	ldr	r3, [pc, #8]	; (8008004 <raise+0xc>)
 8007ffa:	4601      	mov	r1, r0
 8007ffc:	6818      	ldr	r0, [r3, #0]
 8007ffe:	f7ff bfd3 	b.w	8007fa8 <_raise_r>
 8008002:	bf00      	nop
 8008004:	2000000c 	.word	0x2000000c

08008008 <_kill_r>:
 8008008:	b538      	push	{r3, r4, r5, lr}
 800800a:	2300      	movs	r3, #0
 800800c:	4d06      	ldr	r5, [pc, #24]	; (8008028 <_kill_r+0x20>)
 800800e:	4604      	mov	r4, r0
 8008010:	4608      	mov	r0, r1
 8008012:	4611      	mov	r1, r2
 8008014:	602b      	str	r3, [r5, #0]
 8008016:	f7f9 fc56 	bl	80018c6 <_kill>
 800801a:	1c43      	adds	r3, r0, #1
 800801c:	d102      	bne.n	8008024 <_kill_r+0x1c>
 800801e:	682b      	ldr	r3, [r5, #0]
 8008020:	b103      	cbz	r3, 8008024 <_kill_r+0x1c>
 8008022:	6023      	str	r3, [r4, #0]
 8008024:	bd38      	pop	{r3, r4, r5, pc}
 8008026:	bf00      	nop
 8008028:	200006b4 	.word	0x200006b4

0800802c <_getpid_r>:
 800802c:	f7f9 bc44 	b.w	80018b8 <_getpid>

08008030 <__sread>:
 8008030:	b510      	push	{r4, lr}
 8008032:	460c      	mov	r4, r1
 8008034:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008038:	f000 f894 	bl	8008164 <_read_r>
 800803c:	2800      	cmp	r0, #0
 800803e:	bfab      	itete	ge
 8008040:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8008042:	89a3      	ldrhlt	r3, [r4, #12]
 8008044:	181b      	addge	r3, r3, r0
 8008046:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800804a:	bfac      	ite	ge
 800804c:	6563      	strge	r3, [r4, #84]	; 0x54
 800804e:	81a3      	strhlt	r3, [r4, #12]
 8008050:	bd10      	pop	{r4, pc}

08008052 <__swrite>:
 8008052:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008056:	461f      	mov	r7, r3
 8008058:	898b      	ldrh	r3, [r1, #12]
 800805a:	4605      	mov	r5, r0
 800805c:	05db      	lsls	r3, r3, #23
 800805e:	460c      	mov	r4, r1
 8008060:	4616      	mov	r6, r2
 8008062:	d505      	bpl.n	8008070 <__swrite+0x1e>
 8008064:	2302      	movs	r3, #2
 8008066:	2200      	movs	r2, #0
 8008068:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800806c:	f000 f868 	bl	8008140 <_lseek_r>
 8008070:	89a3      	ldrh	r3, [r4, #12]
 8008072:	4632      	mov	r2, r6
 8008074:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008078:	81a3      	strh	r3, [r4, #12]
 800807a:	4628      	mov	r0, r5
 800807c:	463b      	mov	r3, r7
 800807e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008082:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008086:	f000 b817 	b.w	80080b8 <_write_r>

0800808a <__sseek>:
 800808a:	b510      	push	{r4, lr}
 800808c:	460c      	mov	r4, r1
 800808e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008092:	f000 f855 	bl	8008140 <_lseek_r>
 8008096:	1c43      	adds	r3, r0, #1
 8008098:	89a3      	ldrh	r3, [r4, #12]
 800809a:	bf15      	itete	ne
 800809c:	6560      	strne	r0, [r4, #84]	; 0x54
 800809e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80080a2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80080a6:	81a3      	strheq	r3, [r4, #12]
 80080a8:	bf18      	it	ne
 80080aa:	81a3      	strhne	r3, [r4, #12]
 80080ac:	bd10      	pop	{r4, pc}

080080ae <__sclose>:
 80080ae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80080b2:	f000 b813 	b.w	80080dc <_close_r>
	...

080080b8 <_write_r>:
 80080b8:	b538      	push	{r3, r4, r5, lr}
 80080ba:	4604      	mov	r4, r0
 80080bc:	4608      	mov	r0, r1
 80080be:	4611      	mov	r1, r2
 80080c0:	2200      	movs	r2, #0
 80080c2:	4d05      	ldr	r5, [pc, #20]	; (80080d8 <_write_r+0x20>)
 80080c4:	602a      	str	r2, [r5, #0]
 80080c6:	461a      	mov	r2, r3
 80080c8:	f7f9 fc34 	bl	8001934 <_write>
 80080cc:	1c43      	adds	r3, r0, #1
 80080ce:	d102      	bne.n	80080d6 <_write_r+0x1e>
 80080d0:	682b      	ldr	r3, [r5, #0]
 80080d2:	b103      	cbz	r3, 80080d6 <_write_r+0x1e>
 80080d4:	6023      	str	r3, [r4, #0]
 80080d6:	bd38      	pop	{r3, r4, r5, pc}
 80080d8:	200006b4 	.word	0x200006b4

080080dc <_close_r>:
 80080dc:	b538      	push	{r3, r4, r5, lr}
 80080de:	2300      	movs	r3, #0
 80080e0:	4d05      	ldr	r5, [pc, #20]	; (80080f8 <_close_r+0x1c>)
 80080e2:	4604      	mov	r4, r0
 80080e4:	4608      	mov	r0, r1
 80080e6:	602b      	str	r3, [r5, #0]
 80080e8:	f7f9 fc40 	bl	800196c <_close>
 80080ec:	1c43      	adds	r3, r0, #1
 80080ee:	d102      	bne.n	80080f6 <_close_r+0x1a>
 80080f0:	682b      	ldr	r3, [r5, #0]
 80080f2:	b103      	cbz	r3, 80080f6 <_close_r+0x1a>
 80080f4:	6023      	str	r3, [r4, #0]
 80080f6:	bd38      	pop	{r3, r4, r5, pc}
 80080f8:	200006b4 	.word	0x200006b4

080080fc <_fstat_r>:
 80080fc:	b538      	push	{r3, r4, r5, lr}
 80080fe:	2300      	movs	r3, #0
 8008100:	4d06      	ldr	r5, [pc, #24]	; (800811c <_fstat_r+0x20>)
 8008102:	4604      	mov	r4, r0
 8008104:	4608      	mov	r0, r1
 8008106:	4611      	mov	r1, r2
 8008108:	602b      	str	r3, [r5, #0]
 800810a:	f7f9 fc3a 	bl	8001982 <_fstat>
 800810e:	1c43      	adds	r3, r0, #1
 8008110:	d102      	bne.n	8008118 <_fstat_r+0x1c>
 8008112:	682b      	ldr	r3, [r5, #0]
 8008114:	b103      	cbz	r3, 8008118 <_fstat_r+0x1c>
 8008116:	6023      	str	r3, [r4, #0]
 8008118:	bd38      	pop	{r3, r4, r5, pc}
 800811a:	bf00      	nop
 800811c:	200006b4 	.word	0x200006b4

08008120 <_isatty_r>:
 8008120:	b538      	push	{r3, r4, r5, lr}
 8008122:	2300      	movs	r3, #0
 8008124:	4d05      	ldr	r5, [pc, #20]	; (800813c <_isatty_r+0x1c>)
 8008126:	4604      	mov	r4, r0
 8008128:	4608      	mov	r0, r1
 800812a:	602b      	str	r3, [r5, #0]
 800812c:	f7f9 fc38 	bl	80019a0 <_isatty>
 8008130:	1c43      	adds	r3, r0, #1
 8008132:	d102      	bne.n	800813a <_isatty_r+0x1a>
 8008134:	682b      	ldr	r3, [r5, #0]
 8008136:	b103      	cbz	r3, 800813a <_isatty_r+0x1a>
 8008138:	6023      	str	r3, [r4, #0]
 800813a:	bd38      	pop	{r3, r4, r5, pc}
 800813c:	200006b4 	.word	0x200006b4

08008140 <_lseek_r>:
 8008140:	b538      	push	{r3, r4, r5, lr}
 8008142:	4604      	mov	r4, r0
 8008144:	4608      	mov	r0, r1
 8008146:	4611      	mov	r1, r2
 8008148:	2200      	movs	r2, #0
 800814a:	4d05      	ldr	r5, [pc, #20]	; (8008160 <_lseek_r+0x20>)
 800814c:	602a      	str	r2, [r5, #0]
 800814e:	461a      	mov	r2, r3
 8008150:	f7f9 fc30 	bl	80019b4 <_lseek>
 8008154:	1c43      	adds	r3, r0, #1
 8008156:	d102      	bne.n	800815e <_lseek_r+0x1e>
 8008158:	682b      	ldr	r3, [r5, #0]
 800815a:	b103      	cbz	r3, 800815e <_lseek_r+0x1e>
 800815c:	6023      	str	r3, [r4, #0]
 800815e:	bd38      	pop	{r3, r4, r5, pc}
 8008160:	200006b4 	.word	0x200006b4

08008164 <_read_r>:
 8008164:	b538      	push	{r3, r4, r5, lr}
 8008166:	4604      	mov	r4, r0
 8008168:	4608      	mov	r0, r1
 800816a:	4611      	mov	r1, r2
 800816c:	2200      	movs	r2, #0
 800816e:	4d05      	ldr	r5, [pc, #20]	; (8008184 <_read_r+0x20>)
 8008170:	602a      	str	r2, [r5, #0]
 8008172:	461a      	mov	r2, r3
 8008174:	f7f9 fbc1 	bl	80018fa <_read>
 8008178:	1c43      	adds	r3, r0, #1
 800817a:	d102      	bne.n	8008182 <_read_r+0x1e>
 800817c:	682b      	ldr	r3, [r5, #0]
 800817e:	b103      	cbz	r3, 8008182 <_read_r+0x1e>
 8008180:	6023      	str	r3, [r4, #0]
 8008182:	bd38      	pop	{r3, r4, r5, pc}
 8008184:	200006b4 	.word	0x200006b4

08008188 <_init>:
 8008188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800818a:	bf00      	nop
 800818c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800818e:	bc08      	pop	{r3}
 8008190:	469e      	mov	lr, r3
 8008192:	4770      	bx	lr

08008194 <_fini>:
 8008194:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008196:	bf00      	nop
 8008198:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800819a:	bc08      	pop	{r3}
 800819c:	469e      	mov	lr, r3
 800819e:	4770      	bx	lr
