
i2cDevice.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00005240  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f4  0800534c  0800534c  0001534c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08005440  08005440  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08005440  08005440  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08005440  08005440  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08005440  08005440  00015440  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08005444  08005444  00015444  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08005448  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000004f8  20000070  080054b8  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000568  080054b8  00020568  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000fa07  00000000  00000000  00020099  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000025a0  00000000  00000000  0002faa0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001038  00000000  00000000  00032040  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000f58  00000000  00000000  00033078  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00019086  00000000  00000000  00033fd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00012a3c  00000000  00000000  0004d056  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008d20c  00000000  00000000  0005fa92  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000ecc9e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000486c  00000000  00000000  000eccf0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000070 	.word	0x20000070
 8000128:	00000000 	.word	0x00000000
 800012c:	08005334 	.word	0x08005334

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000074 	.word	0x20000074
 8000148:	08005334 	.word	0x08005334

0800014c <strlen>:
 800014c:	4603      	mov	r3, r0
 800014e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000152:	2a00      	cmp	r2, #0
 8000154:	d1fb      	bne.n	800014e <strlen+0x2>
 8000156:	1a18      	subs	r0, r3, r0
 8000158:	3801      	subs	r0, #1
 800015a:	4770      	bx	lr

0800015c <dht20_init>:
#define SLAVE_ADDRESS_DHT20 (0x38 << 1)

uint16_t value_x10[2] = {0, 0};
char temp[20], humid[20];

void dht20_init(void){
 800015c:	b580      	push	{r7, lr}
 800015e:	b084      	sub	sp, #16
 8000160:	af02      	add	r7, sp, #8
	//Set register when call a wrong reset
	uint8_t init[3];

	init[0] = 0xA8;
 8000162:	23a8      	movs	r3, #168	; 0xa8
 8000164:	713b      	strb	r3, [r7, #4]
	init[1] = 0x00;
 8000166:	2300      	movs	r3, #0
 8000168:	717b      	strb	r3, [r7, #5]
	init[2] = 0x00;
 800016a:	2300      	movs	r3, #0
 800016c:	71bb      	strb	r3, [r7, #6]
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) init, 3, 0xFF);
 800016e:	1d3a      	adds	r2, r7, #4
 8000170:	23ff      	movs	r3, #255	; 0xff
 8000172:	9300      	str	r3, [sp, #0]
 8000174:	2303      	movs	r3, #3
 8000176:	2170      	movs	r1, #112	; 0x70
 8000178:	480d      	ldr	r0, [pc, #52]	; (80001b0 <dht20_init+0x54>)
 800017a:	f001 fef7 	bl	8001f6c <HAL_I2C_Master_Transmit>
	HAL_Delay(20);
 800017e:	2014      	movs	r0, #20
 8000180:	f001 fa32 	bl	80015e8 <HAL_Delay>

	init[0] = 0xBE;
 8000184:	23be      	movs	r3, #190	; 0xbe
 8000186:	713b      	strb	r3, [r7, #4]
	init[1] = 0x08;
 8000188:	2308      	movs	r3, #8
 800018a:	717b      	strb	r3, [r7, #5]
	init[2] = 0x00;
 800018c:	2300      	movs	r3, #0
 800018e:	71bb      	strb	r3, [r7, #6]
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) init, 3, 0xFF);
 8000190:	1d3a      	adds	r2, r7, #4
 8000192:	23ff      	movs	r3, #255	; 0xff
 8000194:	9300      	str	r3, [sp, #0]
 8000196:	2303      	movs	r3, #3
 8000198:	2170      	movs	r1, #112	; 0x70
 800019a:	4805      	ldr	r0, [pc, #20]	; (80001b0 <dht20_init+0x54>)
 800019c:	f001 fee6 	bl	8001f6c <HAL_I2C_Master_Transmit>
	HAL_Delay(20);
 80001a0:	2014      	movs	r0, #20
 80001a2:	f001 fa21 	bl	80015e8 <HAL_Delay>
}
 80001a6:	bf00      	nop
 80001a8:	3708      	adds	r7, #8
 80001aa:	46bd      	mov	sp, r7
 80001ac:	bd80      	pop	{r7, pc}
 80001ae:	bf00      	nop
 80001b0:	200000b8 	.word	0x200000b8

080001b4 <dht20_reset>:

void dht20_reset(uint8_t regist){
 80001b4:	b580      	push	{r7, lr}
 80001b6:	b086      	sub	sp, #24
 80001b8:	af02      	add	r7, sp, #8
 80001ba:	4603      	mov	r3, r0
 80001bc:	71fb      	strb	r3, [r7, #7]
	//reset register
	uint8_t reset[3], reply[3];

	reset[0] = regist;
 80001be:	79fb      	ldrb	r3, [r7, #7]
 80001c0:	733b      	strb	r3, [r7, #12]
	reset[1] = 0x00;
 80001c2:	2300      	movs	r3, #0
 80001c4:	737b      	strb	r3, [r7, #13]
	reset[2] = 0x00;
 80001c6:	2300      	movs	r3, #0
 80001c8:	73bb      	strb	r3, [r7, #14]
 	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) reset, 3, 0xFF);
 80001ca:	f107 020c 	add.w	r2, r7, #12
 80001ce:	23ff      	movs	r3, #255	; 0xff
 80001d0:	9300      	str	r3, [sp, #0]
 80001d2:	2303      	movs	r3, #3
 80001d4:	2170      	movs	r1, #112	; 0x70
 80001d6:	4814      	ldr	r0, [pc, #80]	; (8000228 <dht20_reset+0x74>)
 80001d8:	f001 fec8 	bl	8001f6c <HAL_I2C_Master_Transmit>
	HAL_Delay(10);
 80001dc:	200a      	movs	r0, #10
 80001de:	f001 fa03 	bl	80015e8 <HAL_Delay>

	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) reply, 3, 0xFF);
 80001e2:	f107 0208 	add.w	r2, r7, #8
 80001e6:	23ff      	movs	r3, #255	; 0xff
 80001e8:	9300      	str	r3, [sp, #0]
 80001ea:	2303      	movs	r3, #3
 80001ec:	2171      	movs	r1, #113	; 0x71
 80001ee:	480e      	ldr	r0, [pc, #56]	; (8000228 <dht20_reset+0x74>)
 80001f0:	f001 ffba 	bl	8002168 <HAL_I2C_Master_Receive>
	reset[0] = 0xB0 | regist;
 80001f4:	79fb      	ldrb	r3, [r7, #7]
 80001f6:	f063 034f 	orn	r3, r3, #79	; 0x4f
 80001fa:	b2db      	uxtb	r3, r3
 80001fc:	733b      	strb	r3, [r7, #12]
	reset[1] = reply[1];
 80001fe:	7a7b      	ldrb	r3, [r7, #9]
 8000200:	737b      	strb	r3, [r7, #13]
	reset[2] = reply[2];
 8000202:	7abb      	ldrb	r3, [r7, #10]
 8000204:	73bb      	strb	r3, [r7, #14]
	HAL_Delay(10);
 8000206:	200a      	movs	r0, #10
 8000208:	f001 f9ee 	bl	80015e8 <HAL_Delay>

	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) reset, 3, 0xFF);
 800020c:	f107 020c 	add.w	r2, r7, #12
 8000210:	23ff      	movs	r3, #255	; 0xff
 8000212:	9300      	str	r3, [sp, #0]
 8000214:	2303      	movs	r3, #3
 8000216:	2170      	movs	r1, #112	; 0x70
 8000218:	4803      	ldr	r0, [pc, #12]	; (8000228 <dht20_reset+0x74>)
 800021a:	f001 fea7 	bl	8001f6c <HAL_I2C_Master_Transmit>
}
 800021e:	bf00      	nop
 8000220:	3710      	adds	r7, #16
 8000222:	46bd      	mov	sp, r7
 8000224:	bd80      	pop	{r7, pc}
 8000226:	bf00      	nop
 8000228:	200000b8 	.word	0x200000b8

0800022c <dht20_start>:

void dht20_start(void){
 800022c:	b580      	push	{r7, lr}
 800022e:	b084      	sub	sp, #16
 8000230:	af02      	add	r7, sp, #8
	//query the DHT20
	uint8_t status[1];
	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) status, 1, 0xFF);
 8000232:	1d3a      	adds	r2, r7, #4
 8000234:	23ff      	movs	r3, #255	; 0xff
 8000236:	9300      	str	r3, [sp, #0]
 8000238:	2301      	movs	r3, #1
 800023a:	2171      	movs	r1, #113	; 0x71
 800023c:	481b      	ldr	r0, [pc, #108]	; (80002ac <dht20_start+0x80>)
 800023e:	f001 ff93 	bl	8002168 <HAL_I2C_Master_Receive>

	if((status[0] & 0x18) != 0x18){
 8000242:	793b      	ldrb	r3, [r7, #4]
 8000244:	f003 0318 	and.w	r3, r3, #24
 8000248:	2b18      	cmp	r3, #24
 800024a:	d00d      	beq.n	8000268 <dht20_start+0x3c>
		dht20_reset(0x1B);
 800024c:	201b      	movs	r0, #27
 800024e:	f7ff ffb1 	bl	80001b4 <dht20_reset>
		dht20_reset(0x1C);
 8000252:	201c      	movs	r0, #28
 8000254:	f7ff ffae 	bl	80001b4 <dht20_reset>
		dht20_reset(0x1E);
 8000258:	201e      	movs	r0, #30
 800025a:	f7ff ffab 	bl	80001b4 <dht20_reset>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, RESET);
 800025e:	2200      	movs	r2, #0
 8000260:	2102      	movs	r1, #2
 8000262:	4813      	ldr	r0, [pc, #76]	; (80002b0 <dht20_start+0x84>)
 8000264:	f001 fd26 	bl	8001cb4 <HAL_GPIO_WritePin>
	}

	if ((status[0] & 0x18) == 0x18){
 8000268:	793b      	ldrb	r3, [r7, #4]
 800026a:	f003 0318 	and.w	r3, r3, #24
 800026e:	2b18      	cmp	r3, #24
 8000270:	d104      	bne.n	800027c <dht20_start+0x50>
		HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, SET);
 8000272:	2201      	movs	r2, #1
 8000274:	2102      	movs	r1, #2
 8000276:	480e      	ldr	r0, [pc, #56]	; (80002b0 <dht20_start+0x84>)
 8000278:	f001 fd1c 	bl	8001cb4 <HAL_GPIO_WritePin>
	}

	uint8_t data[3] = {0xAC, 0x33, 0x00};
 800027c:	4a0d      	ldr	r2, [pc, #52]	; (80002b4 <dht20_start+0x88>)
 800027e:	463b      	mov	r3, r7
 8000280:	6812      	ldr	r2, [r2, #0]
 8000282:	4611      	mov	r1, r2
 8000284:	8019      	strh	r1, [r3, #0]
 8000286:	3302      	adds	r3, #2
 8000288:	0c12      	lsrs	r2, r2, #16
 800028a:	701a      	strb	r2, [r3, #0]

	//HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) trigger, 1, 0xFF);
	HAL_I2C_Master_Transmit(&hi2c1, SLAVE_ADDRESS_DHT20, (uint8_t*) data, 3, 0xFF);
 800028c:	463a      	mov	r2, r7
 800028e:	23ff      	movs	r3, #255	; 0xff
 8000290:	9300      	str	r3, [sp, #0]
 8000292:	2303      	movs	r3, #3
 8000294:	2170      	movs	r1, #112	; 0x70
 8000296:	4805      	ldr	r0, [pc, #20]	; (80002ac <dht20_start+0x80>)
 8000298:	f001 fe68 	bl	8001f6c <HAL_I2C_Master_Transmit>
	HAL_Delay(80);
 800029c:	2050      	movs	r0, #80	; 0x50
 800029e:	f001 f9a3 	bl	80015e8 <HAL_Delay>
}
 80002a2:	bf00      	nop
 80002a4:	3708      	adds	r7, #8
 80002a6:	46bd      	mov	sp, r7
 80002a8:	bd80      	pop	{r7, pc}
 80002aa:	bf00      	nop
 80002ac:	200000b8 	.word	0x200000b8
 80002b0:	40010800 	.word	0x40010800
 80002b4:	0800534c 	.word	0x0800534c

080002b8 <dht20_read>:

void dht20_read(uint16_t* value){
 80002b8:	b580      	push	{r7, lr}
 80002ba:	b088      	sub	sp, #32
 80002bc:	af02      	add	r7, sp, #8
 80002be:	6078      	str	r0, [r7, #4]
	dht20_start();
 80002c0:	f7ff ffb4 	bl	800022c <dht20_start>
	uint8_t data[7];
	uint32_t Temper = 0, Humid = 0;
 80002c4:	2300      	movs	r3, #0
 80002c6:	617b      	str	r3, [r7, #20]
 80002c8:	2300      	movs	r3, #0
 80002ca:	613b      	str	r3, [r7, #16]
	HAL_I2C_Master_Receive(&hi2c1, SLAVE_ADDRESS_DHT20 | 0x01, (uint8_t*) data, 7, 0xFF);
 80002cc:	f107 0208 	add.w	r2, r7, #8
 80002d0:	23ff      	movs	r3, #255	; 0xff
 80002d2:	9300      	str	r3, [sp, #0]
 80002d4:	2307      	movs	r3, #7
 80002d6:	2171      	movs	r1, #113	; 0x71
 80002d8:	4824      	ldr	r0, [pc, #144]	; (800036c <dht20_read+0xb4>)
 80002da:	f001 ff45 	bl	8002168 <HAL_I2C_Master_Receive>

	//Humid
	Humid = (Humid | data[1]) << 8;
 80002de:	7a7b      	ldrb	r3, [r7, #9]
 80002e0:	461a      	mov	r2, r3
 80002e2:	693b      	ldr	r3, [r7, #16]
 80002e4:	4313      	orrs	r3, r2
 80002e6:	021b      	lsls	r3, r3, #8
 80002e8:	613b      	str	r3, [r7, #16]
	Humid = (Humid | data[2]) << 8;
 80002ea:	7abb      	ldrb	r3, [r7, #10]
 80002ec:	461a      	mov	r2, r3
 80002ee:	693b      	ldr	r3, [r7, #16]
 80002f0:	4313      	orrs	r3, r2
 80002f2:	021b      	lsls	r3, r3, #8
 80002f4:	613b      	str	r3, [r7, #16]
	Humid = Humid | data[3];
 80002f6:	7afb      	ldrb	r3, [r7, #11]
 80002f8:	461a      	mov	r2, r3
 80002fa:	693b      	ldr	r3, [r7, #16]
 80002fc:	4313      	orrs	r3, r2
 80002fe:	613b      	str	r3, [r7, #16]
	Humid = Humid >> 4;
 8000300:	693b      	ldr	r3, [r7, #16]
 8000302:	091b      	lsrs	r3, r3, #4
 8000304:	613b      	str	r3, [r7, #16]
    Humid = (Humid * 100 * 10 / 1024 / 1024);
 8000306:	693b      	ldr	r3, [r7, #16]
 8000308:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800030c:	fb02 f303 	mul.w	r3, r2, r3
 8000310:	0d1b      	lsrs	r3, r3, #20
 8000312:	613b      	str	r3, [r7, #16]
    value[0] = Humid;
 8000314:	693b      	ldr	r3, [r7, #16]
 8000316:	b29a      	uxth	r2, r3
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	801a      	strh	r2, [r3, #0]

	//Temperature
    Temper = (Temper | data[3]) << 8;
 800031c:	7afb      	ldrb	r3, [r7, #11]
 800031e:	461a      	mov	r2, r3
 8000320:	697b      	ldr	r3, [r7, #20]
 8000322:	4313      	orrs	r3, r2
 8000324:	021b      	lsls	r3, r3, #8
 8000326:	617b      	str	r3, [r7, #20]
    Temper = (Temper | data[4]) << 8;
 8000328:	7b3b      	ldrb	r3, [r7, #12]
 800032a:	461a      	mov	r2, r3
 800032c:	697b      	ldr	r3, [r7, #20]
 800032e:	4313      	orrs	r3, r2
 8000330:	021b      	lsls	r3, r3, #8
 8000332:	617b      	str	r3, [r7, #20]
    Temper = Temper | data[5];
 8000334:	7b7b      	ldrb	r3, [r7, #13]
 8000336:	461a      	mov	r2, r3
 8000338:	697b      	ldr	r3, [r7, #20]
 800033a:	4313      	orrs	r3, r2
 800033c:	617b      	str	r3, [r7, #20]
    Temper = Temper & 0xfffff;
 800033e:	697b      	ldr	r3, [r7, #20]
 8000340:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8000344:	617b      	str	r3, [r7, #20]
    Temper = Temper*200*10/1024/1024 - 500;
 8000346:	697b      	ldr	r3, [r7, #20]
 8000348:	f44f 62fa 	mov.w	r2, #2000	; 0x7d0
 800034c:	fb02 f303 	mul.w	r3, r2, r3
 8000350:	0d1b      	lsrs	r3, r3, #20
 8000352:	f5a3 73fa 	sub.w	r3, r3, #500	; 0x1f4
 8000356:	617b      	str	r3, [r7, #20]
	value[1] = Temper;
 8000358:	687b      	ldr	r3, [r7, #4]
 800035a:	3302      	adds	r3, #2
 800035c:	697a      	ldr	r2, [r7, #20]
 800035e:	b292      	uxth	r2, r2
 8000360:	801a      	strh	r2, [r3, #0]

}
 8000362:	bf00      	nop
 8000364:	3718      	adds	r7, #24
 8000366:	46bd      	mov	sp, r7
 8000368:	bd80      	pop	{r7, pc}
 800036a:	bf00      	nop
 800036c:	200000b8 	.word	0x200000b8

08000370 <dht20_output>:

void dht20_output(void){
 8000370:	b590      	push	{r4, r7, lr}
 8000372:	b093      	sub	sp, #76	; 0x4c
 8000374:	af02      	add	r7, sp, #8
	dht20_read(value_x10);
 8000376:	4846      	ldr	r0, [pc, #280]	; (8000490 <dht20_output+0x120>)
 8000378:	f7ff ff9e 	bl	80002b8 <dht20_read>
	char msg[64];
	//11011111 is degree character (manual)
	sprintf(temp, "Temp:  %d.%d %cC",value_x10[1]/10,value_x10[1]%10 ,0b11011111);
 800037c:	4b44      	ldr	r3, [pc, #272]	; (8000490 <dht20_output+0x120>)
 800037e:	885b      	ldrh	r3, [r3, #2]
 8000380:	4a44      	ldr	r2, [pc, #272]	; (8000494 <dht20_output+0x124>)
 8000382:	fba2 2303 	umull	r2, r3, r2, r3
 8000386:	08db      	lsrs	r3, r3, #3
 8000388:	b29b      	uxth	r3, r3
 800038a:	4618      	mov	r0, r3
 800038c:	4b40      	ldr	r3, [pc, #256]	; (8000490 <dht20_output+0x120>)
 800038e:	885a      	ldrh	r2, [r3, #2]
 8000390:	4b40      	ldr	r3, [pc, #256]	; (8000494 <dht20_output+0x124>)
 8000392:	fba3 1302 	umull	r1, r3, r3, r2
 8000396:	08d9      	lsrs	r1, r3, #3
 8000398:	460b      	mov	r3, r1
 800039a:	009b      	lsls	r3, r3, #2
 800039c:	440b      	add	r3, r1
 800039e:	005b      	lsls	r3, r3, #1
 80003a0:	1ad3      	subs	r3, r2, r3
 80003a2:	b29b      	uxth	r3, r3
 80003a4:	461a      	mov	r2, r3
 80003a6:	23df      	movs	r3, #223	; 0xdf
 80003a8:	9300      	str	r3, [sp, #0]
 80003aa:	4613      	mov	r3, r2
 80003ac:	4602      	mov	r2, r0
 80003ae:	493a      	ldr	r1, [pc, #232]	; (8000498 <dht20_output+0x128>)
 80003b0:	483a      	ldr	r0, [pc, #232]	; (800049c <dht20_output+0x12c>)
 80003b2:	f004 fb45 	bl	8004a40 <siprintf>
	sprintf(msg, "!TEMP:%d.%d#",value_x10[1]/10,value_x10[1]%10);
 80003b6:	4b36      	ldr	r3, [pc, #216]	; (8000490 <dht20_output+0x120>)
 80003b8:	885b      	ldrh	r3, [r3, #2]
 80003ba:	4a36      	ldr	r2, [pc, #216]	; (8000494 <dht20_output+0x124>)
 80003bc:	fba2 2303 	umull	r2, r3, r2, r3
 80003c0:	08db      	lsrs	r3, r3, #3
 80003c2:	b29b      	uxth	r3, r3
 80003c4:	461c      	mov	r4, r3
 80003c6:	4b32      	ldr	r3, [pc, #200]	; (8000490 <dht20_output+0x120>)
 80003c8:	885a      	ldrh	r2, [r3, #2]
 80003ca:	4b32      	ldr	r3, [pc, #200]	; (8000494 <dht20_output+0x124>)
 80003cc:	fba3 1302 	umull	r1, r3, r3, r2
 80003d0:	08d9      	lsrs	r1, r3, #3
 80003d2:	460b      	mov	r3, r1
 80003d4:	009b      	lsls	r3, r3, #2
 80003d6:	440b      	add	r3, r1
 80003d8:	005b      	lsls	r3, r3, #1
 80003da:	1ad3      	subs	r3, r2, r3
 80003dc:	b29b      	uxth	r3, r3
 80003de:	4638      	mov	r0, r7
 80003e0:	4622      	mov	r2, r4
 80003e2:	492f      	ldr	r1, [pc, #188]	; (80004a0 <dht20_output+0x130>)
 80003e4:	f004 fb2c 	bl	8004a40 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 1000);
 80003e8:	463b      	mov	r3, r7
 80003ea:	4618      	mov	r0, r3
 80003ec:	f7ff feae 	bl	800014c <strlen>
 80003f0:	4603      	mov	r3, r0
 80003f2:	b29a      	uxth	r2, r3
 80003f4:	4639      	mov	r1, r7
 80003f6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80003fa:	482a      	ldr	r0, [pc, #168]	; (80004a4 <dht20_output+0x134>)
 80003fc:	f003 fdcf 	bl	8003f9e <HAL_UART_Transmit>
	sprintf(humid,"Humid: %01d.%d %%   ",value_x10[0]/10,value_x10[0]%10);
 8000400:	4b23      	ldr	r3, [pc, #140]	; (8000490 <dht20_output+0x120>)
 8000402:	881b      	ldrh	r3, [r3, #0]
 8000404:	4a23      	ldr	r2, [pc, #140]	; (8000494 <dht20_output+0x124>)
 8000406:	fba2 2303 	umull	r2, r3, r2, r3
 800040a:	08db      	lsrs	r3, r3, #3
 800040c:	b29b      	uxth	r3, r3
 800040e:	4618      	mov	r0, r3
 8000410:	4b1f      	ldr	r3, [pc, #124]	; (8000490 <dht20_output+0x120>)
 8000412:	881a      	ldrh	r2, [r3, #0]
 8000414:	4b1f      	ldr	r3, [pc, #124]	; (8000494 <dht20_output+0x124>)
 8000416:	fba3 1302 	umull	r1, r3, r3, r2
 800041a:	08d9      	lsrs	r1, r3, #3
 800041c:	460b      	mov	r3, r1
 800041e:	009b      	lsls	r3, r3, #2
 8000420:	440b      	add	r3, r1
 8000422:	005b      	lsls	r3, r3, #1
 8000424:	1ad3      	subs	r3, r2, r3
 8000426:	b29b      	uxth	r3, r3
 8000428:	4602      	mov	r2, r0
 800042a:	491f      	ldr	r1, [pc, #124]	; (80004a8 <dht20_output+0x138>)
 800042c:	481f      	ldr	r0, [pc, #124]	; (80004ac <dht20_output+0x13c>)
 800042e:	f004 fb07 	bl	8004a40 <siprintf>
	sprintf(msg, "!HUMID:%01d.%d#",value_x10[0]/10,value_x10[0]%10);
 8000432:	4b17      	ldr	r3, [pc, #92]	; (8000490 <dht20_output+0x120>)
 8000434:	881b      	ldrh	r3, [r3, #0]
 8000436:	4a17      	ldr	r2, [pc, #92]	; (8000494 <dht20_output+0x124>)
 8000438:	fba2 2303 	umull	r2, r3, r2, r3
 800043c:	08db      	lsrs	r3, r3, #3
 800043e:	b29b      	uxth	r3, r3
 8000440:	461c      	mov	r4, r3
 8000442:	4b13      	ldr	r3, [pc, #76]	; (8000490 <dht20_output+0x120>)
 8000444:	881a      	ldrh	r2, [r3, #0]
 8000446:	4b13      	ldr	r3, [pc, #76]	; (8000494 <dht20_output+0x124>)
 8000448:	fba3 1302 	umull	r1, r3, r3, r2
 800044c:	08d9      	lsrs	r1, r3, #3
 800044e:	460b      	mov	r3, r1
 8000450:	009b      	lsls	r3, r3, #2
 8000452:	440b      	add	r3, r1
 8000454:	005b      	lsls	r3, r3, #1
 8000456:	1ad3      	subs	r3, r2, r3
 8000458:	b29b      	uxth	r3, r3
 800045a:	4638      	mov	r0, r7
 800045c:	4622      	mov	r2, r4
 800045e:	4914      	ldr	r1, [pc, #80]	; (80004b0 <dht20_output+0x140>)
 8000460:	f004 faee 	bl	8004a40 <siprintf>
	HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), 1000);
 8000464:	463b      	mov	r3, r7
 8000466:	4618      	mov	r0, r3
 8000468:	f7ff fe70 	bl	800014c <strlen>
 800046c:	4603      	mov	r3, r0
 800046e:	b29a      	uxth	r2, r3
 8000470:	4639      	mov	r1, r7
 8000472:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000476:	480b      	ldr	r0, [pc, #44]	; (80004a4 <dht20_output+0x134>)
 8000478:	f003 fd91 	bl	8003f9e <HAL_UART_Transmit>
	setTimer1(300);
 800047c:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8000480:	f000 fc40 	bl	8000d04 <setTimer1>
	lcd_show_value();
 8000484:	f000 f8f0 	bl	8000668 <lcd_show_value>
}
 8000488:	bf00      	nop
 800048a:	3744      	adds	r7, #68	; 0x44
 800048c:	46bd      	mov	sp, r7
 800048e:	bd90      	pop	{r4, r7, pc}
 8000490:	2000008c 	.word	0x2000008c
 8000494:	cccccccd 	.word	0xcccccccd
 8000498:	08005350 	.word	0x08005350
 800049c:	20000090 	.word	0x20000090
 80004a0:	08005364 	.word	0x08005364
 80004a4:	20000154 	.word	0x20000154
 80004a8:	08005374 	.word	0x08005374
 80004ac:	200000a4 	.word	0x200000a4
 80004b0:	0800538c 	.word	0x0800538c

080004b4 <lcd_send_cmd>:

#define SLAVE_ADDRESS_LCD (0x27 << 1)
//(0x3F << 1)  // change this according to ur setup

void lcd_send_cmd (char cmd)
{
 80004b4:	b580      	push	{r7, lr}
 80004b6:	b086      	sub	sp, #24
 80004b8:	af02      	add	r7, sp, #8
 80004ba:	4603      	mov	r3, r0
 80004bc:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (cmd&0xf0);
 80004be:	79fb      	ldrb	r3, [r7, #7]
 80004c0:	f023 030f 	bic.w	r3, r3, #15
 80004c4:	73fb      	strb	r3, [r7, #15]
	data_l = ((cmd<<4)&0xf0);
 80004c6:	79fb      	ldrb	r3, [r7, #7]
 80004c8:	011b      	lsls	r3, r3, #4
 80004ca:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0C;  //en=1, rs=0
 80004cc:	7bfb      	ldrb	r3, [r7, #15]
 80004ce:	f043 030c 	orr.w	r3, r3, #12
 80004d2:	b2db      	uxtb	r3, r3
 80004d4:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x08;  //en=0, rs=0
 80004d6:	7bfb      	ldrb	r3, [r7, #15]
 80004d8:	f043 0308 	orr.w	r3, r3, #8
 80004dc:	b2db      	uxtb	r3, r3
 80004de:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0C;  //en=1, rs=0
 80004e0:	7bbb      	ldrb	r3, [r7, #14]
 80004e2:	f043 030c 	orr.w	r3, r3, #12
 80004e6:	b2db      	uxtb	r3, r3
 80004e8:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x08;  //en=0, rs=0
 80004ea:	7bbb      	ldrb	r3, [r7, #14]
 80004ec:	f043 0308 	orr.w	r3, r3, #8
 80004f0:	b2db      	uxtb	r3, r3
 80004f2:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 80004f4:	f107 0208 	add.w	r2, r7, #8
 80004f8:	2364      	movs	r3, #100	; 0x64
 80004fa:	9300      	str	r3, [sp, #0]
 80004fc:	2304      	movs	r3, #4
 80004fe:	214e      	movs	r1, #78	; 0x4e
 8000500:	4803      	ldr	r0, [pc, #12]	; (8000510 <lcd_send_cmd+0x5c>)
 8000502:	f001 fd33 	bl	8001f6c <HAL_I2C_Master_Transmit>
}
 8000506:	bf00      	nop
 8000508:	3710      	adds	r7, #16
 800050a:	46bd      	mov	sp, r7
 800050c:	bd80      	pop	{r7, pc}
 800050e:	bf00      	nop
 8000510:	200000b8 	.word	0x200000b8

08000514 <lcd_send_data>:

void lcd_send_data (char data)
{
 8000514:	b580      	push	{r7, lr}
 8000516:	b086      	sub	sp, #24
 8000518:	af02      	add	r7, sp, #8
 800051a:	4603      	mov	r3, r0
 800051c:	71fb      	strb	r3, [r7, #7]
	char data_u, data_l;
	uint8_t data_t[4];
	data_u = (data&0xf0);
 800051e:	79fb      	ldrb	r3, [r7, #7]
 8000520:	f023 030f 	bic.w	r3, r3, #15
 8000524:	73fb      	strb	r3, [r7, #15]
	data_l = ((data<<4)&0xf0);
 8000526:	79fb      	ldrb	r3, [r7, #7]
 8000528:	011b      	lsls	r3, r3, #4
 800052a:	73bb      	strb	r3, [r7, #14]
	data_t[0] = data_u|0x0D;  //en=1, rs=0
 800052c:	7bfb      	ldrb	r3, [r7, #15]
 800052e:	f043 030d 	orr.w	r3, r3, #13
 8000532:	b2db      	uxtb	r3, r3
 8000534:	723b      	strb	r3, [r7, #8]
	data_t[1] = data_u|0x09;  //en=0, rs=0
 8000536:	7bfb      	ldrb	r3, [r7, #15]
 8000538:	f043 0309 	orr.w	r3, r3, #9
 800053c:	b2db      	uxtb	r3, r3
 800053e:	727b      	strb	r3, [r7, #9]
	data_t[2] = data_l|0x0D;  //en=1, rs=0
 8000540:	7bbb      	ldrb	r3, [r7, #14]
 8000542:	f043 030d 	orr.w	r3, r3, #13
 8000546:	b2db      	uxtb	r3, r3
 8000548:	72bb      	strb	r3, [r7, #10]
	data_t[3] = data_l|0x09;  //en=0, rs=0
 800054a:	7bbb      	ldrb	r3, [r7, #14]
 800054c:	f043 0309 	orr.w	r3, r3, #9
 8000550:	b2db      	uxtb	r3, r3
 8000552:	72fb      	strb	r3, [r7, #11]
	HAL_I2C_Master_Transmit (&hi2c1, SLAVE_ADDRESS_LCD,(uint8_t *) data_t, 4, 100);
 8000554:	f107 0208 	add.w	r2, r7, #8
 8000558:	2364      	movs	r3, #100	; 0x64
 800055a:	9300      	str	r3, [sp, #0]
 800055c:	2304      	movs	r3, #4
 800055e:	214e      	movs	r1, #78	; 0x4e
 8000560:	4803      	ldr	r0, [pc, #12]	; (8000570 <lcd_send_data+0x5c>)
 8000562:	f001 fd03 	bl	8001f6c <HAL_I2C_Master_Transmit>
}
 8000566:	bf00      	nop
 8000568:	3710      	adds	r7, #16
 800056a:	46bd      	mov	sp, r7
 800056c:	bd80      	pop	{r7, pc}
 800056e:	bf00      	nop
 8000570:	200000b8 	.word	0x200000b8

08000574 <lcd_init>:

void lcd_init (void)
{
 8000574:	b580      	push	{r7, lr}
 8000576:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x33);
 8000578:	2033      	movs	r0, #51	; 0x33
 800057a:	f7ff ff9b 	bl	80004b4 <lcd_send_cmd>
	lcd_send_cmd (0x32);
 800057e:	2032      	movs	r0, #50	; 0x32
 8000580:	f7ff ff98 	bl	80004b4 <lcd_send_cmd>
	HAL_Delay(50);
 8000584:	2032      	movs	r0, #50	; 0x32
 8000586:	f001 f82f 	bl	80015e8 <HAL_Delay>
	lcd_send_cmd (0x28); /* start to set LCD function (4-bit mode) */
 800058a:	2028      	movs	r0, #40	; 0x28
 800058c:	f7ff ff92 	bl	80004b4 <lcd_send_cmd>
	HAL_Delay(50);
 8000590:	2032      	movs	r0, #50	; 0x32
 8000592:	f001 f829 	bl	80015e8 <HAL_Delay>
	lcd_send_cmd (0x01); /* clear display */
 8000596:	2001      	movs	r0, #1
 8000598:	f7ff ff8c 	bl	80004b4 <lcd_send_cmd>
	HAL_Delay(50);
 800059c:	2032      	movs	r0, #50	; 0x32
 800059e:	f001 f823 	bl	80015e8 <HAL_Delay>
	lcd_send_cmd (0x06); /* set entry mode */
 80005a2:	2006      	movs	r0, #6
 80005a4:	f7ff ff86 	bl	80004b4 <lcd_send_cmd>
	HAL_Delay(50);
 80005a8:	2032      	movs	r0, #50	; 0x32
 80005aa:	f001 f81d 	bl	80015e8 <HAL_Delay>
	lcd_send_cmd (0x0c); /* set display to on */	
 80005ae:	200c      	movs	r0, #12
 80005b0:	f7ff ff80 	bl	80004b4 <lcd_send_cmd>
	HAL_Delay(50);
 80005b4:	2032      	movs	r0, #50	; 0x32
 80005b6:	f001 f817 	bl	80015e8 <HAL_Delay>
	lcd_send_cmd (0x02); /* move cursor to home and set data address to 0 */
 80005ba:	2002      	movs	r0, #2
 80005bc:	f7ff ff7a 	bl	80004b4 <lcd_send_cmd>
	HAL_Delay(50);
 80005c0:	2032      	movs	r0, #50	; 0x32
 80005c2:	f001 f811 	bl	80015e8 <HAL_Delay>
	lcd_send_cmd (0x80);
 80005c6:	2080      	movs	r0, #128	; 0x80
 80005c8:	f7ff ff74 	bl	80004b4 <lcd_send_cmd>
}
 80005cc:	bf00      	nop
 80005ce:	bd80      	pop	{r7, pc}

080005d0 <lcd_send_string>:

void lcd_send_string (char *str)
{
 80005d0:	b580      	push	{r7, lr}
 80005d2:	b082      	sub	sp, #8
 80005d4:	af00      	add	r7, sp, #0
 80005d6:	6078      	str	r0, [r7, #4]
	while (*str) lcd_send_data (*str++);
 80005d8:	e006      	b.n	80005e8 <lcd_send_string+0x18>
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	1c5a      	adds	r2, r3, #1
 80005de:	607a      	str	r2, [r7, #4]
 80005e0:	781b      	ldrb	r3, [r3, #0]
 80005e2:	4618      	mov	r0, r3
 80005e4:	f7ff ff96 	bl	8000514 <lcd_send_data>
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	781b      	ldrb	r3, [r3, #0]
 80005ec:	2b00      	cmp	r3, #0
 80005ee:	d1f4      	bne.n	80005da <lcd_send_string+0xa>
}
 80005f0:	bf00      	nop
 80005f2:	bf00      	nop
 80005f4:	3708      	adds	r7, #8
 80005f6:	46bd      	mov	sp, r7
 80005f8:	bd80      	pop	{r7, pc}

080005fa <lcd_clear_display>:

void lcd_clear_display (void)
{
 80005fa:	b580      	push	{r7, lr}
 80005fc:	af00      	add	r7, sp, #0
	lcd_send_cmd (0x01); //clear display
 80005fe:	2001      	movs	r0, #1
 8000600:	f7ff ff58 	bl	80004b4 <lcd_send_cmd>
}
 8000604:	bf00      	nop
 8000606:	bd80      	pop	{r7, pc}

08000608 <lcd_goto_XY>:

void lcd_goto_XY (int row, int col)
{
 8000608:	b580      	push	{r7, lr}
 800060a:	b084      	sub	sp, #16
 800060c:	af00      	add	r7, sp, #0
 800060e:	6078      	str	r0, [r7, #4]
 8000610:	6039      	str	r1, [r7, #0]
	uint8_t pos_Addr;
	if(row == 0)
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	2b00      	cmp	r3, #0
 8000616:	d104      	bne.n	8000622 <lcd_goto_XY+0x1a>
	{
		pos_Addr = 0x80 + col;
 8000618:	683b      	ldr	r3, [r7, #0]
 800061a:	b2db      	uxtb	r3, r3
 800061c:	3b80      	subs	r3, #128	; 0x80
 800061e:	73fb      	strb	r3, [r7, #15]
 8000620:	e003      	b.n	800062a <lcd_goto_XY+0x22>
	}
	else
	{
		pos_Addr = 0xC0 + col;
 8000622:	683b      	ldr	r3, [r7, #0]
 8000624:	b2db      	uxtb	r3, r3
 8000626:	3b40      	subs	r3, #64	; 0x40
 8000628:	73fb      	strb	r3, [r7, #15]
	}
	lcd_send_cmd(pos_Addr);
 800062a:	7bfb      	ldrb	r3, [r7, #15]
 800062c:	4618      	mov	r0, r3
 800062e:	f7ff ff41 	bl	80004b4 <lcd_send_cmd>
}
 8000632:	bf00      	nop
 8000634:	3710      	adds	r7, #16
 8000636:	46bd      	mov	sp, r7
 8000638:	bd80      	pop	{r7, pc}
	...

0800063c <lcd_greeting>:

void lcd_greeting (void){
 800063c:	b580      	push	{r7, lr}
 800063e:	af00      	add	r7, sp, #0
	  lcd_goto_XY(0, 0);
 8000640:	2100      	movs	r1, #0
 8000642:	2000      	movs	r0, #0
 8000644:	f7ff ffe0 	bl	8000608 <lcd_goto_XY>
	  lcd_send_string("System Boot Done");
 8000648:	4805      	ldr	r0, [pc, #20]	; (8000660 <lcd_greeting+0x24>)
 800064a:	f7ff ffc1 	bl	80005d0 <lcd_send_string>
	  lcd_goto_XY(1, 0);
 800064e:	2100      	movs	r1, #0
 8000650:	2001      	movs	r0, #1
 8000652:	f7ff ffd9 	bl	8000608 <lcd_goto_XY>
	  lcd_send_string("Waiting...");
 8000656:	4803      	ldr	r0, [pc, #12]	; (8000664 <lcd_greeting+0x28>)
 8000658:	f7ff ffba 	bl	80005d0 <lcd_send_string>
}
 800065c:	bf00      	nop
 800065e:	bd80      	pop	{r7, pc}
 8000660:	0800539c 	.word	0x0800539c
 8000664:	080053b0 	.word	0x080053b0

08000668 <lcd_show_value>:

void lcd_show_value(void){
 8000668:	b580      	push	{r7, lr}
 800066a:	af00      	add	r7, sp, #0
	  lcd_goto_XY(0, 0);
 800066c:	2100      	movs	r1, #0
 800066e:	2000      	movs	r0, #0
 8000670:	f7ff ffca 	bl	8000608 <lcd_goto_XY>
	  lcd_send_string(humid);
 8000674:	4805      	ldr	r0, [pc, #20]	; (800068c <lcd_show_value+0x24>)
 8000676:	f7ff ffab 	bl	80005d0 <lcd_send_string>
	  lcd_goto_XY(1, 0);
 800067a:	2100      	movs	r1, #0
 800067c:	2001      	movs	r0, #1
 800067e:	f7ff ffc3 	bl	8000608 <lcd_goto_XY>
	  lcd_send_string(temp);
 8000682:	4803      	ldr	r0, [pc, #12]	; (8000690 <lcd_show_value+0x28>)
 8000684:	f7ff ffa4 	bl	80005d0 <lcd_send_string>
}
 8000688:	bf00      	nop
 800068a:	bd80      	pop	{r7, pc}
 800068c:	200000a4 	.word	0x200000a4
 8000690:	20000090 	.word	0x20000090

08000694 <HAL_UART_RxCpltCallback>:

/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8000694:	b580      	push	{r7, lr}
 8000696:	b082      	sub	sp, #8
 8000698:	af00      	add	r7, sp, #0
 800069a:	6078      	str	r0, [r7, #4]
	if (huart->Instance == USART2){
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	4a14      	ldr	r2, [pc, #80]	; (80006f4 <HAL_UART_RxCpltCallback+0x60>)
 80006a2:	4293      	cmp	r3, r2
 80006a4:	d122      	bne.n	80006ec <HAL_UART_RxCpltCallback+0x58>
		HAL_UART_Transmit(&huart2, &buffer_byte, 1, 500);
 80006a6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80006aa:	2201      	movs	r2, #1
 80006ac:	4912      	ldr	r1, [pc, #72]	; (80006f8 <HAL_UART_RxCpltCallback+0x64>)
 80006ae:	4813      	ldr	r0, [pc, #76]	; (80006fc <HAL_UART_RxCpltCallback+0x68>)
 80006b0:	f003 fc75 	bl	8003f9e <HAL_UART_Transmit>
		buffer[index_buffer] = buffer_byte;
 80006b4:	4b12      	ldr	r3, [pc, #72]	; (8000700 <HAL_UART_RxCpltCallback+0x6c>)
 80006b6:	781b      	ldrb	r3, [r3, #0]
 80006b8:	461a      	mov	r2, r3
 80006ba:	4b0f      	ldr	r3, [pc, #60]	; (80006f8 <HAL_UART_RxCpltCallback+0x64>)
 80006bc:	7819      	ldrb	r1, [r3, #0]
 80006be:	4b11      	ldr	r3, [pc, #68]	; (8000704 <HAL_UART_RxCpltCallback+0x70>)
 80006c0:	5499      	strb	r1, [r3, r2]
		index_buffer++;
 80006c2:	4b0f      	ldr	r3, [pc, #60]	; (8000700 <HAL_UART_RxCpltCallback+0x6c>)
 80006c4:	781b      	ldrb	r3, [r3, #0]
 80006c6:	3301      	adds	r3, #1
 80006c8:	b2da      	uxtb	r2, r3
 80006ca:	4b0d      	ldr	r3, [pc, #52]	; (8000700 <HAL_UART_RxCpltCallback+0x6c>)
 80006cc:	701a      	strb	r2, [r3, #0]
		if (index_buffer == MAX_BUFFER_SIZE) index_buffer = 0;
 80006ce:	4b0c      	ldr	r3, [pc, #48]	; (8000700 <HAL_UART_RxCpltCallback+0x6c>)
 80006d0:	781b      	ldrb	r3, [r3, #0]
 80006d2:	2b32      	cmp	r3, #50	; 0x32
 80006d4:	d102      	bne.n	80006dc <HAL_UART_RxCpltCallback+0x48>
 80006d6:	4b0a      	ldr	r3, [pc, #40]	; (8000700 <HAL_UART_RxCpltCallback+0x6c>)
 80006d8:	2200      	movs	r2, #0
 80006da:	701a      	strb	r2, [r3, #0]
		buffer_flag = 1;
 80006dc:	4b0a      	ldr	r3, [pc, #40]	; (8000708 <HAL_UART_RxCpltCallback+0x74>)
 80006de:	2201      	movs	r2, #1
 80006e0:	701a      	strb	r2, [r3, #0]
		HAL_UART_Receive_IT(&huart2, &buffer_byte, 1);
 80006e2:	2201      	movs	r2, #1
 80006e4:	4904      	ldr	r1, [pc, #16]	; (80006f8 <HAL_UART_RxCpltCallback+0x64>)
 80006e6:	4805      	ldr	r0, [pc, #20]	; (80006fc <HAL_UART_RxCpltCallback+0x68>)
 80006e8:	f003 fceb 	bl	80040c2 <HAL_UART_Receive_IT>
	}
}
 80006ec:	bf00      	nop
 80006ee:	3708      	adds	r7, #8
 80006f0:	46bd      	mov	sp, r7
 80006f2:	bd80      	pop	{r7, pc}
 80006f4:	40004400 	.word	0x40004400
 80006f8:	20000510 	.word	0x20000510
 80006fc:	20000154 	.word	0x20000154
 8000700:	20000546 	.word	0x20000546
 8000704:	20000514 	.word	0x20000514
 8000708:	20000547 	.word	0x20000547

0800070c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800070c:	b580      	push	{r7, lr}
 800070e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000710:	f000 ff08 	bl	8001524 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000714:	f000 f83e 	bl	8000794 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000718:	f000 f926 	bl	8000968 <MX_GPIO_Init>
  MX_I2C1_Init();
 800071c:	f000 f880 	bl	8000820 <MX_I2C1_Init>
  MX_USART2_UART_Init();
 8000720:	f000 f8f8 	bl	8000914 <MX_USART2_UART_Init>
  MX_TIM2_Init();
 8000724:	f000 f8aa 	bl	800087c <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  HAL_TIM_Base_Start_IT(&htim2);
 8000728:	4815      	ldr	r0, [pc, #84]	; (8000780 <main+0x74>)
 800072a:	f003 f841 	bl	80037b0 <HAL_TIM_Base_Start_IT>
  HAL_UART_Receive_IT(&huart2, &buffer_byte, 1);
 800072e:	2201      	movs	r2, #1
 8000730:	4914      	ldr	r1, [pc, #80]	; (8000784 <main+0x78>)
 8000732:	4815      	ldr	r0, [pc, #84]	; (8000788 <main+0x7c>)
 8000734:	f003 fcc5 	bl	80040c2 <HAL_UART_Receive_IT>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  //Scan the address of I2C device
  Scan_Addr();
 8000738:	f000 fe6c 	bl	8001414 <Scan_Addr>
  //Init sequence for LCD
  lcd_clear_display();
 800073c:	f7ff ff5d 	bl	80005fa <lcd_clear_display>
  lcd_init();
 8000740:	f7ff ff18 	bl	8000574 <lcd_init>
  lcd_greeting();
 8000744:	f7ff ff7a 	bl	800063c <lcd_greeting>
  //Init sequence for DHT-20
  dht20_init();
 8000748:	f7ff fd08 	bl	800015c <dht20_init>
  setTimer3(300);
 800074c:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8000750:	f000 fb00 	bl	8000d54 <setTimer3>
  while (1)
  {
	  if (buffer_flag == 1){
 8000754:	4b0d      	ldr	r3, [pc, #52]	; (800078c <main+0x80>)
 8000756:	781b      	ldrb	r3, [r3, #0]
 8000758:	2b01      	cmp	r3, #1
 800075a:	d104      	bne.n	8000766 <main+0x5a>
		  cmd_parser_fsm();
 800075c:	f000 fd8a 	bl	8001274 <cmd_parser_fsm>
		  buffer_flag = 0;
 8000760:	4b0a      	ldr	r3, [pc, #40]	; (800078c <main+0x80>)
 8000762:	2200      	movs	r2, #0
 8000764:	701a      	strb	r2, [r3, #0]
	  }
	  if(timer3_flag == 1){
 8000766:	4b0a      	ldr	r3, [pc, #40]	; (8000790 <main+0x84>)
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	2b01      	cmp	r3, #1
 800076c:	d104      	bne.n	8000778 <main+0x6c>
		  setTimer3(1);
 800076e:	2001      	movs	r0, #1
 8000770:	f000 faf0 	bl	8000d54 <setTimer3>
		  uart_control_fsm();
 8000774:	f000 fde6 	bl	8001344 <uart_control_fsm>
	  }

	  SCH_Dispatch_Tasks();
 8000778:	f000 fa70 	bl	8000c5c <SCH_Dispatch_Tasks>
	  if (buffer_flag == 1){
 800077c:	e7ea      	b.n	8000754 <main+0x48>
 800077e:	bf00      	nop
 8000780:	2000010c 	.word	0x2000010c
 8000784:	20000510 	.word	0x20000510
 8000788:	20000154 	.word	0x20000154
 800078c:	20000547 	.word	0x20000547
 8000790:	200004d0 	.word	0x200004d0

08000794 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000794:	b580      	push	{r7, lr}
 8000796:	b090      	sub	sp, #64	; 0x40
 8000798:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800079a:	f107 0318 	add.w	r3, r7, #24
 800079e:	2228      	movs	r2, #40	; 0x28
 80007a0:	2100      	movs	r1, #0
 80007a2:	4618      	mov	r0, r3
 80007a4:	f004 f910 	bl	80049c8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80007a8:	1d3b      	adds	r3, r7, #4
 80007aa:	2200      	movs	r2, #0
 80007ac:	601a      	str	r2, [r3, #0]
 80007ae:	605a      	str	r2, [r3, #4]
 80007b0:	609a      	str	r2, [r3, #8]
 80007b2:	60da      	str	r2, [r3, #12]
 80007b4:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80007b6:	2301      	movs	r3, #1
 80007b8:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80007ba:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80007be:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 80007c0:	2300      	movs	r3, #0
 80007c2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80007c4:	2301      	movs	r3, #1
 80007c6:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80007c8:	2302      	movs	r3, #2
 80007ca:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80007cc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80007d0:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 80007d2:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 80007d6:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007d8:	f107 0318 	add.w	r3, r7, #24
 80007dc:	4618      	mov	r0, r3
 80007de:	f002 fb7d 	bl	8002edc <HAL_RCC_OscConfig>
 80007e2:	4603      	mov	r3, r0
 80007e4:	2b00      	cmp	r3, #0
 80007e6:	d001      	beq.n	80007ec <SystemClock_Config+0x58>
  {
    Error_Handler();
 80007e8:	f000 f914 	bl	8000a14 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80007ec:	230f      	movs	r3, #15
 80007ee:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80007f0:	2302      	movs	r3, #2
 80007f2:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80007f4:	2300      	movs	r3, #0
 80007f6:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80007f8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80007fc:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80007fe:	2300      	movs	r3, #0
 8000800:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000802:	1d3b      	adds	r3, r7, #4
 8000804:	2102      	movs	r1, #2
 8000806:	4618      	mov	r0, r3
 8000808:	f002 fdea 	bl	80033e0 <HAL_RCC_ClockConfig>
 800080c:	4603      	mov	r3, r0
 800080e:	2b00      	cmp	r3, #0
 8000810:	d001      	beq.n	8000816 <SystemClock_Config+0x82>
  {
    Error_Handler();
 8000812:	f000 f8ff 	bl	8000a14 <Error_Handler>
  }
}
 8000816:	bf00      	nop
 8000818:	3740      	adds	r7, #64	; 0x40
 800081a:	46bd      	mov	sp, r7
 800081c:	bd80      	pop	{r7, pc}
	...

08000820 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8000820:	b580      	push	{r7, lr}
 8000822:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000824:	4b12      	ldr	r3, [pc, #72]	; (8000870 <MX_I2C1_Init+0x50>)
 8000826:	4a13      	ldr	r2, [pc, #76]	; (8000874 <MX_I2C1_Init+0x54>)
 8000828:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 800082a:	4b11      	ldr	r3, [pc, #68]	; (8000870 <MX_I2C1_Init+0x50>)
 800082c:	4a12      	ldr	r2, [pc, #72]	; (8000878 <MX_I2C1_Init+0x58>)
 800082e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000830:	4b0f      	ldr	r3, [pc, #60]	; (8000870 <MX_I2C1_Init+0x50>)
 8000832:	2200      	movs	r2, #0
 8000834:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000836:	4b0e      	ldr	r3, [pc, #56]	; (8000870 <MX_I2C1_Init+0x50>)
 8000838:	2200      	movs	r2, #0
 800083a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800083c:	4b0c      	ldr	r3, [pc, #48]	; (8000870 <MX_I2C1_Init+0x50>)
 800083e:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000842:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000844:	4b0a      	ldr	r3, [pc, #40]	; (8000870 <MX_I2C1_Init+0x50>)
 8000846:	2200      	movs	r2, #0
 8000848:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800084a:	4b09      	ldr	r3, [pc, #36]	; (8000870 <MX_I2C1_Init+0x50>)
 800084c:	2200      	movs	r2, #0
 800084e:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000850:	4b07      	ldr	r3, [pc, #28]	; (8000870 <MX_I2C1_Init+0x50>)
 8000852:	2200      	movs	r2, #0
 8000854:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000856:	4b06      	ldr	r3, [pc, #24]	; (8000870 <MX_I2C1_Init+0x50>)
 8000858:	2200      	movs	r2, #0
 800085a:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800085c:	4804      	ldr	r0, [pc, #16]	; (8000870 <MX_I2C1_Init+0x50>)
 800085e:	f001 fa41 	bl	8001ce4 <HAL_I2C_Init>
 8000862:	4603      	mov	r3, r0
 8000864:	2b00      	cmp	r3, #0
 8000866:	d001      	beq.n	800086c <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000868:	f000 f8d4 	bl	8000a14 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 800086c:	bf00      	nop
 800086e:	bd80      	pop	{r7, pc}
 8000870:	200000b8 	.word	0x200000b8
 8000874:	40005400 	.word	0x40005400
 8000878:	000186a0 	.word	0x000186a0

0800087c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800087c:	b580      	push	{r7, lr}
 800087e:	b086      	sub	sp, #24
 8000880:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000882:	f107 0308 	add.w	r3, r7, #8
 8000886:	2200      	movs	r2, #0
 8000888:	601a      	str	r2, [r3, #0]
 800088a:	605a      	str	r2, [r3, #4]
 800088c:	609a      	str	r2, [r3, #8]
 800088e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000890:	463b      	mov	r3, r7
 8000892:	2200      	movs	r2, #0
 8000894:	601a      	str	r2, [r3, #0]
 8000896:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000898:	4b1d      	ldr	r3, [pc, #116]	; (8000910 <MX_TIM2_Init+0x94>)
 800089a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800089e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 7199;
 80008a0:	4b1b      	ldr	r3, [pc, #108]	; (8000910 <MX_TIM2_Init+0x94>)
 80008a2:	f641 421f 	movw	r2, #7199	; 0x1c1f
 80008a6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80008a8:	4b19      	ldr	r3, [pc, #100]	; (8000910 <MX_TIM2_Init+0x94>)
 80008aa:	2200      	movs	r2, #0
 80008ac:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 99;
 80008ae:	4b18      	ldr	r3, [pc, #96]	; (8000910 <MX_TIM2_Init+0x94>)
 80008b0:	2263      	movs	r2, #99	; 0x63
 80008b2:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80008b4:	4b16      	ldr	r3, [pc, #88]	; (8000910 <MX_TIM2_Init+0x94>)
 80008b6:	2200      	movs	r2, #0
 80008b8:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80008ba:	4b15      	ldr	r3, [pc, #84]	; (8000910 <MX_TIM2_Init+0x94>)
 80008bc:	2200      	movs	r2, #0
 80008be:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80008c0:	4813      	ldr	r0, [pc, #76]	; (8000910 <MX_TIM2_Init+0x94>)
 80008c2:	f002 ff25 	bl	8003710 <HAL_TIM_Base_Init>
 80008c6:	4603      	mov	r3, r0
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	d001      	beq.n	80008d0 <MX_TIM2_Init+0x54>
  {
    Error_Handler();
 80008cc:	f000 f8a2 	bl	8000a14 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80008d0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80008d4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80008d6:	f107 0308 	add.w	r3, r7, #8
 80008da:	4619      	mov	r1, r3
 80008dc:	480c      	ldr	r0, [pc, #48]	; (8000910 <MX_TIM2_Init+0x94>)
 80008de:	f003 f8c1 	bl	8003a64 <HAL_TIM_ConfigClockSource>
 80008e2:	4603      	mov	r3, r0
 80008e4:	2b00      	cmp	r3, #0
 80008e6:	d001      	beq.n	80008ec <MX_TIM2_Init+0x70>
  {
    Error_Handler();
 80008e8:	f000 f894 	bl	8000a14 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80008ec:	2300      	movs	r3, #0
 80008ee:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80008f0:	2300      	movs	r3, #0
 80008f2:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80008f4:	463b      	mov	r3, r7
 80008f6:	4619      	mov	r1, r3
 80008f8:	4805      	ldr	r0, [pc, #20]	; (8000910 <MX_TIM2_Init+0x94>)
 80008fa:	f003 fa93 	bl	8003e24 <HAL_TIMEx_MasterConfigSynchronization>
 80008fe:	4603      	mov	r3, r0
 8000900:	2b00      	cmp	r3, #0
 8000902:	d001      	beq.n	8000908 <MX_TIM2_Init+0x8c>
  {
    Error_Handler();
 8000904:	f000 f886 	bl	8000a14 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000908:	bf00      	nop
 800090a:	3718      	adds	r7, #24
 800090c:	46bd      	mov	sp, r7
 800090e:	bd80      	pop	{r7, pc}
 8000910:	2000010c 	.word	0x2000010c

08000914 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8000914:	b580      	push	{r7, lr}
 8000916:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8000918:	4b11      	ldr	r3, [pc, #68]	; (8000960 <MX_USART2_UART_Init+0x4c>)
 800091a:	4a12      	ldr	r2, [pc, #72]	; (8000964 <MX_USART2_UART_Init+0x50>)
 800091c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800091e:	4b10      	ldr	r3, [pc, #64]	; (8000960 <MX_USART2_UART_Init+0x4c>)
 8000920:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8000924:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000926:	4b0e      	ldr	r3, [pc, #56]	; (8000960 <MX_USART2_UART_Init+0x4c>)
 8000928:	2200      	movs	r2, #0
 800092a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800092c:	4b0c      	ldr	r3, [pc, #48]	; (8000960 <MX_USART2_UART_Init+0x4c>)
 800092e:	2200      	movs	r2, #0
 8000930:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000932:	4b0b      	ldr	r3, [pc, #44]	; (8000960 <MX_USART2_UART_Init+0x4c>)
 8000934:	2200      	movs	r2, #0
 8000936:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000938:	4b09      	ldr	r3, [pc, #36]	; (8000960 <MX_USART2_UART_Init+0x4c>)
 800093a:	220c      	movs	r2, #12
 800093c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800093e:	4b08      	ldr	r3, [pc, #32]	; (8000960 <MX_USART2_UART_Init+0x4c>)
 8000940:	2200      	movs	r2, #0
 8000942:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000944:	4b06      	ldr	r3, [pc, #24]	; (8000960 <MX_USART2_UART_Init+0x4c>)
 8000946:	2200      	movs	r2, #0
 8000948:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800094a:	4805      	ldr	r0, [pc, #20]	; (8000960 <MX_USART2_UART_Init+0x4c>)
 800094c:	f003 fada 	bl	8003f04 <HAL_UART_Init>
 8000950:	4603      	mov	r3, r0
 8000952:	2b00      	cmp	r3, #0
 8000954:	d001      	beq.n	800095a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000956:	f000 f85d 	bl	8000a14 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800095a:	bf00      	nop
 800095c:	bd80      	pop	{r7, pc}
 800095e:	bf00      	nop
 8000960:	20000154 	.word	0x20000154
 8000964:	40004400 	.word	0x40004400

08000968 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000968:	b580      	push	{r7, lr}
 800096a:	b088      	sub	sp, #32
 800096c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800096e:	f107 0310 	add.w	r3, r7, #16
 8000972:	2200      	movs	r2, #0
 8000974:	601a      	str	r2, [r3, #0]
 8000976:	605a      	str	r2, [r3, #4]
 8000978:	609a      	str	r2, [r3, #8]
 800097a:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800097c:	4b1d      	ldr	r3, [pc, #116]	; (80009f4 <MX_GPIO_Init+0x8c>)
 800097e:	699b      	ldr	r3, [r3, #24]
 8000980:	4a1c      	ldr	r2, [pc, #112]	; (80009f4 <MX_GPIO_Init+0x8c>)
 8000982:	f043 0320 	orr.w	r3, r3, #32
 8000986:	6193      	str	r3, [r2, #24]
 8000988:	4b1a      	ldr	r3, [pc, #104]	; (80009f4 <MX_GPIO_Init+0x8c>)
 800098a:	699b      	ldr	r3, [r3, #24]
 800098c:	f003 0320 	and.w	r3, r3, #32
 8000990:	60fb      	str	r3, [r7, #12]
 8000992:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000994:	4b17      	ldr	r3, [pc, #92]	; (80009f4 <MX_GPIO_Init+0x8c>)
 8000996:	699b      	ldr	r3, [r3, #24]
 8000998:	4a16      	ldr	r2, [pc, #88]	; (80009f4 <MX_GPIO_Init+0x8c>)
 800099a:	f043 0304 	orr.w	r3, r3, #4
 800099e:	6193      	str	r3, [r2, #24]
 80009a0:	4b14      	ldr	r3, [pc, #80]	; (80009f4 <MX_GPIO_Init+0x8c>)
 80009a2:	699b      	ldr	r3, [r3, #24]
 80009a4:	f003 0304 	and.w	r3, r3, #4
 80009a8:	60bb      	str	r3, [r7, #8]
 80009aa:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80009ac:	4b11      	ldr	r3, [pc, #68]	; (80009f4 <MX_GPIO_Init+0x8c>)
 80009ae:	699b      	ldr	r3, [r3, #24]
 80009b0:	4a10      	ldr	r2, [pc, #64]	; (80009f4 <MX_GPIO_Init+0x8c>)
 80009b2:	f043 0308 	orr.w	r3, r3, #8
 80009b6:	6193      	str	r3, [r2, #24]
 80009b8:	4b0e      	ldr	r3, [pc, #56]	; (80009f4 <MX_GPIO_Init+0x8c>)
 80009ba:	699b      	ldr	r3, [r3, #24]
 80009bc:	f003 0308 	and.w	r3, r3, #8
 80009c0:	607b      	str	r3, [r7, #4]
 80009c2:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 80009c4:	2200      	movs	r2, #0
 80009c6:	2102      	movs	r1, #2
 80009c8:	480b      	ldr	r0, [pc, #44]	; (80009f8 <MX_GPIO_Init+0x90>)
 80009ca:	f001 f973 	bl	8001cb4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LED_Pin */
  GPIO_InitStruct.Pin = LED_Pin;
 80009ce:	2302      	movs	r3, #2
 80009d0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009d2:	2301      	movs	r3, #1
 80009d4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009d6:	2300      	movs	r3, #0
 80009d8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009da:	2302      	movs	r3, #2
 80009dc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 80009de:	f107 0310 	add.w	r3, r7, #16
 80009e2:	4619      	mov	r1, r3
 80009e4:	4804      	ldr	r0, [pc, #16]	; (80009f8 <MX_GPIO_Init+0x90>)
 80009e6:	f000 ffe1 	bl	80019ac <HAL_GPIO_Init>

}
 80009ea:	bf00      	nop
 80009ec:	3720      	adds	r7, #32
 80009ee:	46bd      	mov	sp, r7
 80009f0:	bd80      	pop	{r7, pc}
 80009f2:	bf00      	nop
 80009f4:	40021000 	.word	0x40021000
 80009f8:	40010800 	.word	0x40010800

080009fc <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80009fc:	b580      	push	{r7, lr}
 80009fe:	b082      	sub	sp, #8
 8000a00:	af00      	add	r7, sp, #0
 8000a02:	6078      	str	r0, [r7, #4]
	timerRun();
 8000a04:	f000 f9ce 	bl	8000da4 <timerRun>
	SCH_Update();
 8000a08:	f000 f964 	bl	8000cd4 <SCH_Update>
}
 8000a0c:	bf00      	nop
 8000a0e:	3708      	adds	r7, #8
 8000a10:	46bd      	mov	sp, r7
 8000a12:	bd80      	pop	{r7, pc}

08000a14 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000a14:	b480      	push	{r7}
 8000a16:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000a18:	b672      	cpsid	i
}
 8000a1a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000a1c:	e7fe      	b.n	8000a1c <Error_Handler+0x8>
	...

08000a20 <SCH_MakePlaceForNewTask>:
#include "scheduler.h"

sTasks SCH_tasks_G[SCH_MAX_TASKS];
uint8_t current_index_task = 0;

void SCH_MakePlaceForNewTask(uint8_t pos){
 8000a20:	b4b0      	push	{r4, r5, r7}
 8000a22:	b085      	sub	sp, #20
 8000a24:	af00      	add	r7, sp, #0
 8000a26:	4603      	mov	r3, r0
 8000a28:	71fb      	strb	r3, [r7, #7]
	for (uint8_t i = (current_index_task - 1); i>pos; i--){
 8000a2a:	4b13      	ldr	r3, [pc, #76]	; (8000a78 <SCH_MakePlaceForNewTask+0x58>)
 8000a2c:	781b      	ldrb	r3, [r3, #0]
 8000a2e:	3b01      	subs	r3, #1
 8000a30:	73fb      	strb	r3, [r7, #15]
 8000a32:	e017      	b.n	8000a64 <SCH_MakePlaceForNewTask+0x44>
		SCH_tasks_G[i] = SCH_tasks_G[i-1];
 8000a34:	7bfb      	ldrb	r3, [r7, #15]
 8000a36:	1e5a      	subs	r2, r3, #1
 8000a38:	7bf9      	ldrb	r1, [r7, #15]
 8000a3a:	4810      	ldr	r0, [pc, #64]	; (8000a7c <SCH_MakePlaceForNewTask+0x5c>)
 8000a3c:	460b      	mov	r3, r1
 8000a3e:	009b      	lsls	r3, r3, #2
 8000a40:	440b      	add	r3, r1
 8000a42:	009b      	lsls	r3, r3, #2
 8000a44:	4418      	add	r0, r3
 8000a46:	490d      	ldr	r1, [pc, #52]	; (8000a7c <SCH_MakePlaceForNewTask+0x5c>)
 8000a48:	4613      	mov	r3, r2
 8000a4a:	009b      	lsls	r3, r3, #2
 8000a4c:	4413      	add	r3, r2
 8000a4e:	009b      	lsls	r3, r3, #2
 8000a50:	440b      	add	r3, r1
 8000a52:	4604      	mov	r4, r0
 8000a54:	461d      	mov	r5, r3
 8000a56:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000a58:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000a5a:	682b      	ldr	r3, [r5, #0]
 8000a5c:	6023      	str	r3, [r4, #0]
	for (uint8_t i = (current_index_task - 1); i>pos; i--){
 8000a5e:	7bfb      	ldrb	r3, [r7, #15]
 8000a60:	3b01      	subs	r3, #1
 8000a62:	73fb      	strb	r3, [r7, #15]
 8000a64:	7bfa      	ldrb	r2, [r7, #15]
 8000a66:	79fb      	ldrb	r3, [r7, #7]
 8000a68:	429a      	cmp	r2, r3
 8000a6a:	d8e3      	bhi.n	8000a34 <SCH_MakePlaceForNewTask+0x14>
	}
}
 8000a6c:	bf00      	nop
 8000a6e:	bf00      	nop
 8000a70:	3714      	adds	r7, #20
 8000a72:	46bd      	mov	sp, r7
 8000a74:	bcb0      	pop	{r4, r5, r7}
 8000a76:	4770      	bx	lr
 8000a78:	200004b8 	.word	0x200004b8
 8000a7c:	20000198 	.word	0x20000198

08000a80 <SCH_Add_Task>:

void SCH_Add_Task (void (*pFunction)(), uint32_t DELAY, uint32_t PERIOD){
 8000a80:	b5b0      	push	{r4, r5, r7, lr}
 8000a82:	b08a      	sub	sp, #40	; 0x28
 8000a84:	af00      	add	r7, sp, #0
 8000a86:	60f8      	str	r0, [r7, #12]
 8000a88:	60b9      	str	r1, [r7, #8]
 8000a8a:	607a      	str	r2, [r7, #4]
	sTasks newTask;
	uint8_t newTask_index = 0;
 8000a8c:	2300      	movs	r3, #0
 8000a8e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
	if(current_index_task < SCH_MAX_TASKS){
 8000a92:	4b3e      	ldr	r3, [pc, #248]	; (8000b8c <SCH_Add_Task+0x10c>)
 8000a94:	781b      	ldrb	r3, [r3, #0]
 8000a96:	2b27      	cmp	r3, #39	; 0x27
 8000a98:	d874      	bhi.n	8000b84 <SCH_Add_Task+0x104>

		newTask.pTask = pFunction;
 8000a9a:	68fb      	ldr	r3, [r7, #12]
 8000a9c:	613b      	str	r3, [r7, #16]
		newTask.Delay = DELAY;
 8000a9e:	68bb      	ldr	r3, [r7, #8]
 8000aa0:	617b      	str	r3, [r7, #20]
		newTask.Period =  PERIOD;
 8000aa2:	687b      	ldr	r3, [r7, #4]
 8000aa4:	61bb      	str	r3, [r7, #24]
		newTask.RunMe = 0;
 8000aa6:	2300      	movs	r3, #0
 8000aa8:	773b      	strb	r3, [r7, #28]

		newTask.TaskID = current_index_task;
 8000aaa:	4b38      	ldr	r3, [pc, #224]	; (8000b8c <SCH_Add_Task+0x10c>)
 8000aac:	781b      	ldrb	r3, [r3, #0]
 8000aae:	623b      	str	r3, [r7, #32]

		if (current_index_task == 0){
 8000ab0:	4b36      	ldr	r3, [pc, #216]	; (8000b8c <SCH_Add_Task+0x10c>)
 8000ab2:	781b      	ldrb	r3, [r3, #0]
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	d120      	bne.n	8000afa <SCH_Add_Task+0x7a>
			SCH_tasks_G[0] = newTask;
 8000ab8:	4b35      	ldr	r3, [pc, #212]	; (8000b90 <SCH_Add_Task+0x110>)
 8000aba:	461d      	mov	r5, r3
 8000abc:	f107 0410 	add.w	r4, r7, #16
 8000ac0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000ac2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000ac4:	6823      	ldr	r3, [r4, #0]
 8000ac6:	602b      	str	r3, [r5, #0]
			current_index_task++;
 8000ac8:	4b30      	ldr	r3, [pc, #192]	; (8000b8c <SCH_Add_Task+0x10c>)
 8000aca:	781b      	ldrb	r3, [r3, #0]
 8000acc:	3301      	adds	r3, #1
 8000ace:	b2da      	uxtb	r2, r3
 8000ad0:	4b2e      	ldr	r3, [pc, #184]	; (8000b8c <SCH_Add_Task+0x10c>)
 8000ad2:	701a      	strb	r2, [r3, #0]
 8000ad4:	e056      	b.n	8000b84 <SCH_Add_Task+0x104>
			return;
		}

		while(newTask.Delay > SCH_tasks_G[newTask_index].Delay && newTask_index < current_index_task){
			newTask.Delay = newTask.Delay - SCH_tasks_G[newTask_index].Delay;
 8000ad6:	6979      	ldr	r1, [r7, #20]
 8000ad8:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8000adc:	482c      	ldr	r0, [pc, #176]	; (8000b90 <SCH_Add_Task+0x110>)
 8000ade:	4613      	mov	r3, r2
 8000ae0:	009b      	lsls	r3, r3, #2
 8000ae2:	4413      	add	r3, r2
 8000ae4:	009b      	lsls	r3, r3, #2
 8000ae6:	4403      	add	r3, r0
 8000ae8:	3304      	adds	r3, #4
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	1acb      	subs	r3, r1, r3
 8000aee:	617b      	str	r3, [r7, #20]
			newTask_index++;
 8000af0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8000af4:	3301      	adds	r3, #1
 8000af6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
		while(newTask.Delay > SCH_tasks_G[newTask_index].Delay && newTask_index < current_index_task){
 8000afa:	6979      	ldr	r1, [r7, #20]
 8000afc:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8000b00:	4823      	ldr	r0, [pc, #140]	; (8000b90 <SCH_Add_Task+0x110>)
 8000b02:	4613      	mov	r3, r2
 8000b04:	009b      	lsls	r3, r3, #2
 8000b06:	4413      	add	r3, r2
 8000b08:	009b      	lsls	r3, r3, #2
 8000b0a:	4403      	add	r3, r0
 8000b0c:	3304      	adds	r3, #4
 8000b0e:	681b      	ldr	r3, [r3, #0]
 8000b10:	4299      	cmp	r1, r3
 8000b12:	d905      	bls.n	8000b20 <SCH_Add_Task+0xa0>
 8000b14:	4b1d      	ldr	r3, [pc, #116]	; (8000b8c <SCH_Add_Task+0x10c>)
 8000b16:	781b      	ldrb	r3, [r3, #0]
 8000b18:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8000b1c:	429a      	cmp	r2, r3
 8000b1e:	d3da      	bcc.n	8000ad6 <SCH_Add_Task+0x56>
		}

		current_index_task++;
 8000b20:	4b1a      	ldr	r3, [pc, #104]	; (8000b8c <SCH_Add_Task+0x10c>)
 8000b22:	781b      	ldrb	r3, [r3, #0]
 8000b24:	3301      	adds	r3, #1
 8000b26:	b2da      	uxtb	r2, r3
 8000b28:	4b18      	ldr	r3, [pc, #96]	; (8000b8c <SCH_Add_Task+0x10c>)
 8000b2a:	701a      	strb	r2, [r3, #0]

		SCH_MakePlaceForNewTask(newTask_index);
 8000b2c:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8000b30:	4618      	mov	r0, r3
 8000b32:	f7ff ff75 	bl	8000a20 <SCH_MakePlaceForNewTask>

		SCH_tasks_G[newTask_index] = newTask;
 8000b36:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8000b3a:	4915      	ldr	r1, [pc, #84]	; (8000b90 <SCH_Add_Task+0x110>)
 8000b3c:	4613      	mov	r3, r2
 8000b3e:	009b      	lsls	r3, r3, #2
 8000b40:	4413      	add	r3, r2
 8000b42:	009b      	lsls	r3, r3, #2
 8000b44:	440b      	add	r3, r1
 8000b46:	461d      	mov	r5, r3
 8000b48:	f107 0410 	add.w	r4, r7, #16
 8000b4c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000b4e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000b50:	6823      	ldr	r3, [r4, #0]
 8000b52:	602b      	str	r3, [r5, #0]

		SCH_tasks_G[newTask_index+1].Delay = SCH_tasks_G[newTask_index+1].Delay - newTask.Delay;
 8000b54:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8000b58:	1c5a      	adds	r2, r3, #1
 8000b5a:	490d      	ldr	r1, [pc, #52]	; (8000b90 <SCH_Add_Task+0x110>)
 8000b5c:	4613      	mov	r3, r2
 8000b5e:	009b      	lsls	r3, r3, #2
 8000b60:	4413      	add	r3, r2
 8000b62:	009b      	lsls	r3, r3, #2
 8000b64:	440b      	add	r3, r1
 8000b66:	3304      	adds	r3, #4
 8000b68:	6819      	ldr	r1, [r3, #0]
 8000b6a:	697b      	ldr	r3, [r7, #20]
 8000b6c:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8000b70:	3201      	adds	r2, #1
 8000b72:	1ac9      	subs	r1, r1, r3
 8000b74:	4806      	ldr	r0, [pc, #24]	; (8000b90 <SCH_Add_Task+0x110>)
 8000b76:	4613      	mov	r3, r2
 8000b78:	009b      	lsls	r3, r3, #2
 8000b7a:	4413      	add	r3, r2
 8000b7c:	009b      	lsls	r3, r3, #2
 8000b7e:	4403      	add	r3, r0
 8000b80:	3304      	adds	r3, #4
 8000b82:	6019      	str	r1, [r3, #0]
	}
}
 8000b84:	3728      	adds	r7, #40	; 0x28
 8000b86:	46bd      	mov	sp, r7
 8000b88:	bdb0      	pop	{r4, r5, r7, pc}
 8000b8a:	bf00      	nop
 8000b8c:	200004b8 	.word	0x200004b8
 8000b90:	20000198 	.word	0x20000198

08000b94 <SCH_Delete_Task>:


void SCH_Delete_Task (uint32_t taskID){
 8000b94:	b4b0      	push	{r4, r5, r7}
 8000b96:	b085      	sub	sp, #20
 8000b98:	af00      	add	r7, sp, #0
 8000b9a:	6078      	str	r0, [r7, #4]
	for (int i=taskID; i<(current_index_task-1); i++){
 8000b9c:	687b      	ldr	r3, [r7, #4]
 8000b9e:	60fb      	str	r3, [r7, #12]
 8000ba0:	e017      	b.n	8000bd2 <SCH_Delete_Task+0x3e>
		SCH_tasks_G[i]=SCH_tasks_G[i+1];
 8000ba2:	68fb      	ldr	r3, [r7, #12]
 8000ba4:	1c5a      	adds	r2, r3, #1
 8000ba6:	482b      	ldr	r0, [pc, #172]	; (8000c54 <SCH_Delete_Task+0xc0>)
 8000ba8:	68f9      	ldr	r1, [r7, #12]
 8000baa:	460b      	mov	r3, r1
 8000bac:	009b      	lsls	r3, r3, #2
 8000bae:	440b      	add	r3, r1
 8000bb0:	009b      	lsls	r3, r3, #2
 8000bb2:	4418      	add	r0, r3
 8000bb4:	4927      	ldr	r1, [pc, #156]	; (8000c54 <SCH_Delete_Task+0xc0>)
 8000bb6:	4613      	mov	r3, r2
 8000bb8:	009b      	lsls	r3, r3, #2
 8000bba:	4413      	add	r3, r2
 8000bbc:	009b      	lsls	r3, r3, #2
 8000bbe:	440b      	add	r3, r1
 8000bc0:	4604      	mov	r4, r0
 8000bc2:	461d      	mov	r5, r3
 8000bc4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000bc6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000bc8:	682b      	ldr	r3, [r5, #0]
 8000bca:	6023      	str	r3, [r4, #0]
	for (int i=taskID; i<(current_index_task-1); i++){
 8000bcc:	68fb      	ldr	r3, [r7, #12]
 8000bce:	3301      	adds	r3, #1
 8000bd0:	60fb      	str	r3, [r7, #12]
 8000bd2:	4b21      	ldr	r3, [pc, #132]	; (8000c58 <SCH_Delete_Task+0xc4>)
 8000bd4:	781b      	ldrb	r3, [r3, #0]
 8000bd6:	3b01      	subs	r3, #1
 8000bd8:	68fa      	ldr	r2, [r7, #12]
 8000bda:	429a      	cmp	r2, r3
 8000bdc:	dbe1      	blt.n	8000ba2 <SCH_Delete_Task+0xe>
	}

	SCH_tasks_G[current_index_task-1].pTask = NULL;
 8000bde:	4b1e      	ldr	r3, [pc, #120]	; (8000c58 <SCH_Delete_Task+0xc4>)
 8000be0:	781b      	ldrb	r3, [r3, #0]
 8000be2:	1e5a      	subs	r2, r3, #1
 8000be4:	491b      	ldr	r1, [pc, #108]	; (8000c54 <SCH_Delete_Task+0xc0>)
 8000be6:	4613      	mov	r3, r2
 8000be8:	009b      	lsls	r3, r3, #2
 8000bea:	4413      	add	r3, r2
 8000bec:	009b      	lsls	r3, r3, #2
 8000bee:	440b      	add	r3, r1
 8000bf0:	2200      	movs	r2, #0
 8000bf2:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[current_index_task-1].Delay = 0;
 8000bf4:	4b18      	ldr	r3, [pc, #96]	; (8000c58 <SCH_Delete_Task+0xc4>)
 8000bf6:	781b      	ldrb	r3, [r3, #0]
 8000bf8:	1e5a      	subs	r2, r3, #1
 8000bfa:	4916      	ldr	r1, [pc, #88]	; (8000c54 <SCH_Delete_Task+0xc0>)
 8000bfc:	4613      	mov	r3, r2
 8000bfe:	009b      	lsls	r3, r3, #2
 8000c00:	4413      	add	r3, r2
 8000c02:	009b      	lsls	r3, r3, #2
 8000c04:	440b      	add	r3, r1
 8000c06:	3304      	adds	r3, #4
 8000c08:	2200      	movs	r2, #0
 8000c0a:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[current_index_task-1].Period = 0;
 8000c0c:	4b12      	ldr	r3, [pc, #72]	; (8000c58 <SCH_Delete_Task+0xc4>)
 8000c0e:	781b      	ldrb	r3, [r3, #0]
 8000c10:	1e5a      	subs	r2, r3, #1
 8000c12:	4910      	ldr	r1, [pc, #64]	; (8000c54 <SCH_Delete_Task+0xc0>)
 8000c14:	4613      	mov	r3, r2
 8000c16:	009b      	lsls	r3, r3, #2
 8000c18:	4413      	add	r3, r2
 8000c1a:	009b      	lsls	r3, r3, #2
 8000c1c:	440b      	add	r3, r1
 8000c1e:	3308      	adds	r3, #8
 8000c20:	2200      	movs	r2, #0
 8000c22:	601a      	str	r2, [r3, #0]
	SCH_tasks_G[current_index_task-1].RunMe = 0;
 8000c24:	4b0c      	ldr	r3, [pc, #48]	; (8000c58 <SCH_Delete_Task+0xc4>)
 8000c26:	781b      	ldrb	r3, [r3, #0]
 8000c28:	1e5a      	subs	r2, r3, #1
 8000c2a:	490a      	ldr	r1, [pc, #40]	; (8000c54 <SCH_Delete_Task+0xc0>)
 8000c2c:	4613      	mov	r3, r2
 8000c2e:	009b      	lsls	r3, r3, #2
 8000c30:	4413      	add	r3, r2
 8000c32:	009b      	lsls	r3, r3, #2
 8000c34:	440b      	add	r3, r1
 8000c36:	330c      	adds	r3, #12
 8000c38:	2200      	movs	r2, #0
 8000c3a:	701a      	strb	r2, [r3, #0]

	current_index_task--;
 8000c3c:	4b06      	ldr	r3, [pc, #24]	; (8000c58 <SCH_Delete_Task+0xc4>)
 8000c3e:	781b      	ldrb	r3, [r3, #0]
 8000c40:	3b01      	subs	r3, #1
 8000c42:	b2da      	uxtb	r2, r3
 8000c44:	4b04      	ldr	r3, [pc, #16]	; (8000c58 <SCH_Delete_Task+0xc4>)
 8000c46:	701a      	strb	r2, [r3, #0]
}
 8000c48:	bf00      	nop
 8000c4a:	3714      	adds	r7, #20
 8000c4c:	46bd      	mov	sp, r7
 8000c4e:	bcb0      	pop	{r4, r5, r7}
 8000c50:	4770      	bx	lr
 8000c52:	bf00      	nop
 8000c54:	20000198 	.word	0x20000198
 8000c58:	200004b8 	.word	0x200004b8

08000c5c <SCH_Dispatch_Tasks>:

void SCH_Dispatch_Tasks(void){
 8000c5c:	b5b0      	push	{r4, r5, r7, lr}
 8000c5e:	b086      	sub	sp, #24
 8000c60:	af00      	add	r7, sp, #0
	while(SCH_tasks_G[0].pTask != NULL){
 8000c62:	e02b      	b.n	8000cbc <SCH_Dispatch_Tasks+0x60>
		if(SCH_tasks_G[0].RunMe > 0){
 8000c64:	4b1a      	ldr	r3, [pc, #104]	; (8000cd0 <SCH_Dispatch_Tasks+0x74>)
 8000c66:	7b1b      	ldrb	r3, [r3, #12]
 8000c68:	2b00      	cmp	r3, #0
 8000c6a:	d027      	beq.n	8000cbc <SCH_Dispatch_Tasks+0x60>
			SCH_tasks_G[0].RunMe--;
 8000c6c:	4b18      	ldr	r3, [pc, #96]	; (8000cd0 <SCH_Dispatch_Tasks+0x74>)
 8000c6e:	7b1b      	ldrb	r3, [r3, #12]
 8000c70:	3b01      	subs	r3, #1
 8000c72:	b2da      	uxtb	r2, r3
 8000c74:	4b16      	ldr	r3, [pc, #88]	; (8000cd0 <SCH_Dispatch_Tasks+0x74>)
 8000c76:	731a      	strb	r2, [r3, #12]
			(*SCH_tasks_G[0].pTask)();
 8000c78:	4b15      	ldr	r3, [pc, #84]	; (8000cd0 <SCH_Dispatch_Tasks+0x74>)
 8000c7a:	681b      	ldr	r3, [r3, #0]
 8000c7c:	4798      	blx	r3

			// Task #1 ready to be performed
			if (SCH_tasks_G[1].Delay == 0){
 8000c7e:	4b14      	ldr	r3, [pc, #80]	; (8000cd0 <SCH_Dispatch_Tasks+0x74>)
 8000c80:	699b      	ldr	r3, [r3, #24]
 8000c82:	2b00      	cmp	r3, #0
 8000c84:	d107      	bne.n	8000c96 <SCH_Dispatch_Tasks+0x3a>
				SCH_tasks_G[1].RunMe++;
 8000c86:	4b12      	ldr	r3, [pc, #72]	; (8000cd0 <SCH_Dispatch_Tasks+0x74>)
 8000c88:	f893 3020 	ldrb.w	r3, [r3, #32]
 8000c8c:	3301      	adds	r3, #1
 8000c8e:	b2da      	uxtb	r2, r3
 8000c90:	4b0f      	ldr	r3, [pc, #60]	; (8000cd0 <SCH_Dispatch_Tasks+0x74>)
 8000c92:	f883 2020 	strb.w	r2, [r3, #32]
			}

			// Backup before remove
			sTasks backup = SCH_tasks_G[0];
 8000c96:	4b0e      	ldr	r3, [pc, #56]	; (8000cd0 <SCH_Dispatch_Tasks+0x74>)
 8000c98:	1d3c      	adds	r4, r7, #4
 8000c9a:	461d      	mov	r5, r3
 8000c9c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000c9e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000ca0:	682b      	ldr	r3, [r5, #0]
 8000ca2:	6023      	str	r3, [r4, #0]

			// Remove task #0
			SCH_Delete_Task(0);
 8000ca4:	2000      	movs	r0, #0
 8000ca6:	f7ff ff75 	bl	8000b94 <SCH_Delete_Task>

			// Sequentially add task #0 back to the ready queue
			// -> ensure that group of tasks will be performed as a forever loop
			if (backup.Period > 0) SCH_Add_Task(backup.pTask, backup.Period, backup.Period);
 8000caa:	68fb      	ldr	r3, [r7, #12]
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	d005      	beq.n	8000cbc <SCH_Dispatch_Tasks+0x60>
 8000cb0:	687b      	ldr	r3, [r7, #4]
 8000cb2:	68f9      	ldr	r1, [r7, #12]
 8000cb4:	68fa      	ldr	r2, [r7, #12]
 8000cb6:	4618      	mov	r0, r3
 8000cb8:	f7ff fee2 	bl	8000a80 <SCH_Add_Task>
	while(SCH_tasks_G[0].pTask != NULL){
 8000cbc:	4b04      	ldr	r3, [pc, #16]	; (8000cd0 <SCH_Dispatch_Tasks+0x74>)
 8000cbe:	681b      	ldr	r3, [r3, #0]
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d1cf      	bne.n	8000c64 <SCH_Dispatch_Tasks+0x8>
		}
	}
}
 8000cc4:	bf00      	nop
 8000cc6:	bf00      	nop
 8000cc8:	3718      	adds	r7, #24
 8000cca:	46bd      	mov	sp, r7
 8000ccc:	bdb0      	pop	{r4, r5, r7, pc}
 8000cce:	bf00      	nop
 8000cd0:	20000198 	.word	0x20000198

08000cd4 <SCH_Update>:

void SCH_Update(void){
 8000cd4:	b480      	push	{r7}
 8000cd6:	af00      	add	r7, sp, #0
	if (SCH_tasks_G[0].Delay > 0) SCH_tasks_G[0].Delay--;
 8000cd8:	4b09      	ldr	r3, [pc, #36]	; (8000d00 <SCH_Update+0x2c>)
 8000cda:	685b      	ldr	r3, [r3, #4]
 8000cdc:	2b00      	cmp	r3, #0
 8000cde:	d005      	beq.n	8000cec <SCH_Update+0x18>
 8000ce0:	4b07      	ldr	r3, [pc, #28]	; (8000d00 <SCH_Update+0x2c>)
 8000ce2:	685b      	ldr	r3, [r3, #4]
 8000ce4:	3b01      	subs	r3, #1
 8000ce6:	4a06      	ldr	r2, [pc, #24]	; (8000d00 <SCH_Update+0x2c>)
 8000ce8:	6053      	str	r3, [r2, #4]
	else SCH_tasks_G[0].RunMe++;
}
 8000cea:	e005      	b.n	8000cf8 <SCH_Update+0x24>
	else SCH_tasks_G[0].RunMe++;
 8000cec:	4b04      	ldr	r3, [pc, #16]	; (8000d00 <SCH_Update+0x2c>)
 8000cee:	7b1b      	ldrb	r3, [r3, #12]
 8000cf0:	3301      	adds	r3, #1
 8000cf2:	b2da      	uxtb	r2, r3
 8000cf4:	4b02      	ldr	r3, [pc, #8]	; (8000d00 <SCH_Update+0x2c>)
 8000cf6:	731a      	strb	r2, [r3, #12]
}
 8000cf8:	bf00      	nop
 8000cfa:	46bd      	mov	sp, r7
 8000cfc:	bc80      	pop	{r7}
 8000cfe:	4770      	bx	lr
 8000d00:	20000198 	.word	0x20000198

08000d04 <setTimer1>:
int timer9_flag = 0;

int timer10_counter = 0;
int timer10_flag = 0;

void setTimer1(int duration){
 8000d04:	b480      	push	{r7}
 8000d06:	b083      	sub	sp, #12
 8000d08:	af00      	add	r7, sp, #0
 8000d0a:	6078      	str	r0, [r7, #4]
	timer1_counter = duration;
 8000d0c:	4a05      	ldr	r2, [pc, #20]	; (8000d24 <setTimer1+0x20>)
 8000d0e:	687b      	ldr	r3, [r7, #4]
 8000d10:	6013      	str	r3, [r2, #0]
	timer1_flag = 0;
 8000d12:	4b05      	ldr	r3, [pc, #20]	; (8000d28 <setTimer1+0x24>)
 8000d14:	2200      	movs	r2, #0
 8000d16:	601a      	str	r2, [r3, #0]
}
 8000d18:	bf00      	nop
 8000d1a:	370c      	adds	r7, #12
 8000d1c:	46bd      	mov	sp, r7
 8000d1e:	bc80      	pop	{r7}
 8000d20:	4770      	bx	lr
 8000d22:	bf00      	nop
 8000d24:	200004bc 	.word	0x200004bc
 8000d28:	200004c0 	.word	0x200004c0

08000d2c <setTimer2>:

void setTimer2(int duration){
 8000d2c:	b480      	push	{r7}
 8000d2e:	b083      	sub	sp, #12
 8000d30:	af00      	add	r7, sp, #0
 8000d32:	6078      	str	r0, [r7, #4]
	timer2_counter = duration;
 8000d34:	4a05      	ldr	r2, [pc, #20]	; (8000d4c <setTimer2+0x20>)
 8000d36:	687b      	ldr	r3, [r7, #4]
 8000d38:	6013      	str	r3, [r2, #0]
	timer2_flag = 0;
 8000d3a:	4b05      	ldr	r3, [pc, #20]	; (8000d50 <setTimer2+0x24>)
 8000d3c:	2200      	movs	r2, #0
 8000d3e:	601a      	str	r2, [r3, #0]
}
 8000d40:	bf00      	nop
 8000d42:	370c      	adds	r7, #12
 8000d44:	46bd      	mov	sp, r7
 8000d46:	bc80      	pop	{r7}
 8000d48:	4770      	bx	lr
 8000d4a:	bf00      	nop
 8000d4c:	200004c4 	.word	0x200004c4
 8000d50:	200004c8 	.word	0x200004c8

08000d54 <setTimer3>:

void setTimer3(int duration){
 8000d54:	b480      	push	{r7}
 8000d56:	b083      	sub	sp, #12
 8000d58:	af00      	add	r7, sp, #0
 8000d5a:	6078      	str	r0, [r7, #4]
	timer3_counter = duration;
 8000d5c:	4a05      	ldr	r2, [pc, #20]	; (8000d74 <setTimer3+0x20>)
 8000d5e:	687b      	ldr	r3, [r7, #4]
 8000d60:	6013      	str	r3, [r2, #0]
	timer3_flag = 0;
 8000d62:	4b05      	ldr	r3, [pc, #20]	; (8000d78 <setTimer3+0x24>)
 8000d64:	2200      	movs	r2, #0
 8000d66:	601a      	str	r2, [r3, #0]
}
 8000d68:	bf00      	nop
 8000d6a:	370c      	adds	r7, #12
 8000d6c:	46bd      	mov	sp, r7
 8000d6e:	bc80      	pop	{r7}
 8000d70:	4770      	bx	lr
 8000d72:	bf00      	nop
 8000d74:	200004cc 	.word	0x200004cc
 8000d78:	200004d0 	.word	0x200004d0

08000d7c <setTimer4>:

void setTimer4(int duration){
 8000d7c:	b480      	push	{r7}
 8000d7e:	b083      	sub	sp, #12
 8000d80:	af00      	add	r7, sp, #0
 8000d82:	6078      	str	r0, [r7, #4]
	timer4_counter = duration;
 8000d84:	4a05      	ldr	r2, [pc, #20]	; (8000d9c <setTimer4+0x20>)
 8000d86:	687b      	ldr	r3, [r7, #4]
 8000d88:	6013      	str	r3, [r2, #0]
	timer4_flag = 0;
 8000d8a:	4b05      	ldr	r3, [pc, #20]	; (8000da0 <setTimer4+0x24>)
 8000d8c:	2200      	movs	r2, #0
 8000d8e:	601a      	str	r2, [r3, #0]
}
 8000d90:	bf00      	nop
 8000d92:	370c      	adds	r7, #12
 8000d94:	46bd      	mov	sp, r7
 8000d96:	bc80      	pop	{r7}
 8000d98:	4770      	bx	lr
 8000d9a:	bf00      	nop
 8000d9c:	200004d4 	.word	0x200004d4
 8000da0:	200004d8 	.word	0x200004d8

08000da4 <timerRun>:
void setTimer10(int duration){
	timer10_counter = duration;
	timer10_flag = 0;
}

void timerRun(){
 8000da4:	b480      	push	{r7}
 8000da6:	af00      	add	r7, sp, #0
	if(timer1_counter > 0){
 8000da8:	4b51      	ldr	r3, [pc, #324]	; (8000ef0 <timerRun+0x14c>)
 8000daa:	681b      	ldr	r3, [r3, #0]
 8000dac:	2b00      	cmp	r3, #0
 8000dae:	dd0b      	ble.n	8000dc8 <timerRun+0x24>
		timer1_counter--;
 8000db0:	4b4f      	ldr	r3, [pc, #316]	; (8000ef0 <timerRun+0x14c>)
 8000db2:	681b      	ldr	r3, [r3, #0]
 8000db4:	3b01      	subs	r3, #1
 8000db6:	4a4e      	ldr	r2, [pc, #312]	; (8000ef0 <timerRun+0x14c>)
 8000db8:	6013      	str	r3, [r2, #0]
		if(timer1_counter == 0){
 8000dba:	4b4d      	ldr	r3, [pc, #308]	; (8000ef0 <timerRun+0x14c>)
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d102      	bne.n	8000dc8 <timerRun+0x24>
			timer1_flag = 1;
 8000dc2:	4b4c      	ldr	r3, [pc, #304]	; (8000ef4 <timerRun+0x150>)
 8000dc4:	2201      	movs	r2, #1
 8000dc6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer2_counter > 0){
 8000dc8:	4b4b      	ldr	r3, [pc, #300]	; (8000ef8 <timerRun+0x154>)
 8000dca:	681b      	ldr	r3, [r3, #0]
 8000dcc:	2b00      	cmp	r3, #0
 8000dce:	dd0b      	ble.n	8000de8 <timerRun+0x44>
		timer2_counter--;
 8000dd0:	4b49      	ldr	r3, [pc, #292]	; (8000ef8 <timerRun+0x154>)
 8000dd2:	681b      	ldr	r3, [r3, #0]
 8000dd4:	3b01      	subs	r3, #1
 8000dd6:	4a48      	ldr	r2, [pc, #288]	; (8000ef8 <timerRun+0x154>)
 8000dd8:	6013      	str	r3, [r2, #0]
		if(timer2_counter == 0){
 8000dda:	4b47      	ldr	r3, [pc, #284]	; (8000ef8 <timerRun+0x154>)
 8000ddc:	681b      	ldr	r3, [r3, #0]
 8000dde:	2b00      	cmp	r3, #0
 8000de0:	d102      	bne.n	8000de8 <timerRun+0x44>
			timer2_flag = 1;
 8000de2:	4b46      	ldr	r3, [pc, #280]	; (8000efc <timerRun+0x158>)
 8000de4:	2201      	movs	r2, #1
 8000de6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer3_counter > 0){
 8000de8:	4b45      	ldr	r3, [pc, #276]	; (8000f00 <timerRun+0x15c>)
 8000dea:	681b      	ldr	r3, [r3, #0]
 8000dec:	2b00      	cmp	r3, #0
 8000dee:	dd0b      	ble.n	8000e08 <timerRun+0x64>
		timer3_counter--;
 8000df0:	4b43      	ldr	r3, [pc, #268]	; (8000f00 <timerRun+0x15c>)
 8000df2:	681b      	ldr	r3, [r3, #0]
 8000df4:	3b01      	subs	r3, #1
 8000df6:	4a42      	ldr	r2, [pc, #264]	; (8000f00 <timerRun+0x15c>)
 8000df8:	6013      	str	r3, [r2, #0]
		if(timer3_counter == 0){
 8000dfa:	4b41      	ldr	r3, [pc, #260]	; (8000f00 <timerRun+0x15c>)
 8000dfc:	681b      	ldr	r3, [r3, #0]
 8000dfe:	2b00      	cmp	r3, #0
 8000e00:	d102      	bne.n	8000e08 <timerRun+0x64>
			timer3_flag = 1;
 8000e02:	4b40      	ldr	r3, [pc, #256]	; (8000f04 <timerRun+0x160>)
 8000e04:	2201      	movs	r2, #1
 8000e06:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer4_counter > 0){
 8000e08:	4b3f      	ldr	r3, [pc, #252]	; (8000f08 <timerRun+0x164>)
 8000e0a:	681b      	ldr	r3, [r3, #0]
 8000e0c:	2b00      	cmp	r3, #0
 8000e0e:	dd0b      	ble.n	8000e28 <timerRun+0x84>
		timer4_counter--;
 8000e10:	4b3d      	ldr	r3, [pc, #244]	; (8000f08 <timerRun+0x164>)
 8000e12:	681b      	ldr	r3, [r3, #0]
 8000e14:	3b01      	subs	r3, #1
 8000e16:	4a3c      	ldr	r2, [pc, #240]	; (8000f08 <timerRun+0x164>)
 8000e18:	6013      	str	r3, [r2, #0]
		if(timer4_counter == 0){
 8000e1a:	4b3b      	ldr	r3, [pc, #236]	; (8000f08 <timerRun+0x164>)
 8000e1c:	681b      	ldr	r3, [r3, #0]
 8000e1e:	2b00      	cmp	r3, #0
 8000e20:	d102      	bne.n	8000e28 <timerRun+0x84>
			timer4_flag = 1;
 8000e22:	4b3a      	ldr	r3, [pc, #232]	; (8000f0c <timerRun+0x168>)
 8000e24:	2201      	movs	r2, #1
 8000e26:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer5_counter > 0){
 8000e28:	4b39      	ldr	r3, [pc, #228]	; (8000f10 <timerRun+0x16c>)
 8000e2a:	681b      	ldr	r3, [r3, #0]
 8000e2c:	2b00      	cmp	r3, #0
 8000e2e:	dd0b      	ble.n	8000e48 <timerRun+0xa4>
		timer5_counter--;
 8000e30:	4b37      	ldr	r3, [pc, #220]	; (8000f10 <timerRun+0x16c>)
 8000e32:	681b      	ldr	r3, [r3, #0]
 8000e34:	3b01      	subs	r3, #1
 8000e36:	4a36      	ldr	r2, [pc, #216]	; (8000f10 <timerRun+0x16c>)
 8000e38:	6013      	str	r3, [r2, #0]
		if(timer5_counter == 0){
 8000e3a:	4b35      	ldr	r3, [pc, #212]	; (8000f10 <timerRun+0x16c>)
 8000e3c:	681b      	ldr	r3, [r3, #0]
 8000e3e:	2b00      	cmp	r3, #0
 8000e40:	d102      	bne.n	8000e48 <timerRun+0xa4>
			timer5_flag = 1;
 8000e42:	4b34      	ldr	r3, [pc, #208]	; (8000f14 <timerRun+0x170>)
 8000e44:	2201      	movs	r2, #1
 8000e46:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer6_counter > 0){
 8000e48:	4b33      	ldr	r3, [pc, #204]	; (8000f18 <timerRun+0x174>)
 8000e4a:	681b      	ldr	r3, [r3, #0]
 8000e4c:	2b00      	cmp	r3, #0
 8000e4e:	dd0b      	ble.n	8000e68 <timerRun+0xc4>
		timer6_counter--;
 8000e50:	4b31      	ldr	r3, [pc, #196]	; (8000f18 <timerRun+0x174>)
 8000e52:	681b      	ldr	r3, [r3, #0]
 8000e54:	3b01      	subs	r3, #1
 8000e56:	4a30      	ldr	r2, [pc, #192]	; (8000f18 <timerRun+0x174>)
 8000e58:	6013      	str	r3, [r2, #0]
		if(timer6_counter == 0){
 8000e5a:	4b2f      	ldr	r3, [pc, #188]	; (8000f18 <timerRun+0x174>)
 8000e5c:	681b      	ldr	r3, [r3, #0]
 8000e5e:	2b00      	cmp	r3, #0
 8000e60:	d102      	bne.n	8000e68 <timerRun+0xc4>
			timer6_flag = 1;
 8000e62:	4b2e      	ldr	r3, [pc, #184]	; (8000f1c <timerRun+0x178>)
 8000e64:	2201      	movs	r2, #1
 8000e66:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer7_counter > 0){
 8000e68:	4b2d      	ldr	r3, [pc, #180]	; (8000f20 <timerRun+0x17c>)
 8000e6a:	681b      	ldr	r3, [r3, #0]
 8000e6c:	2b00      	cmp	r3, #0
 8000e6e:	dd0b      	ble.n	8000e88 <timerRun+0xe4>
		timer7_counter--;
 8000e70:	4b2b      	ldr	r3, [pc, #172]	; (8000f20 <timerRun+0x17c>)
 8000e72:	681b      	ldr	r3, [r3, #0]
 8000e74:	3b01      	subs	r3, #1
 8000e76:	4a2a      	ldr	r2, [pc, #168]	; (8000f20 <timerRun+0x17c>)
 8000e78:	6013      	str	r3, [r2, #0]
		if(timer7_counter == 0){
 8000e7a:	4b29      	ldr	r3, [pc, #164]	; (8000f20 <timerRun+0x17c>)
 8000e7c:	681b      	ldr	r3, [r3, #0]
 8000e7e:	2b00      	cmp	r3, #0
 8000e80:	d102      	bne.n	8000e88 <timerRun+0xe4>
			timer7_flag = 1;
 8000e82:	4b28      	ldr	r3, [pc, #160]	; (8000f24 <timerRun+0x180>)
 8000e84:	2201      	movs	r2, #1
 8000e86:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer8_counter > 0){
 8000e88:	4b27      	ldr	r3, [pc, #156]	; (8000f28 <timerRun+0x184>)
 8000e8a:	681b      	ldr	r3, [r3, #0]
 8000e8c:	2b00      	cmp	r3, #0
 8000e8e:	dd0b      	ble.n	8000ea8 <timerRun+0x104>
		timer8_counter--;
 8000e90:	4b25      	ldr	r3, [pc, #148]	; (8000f28 <timerRun+0x184>)
 8000e92:	681b      	ldr	r3, [r3, #0]
 8000e94:	3b01      	subs	r3, #1
 8000e96:	4a24      	ldr	r2, [pc, #144]	; (8000f28 <timerRun+0x184>)
 8000e98:	6013      	str	r3, [r2, #0]
		if(timer8_counter == 0){
 8000e9a:	4b23      	ldr	r3, [pc, #140]	; (8000f28 <timerRun+0x184>)
 8000e9c:	681b      	ldr	r3, [r3, #0]
 8000e9e:	2b00      	cmp	r3, #0
 8000ea0:	d102      	bne.n	8000ea8 <timerRun+0x104>
			timer8_flag = 1;
 8000ea2:	4b22      	ldr	r3, [pc, #136]	; (8000f2c <timerRun+0x188>)
 8000ea4:	2201      	movs	r2, #1
 8000ea6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer9_counter > 0){
 8000ea8:	4b21      	ldr	r3, [pc, #132]	; (8000f30 <timerRun+0x18c>)
 8000eaa:	681b      	ldr	r3, [r3, #0]
 8000eac:	2b00      	cmp	r3, #0
 8000eae:	dd0b      	ble.n	8000ec8 <timerRun+0x124>
		timer9_counter--;
 8000eb0:	4b1f      	ldr	r3, [pc, #124]	; (8000f30 <timerRun+0x18c>)
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	3b01      	subs	r3, #1
 8000eb6:	4a1e      	ldr	r2, [pc, #120]	; (8000f30 <timerRun+0x18c>)
 8000eb8:	6013      	str	r3, [r2, #0]
		if(timer9_counter == 0){
 8000eba:	4b1d      	ldr	r3, [pc, #116]	; (8000f30 <timerRun+0x18c>)
 8000ebc:	681b      	ldr	r3, [r3, #0]
 8000ebe:	2b00      	cmp	r3, #0
 8000ec0:	d102      	bne.n	8000ec8 <timerRun+0x124>
			timer9_flag = 1;
 8000ec2:	4b1c      	ldr	r3, [pc, #112]	; (8000f34 <timerRun+0x190>)
 8000ec4:	2201      	movs	r2, #1
 8000ec6:	601a      	str	r2, [r3, #0]
		}
	}

	if(timer10_counter > 0){
 8000ec8:	4b1b      	ldr	r3, [pc, #108]	; (8000f38 <timerRun+0x194>)
 8000eca:	681b      	ldr	r3, [r3, #0]
 8000ecc:	2b00      	cmp	r3, #0
 8000ece:	dd0b      	ble.n	8000ee8 <timerRun+0x144>
		timer10_counter--;
 8000ed0:	4b19      	ldr	r3, [pc, #100]	; (8000f38 <timerRun+0x194>)
 8000ed2:	681b      	ldr	r3, [r3, #0]
 8000ed4:	3b01      	subs	r3, #1
 8000ed6:	4a18      	ldr	r2, [pc, #96]	; (8000f38 <timerRun+0x194>)
 8000ed8:	6013      	str	r3, [r2, #0]
		if(timer10_counter == 0){
 8000eda:	4b17      	ldr	r3, [pc, #92]	; (8000f38 <timerRun+0x194>)
 8000edc:	681b      	ldr	r3, [r3, #0]
 8000ede:	2b00      	cmp	r3, #0
 8000ee0:	d102      	bne.n	8000ee8 <timerRun+0x144>
			timer10_flag = 1;
 8000ee2:	4b16      	ldr	r3, [pc, #88]	; (8000f3c <timerRun+0x198>)
 8000ee4:	2201      	movs	r2, #1
 8000ee6:	601a      	str	r2, [r3, #0]
		}
	}
}
 8000ee8:	bf00      	nop
 8000eea:	46bd      	mov	sp, r7
 8000eec:	bc80      	pop	{r7}
 8000eee:	4770      	bx	lr
 8000ef0:	200004bc 	.word	0x200004bc
 8000ef4:	200004c0 	.word	0x200004c0
 8000ef8:	200004c4 	.word	0x200004c4
 8000efc:	200004c8 	.word	0x200004c8
 8000f00:	200004cc 	.word	0x200004cc
 8000f04:	200004d0 	.word	0x200004d0
 8000f08:	200004d4 	.word	0x200004d4
 8000f0c:	200004d8 	.word	0x200004d8
 8000f10:	200004dc 	.word	0x200004dc
 8000f14:	200004e0 	.word	0x200004e0
 8000f18:	200004e4 	.word	0x200004e4
 8000f1c:	200004e8 	.word	0x200004e8
 8000f20:	200004ec 	.word	0x200004ec
 8000f24:	200004f0 	.word	0x200004f0
 8000f28:	200004f4 	.word	0x200004f4
 8000f2c:	200004f8 	.word	0x200004f8
 8000f30:	200004fc 	.word	0x200004fc
 8000f34:	20000500 	.word	0x20000500
 8000f38:	20000504 	.word	0x20000504
 8000f3c:	20000508 	.word	0x20000508

08000f40 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000f40:	b480      	push	{r7}
 8000f42:	b085      	sub	sp, #20
 8000f44:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000f46:	4b15      	ldr	r3, [pc, #84]	; (8000f9c <HAL_MspInit+0x5c>)
 8000f48:	699b      	ldr	r3, [r3, #24]
 8000f4a:	4a14      	ldr	r2, [pc, #80]	; (8000f9c <HAL_MspInit+0x5c>)
 8000f4c:	f043 0301 	orr.w	r3, r3, #1
 8000f50:	6193      	str	r3, [r2, #24]
 8000f52:	4b12      	ldr	r3, [pc, #72]	; (8000f9c <HAL_MspInit+0x5c>)
 8000f54:	699b      	ldr	r3, [r3, #24]
 8000f56:	f003 0301 	and.w	r3, r3, #1
 8000f5a:	60bb      	str	r3, [r7, #8]
 8000f5c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000f5e:	4b0f      	ldr	r3, [pc, #60]	; (8000f9c <HAL_MspInit+0x5c>)
 8000f60:	69db      	ldr	r3, [r3, #28]
 8000f62:	4a0e      	ldr	r2, [pc, #56]	; (8000f9c <HAL_MspInit+0x5c>)
 8000f64:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000f68:	61d3      	str	r3, [r2, #28]
 8000f6a:	4b0c      	ldr	r3, [pc, #48]	; (8000f9c <HAL_MspInit+0x5c>)
 8000f6c:	69db      	ldr	r3, [r3, #28]
 8000f6e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000f72:	607b      	str	r3, [r7, #4]
 8000f74:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000f76:	4b0a      	ldr	r3, [pc, #40]	; (8000fa0 <HAL_MspInit+0x60>)
 8000f78:	685b      	ldr	r3, [r3, #4]
 8000f7a:	60fb      	str	r3, [r7, #12]
 8000f7c:	68fb      	ldr	r3, [r7, #12]
 8000f7e:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000f82:	60fb      	str	r3, [r7, #12]
 8000f84:	68fb      	ldr	r3, [r7, #12]
 8000f86:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000f8a:	60fb      	str	r3, [r7, #12]
 8000f8c:	4a04      	ldr	r2, [pc, #16]	; (8000fa0 <HAL_MspInit+0x60>)
 8000f8e:	68fb      	ldr	r3, [r7, #12]
 8000f90:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000f92:	bf00      	nop
 8000f94:	3714      	adds	r7, #20
 8000f96:	46bd      	mov	sp, r7
 8000f98:	bc80      	pop	{r7}
 8000f9a:	4770      	bx	lr
 8000f9c:	40021000 	.word	0x40021000
 8000fa0:	40010000 	.word	0x40010000

08000fa4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8000fa4:	b580      	push	{r7, lr}
 8000fa6:	b08a      	sub	sp, #40	; 0x28
 8000fa8:	af00      	add	r7, sp, #0
 8000faa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000fac:	f107 0314 	add.w	r3, r7, #20
 8000fb0:	2200      	movs	r2, #0
 8000fb2:	601a      	str	r2, [r3, #0]
 8000fb4:	605a      	str	r2, [r3, #4]
 8000fb6:	609a      	str	r2, [r3, #8]
 8000fb8:	60da      	str	r2, [r3, #12]
  if(hi2c->Instance==I2C1)
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	681b      	ldr	r3, [r3, #0]
 8000fbe:	4a1d      	ldr	r2, [pc, #116]	; (8001034 <HAL_I2C_MspInit+0x90>)
 8000fc0:	4293      	cmp	r3, r2
 8000fc2:	d132      	bne.n	800102a <HAL_I2C_MspInit+0x86>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000fc4:	4b1c      	ldr	r3, [pc, #112]	; (8001038 <HAL_I2C_MspInit+0x94>)
 8000fc6:	699b      	ldr	r3, [r3, #24]
 8000fc8:	4a1b      	ldr	r2, [pc, #108]	; (8001038 <HAL_I2C_MspInit+0x94>)
 8000fca:	f043 0308 	orr.w	r3, r3, #8
 8000fce:	6193      	str	r3, [r2, #24]
 8000fd0:	4b19      	ldr	r3, [pc, #100]	; (8001038 <HAL_I2C_MspInit+0x94>)
 8000fd2:	699b      	ldr	r3, [r3, #24]
 8000fd4:	f003 0308 	and.w	r3, r3, #8
 8000fd8:	613b      	str	r3, [r7, #16]
 8000fda:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8000fdc:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000fe0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000fe2:	2312      	movs	r3, #18
 8000fe4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000fe6:	2303      	movs	r3, #3
 8000fe8:	623b      	str	r3, [r7, #32]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000fea:	f107 0314 	add.w	r3, r7, #20
 8000fee:	4619      	mov	r1, r3
 8000ff0:	4812      	ldr	r0, [pc, #72]	; (800103c <HAL_I2C_MspInit+0x98>)
 8000ff2:	f000 fcdb 	bl	80019ac <HAL_GPIO_Init>

    __HAL_AFIO_REMAP_I2C1_ENABLE();
 8000ff6:	4b12      	ldr	r3, [pc, #72]	; (8001040 <HAL_I2C_MspInit+0x9c>)
 8000ff8:	685b      	ldr	r3, [r3, #4]
 8000ffa:	627b      	str	r3, [r7, #36]	; 0x24
 8000ffc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000ffe:	f043 63e0 	orr.w	r3, r3, #117440512	; 0x7000000
 8001002:	627b      	str	r3, [r7, #36]	; 0x24
 8001004:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001006:	f043 0302 	orr.w	r3, r3, #2
 800100a:	627b      	str	r3, [r7, #36]	; 0x24
 800100c:	4a0c      	ldr	r2, [pc, #48]	; (8001040 <HAL_I2C_MspInit+0x9c>)
 800100e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001010:	6053      	str	r3, [r2, #4]

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001012:	4b09      	ldr	r3, [pc, #36]	; (8001038 <HAL_I2C_MspInit+0x94>)
 8001014:	69db      	ldr	r3, [r3, #28]
 8001016:	4a08      	ldr	r2, [pc, #32]	; (8001038 <HAL_I2C_MspInit+0x94>)
 8001018:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800101c:	61d3      	str	r3, [r2, #28]
 800101e:	4b06      	ldr	r3, [pc, #24]	; (8001038 <HAL_I2C_MspInit+0x94>)
 8001020:	69db      	ldr	r3, [r3, #28]
 8001022:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001026:	60fb      	str	r3, [r7, #12]
 8001028:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 800102a:	bf00      	nop
 800102c:	3728      	adds	r7, #40	; 0x28
 800102e:	46bd      	mov	sp, r7
 8001030:	bd80      	pop	{r7, pc}
 8001032:	bf00      	nop
 8001034:	40005400 	.word	0x40005400
 8001038:	40021000 	.word	0x40021000
 800103c:	40010c00 	.word	0x40010c00
 8001040:	40010000 	.word	0x40010000

08001044 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001044:	b580      	push	{r7, lr}
 8001046:	b084      	sub	sp, #16
 8001048:	af00      	add	r7, sp, #0
 800104a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 800104c:	687b      	ldr	r3, [r7, #4]
 800104e:	681b      	ldr	r3, [r3, #0]
 8001050:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001054:	d113      	bne.n	800107e <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001056:	4b0c      	ldr	r3, [pc, #48]	; (8001088 <HAL_TIM_Base_MspInit+0x44>)
 8001058:	69db      	ldr	r3, [r3, #28]
 800105a:	4a0b      	ldr	r2, [pc, #44]	; (8001088 <HAL_TIM_Base_MspInit+0x44>)
 800105c:	f043 0301 	orr.w	r3, r3, #1
 8001060:	61d3      	str	r3, [r2, #28]
 8001062:	4b09      	ldr	r3, [pc, #36]	; (8001088 <HAL_TIM_Base_MspInit+0x44>)
 8001064:	69db      	ldr	r3, [r3, #28]
 8001066:	f003 0301 	and.w	r3, r3, #1
 800106a:	60fb      	str	r3, [r7, #12]
 800106c:	68fb      	ldr	r3, [r7, #12]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800106e:	2200      	movs	r2, #0
 8001070:	2100      	movs	r1, #0
 8001072:	201c      	movs	r0, #28
 8001074:	f000 fbb3 	bl	80017de <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001078:	201c      	movs	r0, #28
 800107a:	f000 fbcc 	bl	8001816 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 800107e:	bf00      	nop
 8001080:	3710      	adds	r7, #16
 8001082:	46bd      	mov	sp, r7
 8001084:	bd80      	pop	{r7, pc}
 8001086:	bf00      	nop
 8001088:	40021000 	.word	0x40021000

0800108c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 800108c:	b580      	push	{r7, lr}
 800108e:	b088      	sub	sp, #32
 8001090:	af00      	add	r7, sp, #0
 8001092:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001094:	f107 0310 	add.w	r3, r7, #16
 8001098:	2200      	movs	r2, #0
 800109a:	601a      	str	r2, [r3, #0]
 800109c:	605a      	str	r2, [r3, #4]
 800109e:	609a      	str	r2, [r3, #8]
 80010a0:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART2)
 80010a2:	687b      	ldr	r3, [r7, #4]
 80010a4:	681b      	ldr	r3, [r3, #0]
 80010a6:	4a1f      	ldr	r2, [pc, #124]	; (8001124 <HAL_UART_MspInit+0x98>)
 80010a8:	4293      	cmp	r3, r2
 80010aa:	d137      	bne.n	800111c <HAL_UART_MspInit+0x90>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80010ac:	4b1e      	ldr	r3, [pc, #120]	; (8001128 <HAL_UART_MspInit+0x9c>)
 80010ae:	69db      	ldr	r3, [r3, #28]
 80010b0:	4a1d      	ldr	r2, [pc, #116]	; (8001128 <HAL_UART_MspInit+0x9c>)
 80010b2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80010b6:	61d3      	str	r3, [r2, #28]
 80010b8:	4b1b      	ldr	r3, [pc, #108]	; (8001128 <HAL_UART_MspInit+0x9c>)
 80010ba:	69db      	ldr	r3, [r3, #28]
 80010bc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80010c0:	60fb      	str	r3, [r7, #12]
 80010c2:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80010c4:	4b18      	ldr	r3, [pc, #96]	; (8001128 <HAL_UART_MspInit+0x9c>)
 80010c6:	699b      	ldr	r3, [r3, #24]
 80010c8:	4a17      	ldr	r2, [pc, #92]	; (8001128 <HAL_UART_MspInit+0x9c>)
 80010ca:	f043 0304 	orr.w	r3, r3, #4
 80010ce:	6193      	str	r3, [r2, #24]
 80010d0:	4b15      	ldr	r3, [pc, #84]	; (8001128 <HAL_UART_MspInit+0x9c>)
 80010d2:	699b      	ldr	r3, [r3, #24]
 80010d4:	f003 0304 	and.w	r3, r3, #4
 80010d8:	60bb      	str	r3, [r7, #8]
 80010da:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80010dc:	2304      	movs	r3, #4
 80010de:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010e0:	2302      	movs	r3, #2
 80010e2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80010e4:	2303      	movs	r3, #3
 80010e6:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010e8:	f107 0310 	add.w	r3, r7, #16
 80010ec:	4619      	mov	r1, r3
 80010ee:	480f      	ldr	r0, [pc, #60]	; (800112c <HAL_UART_MspInit+0xa0>)
 80010f0:	f000 fc5c 	bl	80019ac <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80010f4:	2308      	movs	r3, #8
 80010f6:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80010f8:	2300      	movs	r3, #0
 80010fa:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010fc:	2300      	movs	r3, #0
 80010fe:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001100:	f107 0310 	add.w	r3, r7, #16
 8001104:	4619      	mov	r1, r3
 8001106:	4809      	ldr	r0, [pc, #36]	; (800112c <HAL_UART_MspInit+0xa0>)
 8001108:	f000 fc50 	bl	80019ac <HAL_GPIO_Init>

    /* USART2 interrupt Init */
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 800110c:	2200      	movs	r2, #0
 800110e:	2100      	movs	r1, #0
 8001110:	2026      	movs	r0, #38	; 0x26
 8001112:	f000 fb64 	bl	80017de <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001116:	2026      	movs	r0, #38	; 0x26
 8001118:	f000 fb7d 	bl	8001816 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800111c:	bf00      	nop
 800111e:	3720      	adds	r7, #32
 8001120:	46bd      	mov	sp, r7
 8001122:	bd80      	pop	{r7, pc}
 8001124:	40004400 	.word	0x40004400
 8001128:	40021000 	.word	0x40021000
 800112c:	40010800 	.word	0x40010800

08001130 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001130:	b480      	push	{r7}
 8001132:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001134:	e7fe      	b.n	8001134 <NMI_Handler+0x4>

08001136 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001136:	b480      	push	{r7}
 8001138:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800113a:	e7fe      	b.n	800113a <HardFault_Handler+0x4>

0800113c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800113c:	b480      	push	{r7}
 800113e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001140:	e7fe      	b.n	8001140 <MemManage_Handler+0x4>

08001142 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001142:	b480      	push	{r7}
 8001144:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001146:	e7fe      	b.n	8001146 <BusFault_Handler+0x4>

08001148 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001148:	b480      	push	{r7}
 800114a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800114c:	e7fe      	b.n	800114c <UsageFault_Handler+0x4>

0800114e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800114e:	b480      	push	{r7}
 8001150:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001152:	bf00      	nop
 8001154:	46bd      	mov	sp, r7
 8001156:	bc80      	pop	{r7}
 8001158:	4770      	bx	lr

0800115a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800115a:	b480      	push	{r7}
 800115c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800115e:	bf00      	nop
 8001160:	46bd      	mov	sp, r7
 8001162:	bc80      	pop	{r7}
 8001164:	4770      	bx	lr

08001166 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001166:	b480      	push	{r7}
 8001168:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800116a:	bf00      	nop
 800116c:	46bd      	mov	sp, r7
 800116e:	bc80      	pop	{r7}
 8001170:	4770      	bx	lr

08001172 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001172:	b580      	push	{r7, lr}
 8001174:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001176:	f000 fa1b 	bl	80015b0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800117a:	bf00      	nop
 800117c:	bd80      	pop	{r7, pc}
	...

08001180 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001180:	b580      	push	{r7, lr}
 8001182:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001184:	4802      	ldr	r0, [pc, #8]	; (8001190 <TIM2_IRQHandler+0x10>)
 8001186:	f002 fb65 	bl	8003854 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800118a:	bf00      	nop
 800118c:	bd80      	pop	{r7, pc}
 800118e:	bf00      	nop
 8001190:	2000010c 	.word	0x2000010c

08001194 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8001194:	b580      	push	{r7, lr}
 8001196:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8001198:	4802      	ldr	r0, [pc, #8]	; (80011a4 <USART2_IRQHandler+0x10>)
 800119a:	f002 ffc3 	bl	8004124 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 800119e:	bf00      	nop
 80011a0:	bd80      	pop	{r7, pc}
 80011a2:	bf00      	nop
 80011a4:	20000154 	.word	0x20000154

080011a8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80011a8:	b580      	push	{r7, lr}
 80011aa:	b086      	sub	sp, #24
 80011ac:	af00      	add	r7, sp, #0
 80011ae:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80011b0:	4a14      	ldr	r2, [pc, #80]	; (8001204 <_sbrk+0x5c>)
 80011b2:	4b15      	ldr	r3, [pc, #84]	; (8001208 <_sbrk+0x60>)
 80011b4:	1ad3      	subs	r3, r2, r3
 80011b6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80011b8:	697b      	ldr	r3, [r7, #20]
 80011ba:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80011bc:	4b13      	ldr	r3, [pc, #76]	; (800120c <_sbrk+0x64>)
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	2b00      	cmp	r3, #0
 80011c2:	d102      	bne.n	80011ca <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80011c4:	4b11      	ldr	r3, [pc, #68]	; (800120c <_sbrk+0x64>)
 80011c6:	4a12      	ldr	r2, [pc, #72]	; (8001210 <_sbrk+0x68>)
 80011c8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80011ca:	4b10      	ldr	r3, [pc, #64]	; (800120c <_sbrk+0x64>)
 80011cc:	681a      	ldr	r2, [r3, #0]
 80011ce:	687b      	ldr	r3, [r7, #4]
 80011d0:	4413      	add	r3, r2
 80011d2:	693a      	ldr	r2, [r7, #16]
 80011d4:	429a      	cmp	r2, r3
 80011d6:	d207      	bcs.n	80011e8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80011d8:	f003 fbcc 	bl	8004974 <__errno>
 80011dc:	4603      	mov	r3, r0
 80011de:	220c      	movs	r2, #12
 80011e0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80011e2:	f04f 33ff 	mov.w	r3, #4294967295
 80011e6:	e009      	b.n	80011fc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80011e8:	4b08      	ldr	r3, [pc, #32]	; (800120c <_sbrk+0x64>)
 80011ea:	681b      	ldr	r3, [r3, #0]
 80011ec:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80011ee:	4b07      	ldr	r3, [pc, #28]	; (800120c <_sbrk+0x64>)
 80011f0:	681a      	ldr	r2, [r3, #0]
 80011f2:	687b      	ldr	r3, [r7, #4]
 80011f4:	4413      	add	r3, r2
 80011f6:	4a05      	ldr	r2, [pc, #20]	; (800120c <_sbrk+0x64>)
 80011f8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80011fa:	68fb      	ldr	r3, [r7, #12]
}
 80011fc:	4618      	mov	r0, r3
 80011fe:	3718      	adds	r7, #24
 8001200:	46bd      	mov	sp, r7
 8001202:	bd80      	pop	{r7, pc}
 8001204:	20005000 	.word	0x20005000
 8001208:	00000400 	.word	0x00000400
 800120c:	2000050c 	.word	0x2000050c
 8001210:	20000568 	.word	0x20000568

08001214 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001214:	b480      	push	{r7}
 8001216:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001218:	bf00      	nop
 800121a:	46bd      	mov	sp, r7
 800121c:	bc80      	pop	{r7}
 800121e:	4770      	bx	lr

08001220 <isCmdEqualToRST>:
uint8_t cmdParserStatus = INIT_UART;
uint8_t cmd_data[MAX_CMD_SIZE];
uint8_t cmd_index = 0;
uint8_t cmd_flag = INIT_UART;

int isCmdEqualToRST(uint8_t str[]){
 8001220:	b480      	push	{r7}
 8001222:	b085      	sub	sp, #20
 8001224:	af00      	add	r7, sp, #0
 8001226:	6078      	str	r0, [r7, #4]
	int flag = 0;
 8001228:	2300      	movs	r3, #0
 800122a:	60fb      	str	r3, [r7, #12]
	if (str[0] == 'R') flag = 1;
 800122c:	687b      	ldr	r3, [r7, #4]
 800122e:	781b      	ldrb	r3, [r3, #0]
 8001230:	2b52      	cmp	r3, #82	; 0x52
 8001232:	d102      	bne.n	800123a <isCmdEqualToRST+0x1a>
 8001234:	2301      	movs	r3, #1
 8001236:	60fb      	str	r3, [r7, #12]
 8001238:	e001      	b.n	800123e <isCmdEqualToRST+0x1e>
	else flag = 0;
 800123a:	2300      	movs	r3, #0
 800123c:	60fb      	str	r3, [r7, #12]
	return flag;
 800123e:	68fb      	ldr	r3, [r7, #12]
}
 8001240:	4618      	mov	r0, r3
 8001242:	3714      	adds	r7, #20
 8001244:	46bd      	mov	sp, r7
 8001246:	bc80      	pop	{r7}
 8001248:	4770      	bx	lr

0800124a <isCmdEqualToCAP>:

int isCmdEqualToCAP(uint8_t str[]){
 800124a:	b480      	push	{r7}
 800124c:	b085      	sub	sp, #20
 800124e:	af00      	add	r7, sp, #0
 8001250:	6078      	str	r0, [r7, #4]
	int flag = 0;
 8001252:	2300      	movs	r3, #0
 8001254:	60fb      	str	r3, [r7, #12]
	if (str[0] == 'C') flag = 1;
 8001256:	687b      	ldr	r3, [r7, #4]
 8001258:	781b      	ldrb	r3, [r3, #0]
 800125a:	2b43      	cmp	r3, #67	; 0x43
 800125c:	d102      	bne.n	8001264 <isCmdEqualToCAP+0x1a>
 800125e:	2301      	movs	r3, #1
 8001260:	60fb      	str	r3, [r7, #12]
 8001262:	e001      	b.n	8001268 <isCmdEqualToCAP+0x1e>
	else flag = 0;
 8001264:	2300      	movs	r3, #0
 8001266:	60fb      	str	r3, [r7, #12]
	return flag;
 8001268:	68fb      	ldr	r3, [r7, #12]
}
 800126a:	4618      	mov	r0, r3
 800126c:	3714      	adds	r7, #20
 800126e:	46bd      	mov	sp, r7
 8001270:	bc80      	pop	{r7}
 8001272:	4770      	bx	lr

08001274 <cmd_parser_fsm>:

void cmd_parser_fsm(){
 8001274:	b580      	push	{r7, lr}
 8001276:	af00      	add	r7, sp, #0
	switch(cmdParserStatus){
 8001278:	4b2d      	ldr	r3, [pc, #180]	; (8001330 <cmd_parser_fsm+0xbc>)
 800127a:	781b      	ldrb	r3, [r3, #0]
 800127c:	2b02      	cmp	r3, #2
 800127e:	d037      	beq.n	80012f0 <cmd_parser_fsm+0x7c>
 8001280:	2b02      	cmp	r3, #2
 8001282:	dc4c      	bgt.n	800131e <cmd_parser_fsm+0xaa>
 8001284:	2b00      	cmp	r3, #0
 8001286:	d002      	beq.n	800128e <cmd_parser_fsm+0x1a>
 8001288:	2b01      	cmp	r3, #1
 800128a:	d008      	beq.n	800129e <cmd_parser_fsm+0x2a>
			else if (isCmdEqualToCAP(cmd_data)==1) cmd_flag = isCAP;
			else return;
			cmdParserStatus = INIT_UART;
			break;
		default:
			break;
 800128c:	e047      	b.n	800131e <cmd_parser_fsm+0xaa>
			if (buffer_byte == '!') cmdParserStatus = READING;
 800128e:	4b29      	ldr	r3, [pc, #164]	; (8001334 <cmd_parser_fsm+0xc0>)
 8001290:	781b      	ldrb	r3, [r3, #0]
 8001292:	2b21      	cmp	r3, #33	; 0x21
 8001294:	d145      	bne.n	8001322 <cmd_parser_fsm+0xae>
 8001296:	4b26      	ldr	r3, [pc, #152]	; (8001330 <cmd_parser_fsm+0xbc>)
 8001298:	2201      	movs	r2, #1
 800129a:	701a      	strb	r2, [r3, #0]
			break;
 800129c:	e041      	b.n	8001322 <cmd_parser_fsm+0xae>
			if (buffer_byte != '!' && buffer_byte != '#'){
 800129e:	4b25      	ldr	r3, [pc, #148]	; (8001334 <cmd_parser_fsm+0xc0>)
 80012a0:	781b      	ldrb	r3, [r3, #0]
 80012a2:	2b21      	cmp	r3, #33	; 0x21
 80012a4:	d011      	beq.n	80012ca <cmd_parser_fsm+0x56>
 80012a6:	4b23      	ldr	r3, [pc, #140]	; (8001334 <cmd_parser_fsm+0xc0>)
 80012a8:	781b      	ldrb	r3, [r3, #0]
 80012aa:	2b23      	cmp	r3, #35	; 0x23
 80012ac:	d00d      	beq.n	80012ca <cmd_parser_fsm+0x56>
				cmd_data[cmd_index] = buffer_byte;
 80012ae:	4b22      	ldr	r3, [pc, #136]	; (8001338 <cmd_parser_fsm+0xc4>)
 80012b0:	781b      	ldrb	r3, [r3, #0]
 80012b2:	461a      	mov	r2, r3
 80012b4:	4b1f      	ldr	r3, [pc, #124]	; (8001334 <cmd_parser_fsm+0xc0>)
 80012b6:	7819      	ldrb	r1, [r3, #0]
 80012b8:	4b20      	ldr	r3, [pc, #128]	; (800133c <cmd_parser_fsm+0xc8>)
 80012ba:	5499      	strb	r1, [r3, r2]
				cmd_index++;
 80012bc:	4b1e      	ldr	r3, [pc, #120]	; (8001338 <cmd_parser_fsm+0xc4>)
 80012be:	781b      	ldrb	r3, [r3, #0]
 80012c0:	3301      	adds	r3, #1
 80012c2:	b2da      	uxtb	r2, r3
 80012c4:	4b1c      	ldr	r3, [pc, #112]	; (8001338 <cmd_parser_fsm+0xc4>)
 80012c6:	701a      	strb	r2, [r3, #0]
			break;
 80012c8:	e02d      	b.n	8001326 <cmd_parser_fsm+0xb2>
			else if (buffer_byte == '!'){
 80012ca:	4b1a      	ldr	r3, [pc, #104]	; (8001334 <cmd_parser_fsm+0xc0>)
 80012cc:	781b      	ldrb	r3, [r3, #0]
 80012ce:	2b21      	cmp	r3, #33	; 0x21
 80012d0:	d103      	bne.n	80012da <cmd_parser_fsm+0x66>
				cmdParserStatus = READING;
 80012d2:	4b17      	ldr	r3, [pc, #92]	; (8001330 <cmd_parser_fsm+0xbc>)
 80012d4:	2201      	movs	r2, #1
 80012d6:	701a      	strb	r2, [r3, #0]
			break;
 80012d8:	e025      	b.n	8001326 <cmd_parser_fsm+0xb2>
			else if (buffer_byte == '#'){
 80012da:	4b16      	ldr	r3, [pc, #88]	; (8001334 <cmd_parser_fsm+0xc0>)
 80012dc:	781b      	ldrb	r3, [r3, #0]
 80012de:	2b23      	cmp	r3, #35	; 0x23
 80012e0:	d121      	bne.n	8001326 <cmd_parser_fsm+0xb2>
				cmdParserStatus = STOP;
 80012e2:	4b13      	ldr	r3, [pc, #76]	; (8001330 <cmd_parser_fsm+0xbc>)
 80012e4:	2202      	movs	r2, #2
 80012e6:	701a      	strb	r2, [r3, #0]
				cmd_index = 0;
 80012e8:	4b13      	ldr	r3, [pc, #76]	; (8001338 <cmd_parser_fsm+0xc4>)
 80012ea:	2200      	movs	r2, #0
 80012ec:	701a      	strb	r2, [r3, #0]
			break;
 80012ee:	e01a      	b.n	8001326 <cmd_parser_fsm+0xb2>
			if (isCmdEqualToRST(cmd_data)==1) cmd_flag = isRST;
 80012f0:	4812      	ldr	r0, [pc, #72]	; (800133c <cmd_parser_fsm+0xc8>)
 80012f2:	f7ff ff95 	bl	8001220 <isCmdEqualToRST>
 80012f6:	4603      	mov	r3, r0
 80012f8:	2b01      	cmp	r3, #1
 80012fa:	d103      	bne.n	8001304 <cmd_parser_fsm+0x90>
 80012fc:	4b10      	ldr	r3, [pc, #64]	; (8001340 <cmd_parser_fsm+0xcc>)
 80012fe:	2207      	movs	r2, #7
 8001300:	701a      	strb	r2, [r3, #0]
 8001302:	e008      	b.n	8001316 <cmd_parser_fsm+0xa2>
			else if (isCmdEqualToCAP(cmd_data)==1) cmd_flag = isCAP;
 8001304:	480d      	ldr	r0, [pc, #52]	; (800133c <cmd_parser_fsm+0xc8>)
 8001306:	f7ff ffa0 	bl	800124a <isCmdEqualToCAP>
 800130a:	4603      	mov	r3, r0
 800130c:	2b01      	cmp	r3, #1
 800130e:	d10c      	bne.n	800132a <cmd_parser_fsm+0xb6>
 8001310:	4b0b      	ldr	r3, [pc, #44]	; (8001340 <cmd_parser_fsm+0xcc>)
 8001312:	2208      	movs	r2, #8
 8001314:	701a      	strb	r2, [r3, #0]
			cmdParserStatus = INIT_UART;
 8001316:	4b06      	ldr	r3, [pc, #24]	; (8001330 <cmd_parser_fsm+0xbc>)
 8001318:	2200      	movs	r2, #0
 800131a:	701a      	strb	r2, [r3, #0]
			break;
 800131c:	e006      	b.n	800132c <cmd_parser_fsm+0xb8>
			break;
 800131e:	bf00      	nop
 8001320:	e004      	b.n	800132c <cmd_parser_fsm+0xb8>
			break;
 8001322:	bf00      	nop
 8001324:	e002      	b.n	800132c <cmd_parser_fsm+0xb8>
			break;
 8001326:	bf00      	nop
 8001328:	e000      	b.n	800132c <cmd_parser_fsm+0xb8>
			else return;
 800132a:	bf00      	nop
	}
}
 800132c:	bd80      	pop	{r7, pc}
 800132e:	bf00      	nop
 8001330:	20000548 	.word	0x20000548
 8001334:	20000510 	.word	0x20000510
 8001338:	2000054f 	.word	0x2000054f
 800133c:	2000054c 	.word	0x2000054c
 8001340:	20000550 	.word	0x20000550

08001344 <uart_control_fsm>:

void uart_control_fsm()
{
 8001344:	b580      	push	{r7, lr}
 8001346:	af00      	add	r7, sp, #0
	switch (cmd_flag){
 8001348:	4b2e      	ldr	r3, [pc, #184]	; (8001404 <uart_control_fsm+0xc0>)
 800134a:	781b      	ldrb	r3, [r3, #0]
 800134c:	2b0a      	cmp	r3, #10
 800134e:	d853      	bhi.n	80013f8 <uart_control_fsm+0xb4>
 8001350:	a201      	add	r2, pc, #4	; (adr r2, 8001358 <uart_control_fsm+0x14>)
 8001352:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001356:	bf00      	nop
 8001358:	08001385 	.word	0x08001385
 800135c:	080013f9 	.word	0x080013f9
 8001360:	080013f9 	.word	0x080013f9
 8001364:	080013f9 	.word	0x080013f9
 8001368:	080013f9 	.word	0x080013f9
 800136c:	080013f9 	.word	0x080013f9
 8001370:	080013f9 	.word	0x080013f9
 8001374:	080013f1 	.word	0x080013f1
 8001378:	080013bd 	.word	0x080013bd
 800137c:	08001393 	.word	0x08001393
 8001380:	080013d7 	.word	0x080013d7
		case INIT_UART:
			cmd_flag = AUTO;
 8001384:	4b1f      	ldr	r3, [pc, #124]	; (8001404 <uart_control_fsm+0xc0>)
 8001386:	2209      	movs	r2, #9
 8001388:	701a      	strb	r2, [r3, #0]
			setTimer2(1);
 800138a:	2001      	movs	r0, #1
 800138c:	f7ff fcce 	bl	8000d2c <setTimer2>
			break;
 8001390:	e035      	b.n	80013fe <uart_control_fsm+0xba>
		case AUTO:
			if (timer2_flag == 1){
 8001392:	4b1d      	ldr	r3, [pc, #116]	; (8001408 <uart_control_fsm+0xc4>)
 8001394:	681b      	ldr	r3, [r3, #0]
 8001396:	2b01      	cmp	r3, #1
 8001398:	d10a      	bne.n	80013b0 <uart_control_fsm+0x6c>
				HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 800139a:	2200      	movs	r2, #0
 800139c:	2102      	movs	r1, #2
 800139e:	481b      	ldr	r0, [pc, #108]	; (800140c <uart_control_fsm+0xc8>)
 80013a0:	f000 fc88 	bl	8001cb4 <HAL_GPIO_WritePin>
				dht20_output();
 80013a4:	f7fe ffe4 	bl	8000370 <dht20_output>
				setTimer2(300);
 80013a8:	f44f 7096 	mov.w	r0, #300	; 0x12c
 80013ac:	f7ff fcbe 	bl	8000d2c <setTimer2>
			}
			HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 80013b0:	2201      	movs	r2, #1
 80013b2:	2102      	movs	r1, #2
 80013b4:	4815      	ldr	r0, [pc, #84]	; (800140c <uart_control_fsm+0xc8>)
 80013b6:	f000 fc7d 	bl	8001cb4 <HAL_GPIO_WritePin>
			break;
 80013ba:	e020      	b.n	80013fe <uart_control_fsm+0xba>
		case isCAP:
			HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 80013bc:	2200      	movs	r2, #0
 80013be:	2102      	movs	r1, #2
 80013c0:	4812      	ldr	r0, [pc, #72]	; (800140c <uart_control_fsm+0xc8>)
 80013c2:	f000 fc77 	bl	8001cb4 <HAL_GPIO_WritePin>
			setTimer4(1000);
 80013c6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80013ca:	f7ff fcd7 	bl	8000d7c <setTimer4>
			cmd_flag = WAIT;
 80013ce:	4b0d      	ldr	r3, [pc, #52]	; (8001404 <uart_control_fsm+0xc0>)
 80013d0:	220a      	movs	r2, #10
 80013d2:	701a      	strb	r2, [r3, #0]
			break;
 80013d4:	e013      	b.n	80013fe <uart_control_fsm+0xba>
		case WAIT:
			HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 80013d6:	2200      	movs	r2, #0
 80013d8:	2102      	movs	r1, #2
 80013da:	480c      	ldr	r0, [pc, #48]	; (800140c <uart_control_fsm+0xc8>)
 80013dc:	f000 fc6a 	bl	8001cb4 <HAL_GPIO_WritePin>
			if (timer4_flag == 1) cmd_flag = INIT_UART;
 80013e0:	4b0b      	ldr	r3, [pc, #44]	; (8001410 <uart_control_fsm+0xcc>)
 80013e2:	681b      	ldr	r3, [r3, #0]
 80013e4:	2b01      	cmp	r3, #1
 80013e6:	d109      	bne.n	80013fc <uart_control_fsm+0xb8>
 80013e8:	4b06      	ldr	r3, [pc, #24]	; (8001404 <uart_control_fsm+0xc0>)
 80013ea:	2200      	movs	r2, #0
 80013ec:	701a      	strb	r2, [r3, #0]
			break;
 80013ee:	e005      	b.n	80013fc <uart_control_fsm+0xb8>
		case isRST:
			cmd_flag = INIT_UART;
 80013f0:	4b04      	ldr	r3, [pc, #16]	; (8001404 <uart_control_fsm+0xc0>)
 80013f2:	2200      	movs	r2, #0
 80013f4:	701a      	strb	r2, [r3, #0]
			break;
 80013f6:	e002      	b.n	80013fe <uart_control_fsm+0xba>
		default:
			break;
 80013f8:	bf00      	nop
 80013fa:	e000      	b.n	80013fe <uart_control_fsm+0xba>
			break;
 80013fc:	bf00      	nop
	}
}
 80013fe:	bf00      	nop
 8001400:	bd80      	pop	{r7, pc}
 8001402:	bf00      	nop
 8001404:	20000550 	.word	0x20000550
 8001408:	200004c8 	.word	0x200004c8
 800140c:	40010800 	.word	0x40010800
 8001410:	200004d8 	.word	0x200004d8

08001414 <Scan_Addr>:

void Scan_Addr() {
 8001414:	b5b0      	push	{r4, r5, r7, lr}
 8001416:	b098      	sub	sp, #96	; 0x60
 8001418:	af00      	add	r7, sp, #0
    char info[] = "\r\n\r\nScanning I2C bus...\r\n";
 800141a:	4b2a      	ldr	r3, [pc, #168]	; (80014c4 <Scan_Addr+0xb0>)
 800141c:	f107 0440 	add.w	r4, r7, #64	; 0x40
 8001420:	461d      	mov	r5, r3
 8001422:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001424:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001426:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800142a:	c403      	stmia	r4!, {r0, r1}
 800142c:	8022      	strh	r2, [r4, #0]
    HAL_UART_Transmit(&huart2, (uint8_t*)info, strlen(info), HAL_MAX_DELAY);
 800142e:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001432:	4618      	mov	r0, r3
 8001434:	f7fe fe8a 	bl	800014c <strlen>
 8001438:	4603      	mov	r3, r0
 800143a:	b29a      	uxth	r2, r3
 800143c:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8001440:	f04f 33ff 	mov.w	r3, #4294967295
 8001444:	4820      	ldr	r0, [pc, #128]	; (80014c8 <Scan_Addr+0xb4>)
 8001446:	f002 fdaa 	bl	8003f9e <HAL_UART_Transmit>

    HAL_StatusTypeDef res;
    for(uint16_t i = 0; i < 128; i++) {
 800144a:	2300      	movs	r3, #0
 800144c:	f8a7 305e 	strh.w	r3, [r7, #94]	; 0x5e
 8001450:	e02f      	b.n	80014b2 <Scan_Addr+0x9e>
        res = HAL_I2C_IsDeviceReady(&hi2c1, i << 1, 1, 10);
 8001452:	f8b7 305e 	ldrh.w	r3, [r7, #94]	; 0x5e
 8001456:	005b      	lsls	r3, r3, #1
 8001458:	b299      	uxth	r1, r3
 800145a:	230a      	movs	r3, #10
 800145c:	2201      	movs	r2, #1
 800145e:	481b      	ldr	r0, [pc, #108]	; (80014cc <Scan_Addr+0xb8>)
 8001460:	f001 f8e2 	bl	8002628 <HAL_I2C_IsDeviceReady>
 8001464:	4603      	mov	r3, r0
 8001466:	f887 305d 	strb.w	r3, [r7, #93]	; 0x5d
        if(res == HAL_OK) {
 800146a:	f897 305d 	ldrb.w	r3, [r7, #93]	; 0x5d
 800146e:	2b00      	cmp	r3, #0
 8001470:	d113      	bne.n	800149a <Scan_Addr+0x86>
            char msg[64];
            snprintf(msg, sizeof(msg), "0x%02X", i);
 8001472:	f8b7 305e 	ldrh.w	r3, [r7, #94]	; 0x5e
 8001476:	4638      	mov	r0, r7
 8001478:	4a15      	ldr	r2, [pc, #84]	; (80014d0 <Scan_Addr+0xbc>)
 800147a:	2140      	movs	r1, #64	; 0x40
 800147c:	f003 faac 	bl	80049d8 <sniprintf>
            HAL_UART_Transmit(&huart2, (uint8_t*)msg, strlen(msg), HAL_MAX_DELAY);
 8001480:	463b      	mov	r3, r7
 8001482:	4618      	mov	r0, r3
 8001484:	f7fe fe62 	bl	800014c <strlen>
 8001488:	4603      	mov	r3, r0
 800148a:	b29a      	uxth	r2, r3
 800148c:	4639      	mov	r1, r7
 800148e:	f04f 33ff 	mov.w	r3, #4294967295
 8001492:	480d      	ldr	r0, [pc, #52]	; (80014c8 <Scan_Addr+0xb4>)
 8001494:	f002 fd83 	bl	8003f9e <HAL_UART_Transmit>
 8001498:	e006      	b.n	80014a8 <Scan_Addr+0x94>
        } else {
            HAL_UART_Transmit(&huart2, (uint8_t*)".", 1, HAL_MAX_DELAY);
 800149a:	f04f 33ff 	mov.w	r3, #4294967295
 800149e:	2201      	movs	r2, #1
 80014a0:	490c      	ldr	r1, [pc, #48]	; (80014d4 <Scan_Addr+0xc0>)
 80014a2:	4809      	ldr	r0, [pc, #36]	; (80014c8 <Scan_Addr+0xb4>)
 80014a4:	f002 fd7b 	bl	8003f9e <HAL_UART_Transmit>
    for(uint16_t i = 0; i < 128; i++) {
 80014a8:	f8b7 305e 	ldrh.w	r3, [r7, #94]	; 0x5e
 80014ac:	3301      	adds	r3, #1
 80014ae:	f8a7 305e 	strh.w	r3, [r7, #94]	; 0x5e
 80014b2:	f8b7 305e 	ldrh.w	r3, [r7, #94]	; 0x5e
 80014b6:	2b7f      	cmp	r3, #127	; 0x7f
 80014b8:	d9cb      	bls.n	8001452 <Scan_Addr+0x3e>
        }
    }
}
 80014ba:	bf00      	nop
 80014bc:	bf00      	nop
 80014be:	3760      	adds	r7, #96	; 0x60
 80014c0:	46bd      	mov	sp, r7
 80014c2:	bdb0      	pop	{r4, r5, r7, pc}
 80014c4:	080053c8 	.word	0x080053c8
 80014c8:	20000154 	.word	0x20000154
 80014cc:	200000b8 	.word	0x200000b8
 80014d0:	080053bc 	.word	0x080053bc
 80014d4:	080053c4 	.word	0x080053c4

080014d8 <Reset_Handler>:
 80014d8:	480c      	ldr	r0, [pc, #48]	; (800150c <LoopFillZerobss+0x12>)
 80014da:	490d      	ldr	r1, [pc, #52]	; (8001510 <LoopFillZerobss+0x16>)
 80014dc:	4a0d      	ldr	r2, [pc, #52]	; (8001514 <LoopFillZerobss+0x1a>)
 80014de:	2300      	movs	r3, #0
 80014e0:	e002      	b.n	80014e8 <LoopCopyDataInit>

080014e2 <CopyDataInit>:
 80014e2:	58d4      	ldr	r4, [r2, r3]
 80014e4:	50c4      	str	r4, [r0, r3]
 80014e6:	3304      	adds	r3, #4

080014e8 <LoopCopyDataInit>:
 80014e8:	18c4      	adds	r4, r0, r3
 80014ea:	428c      	cmp	r4, r1
 80014ec:	d3f9      	bcc.n	80014e2 <CopyDataInit>
 80014ee:	4a0a      	ldr	r2, [pc, #40]	; (8001518 <LoopFillZerobss+0x1e>)
 80014f0:	4c0a      	ldr	r4, [pc, #40]	; (800151c <LoopFillZerobss+0x22>)
 80014f2:	2300      	movs	r3, #0
 80014f4:	e001      	b.n	80014fa <LoopFillZerobss>

080014f6 <FillZerobss>:
 80014f6:	6013      	str	r3, [r2, #0]
 80014f8:	3204      	adds	r2, #4

080014fa <LoopFillZerobss>:
 80014fa:	42a2      	cmp	r2, r4
 80014fc:	d3fb      	bcc.n	80014f6 <FillZerobss>
 80014fe:	f7ff fe89 	bl	8001214 <SystemInit>
 8001502:	f003 fa3d 	bl	8004980 <__libc_init_array>
 8001506:	f7ff f901 	bl	800070c <main>
 800150a:	4770      	bx	lr
 800150c:	20000000 	.word	0x20000000
 8001510:	20000070 	.word	0x20000070
 8001514:	08005448 	.word	0x08005448
 8001518:	20000070 	.word	0x20000070
 800151c:	20000568 	.word	0x20000568

08001520 <ADC1_2_IRQHandler>:
 8001520:	e7fe      	b.n	8001520 <ADC1_2_IRQHandler>
	...

08001524 <HAL_Init>:
 8001524:	b580      	push	{r7, lr}
 8001526:	af00      	add	r7, sp, #0
 8001528:	4b08      	ldr	r3, [pc, #32]	; (800154c <HAL_Init+0x28>)
 800152a:	681b      	ldr	r3, [r3, #0]
 800152c:	4a07      	ldr	r2, [pc, #28]	; (800154c <HAL_Init+0x28>)
 800152e:	f043 0310 	orr.w	r3, r3, #16
 8001532:	6013      	str	r3, [r2, #0]
 8001534:	2003      	movs	r0, #3
 8001536:	f000 f947 	bl	80017c8 <HAL_NVIC_SetPriorityGrouping>
 800153a:	200f      	movs	r0, #15
 800153c:	f000 f808 	bl	8001550 <HAL_InitTick>
 8001540:	f7ff fcfe 	bl	8000f40 <HAL_MspInit>
 8001544:	2300      	movs	r3, #0
 8001546:	4618      	mov	r0, r3
 8001548:	bd80      	pop	{r7, pc}
 800154a:	bf00      	nop
 800154c:	40022000 	.word	0x40022000

08001550 <HAL_InitTick>:
 8001550:	b580      	push	{r7, lr}
 8001552:	b082      	sub	sp, #8
 8001554:	af00      	add	r7, sp, #0
 8001556:	6078      	str	r0, [r7, #4]
 8001558:	4b12      	ldr	r3, [pc, #72]	; (80015a4 <HAL_InitTick+0x54>)
 800155a:	681a      	ldr	r2, [r3, #0]
 800155c:	4b12      	ldr	r3, [pc, #72]	; (80015a8 <HAL_InitTick+0x58>)
 800155e:	781b      	ldrb	r3, [r3, #0]
 8001560:	4619      	mov	r1, r3
 8001562:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001566:	fbb3 f3f1 	udiv	r3, r3, r1
 800156a:	fbb2 f3f3 	udiv	r3, r2, r3
 800156e:	4618      	mov	r0, r3
 8001570:	f000 f95f 	bl	8001832 <HAL_SYSTICK_Config>
 8001574:	4603      	mov	r3, r0
 8001576:	2b00      	cmp	r3, #0
 8001578:	d001      	beq.n	800157e <HAL_InitTick+0x2e>
 800157a:	2301      	movs	r3, #1
 800157c:	e00e      	b.n	800159c <HAL_InitTick+0x4c>
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	2b0f      	cmp	r3, #15
 8001582:	d80a      	bhi.n	800159a <HAL_InitTick+0x4a>
 8001584:	2200      	movs	r2, #0
 8001586:	6879      	ldr	r1, [r7, #4]
 8001588:	f04f 30ff 	mov.w	r0, #4294967295
 800158c:	f000 f927 	bl	80017de <HAL_NVIC_SetPriority>
 8001590:	4a06      	ldr	r2, [pc, #24]	; (80015ac <HAL_InitTick+0x5c>)
 8001592:	687b      	ldr	r3, [r7, #4]
 8001594:	6013      	str	r3, [r2, #0]
 8001596:	2300      	movs	r3, #0
 8001598:	e000      	b.n	800159c <HAL_InitTick+0x4c>
 800159a:	2301      	movs	r3, #1
 800159c:	4618      	mov	r0, r3
 800159e:	3708      	adds	r7, #8
 80015a0:	46bd      	mov	sp, r7
 80015a2:	bd80      	pop	{r7, pc}
 80015a4:	20000000 	.word	0x20000000
 80015a8:	20000008 	.word	0x20000008
 80015ac:	20000004 	.word	0x20000004

080015b0 <HAL_IncTick>:
 80015b0:	b480      	push	{r7}
 80015b2:	af00      	add	r7, sp, #0
 80015b4:	4b05      	ldr	r3, [pc, #20]	; (80015cc <HAL_IncTick+0x1c>)
 80015b6:	781b      	ldrb	r3, [r3, #0]
 80015b8:	461a      	mov	r2, r3
 80015ba:	4b05      	ldr	r3, [pc, #20]	; (80015d0 <HAL_IncTick+0x20>)
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	4413      	add	r3, r2
 80015c0:	4a03      	ldr	r2, [pc, #12]	; (80015d0 <HAL_IncTick+0x20>)
 80015c2:	6013      	str	r3, [r2, #0]
 80015c4:	bf00      	nop
 80015c6:	46bd      	mov	sp, r7
 80015c8:	bc80      	pop	{r7}
 80015ca:	4770      	bx	lr
 80015cc:	20000008 	.word	0x20000008
 80015d0:	20000554 	.word	0x20000554

080015d4 <HAL_GetTick>:
 80015d4:	b480      	push	{r7}
 80015d6:	af00      	add	r7, sp, #0
 80015d8:	4b02      	ldr	r3, [pc, #8]	; (80015e4 <HAL_GetTick+0x10>)
 80015da:	681b      	ldr	r3, [r3, #0]
 80015dc:	4618      	mov	r0, r3
 80015de:	46bd      	mov	sp, r7
 80015e0:	bc80      	pop	{r7}
 80015e2:	4770      	bx	lr
 80015e4:	20000554 	.word	0x20000554

080015e8 <HAL_Delay>:
 80015e8:	b580      	push	{r7, lr}
 80015ea:	b084      	sub	sp, #16
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	6078      	str	r0, [r7, #4]
 80015f0:	f7ff fff0 	bl	80015d4 <HAL_GetTick>
 80015f4:	60b8      	str	r0, [r7, #8]
 80015f6:	687b      	ldr	r3, [r7, #4]
 80015f8:	60fb      	str	r3, [r7, #12]
 80015fa:	68fb      	ldr	r3, [r7, #12]
 80015fc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001600:	d005      	beq.n	800160e <HAL_Delay+0x26>
 8001602:	4b0a      	ldr	r3, [pc, #40]	; (800162c <HAL_Delay+0x44>)
 8001604:	781b      	ldrb	r3, [r3, #0]
 8001606:	461a      	mov	r2, r3
 8001608:	68fb      	ldr	r3, [r7, #12]
 800160a:	4413      	add	r3, r2
 800160c:	60fb      	str	r3, [r7, #12]
 800160e:	bf00      	nop
 8001610:	f7ff ffe0 	bl	80015d4 <HAL_GetTick>
 8001614:	4602      	mov	r2, r0
 8001616:	68bb      	ldr	r3, [r7, #8]
 8001618:	1ad3      	subs	r3, r2, r3
 800161a:	68fa      	ldr	r2, [r7, #12]
 800161c:	429a      	cmp	r2, r3
 800161e:	d8f7      	bhi.n	8001610 <HAL_Delay+0x28>
 8001620:	bf00      	nop
 8001622:	bf00      	nop
 8001624:	3710      	adds	r7, #16
 8001626:	46bd      	mov	sp, r7
 8001628:	bd80      	pop	{r7, pc}
 800162a:	bf00      	nop
 800162c:	20000008 	.word	0x20000008

08001630 <__NVIC_SetPriorityGrouping>:
 8001630:	b480      	push	{r7}
 8001632:	b085      	sub	sp, #20
 8001634:	af00      	add	r7, sp, #0
 8001636:	6078      	str	r0, [r7, #4]
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	f003 0307 	and.w	r3, r3, #7
 800163e:	60fb      	str	r3, [r7, #12]
 8001640:	4b0c      	ldr	r3, [pc, #48]	; (8001674 <__NVIC_SetPriorityGrouping+0x44>)
 8001642:	68db      	ldr	r3, [r3, #12]
 8001644:	60bb      	str	r3, [r7, #8]
 8001646:	68ba      	ldr	r2, [r7, #8]
 8001648:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800164c:	4013      	ands	r3, r2
 800164e:	60bb      	str	r3, [r7, #8]
 8001650:	68fb      	ldr	r3, [r7, #12]
 8001652:	021a      	lsls	r2, r3, #8
 8001654:	68bb      	ldr	r3, [r7, #8]
 8001656:	4313      	orrs	r3, r2
 8001658:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800165c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001660:	60bb      	str	r3, [r7, #8]
 8001662:	4a04      	ldr	r2, [pc, #16]	; (8001674 <__NVIC_SetPriorityGrouping+0x44>)
 8001664:	68bb      	ldr	r3, [r7, #8]
 8001666:	60d3      	str	r3, [r2, #12]
 8001668:	bf00      	nop
 800166a:	3714      	adds	r7, #20
 800166c:	46bd      	mov	sp, r7
 800166e:	bc80      	pop	{r7}
 8001670:	4770      	bx	lr
 8001672:	bf00      	nop
 8001674:	e000ed00 	.word	0xe000ed00

08001678 <__NVIC_GetPriorityGrouping>:
 8001678:	b480      	push	{r7}
 800167a:	af00      	add	r7, sp, #0
 800167c:	4b04      	ldr	r3, [pc, #16]	; (8001690 <__NVIC_GetPriorityGrouping+0x18>)
 800167e:	68db      	ldr	r3, [r3, #12]
 8001680:	0a1b      	lsrs	r3, r3, #8
 8001682:	f003 0307 	and.w	r3, r3, #7
 8001686:	4618      	mov	r0, r3
 8001688:	46bd      	mov	sp, r7
 800168a:	bc80      	pop	{r7}
 800168c:	4770      	bx	lr
 800168e:	bf00      	nop
 8001690:	e000ed00 	.word	0xe000ed00

08001694 <__NVIC_EnableIRQ>:
 8001694:	b480      	push	{r7}
 8001696:	b083      	sub	sp, #12
 8001698:	af00      	add	r7, sp, #0
 800169a:	4603      	mov	r3, r0
 800169c:	71fb      	strb	r3, [r7, #7]
 800169e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016a2:	2b00      	cmp	r3, #0
 80016a4:	db0b      	blt.n	80016be <__NVIC_EnableIRQ+0x2a>
 80016a6:	79fb      	ldrb	r3, [r7, #7]
 80016a8:	f003 021f 	and.w	r2, r3, #31
 80016ac:	4906      	ldr	r1, [pc, #24]	; (80016c8 <__NVIC_EnableIRQ+0x34>)
 80016ae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016b2:	095b      	lsrs	r3, r3, #5
 80016b4:	2001      	movs	r0, #1
 80016b6:	fa00 f202 	lsl.w	r2, r0, r2
 80016ba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80016be:	bf00      	nop
 80016c0:	370c      	adds	r7, #12
 80016c2:	46bd      	mov	sp, r7
 80016c4:	bc80      	pop	{r7}
 80016c6:	4770      	bx	lr
 80016c8:	e000e100 	.word	0xe000e100

080016cc <__NVIC_SetPriority>:
 80016cc:	b480      	push	{r7}
 80016ce:	b083      	sub	sp, #12
 80016d0:	af00      	add	r7, sp, #0
 80016d2:	4603      	mov	r3, r0
 80016d4:	6039      	str	r1, [r7, #0]
 80016d6:	71fb      	strb	r3, [r7, #7]
 80016d8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016dc:	2b00      	cmp	r3, #0
 80016de:	db0a      	blt.n	80016f6 <__NVIC_SetPriority+0x2a>
 80016e0:	683b      	ldr	r3, [r7, #0]
 80016e2:	b2da      	uxtb	r2, r3
 80016e4:	490c      	ldr	r1, [pc, #48]	; (8001718 <__NVIC_SetPriority+0x4c>)
 80016e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016ea:	0112      	lsls	r2, r2, #4
 80016ec:	b2d2      	uxtb	r2, r2
 80016ee:	440b      	add	r3, r1
 80016f0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80016f4:	e00a      	b.n	800170c <__NVIC_SetPriority+0x40>
 80016f6:	683b      	ldr	r3, [r7, #0]
 80016f8:	b2da      	uxtb	r2, r3
 80016fa:	4908      	ldr	r1, [pc, #32]	; (800171c <__NVIC_SetPriority+0x50>)
 80016fc:	79fb      	ldrb	r3, [r7, #7]
 80016fe:	f003 030f 	and.w	r3, r3, #15
 8001702:	3b04      	subs	r3, #4
 8001704:	0112      	lsls	r2, r2, #4
 8001706:	b2d2      	uxtb	r2, r2
 8001708:	440b      	add	r3, r1
 800170a:	761a      	strb	r2, [r3, #24]
 800170c:	bf00      	nop
 800170e:	370c      	adds	r7, #12
 8001710:	46bd      	mov	sp, r7
 8001712:	bc80      	pop	{r7}
 8001714:	4770      	bx	lr
 8001716:	bf00      	nop
 8001718:	e000e100 	.word	0xe000e100
 800171c:	e000ed00 	.word	0xe000ed00

08001720 <NVIC_EncodePriority>:
 8001720:	b480      	push	{r7}
 8001722:	b089      	sub	sp, #36	; 0x24
 8001724:	af00      	add	r7, sp, #0
 8001726:	60f8      	str	r0, [r7, #12]
 8001728:	60b9      	str	r1, [r7, #8]
 800172a:	607a      	str	r2, [r7, #4]
 800172c:	68fb      	ldr	r3, [r7, #12]
 800172e:	f003 0307 	and.w	r3, r3, #7
 8001732:	61fb      	str	r3, [r7, #28]
 8001734:	69fb      	ldr	r3, [r7, #28]
 8001736:	f1c3 0307 	rsb	r3, r3, #7
 800173a:	2b04      	cmp	r3, #4
 800173c:	bf28      	it	cs
 800173e:	2304      	movcs	r3, #4
 8001740:	61bb      	str	r3, [r7, #24]
 8001742:	69fb      	ldr	r3, [r7, #28]
 8001744:	3304      	adds	r3, #4
 8001746:	2b06      	cmp	r3, #6
 8001748:	d902      	bls.n	8001750 <NVIC_EncodePriority+0x30>
 800174a:	69fb      	ldr	r3, [r7, #28]
 800174c:	3b03      	subs	r3, #3
 800174e:	e000      	b.n	8001752 <NVIC_EncodePriority+0x32>
 8001750:	2300      	movs	r3, #0
 8001752:	617b      	str	r3, [r7, #20]
 8001754:	f04f 32ff 	mov.w	r2, #4294967295
 8001758:	69bb      	ldr	r3, [r7, #24]
 800175a:	fa02 f303 	lsl.w	r3, r2, r3
 800175e:	43da      	mvns	r2, r3
 8001760:	68bb      	ldr	r3, [r7, #8]
 8001762:	401a      	ands	r2, r3
 8001764:	697b      	ldr	r3, [r7, #20]
 8001766:	409a      	lsls	r2, r3
 8001768:	f04f 31ff 	mov.w	r1, #4294967295
 800176c:	697b      	ldr	r3, [r7, #20]
 800176e:	fa01 f303 	lsl.w	r3, r1, r3
 8001772:	43d9      	mvns	r1, r3
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	400b      	ands	r3, r1
 8001778:	4313      	orrs	r3, r2
 800177a:	4618      	mov	r0, r3
 800177c:	3724      	adds	r7, #36	; 0x24
 800177e:	46bd      	mov	sp, r7
 8001780:	bc80      	pop	{r7}
 8001782:	4770      	bx	lr

08001784 <SysTick_Config>:
 8001784:	b580      	push	{r7, lr}
 8001786:	b082      	sub	sp, #8
 8001788:	af00      	add	r7, sp, #0
 800178a:	6078      	str	r0, [r7, #4]
 800178c:	687b      	ldr	r3, [r7, #4]
 800178e:	3b01      	subs	r3, #1
 8001790:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001794:	d301      	bcc.n	800179a <SysTick_Config+0x16>
 8001796:	2301      	movs	r3, #1
 8001798:	e00f      	b.n	80017ba <SysTick_Config+0x36>
 800179a:	4a0a      	ldr	r2, [pc, #40]	; (80017c4 <SysTick_Config+0x40>)
 800179c:	687b      	ldr	r3, [r7, #4]
 800179e:	3b01      	subs	r3, #1
 80017a0:	6053      	str	r3, [r2, #4]
 80017a2:	210f      	movs	r1, #15
 80017a4:	f04f 30ff 	mov.w	r0, #4294967295
 80017a8:	f7ff ff90 	bl	80016cc <__NVIC_SetPriority>
 80017ac:	4b05      	ldr	r3, [pc, #20]	; (80017c4 <SysTick_Config+0x40>)
 80017ae:	2200      	movs	r2, #0
 80017b0:	609a      	str	r2, [r3, #8]
 80017b2:	4b04      	ldr	r3, [pc, #16]	; (80017c4 <SysTick_Config+0x40>)
 80017b4:	2207      	movs	r2, #7
 80017b6:	601a      	str	r2, [r3, #0]
 80017b8:	2300      	movs	r3, #0
 80017ba:	4618      	mov	r0, r3
 80017bc:	3708      	adds	r7, #8
 80017be:	46bd      	mov	sp, r7
 80017c0:	bd80      	pop	{r7, pc}
 80017c2:	bf00      	nop
 80017c4:	e000e010 	.word	0xe000e010

080017c8 <HAL_NVIC_SetPriorityGrouping>:
 80017c8:	b580      	push	{r7, lr}
 80017ca:	b082      	sub	sp, #8
 80017cc:	af00      	add	r7, sp, #0
 80017ce:	6078      	str	r0, [r7, #4]
 80017d0:	6878      	ldr	r0, [r7, #4]
 80017d2:	f7ff ff2d 	bl	8001630 <__NVIC_SetPriorityGrouping>
 80017d6:	bf00      	nop
 80017d8:	3708      	adds	r7, #8
 80017da:	46bd      	mov	sp, r7
 80017dc:	bd80      	pop	{r7, pc}

080017de <HAL_NVIC_SetPriority>:
 80017de:	b580      	push	{r7, lr}
 80017e0:	b086      	sub	sp, #24
 80017e2:	af00      	add	r7, sp, #0
 80017e4:	4603      	mov	r3, r0
 80017e6:	60b9      	str	r1, [r7, #8]
 80017e8:	607a      	str	r2, [r7, #4]
 80017ea:	73fb      	strb	r3, [r7, #15]
 80017ec:	2300      	movs	r3, #0
 80017ee:	617b      	str	r3, [r7, #20]
 80017f0:	f7ff ff42 	bl	8001678 <__NVIC_GetPriorityGrouping>
 80017f4:	6178      	str	r0, [r7, #20]
 80017f6:	687a      	ldr	r2, [r7, #4]
 80017f8:	68b9      	ldr	r1, [r7, #8]
 80017fa:	6978      	ldr	r0, [r7, #20]
 80017fc:	f7ff ff90 	bl	8001720 <NVIC_EncodePriority>
 8001800:	4602      	mov	r2, r0
 8001802:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001806:	4611      	mov	r1, r2
 8001808:	4618      	mov	r0, r3
 800180a:	f7ff ff5f 	bl	80016cc <__NVIC_SetPriority>
 800180e:	bf00      	nop
 8001810:	3718      	adds	r7, #24
 8001812:	46bd      	mov	sp, r7
 8001814:	bd80      	pop	{r7, pc}

08001816 <HAL_NVIC_EnableIRQ>:
 8001816:	b580      	push	{r7, lr}
 8001818:	b082      	sub	sp, #8
 800181a:	af00      	add	r7, sp, #0
 800181c:	4603      	mov	r3, r0
 800181e:	71fb      	strb	r3, [r7, #7]
 8001820:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001824:	4618      	mov	r0, r3
 8001826:	f7ff ff35 	bl	8001694 <__NVIC_EnableIRQ>
 800182a:	bf00      	nop
 800182c:	3708      	adds	r7, #8
 800182e:	46bd      	mov	sp, r7
 8001830:	bd80      	pop	{r7, pc}

08001832 <HAL_SYSTICK_Config>:
 8001832:	b580      	push	{r7, lr}
 8001834:	b082      	sub	sp, #8
 8001836:	af00      	add	r7, sp, #0
 8001838:	6078      	str	r0, [r7, #4]
 800183a:	6878      	ldr	r0, [r7, #4]
 800183c:	f7ff ffa2 	bl	8001784 <SysTick_Config>
 8001840:	4603      	mov	r3, r0
 8001842:	4618      	mov	r0, r3
 8001844:	3708      	adds	r7, #8
 8001846:	46bd      	mov	sp, r7
 8001848:	bd80      	pop	{r7, pc}

0800184a <HAL_DMA_Abort>:
 800184a:	b480      	push	{r7}
 800184c:	b085      	sub	sp, #20
 800184e:	af00      	add	r7, sp, #0
 8001850:	6078      	str	r0, [r7, #4]
 8001852:	2300      	movs	r3, #0
 8001854:	73fb      	strb	r3, [r7, #15]
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 800185c:	2b02      	cmp	r3, #2
 800185e:	d008      	beq.n	8001872 <HAL_DMA_Abort+0x28>
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	2204      	movs	r2, #4
 8001864:	639a      	str	r2, [r3, #56]	; 0x38
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	2200      	movs	r2, #0
 800186a:	f883 2020 	strb.w	r2, [r3, #32]
 800186e:	2301      	movs	r3, #1
 8001870:	e020      	b.n	80018b4 <HAL_DMA_Abort+0x6a>
 8001872:	687b      	ldr	r3, [r7, #4]
 8001874:	681b      	ldr	r3, [r3, #0]
 8001876:	681a      	ldr	r2, [r3, #0]
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	681b      	ldr	r3, [r3, #0]
 800187c:	f022 020e 	bic.w	r2, r2, #14
 8001880:	601a      	str	r2, [r3, #0]
 8001882:	687b      	ldr	r3, [r7, #4]
 8001884:	681b      	ldr	r3, [r3, #0]
 8001886:	681a      	ldr	r2, [r3, #0]
 8001888:	687b      	ldr	r3, [r7, #4]
 800188a:	681b      	ldr	r3, [r3, #0]
 800188c:	f022 0201 	bic.w	r2, r2, #1
 8001890:	601a      	str	r2, [r3, #0]
 8001892:	687b      	ldr	r3, [r7, #4]
 8001894:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001896:	687b      	ldr	r3, [r7, #4]
 8001898:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800189a:	2101      	movs	r1, #1
 800189c:	fa01 f202 	lsl.w	r2, r1, r2
 80018a0:	605a      	str	r2, [r3, #4]
 80018a2:	687b      	ldr	r3, [r7, #4]
 80018a4:	2201      	movs	r2, #1
 80018a6:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	2200      	movs	r2, #0
 80018ae:	f883 2020 	strb.w	r2, [r3, #32]
 80018b2:	7bfb      	ldrb	r3, [r7, #15]
 80018b4:	4618      	mov	r0, r3
 80018b6:	3714      	adds	r7, #20
 80018b8:	46bd      	mov	sp, r7
 80018ba:	bc80      	pop	{r7}
 80018bc:	4770      	bx	lr
	...

080018c0 <HAL_DMA_Abort_IT>:
 80018c0:	b580      	push	{r7, lr}
 80018c2:	b084      	sub	sp, #16
 80018c4:	af00      	add	r7, sp, #0
 80018c6:	6078      	str	r0, [r7, #4]
 80018c8:	2300      	movs	r3, #0
 80018ca:	73fb      	strb	r3, [r7, #15]
 80018cc:	687b      	ldr	r3, [r7, #4]
 80018ce:	f893 3021 	ldrb.w	r3, [r3, #33]	; 0x21
 80018d2:	2b02      	cmp	r3, #2
 80018d4:	d005      	beq.n	80018e2 <HAL_DMA_Abort_IT+0x22>
 80018d6:	687b      	ldr	r3, [r7, #4]
 80018d8:	2204      	movs	r2, #4
 80018da:	639a      	str	r2, [r3, #56]	; 0x38
 80018dc:	2301      	movs	r3, #1
 80018de:	73fb      	strb	r3, [r7, #15]
 80018e0:	e051      	b.n	8001986 <HAL_DMA_Abort_IT+0xc6>
 80018e2:	687b      	ldr	r3, [r7, #4]
 80018e4:	681b      	ldr	r3, [r3, #0]
 80018e6:	681a      	ldr	r2, [r3, #0]
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	681b      	ldr	r3, [r3, #0]
 80018ec:	f022 020e 	bic.w	r2, r2, #14
 80018f0:	601a      	str	r2, [r3, #0]
 80018f2:	687b      	ldr	r3, [r7, #4]
 80018f4:	681b      	ldr	r3, [r3, #0]
 80018f6:	681a      	ldr	r2, [r3, #0]
 80018f8:	687b      	ldr	r3, [r7, #4]
 80018fa:	681b      	ldr	r3, [r3, #0]
 80018fc:	f022 0201 	bic.w	r2, r2, #1
 8001900:	601a      	str	r2, [r3, #0]
 8001902:	687b      	ldr	r3, [r7, #4]
 8001904:	681b      	ldr	r3, [r3, #0]
 8001906:	4a22      	ldr	r2, [pc, #136]	; (8001990 <HAL_DMA_Abort_IT+0xd0>)
 8001908:	4293      	cmp	r3, r2
 800190a:	d029      	beq.n	8001960 <HAL_DMA_Abort_IT+0xa0>
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	681b      	ldr	r3, [r3, #0]
 8001910:	4a20      	ldr	r2, [pc, #128]	; (8001994 <HAL_DMA_Abort_IT+0xd4>)
 8001912:	4293      	cmp	r3, r2
 8001914:	d022      	beq.n	800195c <HAL_DMA_Abort_IT+0x9c>
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	681b      	ldr	r3, [r3, #0]
 800191a:	4a1f      	ldr	r2, [pc, #124]	; (8001998 <HAL_DMA_Abort_IT+0xd8>)
 800191c:	4293      	cmp	r3, r2
 800191e:	d01a      	beq.n	8001956 <HAL_DMA_Abort_IT+0x96>
 8001920:	687b      	ldr	r3, [r7, #4]
 8001922:	681b      	ldr	r3, [r3, #0]
 8001924:	4a1d      	ldr	r2, [pc, #116]	; (800199c <HAL_DMA_Abort_IT+0xdc>)
 8001926:	4293      	cmp	r3, r2
 8001928:	d012      	beq.n	8001950 <HAL_DMA_Abort_IT+0x90>
 800192a:	687b      	ldr	r3, [r7, #4]
 800192c:	681b      	ldr	r3, [r3, #0]
 800192e:	4a1c      	ldr	r2, [pc, #112]	; (80019a0 <HAL_DMA_Abort_IT+0xe0>)
 8001930:	4293      	cmp	r3, r2
 8001932:	d00a      	beq.n	800194a <HAL_DMA_Abort_IT+0x8a>
 8001934:	687b      	ldr	r3, [r7, #4]
 8001936:	681b      	ldr	r3, [r3, #0]
 8001938:	4a1a      	ldr	r2, [pc, #104]	; (80019a4 <HAL_DMA_Abort_IT+0xe4>)
 800193a:	4293      	cmp	r3, r2
 800193c:	d102      	bne.n	8001944 <HAL_DMA_Abort_IT+0x84>
 800193e:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8001942:	e00e      	b.n	8001962 <HAL_DMA_Abort_IT+0xa2>
 8001944:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8001948:	e00b      	b.n	8001962 <HAL_DMA_Abort_IT+0xa2>
 800194a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800194e:	e008      	b.n	8001962 <HAL_DMA_Abort_IT+0xa2>
 8001950:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001954:	e005      	b.n	8001962 <HAL_DMA_Abort_IT+0xa2>
 8001956:	f44f 7380 	mov.w	r3, #256	; 0x100
 800195a:	e002      	b.n	8001962 <HAL_DMA_Abort_IT+0xa2>
 800195c:	2310      	movs	r3, #16
 800195e:	e000      	b.n	8001962 <HAL_DMA_Abort_IT+0xa2>
 8001960:	2301      	movs	r3, #1
 8001962:	4a11      	ldr	r2, [pc, #68]	; (80019a8 <HAL_DMA_Abort_IT+0xe8>)
 8001964:	6053      	str	r3, [r2, #4]
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	2201      	movs	r2, #1
 800196a:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	2200      	movs	r2, #0
 8001972:	f883 2020 	strb.w	r2, [r3, #32]
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800197a:	2b00      	cmp	r3, #0
 800197c:	d003      	beq.n	8001986 <HAL_DMA_Abort_IT+0xc6>
 800197e:	687b      	ldr	r3, [r7, #4]
 8001980:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001982:	6878      	ldr	r0, [r7, #4]
 8001984:	4798      	blx	r3
 8001986:	7bfb      	ldrb	r3, [r7, #15]
 8001988:	4618      	mov	r0, r3
 800198a:	3710      	adds	r7, #16
 800198c:	46bd      	mov	sp, r7
 800198e:	bd80      	pop	{r7, pc}
 8001990:	40020008 	.word	0x40020008
 8001994:	4002001c 	.word	0x4002001c
 8001998:	40020030 	.word	0x40020030
 800199c:	40020044 	.word	0x40020044
 80019a0:	40020058 	.word	0x40020058
 80019a4:	4002006c 	.word	0x4002006c
 80019a8:	40020000 	.word	0x40020000

080019ac <HAL_GPIO_Init>:
 80019ac:	b480      	push	{r7}
 80019ae:	b08b      	sub	sp, #44	; 0x2c
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	6078      	str	r0, [r7, #4]
 80019b4:	6039      	str	r1, [r7, #0]
 80019b6:	2300      	movs	r3, #0
 80019b8:	627b      	str	r3, [r7, #36]	; 0x24
 80019ba:	2300      	movs	r3, #0
 80019bc:	623b      	str	r3, [r7, #32]
 80019be:	e169      	b.n	8001c94 <HAL_GPIO_Init+0x2e8>
 80019c0:	2201      	movs	r2, #1
 80019c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80019c4:	fa02 f303 	lsl.w	r3, r2, r3
 80019c8:	61fb      	str	r3, [r7, #28]
 80019ca:	683b      	ldr	r3, [r7, #0]
 80019cc:	681b      	ldr	r3, [r3, #0]
 80019ce:	69fa      	ldr	r2, [r7, #28]
 80019d0:	4013      	ands	r3, r2
 80019d2:	61bb      	str	r3, [r7, #24]
 80019d4:	69ba      	ldr	r2, [r7, #24]
 80019d6:	69fb      	ldr	r3, [r7, #28]
 80019d8:	429a      	cmp	r2, r3
 80019da:	f040 8158 	bne.w	8001c8e <HAL_GPIO_Init+0x2e2>
 80019de:	683b      	ldr	r3, [r7, #0]
 80019e0:	685b      	ldr	r3, [r3, #4]
 80019e2:	4a9a      	ldr	r2, [pc, #616]	; (8001c4c <HAL_GPIO_Init+0x2a0>)
 80019e4:	4293      	cmp	r3, r2
 80019e6:	d05e      	beq.n	8001aa6 <HAL_GPIO_Init+0xfa>
 80019e8:	4a98      	ldr	r2, [pc, #608]	; (8001c4c <HAL_GPIO_Init+0x2a0>)
 80019ea:	4293      	cmp	r3, r2
 80019ec:	d875      	bhi.n	8001ada <HAL_GPIO_Init+0x12e>
 80019ee:	4a98      	ldr	r2, [pc, #608]	; (8001c50 <HAL_GPIO_Init+0x2a4>)
 80019f0:	4293      	cmp	r3, r2
 80019f2:	d058      	beq.n	8001aa6 <HAL_GPIO_Init+0xfa>
 80019f4:	4a96      	ldr	r2, [pc, #600]	; (8001c50 <HAL_GPIO_Init+0x2a4>)
 80019f6:	4293      	cmp	r3, r2
 80019f8:	d86f      	bhi.n	8001ada <HAL_GPIO_Init+0x12e>
 80019fa:	4a96      	ldr	r2, [pc, #600]	; (8001c54 <HAL_GPIO_Init+0x2a8>)
 80019fc:	4293      	cmp	r3, r2
 80019fe:	d052      	beq.n	8001aa6 <HAL_GPIO_Init+0xfa>
 8001a00:	4a94      	ldr	r2, [pc, #592]	; (8001c54 <HAL_GPIO_Init+0x2a8>)
 8001a02:	4293      	cmp	r3, r2
 8001a04:	d869      	bhi.n	8001ada <HAL_GPIO_Init+0x12e>
 8001a06:	4a94      	ldr	r2, [pc, #592]	; (8001c58 <HAL_GPIO_Init+0x2ac>)
 8001a08:	4293      	cmp	r3, r2
 8001a0a:	d04c      	beq.n	8001aa6 <HAL_GPIO_Init+0xfa>
 8001a0c:	4a92      	ldr	r2, [pc, #584]	; (8001c58 <HAL_GPIO_Init+0x2ac>)
 8001a0e:	4293      	cmp	r3, r2
 8001a10:	d863      	bhi.n	8001ada <HAL_GPIO_Init+0x12e>
 8001a12:	4a92      	ldr	r2, [pc, #584]	; (8001c5c <HAL_GPIO_Init+0x2b0>)
 8001a14:	4293      	cmp	r3, r2
 8001a16:	d046      	beq.n	8001aa6 <HAL_GPIO_Init+0xfa>
 8001a18:	4a90      	ldr	r2, [pc, #576]	; (8001c5c <HAL_GPIO_Init+0x2b0>)
 8001a1a:	4293      	cmp	r3, r2
 8001a1c:	d85d      	bhi.n	8001ada <HAL_GPIO_Init+0x12e>
 8001a1e:	2b12      	cmp	r3, #18
 8001a20:	d82a      	bhi.n	8001a78 <HAL_GPIO_Init+0xcc>
 8001a22:	2b12      	cmp	r3, #18
 8001a24:	d859      	bhi.n	8001ada <HAL_GPIO_Init+0x12e>
 8001a26:	a201      	add	r2, pc, #4	; (adr r2, 8001a2c <HAL_GPIO_Init+0x80>)
 8001a28:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a2c:	08001aa7 	.word	0x08001aa7
 8001a30:	08001a81 	.word	0x08001a81
 8001a34:	08001a93 	.word	0x08001a93
 8001a38:	08001ad5 	.word	0x08001ad5
 8001a3c:	08001adb 	.word	0x08001adb
 8001a40:	08001adb 	.word	0x08001adb
 8001a44:	08001adb 	.word	0x08001adb
 8001a48:	08001adb 	.word	0x08001adb
 8001a4c:	08001adb 	.word	0x08001adb
 8001a50:	08001adb 	.word	0x08001adb
 8001a54:	08001adb 	.word	0x08001adb
 8001a58:	08001adb 	.word	0x08001adb
 8001a5c:	08001adb 	.word	0x08001adb
 8001a60:	08001adb 	.word	0x08001adb
 8001a64:	08001adb 	.word	0x08001adb
 8001a68:	08001adb 	.word	0x08001adb
 8001a6c:	08001adb 	.word	0x08001adb
 8001a70:	08001a89 	.word	0x08001a89
 8001a74:	08001a9d 	.word	0x08001a9d
 8001a78:	4a79      	ldr	r2, [pc, #484]	; (8001c60 <HAL_GPIO_Init+0x2b4>)
 8001a7a:	4293      	cmp	r3, r2
 8001a7c:	d013      	beq.n	8001aa6 <HAL_GPIO_Init+0xfa>
 8001a7e:	e02c      	b.n	8001ada <HAL_GPIO_Init+0x12e>
 8001a80:	683b      	ldr	r3, [r7, #0]
 8001a82:	68db      	ldr	r3, [r3, #12]
 8001a84:	623b      	str	r3, [r7, #32]
 8001a86:	e029      	b.n	8001adc <HAL_GPIO_Init+0x130>
 8001a88:	683b      	ldr	r3, [r7, #0]
 8001a8a:	68db      	ldr	r3, [r3, #12]
 8001a8c:	3304      	adds	r3, #4
 8001a8e:	623b      	str	r3, [r7, #32]
 8001a90:	e024      	b.n	8001adc <HAL_GPIO_Init+0x130>
 8001a92:	683b      	ldr	r3, [r7, #0]
 8001a94:	68db      	ldr	r3, [r3, #12]
 8001a96:	3308      	adds	r3, #8
 8001a98:	623b      	str	r3, [r7, #32]
 8001a9a:	e01f      	b.n	8001adc <HAL_GPIO_Init+0x130>
 8001a9c:	683b      	ldr	r3, [r7, #0]
 8001a9e:	68db      	ldr	r3, [r3, #12]
 8001aa0:	330c      	adds	r3, #12
 8001aa2:	623b      	str	r3, [r7, #32]
 8001aa4:	e01a      	b.n	8001adc <HAL_GPIO_Init+0x130>
 8001aa6:	683b      	ldr	r3, [r7, #0]
 8001aa8:	689b      	ldr	r3, [r3, #8]
 8001aaa:	2b00      	cmp	r3, #0
 8001aac:	d102      	bne.n	8001ab4 <HAL_GPIO_Init+0x108>
 8001aae:	2304      	movs	r3, #4
 8001ab0:	623b      	str	r3, [r7, #32]
 8001ab2:	e013      	b.n	8001adc <HAL_GPIO_Init+0x130>
 8001ab4:	683b      	ldr	r3, [r7, #0]
 8001ab6:	689b      	ldr	r3, [r3, #8]
 8001ab8:	2b01      	cmp	r3, #1
 8001aba:	d105      	bne.n	8001ac8 <HAL_GPIO_Init+0x11c>
 8001abc:	2308      	movs	r3, #8
 8001abe:	623b      	str	r3, [r7, #32]
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	69fa      	ldr	r2, [r7, #28]
 8001ac4:	611a      	str	r2, [r3, #16]
 8001ac6:	e009      	b.n	8001adc <HAL_GPIO_Init+0x130>
 8001ac8:	2308      	movs	r3, #8
 8001aca:	623b      	str	r3, [r7, #32]
 8001acc:	687b      	ldr	r3, [r7, #4]
 8001ace:	69fa      	ldr	r2, [r7, #28]
 8001ad0:	615a      	str	r2, [r3, #20]
 8001ad2:	e003      	b.n	8001adc <HAL_GPIO_Init+0x130>
 8001ad4:	2300      	movs	r3, #0
 8001ad6:	623b      	str	r3, [r7, #32]
 8001ad8:	e000      	b.n	8001adc <HAL_GPIO_Init+0x130>
 8001ada:	bf00      	nop
 8001adc:	69bb      	ldr	r3, [r7, #24]
 8001ade:	2bff      	cmp	r3, #255	; 0xff
 8001ae0:	d801      	bhi.n	8001ae6 <HAL_GPIO_Init+0x13a>
 8001ae2:	687b      	ldr	r3, [r7, #4]
 8001ae4:	e001      	b.n	8001aea <HAL_GPIO_Init+0x13e>
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	3304      	adds	r3, #4
 8001aea:	617b      	str	r3, [r7, #20]
 8001aec:	69bb      	ldr	r3, [r7, #24]
 8001aee:	2bff      	cmp	r3, #255	; 0xff
 8001af0:	d802      	bhi.n	8001af8 <HAL_GPIO_Init+0x14c>
 8001af2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001af4:	009b      	lsls	r3, r3, #2
 8001af6:	e002      	b.n	8001afe <HAL_GPIO_Init+0x152>
 8001af8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001afa:	3b08      	subs	r3, #8
 8001afc:	009b      	lsls	r3, r3, #2
 8001afe:	613b      	str	r3, [r7, #16]
 8001b00:	697b      	ldr	r3, [r7, #20]
 8001b02:	681a      	ldr	r2, [r3, #0]
 8001b04:	210f      	movs	r1, #15
 8001b06:	693b      	ldr	r3, [r7, #16]
 8001b08:	fa01 f303 	lsl.w	r3, r1, r3
 8001b0c:	43db      	mvns	r3, r3
 8001b0e:	401a      	ands	r2, r3
 8001b10:	6a39      	ldr	r1, [r7, #32]
 8001b12:	693b      	ldr	r3, [r7, #16]
 8001b14:	fa01 f303 	lsl.w	r3, r1, r3
 8001b18:	431a      	orrs	r2, r3
 8001b1a:	697b      	ldr	r3, [r7, #20]
 8001b1c:	601a      	str	r2, [r3, #0]
 8001b1e:	683b      	ldr	r3, [r7, #0]
 8001b20:	685b      	ldr	r3, [r3, #4]
 8001b22:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b26:	2b00      	cmp	r3, #0
 8001b28:	f000 80b1 	beq.w	8001c8e <HAL_GPIO_Init+0x2e2>
 8001b2c:	4b4d      	ldr	r3, [pc, #308]	; (8001c64 <HAL_GPIO_Init+0x2b8>)
 8001b2e:	699b      	ldr	r3, [r3, #24]
 8001b30:	4a4c      	ldr	r2, [pc, #304]	; (8001c64 <HAL_GPIO_Init+0x2b8>)
 8001b32:	f043 0301 	orr.w	r3, r3, #1
 8001b36:	6193      	str	r3, [r2, #24]
 8001b38:	4b4a      	ldr	r3, [pc, #296]	; (8001c64 <HAL_GPIO_Init+0x2b8>)
 8001b3a:	699b      	ldr	r3, [r3, #24]
 8001b3c:	f003 0301 	and.w	r3, r3, #1
 8001b40:	60bb      	str	r3, [r7, #8]
 8001b42:	68bb      	ldr	r3, [r7, #8]
 8001b44:	4a48      	ldr	r2, [pc, #288]	; (8001c68 <HAL_GPIO_Init+0x2bc>)
 8001b46:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b48:	089b      	lsrs	r3, r3, #2
 8001b4a:	3302      	adds	r3, #2
 8001b4c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001b50:	60fb      	str	r3, [r7, #12]
 8001b52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001b54:	f003 0303 	and.w	r3, r3, #3
 8001b58:	009b      	lsls	r3, r3, #2
 8001b5a:	220f      	movs	r2, #15
 8001b5c:	fa02 f303 	lsl.w	r3, r2, r3
 8001b60:	43db      	mvns	r3, r3
 8001b62:	68fa      	ldr	r2, [r7, #12]
 8001b64:	4013      	ands	r3, r2
 8001b66:	60fb      	str	r3, [r7, #12]
 8001b68:	687b      	ldr	r3, [r7, #4]
 8001b6a:	4a40      	ldr	r2, [pc, #256]	; (8001c6c <HAL_GPIO_Init+0x2c0>)
 8001b6c:	4293      	cmp	r3, r2
 8001b6e:	d013      	beq.n	8001b98 <HAL_GPIO_Init+0x1ec>
 8001b70:	687b      	ldr	r3, [r7, #4]
 8001b72:	4a3f      	ldr	r2, [pc, #252]	; (8001c70 <HAL_GPIO_Init+0x2c4>)
 8001b74:	4293      	cmp	r3, r2
 8001b76:	d00d      	beq.n	8001b94 <HAL_GPIO_Init+0x1e8>
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	4a3e      	ldr	r2, [pc, #248]	; (8001c74 <HAL_GPIO_Init+0x2c8>)
 8001b7c:	4293      	cmp	r3, r2
 8001b7e:	d007      	beq.n	8001b90 <HAL_GPIO_Init+0x1e4>
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	4a3d      	ldr	r2, [pc, #244]	; (8001c78 <HAL_GPIO_Init+0x2cc>)
 8001b84:	4293      	cmp	r3, r2
 8001b86:	d101      	bne.n	8001b8c <HAL_GPIO_Init+0x1e0>
 8001b88:	2303      	movs	r3, #3
 8001b8a:	e006      	b.n	8001b9a <HAL_GPIO_Init+0x1ee>
 8001b8c:	2304      	movs	r3, #4
 8001b8e:	e004      	b.n	8001b9a <HAL_GPIO_Init+0x1ee>
 8001b90:	2302      	movs	r3, #2
 8001b92:	e002      	b.n	8001b9a <HAL_GPIO_Init+0x1ee>
 8001b94:	2301      	movs	r3, #1
 8001b96:	e000      	b.n	8001b9a <HAL_GPIO_Init+0x1ee>
 8001b98:	2300      	movs	r3, #0
 8001b9a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001b9c:	f002 0203 	and.w	r2, r2, #3
 8001ba0:	0092      	lsls	r2, r2, #2
 8001ba2:	4093      	lsls	r3, r2
 8001ba4:	68fa      	ldr	r2, [r7, #12]
 8001ba6:	4313      	orrs	r3, r2
 8001ba8:	60fb      	str	r3, [r7, #12]
 8001baa:	492f      	ldr	r1, [pc, #188]	; (8001c68 <HAL_GPIO_Init+0x2bc>)
 8001bac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001bae:	089b      	lsrs	r3, r3, #2
 8001bb0:	3302      	adds	r3, #2
 8001bb2:	68fa      	ldr	r2, [r7, #12]
 8001bb4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001bb8:	683b      	ldr	r3, [r7, #0]
 8001bba:	685b      	ldr	r3, [r3, #4]
 8001bbc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001bc0:	2b00      	cmp	r3, #0
 8001bc2:	d006      	beq.n	8001bd2 <HAL_GPIO_Init+0x226>
 8001bc4:	4b2d      	ldr	r3, [pc, #180]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001bc6:	681a      	ldr	r2, [r3, #0]
 8001bc8:	492c      	ldr	r1, [pc, #176]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001bca:	69bb      	ldr	r3, [r7, #24]
 8001bcc:	4313      	orrs	r3, r2
 8001bce:	600b      	str	r3, [r1, #0]
 8001bd0:	e006      	b.n	8001be0 <HAL_GPIO_Init+0x234>
 8001bd2:	4b2a      	ldr	r3, [pc, #168]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001bd4:	681a      	ldr	r2, [r3, #0]
 8001bd6:	69bb      	ldr	r3, [r7, #24]
 8001bd8:	43db      	mvns	r3, r3
 8001bda:	4928      	ldr	r1, [pc, #160]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001bdc:	4013      	ands	r3, r2
 8001bde:	600b      	str	r3, [r1, #0]
 8001be0:	683b      	ldr	r3, [r7, #0]
 8001be2:	685b      	ldr	r3, [r3, #4]
 8001be4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001be8:	2b00      	cmp	r3, #0
 8001bea:	d006      	beq.n	8001bfa <HAL_GPIO_Init+0x24e>
 8001bec:	4b23      	ldr	r3, [pc, #140]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001bee:	685a      	ldr	r2, [r3, #4]
 8001bf0:	4922      	ldr	r1, [pc, #136]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001bf2:	69bb      	ldr	r3, [r7, #24]
 8001bf4:	4313      	orrs	r3, r2
 8001bf6:	604b      	str	r3, [r1, #4]
 8001bf8:	e006      	b.n	8001c08 <HAL_GPIO_Init+0x25c>
 8001bfa:	4b20      	ldr	r3, [pc, #128]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001bfc:	685a      	ldr	r2, [r3, #4]
 8001bfe:	69bb      	ldr	r3, [r7, #24]
 8001c00:	43db      	mvns	r3, r3
 8001c02:	491e      	ldr	r1, [pc, #120]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001c04:	4013      	ands	r3, r2
 8001c06:	604b      	str	r3, [r1, #4]
 8001c08:	683b      	ldr	r3, [r7, #0]
 8001c0a:	685b      	ldr	r3, [r3, #4]
 8001c0c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001c10:	2b00      	cmp	r3, #0
 8001c12:	d006      	beq.n	8001c22 <HAL_GPIO_Init+0x276>
 8001c14:	4b19      	ldr	r3, [pc, #100]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001c16:	689a      	ldr	r2, [r3, #8]
 8001c18:	4918      	ldr	r1, [pc, #96]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001c1a:	69bb      	ldr	r3, [r7, #24]
 8001c1c:	4313      	orrs	r3, r2
 8001c1e:	608b      	str	r3, [r1, #8]
 8001c20:	e006      	b.n	8001c30 <HAL_GPIO_Init+0x284>
 8001c22:	4b16      	ldr	r3, [pc, #88]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001c24:	689a      	ldr	r2, [r3, #8]
 8001c26:	69bb      	ldr	r3, [r7, #24]
 8001c28:	43db      	mvns	r3, r3
 8001c2a:	4914      	ldr	r1, [pc, #80]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001c2c:	4013      	ands	r3, r2
 8001c2e:	608b      	str	r3, [r1, #8]
 8001c30:	683b      	ldr	r3, [r7, #0]
 8001c32:	685b      	ldr	r3, [r3, #4]
 8001c34:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001c38:	2b00      	cmp	r3, #0
 8001c3a:	d021      	beq.n	8001c80 <HAL_GPIO_Init+0x2d4>
 8001c3c:	4b0f      	ldr	r3, [pc, #60]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001c3e:	68da      	ldr	r2, [r3, #12]
 8001c40:	490e      	ldr	r1, [pc, #56]	; (8001c7c <HAL_GPIO_Init+0x2d0>)
 8001c42:	69bb      	ldr	r3, [r7, #24]
 8001c44:	4313      	orrs	r3, r2
 8001c46:	60cb      	str	r3, [r1, #12]
 8001c48:	e021      	b.n	8001c8e <HAL_GPIO_Init+0x2e2>
 8001c4a:	bf00      	nop
 8001c4c:	10320000 	.word	0x10320000
 8001c50:	10310000 	.word	0x10310000
 8001c54:	10220000 	.word	0x10220000
 8001c58:	10210000 	.word	0x10210000
 8001c5c:	10120000 	.word	0x10120000
 8001c60:	10110000 	.word	0x10110000
 8001c64:	40021000 	.word	0x40021000
 8001c68:	40010000 	.word	0x40010000
 8001c6c:	40010800 	.word	0x40010800
 8001c70:	40010c00 	.word	0x40010c00
 8001c74:	40011000 	.word	0x40011000
 8001c78:	40011400 	.word	0x40011400
 8001c7c:	40010400 	.word	0x40010400
 8001c80:	4b0b      	ldr	r3, [pc, #44]	; (8001cb0 <HAL_GPIO_Init+0x304>)
 8001c82:	68da      	ldr	r2, [r3, #12]
 8001c84:	69bb      	ldr	r3, [r7, #24]
 8001c86:	43db      	mvns	r3, r3
 8001c88:	4909      	ldr	r1, [pc, #36]	; (8001cb0 <HAL_GPIO_Init+0x304>)
 8001c8a:	4013      	ands	r3, r2
 8001c8c:	60cb      	str	r3, [r1, #12]
 8001c8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001c90:	3301      	adds	r3, #1
 8001c92:	627b      	str	r3, [r7, #36]	; 0x24
 8001c94:	683b      	ldr	r3, [r7, #0]
 8001c96:	681a      	ldr	r2, [r3, #0]
 8001c98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001c9a:	fa22 f303 	lsr.w	r3, r2, r3
 8001c9e:	2b00      	cmp	r3, #0
 8001ca0:	f47f ae8e 	bne.w	80019c0 <HAL_GPIO_Init+0x14>
 8001ca4:	bf00      	nop
 8001ca6:	bf00      	nop
 8001ca8:	372c      	adds	r7, #44	; 0x2c
 8001caa:	46bd      	mov	sp, r7
 8001cac:	bc80      	pop	{r7}
 8001cae:	4770      	bx	lr
 8001cb0:	40010400 	.word	0x40010400

08001cb4 <HAL_GPIO_WritePin>:
 8001cb4:	b480      	push	{r7}
 8001cb6:	b083      	sub	sp, #12
 8001cb8:	af00      	add	r7, sp, #0
 8001cba:	6078      	str	r0, [r7, #4]
 8001cbc:	460b      	mov	r3, r1
 8001cbe:	807b      	strh	r3, [r7, #2]
 8001cc0:	4613      	mov	r3, r2
 8001cc2:	707b      	strb	r3, [r7, #1]
 8001cc4:	787b      	ldrb	r3, [r7, #1]
 8001cc6:	2b00      	cmp	r3, #0
 8001cc8:	d003      	beq.n	8001cd2 <HAL_GPIO_WritePin+0x1e>
 8001cca:	887a      	ldrh	r2, [r7, #2]
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	611a      	str	r2, [r3, #16]
 8001cd0:	e003      	b.n	8001cda <HAL_GPIO_WritePin+0x26>
 8001cd2:	887b      	ldrh	r3, [r7, #2]
 8001cd4:	041a      	lsls	r2, r3, #16
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	611a      	str	r2, [r3, #16]
 8001cda:	bf00      	nop
 8001cdc:	370c      	adds	r7, #12
 8001cde:	46bd      	mov	sp, r7
 8001ce0:	bc80      	pop	{r7}
 8001ce2:	4770      	bx	lr

08001ce4 <HAL_I2C_Init>:
 8001ce4:	b580      	push	{r7, lr}
 8001ce6:	b084      	sub	sp, #16
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	6078      	str	r0, [r7, #4]
 8001cec:	687b      	ldr	r3, [r7, #4]
 8001cee:	2b00      	cmp	r3, #0
 8001cf0:	d101      	bne.n	8001cf6 <HAL_I2C_Init+0x12>
 8001cf2:	2301      	movs	r3, #1
 8001cf4:	e12b      	b.n	8001f4e <HAL_I2C_Init+0x26a>
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001cfc:	b2db      	uxtb	r3, r3
 8001cfe:	2b00      	cmp	r3, #0
 8001d00:	d106      	bne.n	8001d10 <HAL_I2C_Init+0x2c>
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	2200      	movs	r2, #0
 8001d06:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001d0a:	6878      	ldr	r0, [r7, #4]
 8001d0c:	f7ff f94a 	bl	8000fa4 <HAL_I2C_MspInit>
 8001d10:	687b      	ldr	r3, [r7, #4]
 8001d12:	2224      	movs	r2, #36	; 0x24
 8001d14:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001d18:	687b      	ldr	r3, [r7, #4]
 8001d1a:	681b      	ldr	r3, [r3, #0]
 8001d1c:	681a      	ldr	r2, [r3, #0]
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	681b      	ldr	r3, [r3, #0]
 8001d22:	f022 0201 	bic.w	r2, r2, #1
 8001d26:	601a      	str	r2, [r3, #0]
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	681a      	ldr	r2, [r3, #0]
 8001d2e:	687b      	ldr	r3, [r7, #4]
 8001d30:	681b      	ldr	r3, [r3, #0]
 8001d32:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8001d36:	601a      	str	r2, [r3, #0]
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	681a      	ldr	r2, [r3, #0]
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	681b      	ldr	r3, [r3, #0]
 8001d42:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8001d46:	601a      	str	r2, [r3, #0]
 8001d48:	f001 fc9c 	bl	8003684 <HAL_RCC_GetPCLK1Freq>
 8001d4c:	60f8      	str	r0, [r7, #12]
 8001d4e:	687b      	ldr	r3, [r7, #4]
 8001d50:	685b      	ldr	r3, [r3, #4]
 8001d52:	4a81      	ldr	r2, [pc, #516]	; (8001f58 <HAL_I2C_Init+0x274>)
 8001d54:	4293      	cmp	r3, r2
 8001d56:	d807      	bhi.n	8001d68 <HAL_I2C_Init+0x84>
 8001d58:	68fb      	ldr	r3, [r7, #12]
 8001d5a:	4a80      	ldr	r2, [pc, #512]	; (8001f5c <HAL_I2C_Init+0x278>)
 8001d5c:	4293      	cmp	r3, r2
 8001d5e:	bf94      	ite	ls
 8001d60:	2301      	movls	r3, #1
 8001d62:	2300      	movhi	r3, #0
 8001d64:	b2db      	uxtb	r3, r3
 8001d66:	e006      	b.n	8001d76 <HAL_I2C_Init+0x92>
 8001d68:	68fb      	ldr	r3, [r7, #12]
 8001d6a:	4a7d      	ldr	r2, [pc, #500]	; (8001f60 <HAL_I2C_Init+0x27c>)
 8001d6c:	4293      	cmp	r3, r2
 8001d6e:	bf94      	ite	ls
 8001d70:	2301      	movls	r3, #1
 8001d72:	2300      	movhi	r3, #0
 8001d74:	b2db      	uxtb	r3, r3
 8001d76:	2b00      	cmp	r3, #0
 8001d78:	d001      	beq.n	8001d7e <HAL_I2C_Init+0x9a>
 8001d7a:	2301      	movs	r3, #1
 8001d7c:	e0e7      	b.n	8001f4e <HAL_I2C_Init+0x26a>
 8001d7e:	68fb      	ldr	r3, [r7, #12]
 8001d80:	4a78      	ldr	r2, [pc, #480]	; (8001f64 <HAL_I2C_Init+0x280>)
 8001d82:	fba2 2303 	umull	r2, r3, r2, r3
 8001d86:	0c9b      	lsrs	r3, r3, #18
 8001d88:	60bb      	str	r3, [r7, #8]
 8001d8a:	687b      	ldr	r3, [r7, #4]
 8001d8c:	681b      	ldr	r3, [r3, #0]
 8001d8e:	685b      	ldr	r3, [r3, #4]
 8001d90:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001d94:	687b      	ldr	r3, [r7, #4]
 8001d96:	681b      	ldr	r3, [r3, #0]
 8001d98:	68ba      	ldr	r2, [r7, #8]
 8001d9a:	430a      	orrs	r2, r1
 8001d9c:	605a      	str	r2, [r3, #4]
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	6a1b      	ldr	r3, [r3, #32]
 8001da4:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8001da8:	687b      	ldr	r3, [r7, #4]
 8001daa:	685b      	ldr	r3, [r3, #4]
 8001dac:	4a6a      	ldr	r2, [pc, #424]	; (8001f58 <HAL_I2C_Init+0x274>)
 8001dae:	4293      	cmp	r3, r2
 8001db0:	d802      	bhi.n	8001db8 <HAL_I2C_Init+0xd4>
 8001db2:	68bb      	ldr	r3, [r7, #8]
 8001db4:	3301      	adds	r3, #1
 8001db6:	e009      	b.n	8001dcc <HAL_I2C_Init+0xe8>
 8001db8:	68bb      	ldr	r3, [r7, #8]
 8001dba:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8001dbe:	fb02 f303 	mul.w	r3, r2, r3
 8001dc2:	4a69      	ldr	r2, [pc, #420]	; (8001f68 <HAL_I2C_Init+0x284>)
 8001dc4:	fba2 2303 	umull	r2, r3, r2, r3
 8001dc8:	099b      	lsrs	r3, r3, #6
 8001dca:	3301      	adds	r3, #1
 8001dcc:	687a      	ldr	r2, [r7, #4]
 8001dce:	6812      	ldr	r2, [r2, #0]
 8001dd0:	430b      	orrs	r3, r1
 8001dd2:	6213      	str	r3, [r2, #32]
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	681b      	ldr	r3, [r3, #0]
 8001dd8:	69db      	ldr	r3, [r3, #28]
 8001dda:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8001dde:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8001de2:	687b      	ldr	r3, [r7, #4]
 8001de4:	685b      	ldr	r3, [r3, #4]
 8001de6:	495c      	ldr	r1, [pc, #368]	; (8001f58 <HAL_I2C_Init+0x274>)
 8001de8:	428b      	cmp	r3, r1
 8001dea:	d819      	bhi.n	8001e20 <HAL_I2C_Init+0x13c>
 8001dec:	68fb      	ldr	r3, [r7, #12]
 8001dee:	1e59      	subs	r1, r3, #1
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	685b      	ldr	r3, [r3, #4]
 8001df4:	005b      	lsls	r3, r3, #1
 8001df6:	fbb1 f3f3 	udiv	r3, r1, r3
 8001dfa:	1c59      	adds	r1, r3, #1
 8001dfc:	f640 73fc 	movw	r3, #4092	; 0xffc
 8001e00:	400b      	ands	r3, r1
 8001e02:	2b00      	cmp	r3, #0
 8001e04:	d00a      	beq.n	8001e1c <HAL_I2C_Init+0x138>
 8001e06:	68fb      	ldr	r3, [r7, #12]
 8001e08:	1e59      	subs	r1, r3, #1
 8001e0a:	687b      	ldr	r3, [r7, #4]
 8001e0c:	685b      	ldr	r3, [r3, #4]
 8001e0e:	005b      	lsls	r3, r3, #1
 8001e10:	fbb1 f3f3 	udiv	r3, r1, r3
 8001e14:	3301      	adds	r3, #1
 8001e16:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001e1a:	e051      	b.n	8001ec0 <HAL_I2C_Init+0x1dc>
 8001e1c:	2304      	movs	r3, #4
 8001e1e:	e04f      	b.n	8001ec0 <HAL_I2C_Init+0x1dc>
 8001e20:	687b      	ldr	r3, [r7, #4]
 8001e22:	689b      	ldr	r3, [r3, #8]
 8001e24:	2b00      	cmp	r3, #0
 8001e26:	d111      	bne.n	8001e4c <HAL_I2C_Init+0x168>
 8001e28:	68fb      	ldr	r3, [r7, #12]
 8001e2a:	1e58      	subs	r0, r3, #1
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	6859      	ldr	r1, [r3, #4]
 8001e30:	460b      	mov	r3, r1
 8001e32:	005b      	lsls	r3, r3, #1
 8001e34:	440b      	add	r3, r1
 8001e36:	fbb0 f3f3 	udiv	r3, r0, r3
 8001e3a:	3301      	adds	r3, #1
 8001e3c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001e40:	2b00      	cmp	r3, #0
 8001e42:	bf0c      	ite	eq
 8001e44:	2301      	moveq	r3, #1
 8001e46:	2300      	movne	r3, #0
 8001e48:	b2db      	uxtb	r3, r3
 8001e4a:	e012      	b.n	8001e72 <HAL_I2C_Init+0x18e>
 8001e4c:	68fb      	ldr	r3, [r7, #12]
 8001e4e:	1e58      	subs	r0, r3, #1
 8001e50:	687b      	ldr	r3, [r7, #4]
 8001e52:	6859      	ldr	r1, [r3, #4]
 8001e54:	460b      	mov	r3, r1
 8001e56:	009b      	lsls	r3, r3, #2
 8001e58:	440b      	add	r3, r1
 8001e5a:	0099      	lsls	r1, r3, #2
 8001e5c:	440b      	add	r3, r1
 8001e5e:	fbb0 f3f3 	udiv	r3, r0, r3
 8001e62:	3301      	adds	r3, #1
 8001e64:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001e68:	2b00      	cmp	r3, #0
 8001e6a:	bf0c      	ite	eq
 8001e6c:	2301      	moveq	r3, #1
 8001e6e:	2300      	movne	r3, #0
 8001e70:	b2db      	uxtb	r3, r3
 8001e72:	2b00      	cmp	r3, #0
 8001e74:	d001      	beq.n	8001e7a <HAL_I2C_Init+0x196>
 8001e76:	2301      	movs	r3, #1
 8001e78:	e022      	b.n	8001ec0 <HAL_I2C_Init+0x1dc>
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	689b      	ldr	r3, [r3, #8]
 8001e7e:	2b00      	cmp	r3, #0
 8001e80:	d10e      	bne.n	8001ea0 <HAL_I2C_Init+0x1bc>
 8001e82:	68fb      	ldr	r3, [r7, #12]
 8001e84:	1e58      	subs	r0, r3, #1
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	6859      	ldr	r1, [r3, #4]
 8001e8a:	460b      	mov	r3, r1
 8001e8c:	005b      	lsls	r3, r3, #1
 8001e8e:	440b      	add	r3, r1
 8001e90:	fbb0 f3f3 	udiv	r3, r0, r3
 8001e94:	3301      	adds	r3, #1
 8001e96:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001e9a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001e9e:	e00f      	b.n	8001ec0 <HAL_I2C_Init+0x1dc>
 8001ea0:	68fb      	ldr	r3, [r7, #12]
 8001ea2:	1e58      	subs	r0, r3, #1
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	6859      	ldr	r1, [r3, #4]
 8001ea8:	460b      	mov	r3, r1
 8001eaa:	009b      	lsls	r3, r3, #2
 8001eac:	440b      	add	r3, r1
 8001eae:	0099      	lsls	r1, r3, #2
 8001eb0:	440b      	add	r3, r1
 8001eb2:	fbb0 f3f3 	udiv	r3, r0, r3
 8001eb6:	3301      	adds	r3, #1
 8001eb8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001ebc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001ec0:	6879      	ldr	r1, [r7, #4]
 8001ec2:	6809      	ldr	r1, [r1, #0]
 8001ec4:	4313      	orrs	r3, r2
 8001ec6:	61cb      	str	r3, [r1, #28]
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	681b      	ldr	r3, [r3, #0]
 8001ecc:	681b      	ldr	r3, [r3, #0]
 8001ece:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8001ed2:	687b      	ldr	r3, [r7, #4]
 8001ed4:	69da      	ldr	r2, [r3, #28]
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	6a1b      	ldr	r3, [r3, #32]
 8001eda:	431a      	orrs	r2, r3
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	681b      	ldr	r3, [r3, #0]
 8001ee0:	430a      	orrs	r2, r1
 8001ee2:	601a      	str	r2, [r3, #0]
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	681b      	ldr	r3, [r3, #0]
 8001ee8:	689b      	ldr	r3, [r3, #8]
 8001eea:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8001eee:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8001ef2:	687a      	ldr	r2, [r7, #4]
 8001ef4:	6911      	ldr	r1, [r2, #16]
 8001ef6:	687a      	ldr	r2, [r7, #4]
 8001ef8:	68d2      	ldr	r2, [r2, #12]
 8001efa:	4311      	orrs	r1, r2
 8001efc:	687a      	ldr	r2, [r7, #4]
 8001efe:	6812      	ldr	r2, [r2, #0]
 8001f00:	430b      	orrs	r3, r1
 8001f02:	6093      	str	r3, [r2, #8]
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	681b      	ldr	r3, [r3, #0]
 8001f08:	68db      	ldr	r3, [r3, #12]
 8001f0a:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	695a      	ldr	r2, [r3, #20]
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	699b      	ldr	r3, [r3, #24]
 8001f16:	431a      	orrs	r2, r3
 8001f18:	687b      	ldr	r3, [r7, #4]
 8001f1a:	681b      	ldr	r3, [r3, #0]
 8001f1c:	430a      	orrs	r2, r1
 8001f1e:	60da      	str	r2, [r3, #12]
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	681b      	ldr	r3, [r3, #0]
 8001f24:	681a      	ldr	r2, [r3, #0]
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	f042 0201 	orr.w	r2, r2, #1
 8001f2e:	601a      	str	r2, [r3, #0]
 8001f30:	687b      	ldr	r3, [r7, #4]
 8001f32:	2200      	movs	r2, #0
 8001f34:	641a      	str	r2, [r3, #64]	; 0x40
 8001f36:	687b      	ldr	r3, [r7, #4]
 8001f38:	2220      	movs	r2, #32
 8001f3a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	2200      	movs	r2, #0
 8001f42:	631a      	str	r2, [r3, #48]	; 0x30
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	2200      	movs	r2, #0
 8001f48:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8001f4c:	2300      	movs	r3, #0
 8001f4e:	4618      	mov	r0, r3
 8001f50:	3710      	adds	r7, #16
 8001f52:	46bd      	mov	sp, r7
 8001f54:	bd80      	pop	{r7, pc}
 8001f56:	bf00      	nop
 8001f58:	000186a0 	.word	0x000186a0
 8001f5c:	001e847f 	.word	0x001e847f
 8001f60:	003d08ff 	.word	0x003d08ff
 8001f64:	431bde83 	.word	0x431bde83
 8001f68:	10624dd3 	.word	0x10624dd3

08001f6c <HAL_I2C_Master_Transmit>:
 8001f6c:	b580      	push	{r7, lr}
 8001f6e:	b088      	sub	sp, #32
 8001f70:	af02      	add	r7, sp, #8
 8001f72:	60f8      	str	r0, [r7, #12]
 8001f74:	607a      	str	r2, [r7, #4]
 8001f76:	461a      	mov	r2, r3
 8001f78:	460b      	mov	r3, r1
 8001f7a:	817b      	strh	r3, [r7, #10]
 8001f7c:	4613      	mov	r3, r2
 8001f7e:	813b      	strh	r3, [r7, #8]
 8001f80:	f7ff fb28 	bl	80015d4 <HAL_GetTick>
 8001f84:	6178      	str	r0, [r7, #20]
 8001f86:	68fb      	ldr	r3, [r7, #12]
 8001f88:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001f8c:	b2db      	uxtb	r3, r3
 8001f8e:	2b20      	cmp	r3, #32
 8001f90:	f040 80e0 	bne.w	8002154 <HAL_I2C_Master_Transmit+0x1e8>
 8001f94:	697b      	ldr	r3, [r7, #20]
 8001f96:	9300      	str	r3, [sp, #0]
 8001f98:	2319      	movs	r3, #25
 8001f9a:	2201      	movs	r2, #1
 8001f9c:	4970      	ldr	r1, [pc, #448]	; (8002160 <HAL_I2C_Master_Transmit+0x1f4>)
 8001f9e:	68f8      	ldr	r0, [r7, #12]
 8001fa0:	f000 fdc0 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 8001fa4:	4603      	mov	r3, r0
 8001fa6:	2b00      	cmp	r3, #0
 8001fa8:	d001      	beq.n	8001fae <HAL_I2C_Master_Transmit+0x42>
 8001faa:	2302      	movs	r3, #2
 8001fac:	e0d3      	b.n	8002156 <HAL_I2C_Master_Transmit+0x1ea>
 8001fae:	68fb      	ldr	r3, [r7, #12]
 8001fb0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001fb4:	2b01      	cmp	r3, #1
 8001fb6:	d101      	bne.n	8001fbc <HAL_I2C_Master_Transmit+0x50>
 8001fb8:	2302      	movs	r3, #2
 8001fba:	e0cc      	b.n	8002156 <HAL_I2C_Master_Transmit+0x1ea>
 8001fbc:	68fb      	ldr	r3, [r7, #12]
 8001fbe:	2201      	movs	r2, #1
 8001fc0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001fc4:	68fb      	ldr	r3, [r7, #12]
 8001fc6:	681b      	ldr	r3, [r3, #0]
 8001fc8:	681b      	ldr	r3, [r3, #0]
 8001fca:	f003 0301 	and.w	r3, r3, #1
 8001fce:	2b01      	cmp	r3, #1
 8001fd0:	d007      	beq.n	8001fe2 <HAL_I2C_Master_Transmit+0x76>
 8001fd2:	68fb      	ldr	r3, [r7, #12]
 8001fd4:	681b      	ldr	r3, [r3, #0]
 8001fd6:	681a      	ldr	r2, [r3, #0]
 8001fd8:	68fb      	ldr	r3, [r7, #12]
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	f042 0201 	orr.w	r2, r2, #1
 8001fe0:	601a      	str	r2, [r3, #0]
 8001fe2:	68fb      	ldr	r3, [r7, #12]
 8001fe4:	681b      	ldr	r3, [r3, #0]
 8001fe6:	681a      	ldr	r2, [r3, #0]
 8001fe8:	68fb      	ldr	r3, [r7, #12]
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001ff0:	601a      	str	r2, [r3, #0]
 8001ff2:	68fb      	ldr	r3, [r7, #12]
 8001ff4:	2221      	movs	r2, #33	; 0x21
 8001ff6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8001ffa:	68fb      	ldr	r3, [r7, #12]
 8001ffc:	2210      	movs	r2, #16
 8001ffe:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002002:	68fb      	ldr	r3, [r7, #12]
 8002004:	2200      	movs	r2, #0
 8002006:	641a      	str	r2, [r3, #64]	; 0x40
 8002008:	68fb      	ldr	r3, [r7, #12]
 800200a:	687a      	ldr	r2, [r7, #4]
 800200c:	625a      	str	r2, [r3, #36]	; 0x24
 800200e:	68fb      	ldr	r3, [r7, #12]
 8002010:	893a      	ldrh	r2, [r7, #8]
 8002012:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002014:	68fb      	ldr	r3, [r7, #12]
 8002016:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002018:	b29a      	uxth	r2, r3
 800201a:	68fb      	ldr	r3, [r7, #12]
 800201c:	851a      	strh	r2, [r3, #40]	; 0x28
 800201e:	68fb      	ldr	r3, [r7, #12]
 8002020:	4a50      	ldr	r2, [pc, #320]	; (8002164 <HAL_I2C_Master_Transmit+0x1f8>)
 8002022:	62da      	str	r2, [r3, #44]	; 0x2c
 8002024:	8979      	ldrh	r1, [r7, #10]
 8002026:	697b      	ldr	r3, [r7, #20]
 8002028:	6a3a      	ldr	r2, [r7, #32]
 800202a:	68f8      	ldr	r0, [r7, #12]
 800202c:	f000 fc2a 	bl	8002884 <I2C_MasterRequestWrite>
 8002030:	4603      	mov	r3, r0
 8002032:	2b00      	cmp	r3, #0
 8002034:	d001      	beq.n	800203a <HAL_I2C_Master_Transmit+0xce>
 8002036:	2301      	movs	r3, #1
 8002038:	e08d      	b.n	8002156 <HAL_I2C_Master_Transmit+0x1ea>
 800203a:	2300      	movs	r3, #0
 800203c:	613b      	str	r3, [r7, #16]
 800203e:	68fb      	ldr	r3, [r7, #12]
 8002040:	681b      	ldr	r3, [r3, #0]
 8002042:	695b      	ldr	r3, [r3, #20]
 8002044:	613b      	str	r3, [r7, #16]
 8002046:	68fb      	ldr	r3, [r7, #12]
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	699b      	ldr	r3, [r3, #24]
 800204c:	613b      	str	r3, [r7, #16]
 800204e:	693b      	ldr	r3, [r7, #16]
 8002050:	e066      	b.n	8002120 <HAL_I2C_Master_Transmit+0x1b4>
 8002052:	697a      	ldr	r2, [r7, #20]
 8002054:	6a39      	ldr	r1, [r7, #32]
 8002056:	68f8      	ldr	r0, [r7, #12]
 8002058:	f000 fe3a 	bl	8002cd0 <I2C_WaitOnTXEFlagUntilTimeout>
 800205c:	4603      	mov	r3, r0
 800205e:	2b00      	cmp	r3, #0
 8002060:	d00d      	beq.n	800207e <HAL_I2C_Master_Transmit+0x112>
 8002062:	68fb      	ldr	r3, [r7, #12]
 8002064:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002066:	2b04      	cmp	r3, #4
 8002068:	d107      	bne.n	800207a <HAL_I2C_Master_Transmit+0x10e>
 800206a:	68fb      	ldr	r3, [r7, #12]
 800206c:	681b      	ldr	r3, [r3, #0]
 800206e:	681a      	ldr	r2, [r3, #0]
 8002070:	68fb      	ldr	r3, [r7, #12]
 8002072:	681b      	ldr	r3, [r3, #0]
 8002074:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002078:	601a      	str	r2, [r3, #0]
 800207a:	2301      	movs	r3, #1
 800207c:	e06b      	b.n	8002156 <HAL_I2C_Master_Transmit+0x1ea>
 800207e:	68fb      	ldr	r3, [r7, #12]
 8002080:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002082:	781a      	ldrb	r2, [r3, #0]
 8002084:	68fb      	ldr	r3, [r7, #12]
 8002086:	681b      	ldr	r3, [r3, #0]
 8002088:	611a      	str	r2, [r3, #16]
 800208a:	68fb      	ldr	r3, [r7, #12]
 800208c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800208e:	1c5a      	adds	r2, r3, #1
 8002090:	68fb      	ldr	r3, [r7, #12]
 8002092:	625a      	str	r2, [r3, #36]	; 0x24
 8002094:	68fb      	ldr	r3, [r7, #12]
 8002096:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002098:	b29b      	uxth	r3, r3
 800209a:	3b01      	subs	r3, #1
 800209c:	b29a      	uxth	r2, r3
 800209e:	68fb      	ldr	r3, [r7, #12]
 80020a0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80020a2:	68fb      	ldr	r3, [r7, #12]
 80020a4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80020a6:	3b01      	subs	r3, #1
 80020a8:	b29a      	uxth	r2, r3
 80020aa:	68fb      	ldr	r3, [r7, #12]
 80020ac:	851a      	strh	r2, [r3, #40]	; 0x28
 80020ae:	68fb      	ldr	r3, [r7, #12]
 80020b0:	681b      	ldr	r3, [r3, #0]
 80020b2:	695b      	ldr	r3, [r3, #20]
 80020b4:	f003 0304 	and.w	r3, r3, #4
 80020b8:	2b04      	cmp	r3, #4
 80020ba:	d11b      	bne.n	80020f4 <HAL_I2C_Master_Transmit+0x188>
 80020bc:	68fb      	ldr	r3, [r7, #12]
 80020be:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	d017      	beq.n	80020f4 <HAL_I2C_Master_Transmit+0x188>
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020c8:	781a      	ldrb	r2, [r3, #0]
 80020ca:	68fb      	ldr	r3, [r7, #12]
 80020cc:	681b      	ldr	r3, [r3, #0]
 80020ce:	611a      	str	r2, [r3, #16]
 80020d0:	68fb      	ldr	r3, [r7, #12]
 80020d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020d4:	1c5a      	adds	r2, r3, #1
 80020d6:	68fb      	ldr	r3, [r7, #12]
 80020d8:	625a      	str	r2, [r3, #36]	; 0x24
 80020da:	68fb      	ldr	r3, [r7, #12]
 80020dc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80020de:	b29b      	uxth	r3, r3
 80020e0:	3b01      	subs	r3, #1
 80020e2:	b29a      	uxth	r2, r3
 80020e4:	68fb      	ldr	r3, [r7, #12]
 80020e6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80020e8:	68fb      	ldr	r3, [r7, #12]
 80020ea:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80020ec:	3b01      	subs	r3, #1
 80020ee:	b29a      	uxth	r2, r3
 80020f0:	68fb      	ldr	r3, [r7, #12]
 80020f2:	851a      	strh	r2, [r3, #40]	; 0x28
 80020f4:	697a      	ldr	r2, [r7, #20]
 80020f6:	6a39      	ldr	r1, [r7, #32]
 80020f8:	68f8      	ldr	r0, [r7, #12]
 80020fa:	f000 fe2a 	bl	8002d52 <I2C_WaitOnBTFFlagUntilTimeout>
 80020fe:	4603      	mov	r3, r0
 8002100:	2b00      	cmp	r3, #0
 8002102:	d00d      	beq.n	8002120 <HAL_I2C_Master_Transmit+0x1b4>
 8002104:	68fb      	ldr	r3, [r7, #12]
 8002106:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002108:	2b04      	cmp	r3, #4
 800210a:	d107      	bne.n	800211c <HAL_I2C_Master_Transmit+0x1b0>
 800210c:	68fb      	ldr	r3, [r7, #12]
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	681a      	ldr	r2, [r3, #0]
 8002112:	68fb      	ldr	r3, [r7, #12]
 8002114:	681b      	ldr	r3, [r3, #0]
 8002116:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800211a:	601a      	str	r2, [r3, #0]
 800211c:	2301      	movs	r3, #1
 800211e:	e01a      	b.n	8002156 <HAL_I2C_Master_Transmit+0x1ea>
 8002120:	68fb      	ldr	r3, [r7, #12]
 8002122:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002124:	2b00      	cmp	r3, #0
 8002126:	d194      	bne.n	8002052 <HAL_I2C_Master_Transmit+0xe6>
 8002128:	68fb      	ldr	r3, [r7, #12]
 800212a:	681b      	ldr	r3, [r3, #0]
 800212c:	681a      	ldr	r2, [r3, #0]
 800212e:	68fb      	ldr	r3, [r7, #12]
 8002130:	681b      	ldr	r3, [r3, #0]
 8002132:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002136:	601a      	str	r2, [r3, #0]
 8002138:	68fb      	ldr	r3, [r7, #12]
 800213a:	2220      	movs	r2, #32
 800213c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002140:	68fb      	ldr	r3, [r7, #12]
 8002142:	2200      	movs	r2, #0
 8002144:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002148:	68fb      	ldr	r3, [r7, #12]
 800214a:	2200      	movs	r2, #0
 800214c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002150:	2300      	movs	r3, #0
 8002152:	e000      	b.n	8002156 <HAL_I2C_Master_Transmit+0x1ea>
 8002154:	2302      	movs	r3, #2
 8002156:	4618      	mov	r0, r3
 8002158:	3718      	adds	r7, #24
 800215a:	46bd      	mov	sp, r7
 800215c:	bd80      	pop	{r7, pc}
 800215e:	bf00      	nop
 8002160:	00100002 	.word	0x00100002
 8002164:	ffff0000 	.word	0xffff0000

08002168 <HAL_I2C_Master_Receive>:
 8002168:	b580      	push	{r7, lr}
 800216a:	b08c      	sub	sp, #48	; 0x30
 800216c:	af02      	add	r7, sp, #8
 800216e:	60f8      	str	r0, [r7, #12]
 8002170:	607a      	str	r2, [r7, #4]
 8002172:	461a      	mov	r2, r3
 8002174:	460b      	mov	r3, r1
 8002176:	817b      	strh	r3, [r7, #10]
 8002178:	4613      	mov	r3, r2
 800217a:	813b      	strh	r3, [r7, #8]
 800217c:	2300      	movs	r3, #0
 800217e:	623b      	str	r3, [r7, #32]
 8002180:	f7ff fa28 	bl	80015d4 <HAL_GetTick>
 8002184:	6278      	str	r0, [r7, #36]	; 0x24
 8002186:	68fb      	ldr	r3, [r7, #12]
 8002188:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800218c:	b2db      	uxtb	r3, r3
 800218e:	2b20      	cmp	r3, #32
 8002190:	f040 823f 	bne.w	8002612 <HAL_I2C_Master_Receive+0x4aa>
 8002194:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002196:	9300      	str	r3, [sp, #0]
 8002198:	2319      	movs	r3, #25
 800219a:	2201      	movs	r2, #1
 800219c:	497f      	ldr	r1, [pc, #508]	; (800239c <HAL_I2C_Master_Receive+0x234>)
 800219e:	68f8      	ldr	r0, [r7, #12]
 80021a0:	f000 fcc0 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 80021a4:	4603      	mov	r3, r0
 80021a6:	2b00      	cmp	r3, #0
 80021a8:	d001      	beq.n	80021ae <HAL_I2C_Master_Receive+0x46>
 80021aa:	2302      	movs	r3, #2
 80021ac:	e232      	b.n	8002614 <HAL_I2C_Master_Receive+0x4ac>
 80021ae:	68fb      	ldr	r3, [r7, #12]
 80021b0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80021b4:	2b01      	cmp	r3, #1
 80021b6:	d101      	bne.n	80021bc <HAL_I2C_Master_Receive+0x54>
 80021b8:	2302      	movs	r3, #2
 80021ba:	e22b      	b.n	8002614 <HAL_I2C_Master_Receive+0x4ac>
 80021bc:	68fb      	ldr	r3, [r7, #12]
 80021be:	2201      	movs	r2, #1
 80021c0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80021c4:	68fb      	ldr	r3, [r7, #12]
 80021c6:	681b      	ldr	r3, [r3, #0]
 80021c8:	681b      	ldr	r3, [r3, #0]
 80021ca:	f003 0301 	and.w	r3, r3, #1
 80021ce:	2b01      	cmp	r3, #1
 80021d0:	d007      	beq.n	80021e2 <HAL_I2C_Master_Receive+0x7a>
 80021d2:	68fb      	ldr	r3, [r7, #12]
 80021d4:	681b      	ldr	r3, [r3, #0]
 80021d6:	681a      	ldr	r2, [r3, #0]
 80021d8:	68fb      	ldr	r3, [r7, #12]
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	f042 0201 	orr.w	r2, r2, #1
 80021e0:	601a      	str	r2, [r3, #0]
 80021e2:	68fb      	ldr	r3, [r7, #12]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	681a      	ldr	r2, [r3, #0]
 80021e8:	68fb      	ldr	r3, [r7, #12]
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80021f0:	601a      	str	r2, [r3, #0]
 80021f2:	68fb      	ldr	r3, [r7, #12]
 80021f4:	2222      	movs	r2, #34	; 0x22
 80021f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80021fa:	68fb      	ldr	r3, [r7, #12]
 80021fc:	2210      	movs	r2, #16
 80021fe:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002202:	68fb      	ldr	r3, [r7, #12]
 8002204:	2200      	movs	r2, #0
 8002206:	641a      	str	r2, [r3, #64]	; 0x40
 8002208:	68fb      	ldr	r3, [r7, #12]
 800220a:	687a      	ldr	r2, [r7, #4]
 800220c:	625a      	str	r2, [r3, #36]	; 0x24
 800220e:	68fb      	ldr	r3, [r7, #12]
 8002210:	893a      	ldrh	r2, [r7, #8]
 8002212:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002214:	68fb      	ldr	r3, [r7, #12]
 8002216:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002218:	b29a      	uxth	r2, r3
 800221a:	68fb      	ldr	r3, [r7, #12]
 800221c:	851a      	strh	r2, [r3, #40]	; 0x28
 800221e:	68fb      	ldr	r3, [r7, #12]
 8002220:	4a5f      	ldr	r2, [pc, #380]	; (80023a0 <HAL_I2C_Master_Receive+0x238>)
 8002222:	62da      	str	r2, [r3, #44]	; 0x2c
 8002224:	8979      	ldrh	r1, [r7, #10]
 8002226:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002228:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800222a:	68f8      	ldr	r0, [r7, #12]
 800222c:	f000 fbac 	bl	8002988 <I2C_MasterRequestRead>
 8002230:	4603      	mov	r3, r0
 8002232:	2b00      	cmp	r3, #0
 8002234:	d001      	beq.n	800223a <HAL_I2C_Master_Receive+0xd2>
 8002236:	2301      	movs	r3, #1
 8002238:	e1ec      	b.n	8002614 <HAL_I2C_Master_Receive+0x4ac>
 800223a:	68fb      	ldr	r3, [r7, #12]
 800223c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800223e:	2b00      	cmp	r3, #0
 8002240:	d113      	bne.n	800226a <HAL_I2C_Master_Receive+0x102>
 8002242:	2300      	movs	r3, #0
 8002244:	61fb      	str	r3, [r7, #28]
 8002246:	68fb      	ldr	r3, [r7, #12]
 8002248:	681b      	ldr	r3, [r3, #0]
 800224a:	695b      	ldr	r3, [r3, #20]
 800224c:	61fb      	str	r3, [r7, #28]
 800224e:	68fb      	ldr	r3, [r7, #12]
 8002250:	681b      	ldr	r3, [r3, #0]
 8002252:	699b      	ldr	r3, [r3, #24]
 8002254:	61fb      	str	r3, [r7, #28]
 8002256:	69fb      	ldr	r3, [r7, #28]
 8002258:	68fb      	ldr	r3, [r7, #12]
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	681a      	ldr	r2, [r3, #0]
 800225e:	68fb      	ldr	r3, [r7, #12]
 8002260:	681b      	ldr	r3, [r3, #0]
 8002262:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002266:	601a      	str	r2, [r3, #0]
 8002268:	e1c0      	b.n	80025ec <HAL_I2C_Master_Receive+0x484>
 800226a:	68fb      	ldr	r3, [r7, #12]
 800226c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800226e:	2b01      	cmp	r3, #1
 8002270:	d11e      	bne.n	80022b0 <HAL_I2C_Master_Receive+0x148>
 8002272:	68fb      	ldr	r3, [r7, #12]
 8002274:	681b      	ldr	r3, [r3, #0]
 8002276:	681a      	ldr	r2, [r3, #0]
 8002278:	68fb      	ldr	r3, [r7, #12]
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002280:	601a      	str	r2, [r3, #0]
 8002282:	b672      	cpsid	i
 8002284:	bf00      	nop
 8002286:	2300      	movs	r3, #0
 8002288:	61bb      	str	r3, [r7, #24]
 800228a:	68fb      	ldr	r3, [r7, #12]
 800228c:	681b      	ldr	r3, [r3, #0]
 800228e:	695b      	ldr	r3, [r3, #20]
 8002290:	61bb      	str	r3, [r7, #24]
 8002292:	68fb      	ldr	r3, [r7, #12]
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	699b      	ldr	r3, [r3, #24]
 8002298:	61bb      	str	r3, [r7, #24]
 800229a:	69bb      	ldr	r3, [r7, #24]
 800229c:	68fb      	ldr	r3, [r7, #12]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	681a      	ldr	r2, [r3, #0]
 80022a2:	68fb      	ldr	r3, [r7, #12]
 80022a4:	681b      	ldr	r3, [r3, #0]
 80022a6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80022aa:	601a      	str	r2, [r3, #0]
 80022ac:	b662      	cpsie	i
 80022ae:	e035      	b.n	800231c <HAL_I2C_Master_Receive+0x1b4>
 80022b0:	68fb      	ldr	r3, [r7, #12]
 80022b2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80022b4:	2b02      	cmp	r3, #2
 80022b6:	d11e      	bne.n	80022f6 <HAL_I2C_Master_Receive+0x18e>
 80022b8:	68fb      	ldr	r3, [r7, #12]
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	681a      	ldr	r2, [r3, #0]
 80022be:	68fb      	ldr	r3, [r7, #12]
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80022c6:	601a      	str	r2, [r3, #0]
 80022c8:	b672      	cpsid	i
 80022ca:	bf00      	nop
 80022cc:	2300      	movs	r3, #0
 80022ce:	617b      	str	r3, [r7, #20]
 80022d0:	68fb      	ldr	r3, [r7, #12]
 80022d2:	681b      	ldr	r3, [r3, #0]
 80022d4:	695b      	ldr	r3, [r3, #20]
 80022d6:	617b      	str	r3, [r7, #20]
 80022d8:	68fb      	ldr	r3, [r7, #12]
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	699b      	ldr	r3, [r3, #24]
 80022de:	617b      	str	r3, [r7, #20]
 80022e0:	697b      	ldr	r3, [r7, #20]
 80022e2:	68fb      	ldr	r3, [r7, #12]
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	681a      	ldr	r2, [r3, #0]
 80022e8:	68fb      	ldr	r3, [r7, #12]
 80022ea:	681b      	ldr	r3, [r3, #0]
 80022ec:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80022f0:	601a      	str	r2, [r3, #0]
 80022f2:	b662      	cpsie	i
 80022f4:	e012      	b.n	800231c <HAL_I2C_Master_Receive+0x1b4>
 80022f6:	68fb      	ldr	r3, [r7, #12]
 80022f8:	681b      	ldr	r3, [r3, #0]
 80022fa:	681a      	ldr	r2, [r3, #0]
 80022fc:	68fb      	ldr	r3, [r7, #12]
 80022fe:	681b      	ldr	r3, [r3, #0]
 8002300:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8002304:	601a      	str	r2, [r3, #0]
 8002306:	2300      	movs	r3, #0
 8002308:	613b      	str	r3, [r7, #16]
 800230a:	68fb      	ldr	r3, [r7, #12]
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	695b      	ldr	r3, [r3, #20]
 8002310:	613b      	str	r3, [r7, #16]
 8002312:	68fb      	ldr	r3, [r7, #12]
 8002314:	681b      	ldr	r3, [r3, #0]
 8002316:	699b      	ldr	r3, [r3, #24]
 8002318:	613b      	str	r3, [r7, #16]
 800231a:	693b      	ldr	r3, [r7, #16]
 800231c:	e166      	b.n	80025ec <HAL_I2C_Master_Receive+0x484>
 800231e:	68fb      	ldr	r3, [r7, #12]
 8002320:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002322:	2b03      	cmp	r3, #3
 8002324:	f200 811f 	bhi.w	8002566 <HAL_I2C_Master_Receive+0x3fe>
 8002328:	68fb      	ldr	r3, [r7, #12]
 800232a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800232c:	2b01      	cmp	r3, #1
 800232e:	d123      	bne.n	8002378 <HAL_I2C_Master_Receive+0x210>
 8002330:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002332:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8002334:	68f8      	ldr	r0, [r7, #12]
 8002336:	f000 fd4d 	bl	8002dd4 <I2C_WaitOnRXNEFlagUntilTimeout>
 800233a:	4603      	mov	r3, r0
 800233c:	2b00      	cmp	r3, #0
 800233e:	d001      	beq.n	8002344 <HAL_I2C_Master_Receive+0x1dc>
 8002340:	2301      	movs	r3, #1
 8002342:	e167      	b.n	8002614 <HAL_I2C_Master_Receive+0x4ac>
 8002344:	68fb      	ldr	r3, [r7, #12]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	691a      	ldr	r2, [r3, #16]
 800234a:	68fb      	ldr	r3, [r7, #12]
 800234c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800234e:	b2d2      	uxtb	r2, r2
 8002350:	701a      	strb	r2, [r3, #0]
 8002352:	68fb      	ldr	r3, [r7, #12]
 8002354:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002356:	1c5a      	adds	r2, r3, #1
 8002358:	68fb      	ldr	r3, [r7, #12]
 800235a:	625a      	str	r2, [r3, #36]	; 0x24
 800235c:	68fb      	ldr	r3, [r7, #12]
 800235e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002360:	3b01      	subs	r3, #1
 8002362:	b29a      	uxth	r2, r3
 8002364:	68fb      	ldr	r3, [r7, #12]
 8002366:	851a      	strh	r2, [r3, #40]	; 0x28
 8002368:	68fb      	ldr	r3, [r7, #12]
 800236a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800236c:	b29b      	uxth	r3, r3
 800236e:	3b01      	subs	r3, #1
 8002370:	b29a      	uxth	r2, r3
 8002372:	68fb      	ldr	r3, [r7, #12]
 8002374:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002376:	e139      	b.n	80025ec <HAL_I2C_Master_Receive+0x484>
 8002378:	68fb      	ldr	r3, [r7, #12]
 800237a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800237c:	2b02      	cmp	r3, #2
 800237e:	d152      	bne.n	8002426 <HAL_I2C_Master_Receive+0x2be>
 8002380:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002382:	9300      	str	r3, [sp, #0]
 8002384:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002386:	2200      	movs	r2, #0
 8002388:	4906      	ldr	r1, [pc, #24]	; (80023a4 <HAL_I2C_Master_Receive+0x23c>)
 800238a:	68f8      	ldr	r0, [r7, #12]
 800238c:	f000 fbca 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 8002390:	4603      	mov	r3, r0
 8002392:	2b00      	cmp	r3, #0
 8002394:	d008      	beq.n	80023a8 <HAL_I2C_Master_Receive+0x240>
 8002396:	2301      	movs	r3, #1
 8002398:	e13c      	b.n	8002614 <HAL_I2C_Master_Receive+0x4ac>
 800239a:	bf00      	nop
 800239c:	00100002 	.word	0x00100002
 80023a0:	ffff0000 	.word	0xffff0000
 80023a4:	00010004 	.word	0x00010004
 80023a8:	b672      	cpsid	i
 80023aa:	bf00      	nop
 80023ac:	68fb      	ldr	r3, [r7, #12]
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	681a      	ldr	r2, [r3, #0]
 80023b2:	68fb      	ldr	r3, [r7, #12]
 80023b4:	681b      	ldr	r3, [r3, #0]
 80023b6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80023ba:	601a      	str	r2, [r3, #0]
 80023bc:	68fb      	ldr	r3, [r7, #12]
 80023be:	681b      	ldr	r3, [r3, #0]
 80023c0:	691a      	ldr	r2, [r3, #16]
 80023c2:	68fb      	ldr	r3, [r7, #12]
 80023c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023c6:	b2d2      	uxtb	r2, r2
 80023c8:	701a      	strb	r2, [r3, #0]
 80023ca:	68fb      	ldr	r3, [r7, #12]
 80023cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023ce:	1c5a      	adds	r2, r3, #1
 80023d0:	68fb      	ldr	r3, [r7, #12]
 80023d2:	625a      	str	r2, [r3, #36]	; 0x24
 80023d4:	68fb      	ldr	r3, [r7, #12]
 80023d6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80023d8:	3b01      	subs	r3, #1
 80023da:	b29a      	uxth	r2, r3
 80023dc:	68fb      	ldr	r3, [r7, #12]
 80023de:	851a      	strh	r2, [r3, #40]	; 0x28
 80023e0:	68fb      	ldr	r3, [r7, #12]
 80023e2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80023e4:	b29b      	uxth	r3, r3
 80023e6:	3b01      	subs	r3, #1
 80023e8:	b29a      	uxth	r2, r3
 80023ea:	68fb      	ldr	r3, [r7, #12]
 80023ec:	855a      	strh	r2, [r3, #42]	; 0x2a
 80023ee:	b662      	cpsie	i
 80023f0:	bf00      	nop
 80023f2:	68fb      	ldr	r3, [r7, #12]
 80023f4:	681b      	ldr	r3, [r3, #0]
 80023f6:	691a      	ldr	r2, [r3, #16]
 80023f8:	68fb      	ldr	r3, [r7, #12]
 80023fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80023fc:	b2d2      	uxtb	r2, r2
 80023fe:	701a      	strb	r2, [r3, #0]
 8002400:	68fb      	ldr	r3, [r7, #12]
 8002402:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002404:	1c5a      	adds	r2, r3, #1
 8002406:	68fb      	ldr	r3, [r7, #12]
 8002408:	625a      	str	r2, [r3, #36]	; 0x24
 800240a:	68fb      	ldr	r3, [r7, #12]
 800240c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800240e:	3b01      	subs	r3, #1
 8002410:	b29a      	uxth	r2, r3
 8002412:	68fb      	ldr	r3, [r7, #12]
 8002414:	851a      	strh	r2, [r3, #40]	; 0x28
 8002416:	68fb      	ldr	r3, [r7, #12]
 8002418:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800241a:	b29b      	uxth	r3, r3
 800241c:	3b01      	subs	r3, #1
 800241e:	b29a      	uxth	r2, r3
 8002420:	68fb      	ldr	r3, [r7, #12]
 8002422:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002424:	e0e2      	b.n	80025ec <HAL_I2C_Master_Receive+0x484>
 8002426:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002428:	9300      	str	r3, [sp, #0]
 800242a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800242c:	2200      	movs	r2, #0
 800242e:	497b      	ldr	r1, [pc, #492]	; (800261c <HAL_I2C_Master_Receive+0x4b4>)
 8002430:	68f8      	ldr	r0, [r7, #12]
 8002432:	f000 fb77 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 8002436:	4603      	mov	r3, r0
 8002438:	2b00      	cmp	r3, #0
 800243a:	d001      	beq.n	8002440 <HAL_I2C_Master_Receive+0x2d8>
 800243c:	2301      	movs	r3, #1
 800243e:	e0e9      	b.n	8002614 <HAL_I2C_Master_Receive+0x4ac>
 8002440:	68fb      	ldr	r3, [r7, #12]
 8002442:	681b      	ldr	r3, [r3, #0]
 8002444:	681a      	ldr	r2, [r3, #0]
 8002446:	68fb      	ldr	r3, [r7, #12]
 8002448:	681b      	ldr	r3, [r3, #0]
 800244a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800244e:	601a      	str	r2, [r3, #0]
 8002450:	b672      	cpsid	i
 8002452:	bf00      	nop
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	681b      	ldr	r3, [r3, #0]
 8002458:	691a      	ldr	r2, [r3, #16]
 800245a:	68fb      	ldr	r3, [r7, #12]
 800245c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800245e:	b2d2      	uxtb	r2, r2
 8002460:	701a      	strb	r2, [r3, #0]
 8002462:	68fb      	ldr	r3, [r7, #12]
 8002464:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002466:	1c5a      	adds	r2, r3, #1
 8002468:	68fb      	ldr	r3, [r7, #12]
 800246a:	625a      	str	r2, [r3, #36]	; 0x24
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002470:	3b01      	subs	r3, #1
 8002472:	b29a      	uxth	r2, r3
 8002474:	68fb      	ldr	r3, [r7, #12]
 8002476:	851a      	strh	r2, [r3, #40]	; 0x28
 8002478:	68fb      	ldr	r3, [r7, #12]
 800247a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800247c:	b29b      	uxth	r3, r3
 800247e:	3b01      	subs	r3, #1
 8002480:	b29a      	uxth	r2, r3
 8002482:	68fb      	ldr	r3, [r7, #12]
 8002484:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002486:	4b66      	ldr	r3, [pc, #408]	; (8002620 <HAL_I2C_Master_Receive+0x4b8>)
 8002488:	681b      	ldr	r3, [r3, #0]
 800248a:	08db      	lsrs	r3, r3, #3
 800248c:	4a65      	ldr	r2, [pc, #404]	; (8002624 <HAL_I2C_Master_Receive+0x4bc>)
 800248e:	fba2 2303 	umull	r2, r3, r2, r3
 8002492:	0a1a      	lsrs	r2, r3, #8
 8002494:	4613      	mov	r3, r2
 8002496:	009b      	lsls	r3, r3, #2
 8002498:	4413      	add	r3, r2
 800249a:	00da      	lsls	r2, r3, #3
 800249c:	1ad3      	subs	r3, r2, r3
 800249e:	623b      	str	r3, [r7, #32]
 80024a0:	6a3b      	ldr	r3, [r7, #32]
 80024a2:	3b01      	subs	r3, #1
 80024a4:	623b      	str	r3, [r7, #32]
 80024a6:	6a3b      	ldr	r3, [r7, #32]
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	d118      	bne.n	80024de <HAL_I2C_Master_Receive+0x376>
 80024ac:	68fb      	ldr	r3, [r7, #12]
 80024ae:	2200      	movs	r2, #0
 80024b0:	631a      	str	r2, [r3, #48]	; 0x30
 80024b2:	68fb      	ldr	r3, [r7, #12]
 80024b4:	2220      	movs	r2, #32
 80024b6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80024ba:	68fb      	ldr	r3, [r7, #12]
 80024bc:	2200      	movs	r2, #0
 80024be:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80024c2:	68fb      	ldr	r3, [r7, #12]
 80024c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80024c6:	f043 0220 	orr.w	r2, r3, #32
 80024ca:	68fb      	ldr	r3, [r7, #12]
 80024cc:	641a      	str	r2, [r3, #64]	; 0x40
 80024ce:	b662      	cpsie	i
 80024d0:	bf00      	nop
 80024d2:	68fb      	ldr	r3, [r7, #12]
 80024d4:	2200      	movs	r2, #0
 80024d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80024da:	2301      	movs	r3, #1
 80024dc:	e09a      	b.n	8002614 <HAL_I2C_Master_Receive+0x4ac>
 80024de:	68fb      	ldr	r3, [r7, #12]
 80024e0:	681b      	ldr	r3, [r3, #0]
 80024e2:	695b      	ldr	r3, [r3, #20]
 80024e4:	f003 0304 	and.w	r3, r3, #4
 80024e8:	2b04      	cmp	r3, #4
 80024ea:	d1d9      	bne.n	80024a0 <HAL_I2C_Master_Receive+0x338>
 80024ec:	68fb      	ldr	r3, [r7, #12]
 80024ee:	681b      	ldr	r3, [r3, #0]
 80024f0:	681a      	ldr	r2, [r3, #0]
 80024f2:	68fb      	ldr	r3, [r7, #12]
 80024f4:	681b      	ldr	r3, [r3, #0]
 80024f6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80024fa:	601a      	str	r2, [r3, #0]
 80024fc:	68fb      	ldr	r3, [r7, #12]
 80024fe:	681b      	ldr	r3, [r3, #0]
 8002500:	691a      	ldr	r2, [r3, #16]
 8002502:	68fb      	ldr	r3, [r7, #12]
 8002504:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002506:	b2d2      	uxtb	r2, r2
 8002508:	701a      	strb	r2, [r3, #0]
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800250e:	1c5a      	adds	r2, r3, #1
 8002510:	68fb      	ldr	r3, [r7, #12]
 8002512:	625a      	str	r2, [r3, #36]	; 0x24
 8002514:	68fb      	ldr	r3, [r7, #12]
 8002516:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002518:	3b01      	subs	r3, #1
 800251a:	b29a      	uxth	r2, r3
 800251c:	68fb      	ldr	r3, [r7, #12]
 800251e:	851a      	strh	r2, [r3, #40]	; 0x28
 8002520:	68fb      	ldr	r3, [r7, #12]
 8002522:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8002524:	b29b      	uxth	r3, r3
 8002526:	3b01      	subs	r3, #1
 8002528:	b29a      	uxth	r2, r3
 800252a:	68fb      	ldr	r3, [r7, #12]
 800252c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800252e:	b662      	cpsie	i
 8002530:	bf00      	nop
 8002532:	68fb      	ldr	r3, [r7, #12]
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	691a      	ldr	r2, [r3, #16]
 8002538:	68fb      	ldr	r3, [r7, #12]
 800253a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800253c:	b2d2      	uxtb	r2, r2
 800253e:	701a      	strb	r2, [r3, #0]
 8002540:	68fb      	ldr	r3, [r7, #12]
 8002542:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002544:	1c5a      	adds	r2, r3, #1
 8002546:	68fb      	ldr	r3, [r7, #12]
 8002548:	625a      	str	r2, [r3, #36]	; 0x24
 800254a:	68fb      	ldr	r3, [r7, #12]
 800254c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800254e:	3b01      	subs	r3, #1
 8002550:	b29a      	uxth	r2, r3
 8002552:	68fb      	ldr	r3, [r7, #12]
 8002554:	851a      	strh	r2, [r3, #40]	; 0x28
 8002556:	68fb      	ldr	r3, [r7, #12]
 8002558:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800255a:	b29b      	uxth	r3, r3
 800255c:	3b01      	subs	r3, #1
 800255e:	b29a      	uxth	r2, r3
 8002560:	68fb      	ldr	r3, [r7, #12]
 8002562:	855a      	strh	r2, [r3, #42]	; 0x2a
 8002564:	e042      	b.n	80025ec <HAL_I2C_Master_Receive+0x484>
 8002566:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002568:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800256a:	68f8      	ldr	r0, [r7, #12]
 800256c:	f000 fc32 	bl	8002dd4 <I2C_WaitOnRXNEFlagUntilTimeout>
 8002570:	4603      	mov	r3, r0
 8002572:	2b00      	cmp	r3, #0
 8002574:	d001      	beq.n	800257a <HAL_I2C_Master_Receive+0x412>
 8002576:	2301      	movs	r3, #1
 8002578:	e04c      	b.n	8002614 <HAL_I2C_Master_Receive+0x4ac>
 800257a:	68fb      	ldr	r3, [r7, #12]
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	691a      	ldr	r2, [r3, #16]
 8002580:	68fb      	ldr	r3, [r7, #12]
 8002582:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002584:	b2d2      	uxtb	r2, r2
 8002586:	701a      	strb	r2, [r3, #0]
 8002588:	68fb      	ldr	r3, [r7, #12]
 800258a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800258c:	1c5a      	adds	r2, r3, #1
 800258e:	68fb      	ldr	r3, [r7, #12]
 8002590:	625a      	str	r2, [r3, #36]	; 0x24
 8002592:	68fb      	ldr	r3, [r7, #12]
 8002594:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002596:	3b01      	subs	r3, #1
 8002598:	b29a      	uxth	r2, r3
 800259a:	68fb      	ldr	r3, [r7, #12]
 800259c:	851a      	strh	r2, [r3, #40]	; 0x28
 800259e:	68fb      	ldr	r3, [r7, #12]
 80025a0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80025a2:	b29b      	uxth	r3, r3
 80025a4:	3b01      	subs	r3, #1
 80025a6:	b29a      	uxth	r2, r3
 80025a8:	68fb      	ldr	r3, [r7, #12]
 80025aa:	855a      	strh	r2, [r3, #42]	; 0x2a
 80025ac:	68fb      	ldr	r3, [r7, #12]
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	695b      	ldr	r3, [r3, #20]
 80025b2:	f003 0304 	and.w	r3, r3, #4
 80025b6:	2b04      	cmp	r3, #4
 80025b8:	d118      	bne.n	80025ec <HAL_I2C_Master_Receive+0x484>
 80025ba:	68fb      	ldr	r3, [r7, #12]
 80025bc:	681b      	ldr	r3, [r3, #0]
 80025be:	691a      	ldr	r2, [r3, #16]
 80025c0:	68fb      	ldr	r3, [r7, #12]
 80025c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025c4:	b2d2      	uxtb	r2, r2
 80025c6:	701a      	strb	r2, [r3, #0]
 80025c8:	68fb      	ldr	r3, [r7, #12]
 80025ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025cc:	1c5a      	adds	r2, r3, #1
 80025ce:	68fb      	ldr	r3, [r7, #12]
 80025d0:	625a      	str	r2, [r3, #36]	; 0x24
 80025d2:	68fb      	ldr	r3, [r7, #12]
 80025d4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80025d6:	3b01      	subs	r3, #1
 80025d8:	b29a      	uxth	r2, r3
 80025da:	68fb      	ldr	r3, [r7, #12]
 80025dc:	851a      	strh	r2, [r3, #40]	; 0x28
 80025de:	68fb      	ldr	r3, [r7, #12]
 80025e0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80025e2:	b29b      	uxth	r3, r3
 80025e4:	3b01      	subs	r3, #1
 80025e6:	b29a      	uxth	r2, r3
 80025e8:	68fb      	ldr	r3, [r7, #12]
 80025ea:	855a      	strh	r2, [r3, #42]	; 0x2a
 80025ec:	68fb      	ldr	r3, [r7, #12]
 80025ee:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80025f0:	2b00      	cmp	r3, #0
 80025f2:	f47f ae94 	bne.w	800231e <HAL_I2C_Master_Receive+0x1b6>
 80025f6:	68fb      	ldr	r3, [r7, #12]
 80025f8:	2220      	movs	r2, #32
 80025fa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80025fe:	68fb      	ldr	r3, [r7, #12]
 8002600:	2200      	movs	r2, #0
 8002602:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002606:	68fb      	ldr	r3, [r7, #12]
 8002608:	2200      	movs	r2, #0
 800260a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800260e:	2300      	movs	r3, #0
 8002610:	e000      	b.n	8002614 <HAL_I2C_Master_Receive+0x4ac>
 8002612:	2302      	movs	r3, #2
 8002614:	4618      	mov	r0, r3
 8002616:	3728      	adds	r7, #40	; 0x28
 8002618:	46bd      	mov	sp, r7
 800261a:	bd80      	pop	{r7, pc}
 800261c:	00010004 	.word	0x00010004
 8002620:	20000000 	.word	0x20000000
 8002624:	14f8b589 	.word	0x14f8b589

08002628 <HAL_I2C_IsDeviceReady>:
 8002628:	b580      	push	{r7, lr}
 800262a:	b08a      	sub	sp, #40	; 0x28
 800262c:	af02      	add	r7, sp, #8
 800262e:	60f8      	str	r0, [r7, #12]
 8002630:	607a      	str	r2, [r7, #4]
 8002632:	603b      	str	r3, [r7, #0]
 8002634:	460b      	mov	r3, r1
 8002636:	817b      	strh	r3, [r7, #10]
 8002638:	f7fe ffcc 	bl	80015d4 <HAL_GetTick>
 800263c:	61f8      	str	r0, [r7, #28]
 800263e:	2301      	movs	r3, #1
 8002640:	61bb      	str	r3, [r7, #24]
 8002642:	68fb      	ldr	r3, [r7, #12]
 8002644:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002648:	b2db      	uxtb	r3, r3
 800264a:	2b20      	cmp	r3, #32
 800264c:	f040 8111 	bne.w	8002872 <HAL_I2C_IsDeviceReady+0x24a>
 8002650:	69fb      	ldr	r3, [r7, #28]
 8002652:	9300      	str	r3, [sp, #0]
 8002654:	2319      	movs	r3, #25
 8002656:	2201      	movs	r2, #1
 8002658:	4988      	ldr	r1, [pc, #544]	; (800287c <HAL_I2C_IsDeviceReady+0x254>)
 800265a:	68f8      	ldr	r0, [r7, #12]
 800265c:	f000 fa62 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 8002660:	4603      	mov	r3, r0
 8002662:	2b00      	cmp	r3, #0
 8002664:	d001      	beq.n	800266a <HAL_I2C_IsDeviceReady+0x42>
 8002666:	2302      	movs	r3, #2
 8002668:	e104      	b.n	8002874 <HAL_I2C_IsDeviceReady+0x24c>
 800266a:	68fb      	ldr	r3, [r7, #12]
 800266c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8002670:	2b01      	cmp	r3, #1
 8002672:	d101      	bne.n	8002678 <HAL_I2C_IsDeviceReady+0x50>
 8002674:	2302      	movs	r3, #2
 8002676:	e0fd      	b.n	8002874 <HAL_I2C_IsDeviceReady+0x24c>
 8002678:	68fb      	ldr	r3, [r7, #12]
 800267a:	2201      	movs	r2, #1
 800267c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002680:	68fb      	ldr	r3, [r7, #12]
 8002682:	681b      	ldr	r3, [r3, #0]
 8002684:	681b      	ldr	r3, [r3, #0]
 8002686:	f003 0301 	and.w	r3, r3, #1
 800268a:	2b01      	cmp	r3, #1
 800268c:	d007      	beq.n	800269e <HAL_I2C_IsDeviceReady+0x76>
 800268e:	68fb      	ldr	r3, [r7, #12]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	681a      	ldr	r2, [r3, #0]
 8002694:	68fb      	ldr	r3, [r7, #12]
 8002696:	681b      	ldr	r3, [r3, #0]
 8002698:	f042 0201 	orr.w	r2, r2, #1
 800269c:	601a      	str	r2, [r3, #0]
 800269e:	68fb      	ldr	r3, [r7, #12]
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	681a      	ldr	r2, [r3, #0]
 80026a4:	68fb      	ldr	r3, [r7, #12]
 80026a6:	681b      	ldr	r3, [r3, #0]
 80026a8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80026ac:	601a      	str	r2, [r3, #0]
 80026ae:	68fb      	ldr	r3, [r7, #12]
 80026b0:	2224      	movs	r2, #36	; 0x24
 80026b2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80026b6:	68fb      	ldr	r3, [r7, #12]
 80026b8:	2200      	movs	r2, #0
 80026ba:	641a      	str	r2, [r3, #64]	; 0x40
 80026bc:	68fb      	ldr	r3, [r7, #12]
 80026be:	4a70      	ldr	r2, [pc, #448]	; (8002880 <HAL_I2C_IsDeviceReady+0x258>)
 80026c0:	62da      	str	r2, [r3, #44]	; 0x2c
 80026c2:	68fb      	ldr	r3, [r7, #12]
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	681a      	ldr	r2, [r3, #0]
 80026c8:	68fb      	ldr	r3, [r7, #12]
 80026ca:	681b      	ldr	r3, [r3, #0]
 80026cc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80026d0:	601a      	str	r2, [r3, #0]
 80026d2:	69fb      	ldr	r3, [r7, #28]
 80026d4:	9300      	str	r3, [sp, #0]
 80026d6:	683b      	ldr	r3, [r7, #0]
 80026d8:	2200      	movs	r2, #0
 80026da:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80026de:	68f8      	ldr	r0, [r7, #12]
 80026e0:	f000 fa20 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 80026e4:	4603      	mov	r3, r0
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d00d      	beq.n	8002706 <HAL_I2C_IsDeviceReady+0xde>
 80026ea:	68fb      	ldr	r3, [r7, #12]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	681b      	ldr	r3, [r3, #0]
 80026f0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80026f4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80026f8:	d103      	bne.n	8002702 <HAL_I2C_IsDeviceReady+0xda>
 80026fa:	68fb      	ldr	r3, [r7, #12]
 80026fc:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002700:	641a      	str	r2, [r3, #64]	; 0x40
 8002702:	2303      	movs	r3, #3
 8002704:	e0b6      	b.n	8002874 <HAL_I2C_IsDeviceReady+0x24c>
 8002706:	897b      	ldrh	r3, [r7, #10]
 8002708:	b2db      	uxtb	r3, r3
 800270a:	461a      	mov	r2, r3
 800270c:	68fb      	ldr	r3, [r7, #12]
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8002714:	611a      	str	r2, [r3, #16]
 8002716:	f7fe ff5d 	bl	80015d4 <HAL_GetTick>
 800271a:	61f8      	str	r0, [r7, #28]
 800271c:	68fb      	ldr	r3, [r7, #12]
 800271e:	681b      	ldr	r3, [r3, #0]
 8002720:	695b      	ldr	r3, [r3, #20]
 8002722:	f003 0302 	and.w	r3, r3, #2
 8002726:	2b02      	cmp	r3, #2
 8002728:	bf0c      	ite	eq
 800272a:	2301      	moveq	r3, #1
 800272c:	2300      	movne	r3, #0
 800272e:	b2db      	uxtb	r3, r3
 8002730:	75fb      	strb	r3, [r7, #23]
 8002732:	68fb      	ldr	r3, [r7, #12]
 8002734:	681b      	ldr	r3, [r3, #0]
 8002736:	695b      	ldr	r3, [r3, #20]
 8002738:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800273c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002740:	bf0c      	ite	eq
 8002742:	2301      	moveq	r3, #1
 8002744:	2300      	movne	r3, #0
 8002746:	b2db      	uxtb	r3, r3
 8002748:	75bb      	strb	r3, [r7, #22]
 800274a:	e025      	b.n	8002798 <HAL_I2C_IsDeviceReady+0x170>
 800274c:	f7fe ff42 	bl	80015d4 <HAL_GetTick>
 8002750:	4602      	mov	r2, r0
 8002752:	69fb      	ldr	r3, [r7, #28]
 8002754:	1ad3      	subs	r3, r2, r3
 8002756:	683a      	ldr	r2, [r7, #0]
 8002758:	429a      	cmp	r2, r3
 800275a:	d302      	bcc.n	8002762 <HAL_I2C_IsDeviceReady+0x13a>
 800275c:	683b      	ldr	r3, [r7, #0]
 800275e:	2b00      	cmp	r3, #0
 8002760:	d103      	bne.n	800276a <HAL_I2C_IsDeviceReady+0x142>
 8002762:	68fb      	ldr	r3, [r7, #12]
 8002764:	22a0      	movs	r2, #160	; 0xa0
 8002766:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800276a:	68fb      	ldr	r3, [r7, #12]
 800276c:	681b      	ldr	r3, [r3, #0]
 800276e:	695b      	ldr	r3, [r3, #20]
 8002770:	f003 0302 	and.w	r3, r3, #2
 8002774:	2b02      	cmp	r3, #2
 8002776:	bf0c      	ite	eq
 8002778:	2301      	moveq	r3, #1
 800277a:	2300      	movne	r3, #0
 800277c:	b2db      	uxtb	r3, r3
 800277e:	75fb      	strb	r3, [r7, #23]
 8002780:	68fb      	ldr	r3, [r7, #12]
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	695b      	ldr	r3, [r3, #20]
 8002786:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800278a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800278e:	bf0c      	ite	eq
 8002790:	2301      	moveq	r3, #1
 8002792:	2300      	movne	r3, #0
 8002794:	b2db      	uxtb	r3, r3
 8002796:	75bb      	strb	r3, [r7, #22]
 8002798:	68fb      	ldr	r3, [r7, #12]
 800279a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800279e:	b2db      	uxtb	r3, r3
 80027a0:	2ba0      	cmp	r3, #160	; 0xa0
 80027a2:	d005      	beq.n	80027b0 <HAL_I2C_IsDeviceReady+0x188>
 80027a4:	7dfb      	ldrb	r3, [r7, #23]
 80027a6:	2b00      	cmp	r3, #0
 80027a8:	d102      	bne.n	80027b0 <HAL_I2C_IsDeviceReady+0x188>
 80027aa:	7dbb      	ldrb	r3, [r7, #22]
 80027ac:	2b00      	cmp	r3, #0
 80027ae:	d0cd      	beq.n	800274c <HAL_I2C_IsDeviceReady+0x124>
 80027b0:	68fb      	ldr	r3, [r7, #12]
 80027b2:	2220      	movs	r2, #32
 80027b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80027b8:	68fb      	ldr	r3, [r7, #12]
 80027ba:	681b      	ldr	r3, [r3, #0]
 80027bc:	695b      	ldr	r3, [r3, #20]
 80027be:	f003 0302 	and.w	r3, r3, #2
 80027c2:	2b02      	cmp	r3, #2
 80027c4:	d129      	bne.n	800281a <HAL_I2C_IsDeviceReady+0x1f2>
 80027c6:	68fb      	ldr	r3, [r7, #12]
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	681a      	ldr	r2, [r3, #0]
 80027cc:	68fb      	ldr	r3, [r7, #12]
 80027ce:	681b      	ldr	r3, [r3, #0]
 80027d0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80027d4:	601a      	str	r2, [r3, #0]
 80027d6:	2300      	movs	r3, #0
 80027d8:	613b      	str	r3, [r7, #16]
 80027da:	68fb      	ldr	r3, [r7, #12]
 80027dc:	681b      	ldr	r3, [r3, #0]
 80027de:	695b      	ldr	r3, [r3, #20]
 80027e0:	613b      	str	r3, [r7, #16]
 80027e2:	68fb      	ldr	r3, [r7, #12]
 80027e4:	681b      	ldr	r3, [r3, #0]
 80027e6:	699b      	ldr	r3, [r3, #24]
 80027e8:	613b      	str	r3, [r7, #16]
 80027ea:	693b      	ldr	r3, [r7, #16]
 80027ec:	69fb      	ldr	r3, [r7, #28]
 80027ee:	9300      	str	r3, [sp, #0]
 80027f0:	2319      	movs	r3, #25
 80027f2:	2201      	movs	r2, #1
 80027f4:	4921      	ldr	r1, [pc, #132]	; (800287c <HAL_I2C_IsDeviceReady+0x254>)
 80027f6:	68f8      	ldr	r0, [r7, #12]
 80027f8:	f000 f994 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 80027fc:	4603      	mov	r3, r0
 80027fe:	2b00      	cmp	r3, #0
 8002800:	d001      	beq.n	8002806 <HAL_I2C_IsDeviceReady+0x1de>
 8002802:	2301      	movs	r3, #1
 8002804:	e036      	b.n	8002874 <HAL_I2C_IsDeviceReady+0x24c>
 8002806:	68fb      	ldr	r3, [r7, #12]
 8002808:	2220      	movs	r2, #32
 800280a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800280e:	68fb      	ldr	r3, [r7, #12]
 8002810:	2200      	movs	r2, #0
 8002812:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002816:	2300      	movs	r3, #0
 8002818:	e02c      	b.n	8002874 <HAL_I2C_IsDeviceReady+0x24c>
 800281a:	68fb      	ldr	r3, [r7, #12]
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	681a      	ldr	r2, [r3, #0]
 8002820:	68fb      	ldr	r3, [r7, #12]
 8002822:	681b      	ldr	r3, [r3, #0]
 8002824:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002828:	601a      	str	r2, [r3, #0]
 800282a:	68fb      	ldr	r3, [r7, #12]
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002832:	615a      	str	r2, [r3, #20]
 8002834:	69fb      	ldr	r3, [r7, #28]
 8002836:	9300      	str	r3, [sp, #0]
 8002838:	2319      	movs	r3, #25
 800283a:	2201      	movs	r2, #1
 800283c:	490f      	ldr	r1, [pc, #60]	; (800287c <HAL_I2C_IsDeviceReady+0x254>)
 800283e:	68f8      	ldr	r0, [r7, #12]
 8002840:	f000 f970 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 8002844:	4603      	mov	r3, r0
 8002846:	2b00      	cmp	r3, #0
 8002848:	d001      	beq.n	800284e <HAL_I2C_IsDeviceReady+0x226>
 800284a:	2301      	movs	r3, #1
 800284c:	e012      	b.n	8002874 <HAL_I2C_IsDeviceReady+0x24c>
 800284e:	69bb      	ldr	r3, [r7, #24]
 8002850:	3301      	adds	r3, #1
 8002852:	61bb      	str	r3, [r7, #24]
 8002854:	69ba      	ldr	r2, [r7, #24]
 8002856:	687b      	ldr	r3, [r7, #4]
 8002858:	429a      	cmp	r2, r3
 800285a:	f4ff af32 	bcc.w	80026c2 <HAL_I2C_IsDeviceReady+0x9a>
 800285e:	68fb      	ldr	r3, [r7, #12]
 8002860:	2220      	movs	r2, #32
 8002862:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002866:	68fb      	ldr	r3, [r7, #12]
 8002868:	2200      	movs	r2, #0
 800286a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800286e:	2301      	movs	r3, #1
 8002870:	e000      	b.n	8002874 <HAL_I2C_IsDeviceReady+0x24c>
 8002872:	2302      	movs	r3, #2
 8002874:	4618      	mov	r0, r3
 8002876:	3720      	adds	r7, #32
 8002878:	46bd      	mov	sp, r7
 800287a:	bd80      	pop	{r7, pc}
 800287c:	00100002 	.word	0x00100002
 8002880:	ffff0000 	.word	0xffff0000

08002884 <I2C_MasterRequestWrite>:
 8002884:	b580      	push	{r7, lr}
 8002886:	b088      	sub	sp, #32
 8002888:	af02      	add	r7, sp, #8
 800288a:	60f8      	str	r0, [r7, #12]
 800288c:	607a      	str	r2, [r7, #4]
 800288e:	603b      	str	r3, [r7, #0]
 8002890:	460b      	mov	r3, r1
 8002892:	817b      	strh	r3, [r7, #10]
 8002894:	68fb      	ldr	r3, [r7, #12]
 8002896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002898:	617b      	str	r3, [r7, #20]
 800289a:	697b      	ldr	r3, [r7, #20]
 800289c:	2b08      	cmp	r3, #8
 800289e:	d006      	beq.n	80028ae <I2C_MasterRequestWrite+0x2a>
 80028a0:	697b      	ldr	r3, [r7, #20]
 80028a2:	2b01      	cmp	r3, #1
 80028a4:	d003      	beq.n	80028ae <I2C_MasterRequestWrite+0x2a>
 80028a6:	697b      	ldr	r3, [r7, #20]
 80028a8:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80028ac:	d108      	bne.n	80028c0 <I2C_MasterRequestWrite+0x3c>
 80028ae:	68fb      	ldr	r3, [r7, #12]
 80028b0:	681b      	ldr	r3, [r3, #0]
 80028b2:	681a      	ldr	r2, [r3, #0]
 80028b4:	68fb      	ldr	r3, [r7, #12]
 80028b6:	681b      	ldr	r3, [r3, #0]
 80028b8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80028bc:	601a      	str	r2, [r3, #0]
 80028be:	e00b      	b.n	80028d8 <I2C_MasterRequestWrite+0x54>
 80028c0:	68fb      	ldr	r3, [r7, #12]
 80028c2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028c4:	2b12      	cmp	r3, #18
 80028c6:	d107      	bne.n	80028d8 <I2C_MasterRequestWrite+0x54>
 80028c8:	68fb      	ldr	r3, [r7, #12]
 80028ca:	681b      	ldr	r3, [r3, #0]
 80028cc:	681a      	ldr	r2, [r3, #0]
 80028ce:	68fb      	ldr	r3, [r7, #12]
 80028d0:	681b      	ldr	r3, [r3, #0]
 80028d2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80028d6:	601a      	str	r2, [r3, #0]
 80028d8:	683b      	ldr	r3, [r7, #0]
 80028da:	9300      	str	r3, [sp, #0]
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	2200      	movs	r2, #0
 80028e0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80028e4:	68f8      	ldr	r0, [r7, #12]
 80028e6:	f000 f91d 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 80028ea:	4603      	mov	r3, r0
 80028ec:	2b00      	cmp	r3, #0
 80028ee:	d00d      	beq.n	800290c <I2C_MasterRequestWrite+0x88>
 80028f0:	68fb      	ldr	r3, [r7, #12]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	681b      	ldr	r3, [r3, #0]
 80028f6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80028fa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80028fe:	d103      	bne.n	8002908 <I2C_MasterRequestWrite+0x84>
 8002900:	68fb      	ldr	r3, [r7, #12]
 8002902:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002906:	641a      	str	r2, [r3, #64]	; 0x40
 8002908:	2303      	movs	r3, #3
 800290a:	e035      	b.n	8002978 <I2C_MasterRequestWrite+0xf4>
 800290c:	68fb      	ldr	r3, [r7, #12]
 800290e:	691b      	ldr	r3, [r3, #16]
 8002910:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002914:	d108      	bne.n	8002928 <I2C_MasterRequestWrite+0xa4>
 8002916:	897b      	ldrh	r3, [r7, #10]
 8002918:	b2db      	uxtb	r3, r3
 800291a:	461a      	mov	r2, r3
 800291c:	68fb      	ldr	r3, [r7, #12]
 800291e:	681b      	ldr	r3, [r3, #0]
 8002920:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8002924:	611a      	str	r2, [r3, #16]
 8002926:	e01b      	b.n	8002960 <I2C_MasterRequestWrite+0xdc>
 8002928:	897b      	ldrh	r3, [r7, #10]
 800292a:	11db      	asrs	r3, r3, #7
 800292c:	b2db      	uxtb	r3, r3
 800292e:	f003 0306 	and.w	r3, r3, #6
 8002932:	b2db      	uxtb	r3, r3
 8002934:	f063 030f 	orn	r3, r3, #15
 8002938:	b2da      	uxtb	r2, r3
 800293a:	68fb      	ldr	r3, [r7, #12]
 800293c:	681b      	ldr	r3, [r3, #0]
 800293e:	611a      	str	r2, [r3, #16]
 8002940:	683b      	ldr	r3, [r7, #0]
 8002942:	687a      	ldr	r2, [r7, #4]
 8002944:	490e      	ldr	r1, [pc, #56]	; (8002980 <I2C_MasterRequestWrite+0xfc>)
 8002946:	68f8      	ldr	r0, [r7, #12]
 8002948:	f000 f943 	bl	8002bd2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800294c:	4603      	mov	r3, r0
 800294e:	2b00      	cmp	r3, #0
 8002950:	d001      	beq.n	8002956 <I2C_MasterRequestWrite+0xd2>
 8002952:	2301      	movs	r3, #1
 8002954:	e010      	b.n	8002978 <I2C_MasterRequestWrite+0xf4>
 8002956:	897b      	ldrh	r3, [r7, #10]
 8002958:	b2da      	uxtb	r2, r3
 800295a:	68fb      	ldr	r3, [r7, #12]
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	611a      	str	r2, [r3, #16]
 8002960:	683b      	ldr	r3, [r7, #0]
 8002962:	687a      	ldr	r2, [r7, #4]
 8002964:	4907      	ldr	r1, [pc, #28]	; (8002984 <I2C_MasterRequestWrite+0x100>)
 8002966:	68f8      	ldr	r0, [r7, #12]
 8002968:	f000 f933 	bl	8002bd2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800296c:	4603      	mov	r3, r0
 800296e:	2b00      	cmp	r3, #0
 8002970:	d001      	beq.n	8002976 <I2C_MasterRequestWrite+0xf2>
 8002972:	2301      	movs	r3, #1
 8002974:	e000      	b.n	8002978 <I2C_MasterRequestWrite+0xf4>
 8002976:	2300      	movs	r3, #0
 8002978:	4618      	mov	r0, r3
 800297a:	3718      	adds	r7, #24
 800297c:	46bd      	mov	sp, r7
 800297e:	bd80      	pop	{r7, pc}
 8002980:	00010008 	.word	0x00010008
 8002984:	00010002 	.word	0x00010002

08002988 <I2C_MasterRequestRead>:
 8002988:	b580      	push	{r7, lr}
 800298a:	b088      	sub	sp, #32
 800298c:	af02      	add	r7, sp, #8
 800298e:	60f8      	str	r0, [r7, #12]
 8002990:	607a      	str	r2, [r7, #4]
 8002992:	603b      	str	r3, [r7, #0]
 8002994:	460b      	mov	r3, r1
 8002996:	817b      	strh	r3, [r7, #10]
 8002998:	68fb      	ldr	r3, [r7, #12]
 800299a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800299c:	617b      	str	r3, [r7, #20]
 800299e:	68fb      	ldr	r3, [r7, #12]
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	681a      	ldr	r2, [r3, #0]
 80029a4:	68fb      	ldr	r3, [r7, #12]
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80029ac:	601a      	str	r2, [r3, #0]
 80029ae:	697b      	ldr	r3, [r7, #20]
 80029b0:	2b08      	cmp	r3, #8
 80029b2:	d006      	beq.n	80029c2 <I2C_MasterRequestRead+0x3a>
 80029b4:	697b      	ldr	r3, [r7, #20]
 80029b6:	2b01      	cmp	r3, #1
 80029b8:	d003      	beq.n	80029c2 <I2C_MasterRequestRead+0x3a>
 80029ba:	697b      	ldr	r3, [r7, #20]
 80029bc:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80029c0:	d108      	bne.n	80029d4 <I2C_MasterRequestRead+0x4c>
 80029c2:	68fb      	ldr	r3, [r7, #12]
 80029c4:	681b      	ldr	r3, [r3, #0]
 80029c6:	681a      	ldr	r2, [r3, #0]
 80029c8:	68fb      	ldr	r3, [r7, #12]
 80029ca:	681b      	ldr	r3, [r3, #0]
 80029cc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80029d0:	601a      	str	r2, [r3, #0]
 80029d2:	e00b      	b.n	80029ec <I2C_MasterRequestRead+0x64>
 80029d4:	68fb      	ldr	r3, [r7, #12]
 80029d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029d8:	2b11      	cmp	r3, #17
 80029da:	d107      	bne.n	80029ec <I2C_MasterRequestRead+0x64>
 80029dc:	68fb      	ldr	r3, [r7, #12]
 80029de:	681b      	ldr	r3, [r3, #0]
 80029e0:	681a      	ldr	r2, [r3, #0]
 80029e2:	68fb      	ldr	r3, [r7, #12]
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80029ea:	601a      	str	r2, [r3, #0]
 80029ec:	683b      	ldr	r3, [r7, #0]
 80029ee:	9300      	str	r3, [sp, #0]
 80029f0:	687b      	ldr	r3, [r7, #4]
 80029f2:	2200      	movs	r2, #0
 80029f4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80029f8:	68f8      	ldr	r0, [r7, #12]
 80029fa:	f000 f893 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 80029fe:	4603      	mov	r3, r0
 8002a00:	2b00      	cmp	r3, #0
 8002a02:	d00d      	beq.n	8002a20 <I2C_MasterRequestRead+0x98>
 8002a04:	68fb      	ldr	r3, [r7, #12]
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	681b      	ldr	r3, [r3, #0]
 8002a0a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002a0e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002a12:	d103      	bne.n	8002a1c <I2C_MasterRequestRead+0x94>
 8002a14:	68fb      	ldr	r3, [r7, #12]
 8002a16:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002a1a:	641a      	str	r2, [r3, #64]	; 0x40
 8002a1c:	2303      	movs	r3, #3
 8002a1e:	e079      	b.n	8002b14 <I2C_MasterRequestRead+0x18c>
 8002a20:	68fb      	ldr	r3, [r7, #12]
 8002a22:	691b      	ldr	r3, [r3, #16]
 8002a24:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8002a28:	d108      	bne.n	8002a3c <I2C_MasterRequestRead+0xb4>
 8002a2a:	897b      	ldrh	r3, [r7, #10]
 8002a2c:	b2db      	uxtb	r3, r3
 8002a2e:	f043 0301 	orr.w	r3, r3, #1
 8002a32:	b2da      	uxtb	r2, r3
 8002a34:	68fb      	ldr	r3, [r7, #12]
 8002a36:	681b      	ldr	r3, [r3, #0]
 8002a38:	611a      	str	r2, [r3, #16]
 8002a3a:	e05f      	b.n	8002afc <I2C_MasterRequestRead+0x174>
 8002a3c:	897b      	ldrh	r3, [r7, #10]
 8002a3e:	11db      	asrs	r3, r3, #7
 8002a40:	b2db      	uxtb	r3, r3
 8002a42:	f003 0306 	and.w	r3, r3, #6
 8002a46:	b2db      	uxtb	r3, r3
 8002a48:	f063 030f 	orn	r3, r3, #15
 8002a4c:	b2da      	uxtb	r2, r3
 8002a4e:	68fb      	ldr	r3, [r7, #12]
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	611a      	str	r2, [r3, #16]
 8002a54:	683b      	ldr	r3, [r7, #0]
 8002a56:	687a      	ldr	r2, [r7, #4]
 8002a58:	4930      	ldr	r1, [pc, #192]	; (8002b1c <I2C_MasterRequestRead+0x194>)
 8002a5a:	68f8      	ldr	r0, [r7, #12]
 8002a5c:	f000 f8b9 	bl	8002bd2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002a60:	4603      	mov	r3, r0
 8002a62:	2b00      	cmp	r3, #0
 8002a64:	d001      	beq.n	8002a6a <I2C_MasterRequestRead+0xe2>
 8002a66:	2301      	movs	r3, #1
 8002a68:	e054      	b.n	8002b14 <I2C_MasterRequestRead+0x18c>
 8002a6a:	897b      	ldrh	r3, [r7, #10]
 8002a6c:	b2da      	uxtb	r2, r3
 8002a6e:	68fb      	ldr	r3, [r7, #12]
 8002a70:	681b      	ldr	r3, [r3, #0]
 8002a72:	611a      	str	r2, [r3, #16]
 8002a74:	683b      	ldr	r3, [r7, #0]
 8002a76:	687a      	ldr	r2, [r7, #4]
 8002a78:	4929      	ldr	r1, [pc, #164]	; (8002b20 <I2C_MasterRequestRead+0x198>)
 8002a7a:	68f8      	ldr	r0, [r7, #12]
 8002a7c:	f000 f8a9 	bl	8002bd2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002a80:	4603      	mov	r3, r0
 8002a82:	2b00      	cmp	r3, #0
 8002a84:	d001      	beq.n	8002a8a <I2C_MasterRequestRead+0x102>
 8002a86:	2301      	movs	r3, #1
 8002a88:	e044      	b.n	8002b14 <I2C_MasterRequestRead+0x18c>
 8002a8a:	2300      	movs	r3, #0
 8002a8c:	613b      	str	r3, [r7, #16]
 8002a8e:	68fb      	ldr	r3, [r7, #12]
 8002a90:	681b      	ldr	r3, [r3, #0]
 8002a92:	695b      	ldr	r3, [r3, #20]
 8002a94:	613b      	str	r3, [r7, #16]
 8002a96:	68fb      	ldr	r3, [r7, #12]
 8002a98:	681b      	ldr	r3, [r3, #0]
 8002a9a:	699b      	ldr	r3, [r3, #24]
 8002a9c:	613b      	str	r3, [r7, #16]
 8002a9e:	693b      	ldr	r3, [r7, #16]
 8002aa0:	68fb      	ldr	r3, [r7, #12]
 8002aa2:	681b      	ldr	r3, [r3, #0]
 8002aa4:	681a      	ldr	r2, [r3, #0]
 8002aa6:	68fb      	ldr	r3, [r7, #12]
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002aae:	601a      	str	r2, [r3, #0]
 8002ab0:	683b      	ldr	r3, [r7, #0]
 8002ab2:	9300      	str	r3, [sp, #0]
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	2200      	movs	r2, #0
 8002ab8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8002abc:	68f8      	ldr	r0, [r7, #12]
 8002abe:	f000 f831 	bl	8002b24 <I2C_WaitOnFlagUntilTimeout>
 8002ac2:	4603      	mov	r3, r0
 8002ac4:	2b00      	cmp	r3, #0
 8002ac6:	d00d      	beq.n	8002ae4 <I2C_MasterRequestRead+0x15c>
 8002ac8:	68fb      	ldr	r3, [r7, #12]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002ad2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8002ad6:	d103      	bne.n	8002ae0 <I2C_MasterRequestRead+0x158>
 8002ad8:	68fb      	ldr	r3, [r7, #12]
 8002ada:	f44f 7200 	mov.w	r2, #512	; 0x200
 8002ade:	641a      	str	r2, [r3, #64]	; 0x40
 8002ae0:	2303      	movs	r3, #3
 8002ae2:	e017      	b.n	8002b14 <I2C_MasterRequestRead+0x18c>
 8002ae4:	897b      	ldrh	r3, [r7, #10]
 8002ae6:	11db      	asrs	r3, r3, #7
 8002ae8:	b2db      	uxtb	r3, r3
 8002aea:	f003 0306 	and.w	r3, r3, #6
 8002aee:	b2db      	uxtb	r3, r3
 8002af0:	f063 030e 	orn	r3, r3, #14
 8002af4:	b2da      	uxtb	r2, r3
 8002af6:	68fb      	ldr	r3, [r7, #12]
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	611a      	str	r2, [r3, #16]
 8002afc:	683b      	ldr	r3, [r7, #0]
 8002afe:	687a      	ldr	r2, [r7, #4]
 8002b00:	4907      	ldr	r1, [pc, #28]	; (8002b20 <I2C_MasterRequestRead+0x198>)
 8002b02:	68f8      	ldr	r0, [r7, #12]
 8002b04:	f000 f865 	bl	8002bd2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8002b08:	4603      	mov	r3, r0
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	d001      	beq.n	8002b12 <I2C_MasterRequestRead+0x18a>
 8002b0e:	2301      	movs	r3, #1
 8002b10:	e000      	b.n	8002b14 <I2C_MasterRequestRead+0x18c>
 8002b12:	2300      	movs	r3, #0
 8002b14:	4618      	mov	r0, r3
 8002b16:	3718      	adds	r7, #24
 8002b18:	46bd      	mov	sp, r7
 8002b1a:	bd80      	pop	{r7, pc}
 8002b1c:	00010008 	.word	0x00010008
 8002b20:	00010002 	.word	0x00010002

08002b24 <I2C_WaitOnFlagUntilTimeout>:
 8002b24:	b580      	push	{r7, lr}
 8002b26:	b084      	sub	sp, #16
 8002b28:	af00      	add	r7, sp, #0
 8002b2a:	60f8      	str	r0, [r7, #12]
 8002b2c:	60b9      	str	r1, [r7, #8]
 8002b2e:	603b      	str	r3, [r7, #0]
 8002b30:	4613      	mov	r3, r2
 8002b32:	71fb      	strb	r3, [r7, #7]
 8002b34:	e025      	b.n	8002b82 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8002b36:	683b      	ldr	r3, [r7, #0]
 8002b38:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b3c:	d021      	beq.n	8002b82 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8002b3e:	f7fe fd49 	bl	80015d4 <HAL_GetTick>
 8002b42:	4602      	mov	r2, r0
 8002b44:	69bb      	ldr	r3, [r7, #24]
 8002b46:	1ad3      	subs	r3, r2, r3
 8002b48:	683a      	ldr	r2, [r7, #0]
 8002b4a:	429a      	cmp	r2, r3
 8002b4c:	d302      	bcc.n	8002b54 <I2C_WaitOnFlagUntilTimeout+0x30>
 8002b4e:	683b      	ldr	r3, [r7, #0]
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	d116      	bne.n	8002b82 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8002b54:	68fb      	ldr	r3, [r7, #12]
 8002b56:	2200      	movs	r2, #0
 8002b58:	631a      	str	r2, [r3, #48]	; 0x30
 8002b5a:	68fb      	ldr	r3, [r7, #12]
 8002b5c:	2220      	movs	r2, #32
 8002b5e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002b62:	68fb      	ldr	r3, [r7, #12]
 8002b64:	2200      	movs	r2, #0
 8002b66:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002b6a:	68fb      	ldr	r3, [r7, #12]
 8002b6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b6e:	f043 0220 	orr.w	r2, r3, #32
 8002b72:	68fb      	ldr	r3, [r7, #12]
 8002b74:	641a      	str	r2, [r3, #64]	; 0x40
 8002b76:	68fb      	ldr	r3, [r7, #12]
 8002b78:	2200      	movs	r2, #0
 8002b7a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002b7e:	2301      	movs	r3, #1
 8002b80:	e023      	b.n	8002bca <I2C_WaitOnFlagUntilTimeout+0xa6>
 8002b82:	68bb      	ldr	r3, [r7, #8]
 8002b84:	0c1b      	lsrs	r3, r3, #16
 8002b86:	b2db      	uxtb	r3, r3
 8002b88:	2b01      	cmp	r3, #1
 8002b8a:	d10d      	bne.n	8002ba8 <I2C_WaitOnFlagUntilTimeout+0x84>
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	681b      	ldr	r3, [r3, #0]
 8002b90:	695b      	ldr	r3, [r3, #20]
 8002b92:	43da      	mvns	r2, r3
 8002b94:	68bb      	ldr	r3, [r7, #8]
 8002b96:	4013      	ands	r3, r2
 8002b98:	b29b      	uxth	r3, r3
 8002b9a:	2b00      	cmp	r3, #0
 8002b9c:	bf0c      	ite	eq
 8002b9e:	2301      	moveq	r3, #1
 8002ba0:	2300      	movne	r3, #0
 8002ba2:	b2db      	uxtb	r3, r3
 8002ba4:	461a      	mov	r2, r3
 8002ba6:	e00c      	b.n	8002bc2 <I2C_WaitOnFlagUntilTimeout+0x9e>
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	681b      	ldr	r3, [r3, #0]
 8002bac:	699b      	ldr	r3, [r3, #24]
 8002bae:	43da      	mvns	r2, r3
 8002bb0:	68bb      	ldr	r3, [r7, #8]
 8002bb2:	4013      	ands	r3, r2
 8002bb4:	b29b      	uxth	r3, r3
 8002bb6:	2b00      	cmp	r3, #0
 8002bb8:	bf0c      	ite	eq
 8002bba:	2301      	moveq	r3, #1
 8002bbc:	2300      	movne	r3, #0
 8002bbe:	b2db      	uxtb	r3, r3
 8002bc0:	461a      	mov	r2, r3
 8002bc2:	79fb      	ldrb	r3, [r7, #7]
 8002bc4:	429a      	cmp	r2, r3
 8002bc6:	d0b6      	beq.n	8002b36 <I2C_WaitOnFlagUntilTimeout+0x12>
 8002bc8:	2300      	movs	r3, #0
 8002bca:	4618      	mov	r0, r3
 8002bcc:	3710      	adds	r7, #16
 8002bce:	46bd      	mov	sp, r7
 8002bd0:	bd80      	pop	{r7, pc}

08002bd2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8002bd2:	b580      	push	{r7, lr}
 8002bd4:	b084      	sub	sp, #16
 8002bd6:	af00      	add	r7, sp, #0
 8002bd8:	60f8      	str	r0, [r7, #12]
 8002bda:	60b9      	str	r1, [r7, #8]
 8002bdc:	607a      	str	r2, [r7, #4]
 8002bde:	603b      	str	r3, [r7, #0]
 8002be0:	e051      	b.n	8002c86 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8002be2:	68fb      	ldr	r3, [r7, #12]
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	695b      	ldr	r3, [r3, #20]
 8002be8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002bec:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002bf0:	d123      	bne.n	8002c3a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8002bf2:	68fb      	ldr	r3, [r7, #12]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	681a      	ldr	r2, [r3, #0]
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	681b      	ldr	r3, [r3, #0]
 8002bfc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002c00:	601a      	str	r2, [r3, #0]
 8002c02:	68fb      	ldr	r3, [r7, #12]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002c0a:	615a      	str	r2, [r3, #20]
 8002c0c:	68fb      	ldr	r3, [r7, #12]
 8002c0e:	2200      	movs	r2, #0
 8002c10:	631a      	str	r2, [r3, #48]	; 0x30
 8002c12:	68fb      	ldr	r3, [r7, #12]
 8002c14:	2220      	movs	r2, #32
 8002c16:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c1a:	68fb      	ldr	r3, [r7, #12]
 8002c1c:	2200      	movs	r2, #0
 8002c1e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002c22:	68fb      	ldr	r3, [r7, #12]
 8002c24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c26:	f043 0204 	orr.w	r2, r3, #4
 8002c2a:	68fb      	ldr	r3, [r7, #12]
 8002c2c:	641a      	str	r2, [r3, #64]	; 0x40
 8002c2e:	68fb      	ldr	r3, [r7, #12]
 8002c30:	2200      	movs	r2, #0
 8002c32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c36:	2301      	movs	r3, #1
 8002c38:	e046      	b.n	8002cc8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002c40:	d021      	beq.n	8002c86 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8002c42:	f7fe fcc7 	bl	80015d4 <HAL_GetTick>
 8002c46:	4602      	mov	r2, r0
 8002c48:	683b      	ldr	r3, [r7, #0]
 8002c4a:	1ad3      	subs	r3, r2, r3
 8002c4c:	687a      	ldr	r2, [r7, #4]
 8002c4e:	429a      	cmp	r2, r3
 8002c50:	d302      	bcc.n	8002c58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	d116      	bne.n	8002c86 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8002c58:	68fb      	ldr	r3, [r7, #12]
 8002c5a:	2200      	movs	r2, #0
 8002c5c:	631a      	str	r2, [r3, #48]	; 0x30
 8002c5e:	68fb      	ldr	r3, [r7, #12]
 8002c60:	2220      	movs	r2, #32
 8002c62:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002c66:	68fb      	ldr	r3, [r7, #12]
 8002c68:	2200      	movs	r2, #0
 8002c6a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002c6e:	68fb      	ldr	r3, [r7, #12]
 8002c70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c72:	f043 0220 	orr.w	r2, r3, #32
 8002c76:	68fb      	ldr	r3, [r7, #12]
 8002c78:	641a      	str	r2, [r3, #64]	; 0x40
 8002c7a:	68fb      	ldr	r3, [r7, #12]
 8002c7c:	2200      	movs	r2, #0
 8002c7e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002c82:	2301      	movs	r3, #1
 8002c84:	e020      	b.n	8002cc8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8002c86:	68bb      	ldr	r3, [r7, #8]
 8002c88:	0c1b      	lsrs	r3, r3, #16
 8002c8a:	b2db      	uxtb	r3, r3
 8002c8c:	2b01      	cmp	r3, #1
 8002c8e:	d10c      	bne.n	8002caa <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8002c90:	68fb      	ldr	r3, [r7, #12]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	695b      	ldr	r3, [r3, #20]
 8002c96:	43da      	mvns	r2, r3
 8002c98:	68bb      	ldr	r3, [r7, #8]
 8002c9a:	4013      	ands	r3, r2
 8002c9c:	b29b      	uxth	r3, r3
 8002c9e:	2b00      	cmp	r3, #0
 8002ca0:	bf14      	ite	ne
 8002ca2:	2301      	movne	r3, #1
 8002ca4:	2300      	moveq	r3, #0
 8002ca6:	b2db      	uxtb	r3, r3
 8002ca8:	e00b      	b.n	8002cc2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8002caa:	68fb      	ldr	r3, [r7, #12]
 8002cac:	681b      	ldr	r3, [r3, #0]
 8002cae:	699b      	ldr	r3, [r3, #24]
 8002cb0:	43da      	mvns	r2, r3
 8002cb2:	68bb      	ldr	r3, [r7, #8]
 8002cb4:	4013      	ands	r3, r2
 8002cb6:	b29b      	uxth	r3, r3
 8002cb8:	2b00      	cmp	r3, #0
 8002cba:	bf14      	ite	ne
 8002cbc:	2301      	movne	r3, #1
 8002cbe:	2300      	moveq	r3, #0
 8002cc0:	b2db      	uxtb	r3, r3
 8002cc2:	2b00      	cmp	r3, #0
 8002cc4:	d18d      	bne.n	8002be2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8002cc6:	2300      	movs	r3, #0
 8002cc8:	4618      	mov	r0, r3
 8002cca:	3710      	adds	r7, #16
 8002ccc:	46bd      	mov	sp, r7
 8002cce:	bd80      	pop	{r7, pc}

08002cd0 <I2C_WaitOnTXEFlagUntilTimeout>:
 8002cd0:	b580      	push	{r7, lr}
 8002cd2:	b084      	sub	sp, #16
 8002cd4:	af00      	add	r7, sp, #0
 8002cd6:	60f8      	str	r0, [r7, #12]
 8002cd8:	60b9      	str	r1, [r7, #8]
 8002cda:	607a      	str	r2, [r7, #4]
 8002cdc:	e02d      	b.n	8002d3a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8002cde:	68f8      	ldr	r0, [r7, #12]
 8002ce0:	f000 f8ce 	bl	8002e80 <I2C_IsAcknowledgeFailed>
 8002ce4:	4603      	mov	r3, r0
 8002ce6:	2b00      	cmp	r3, #0
 8002ce8:	d001      	beq.n	8002cee <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8002cea:	2301      	movs	r3, #1
 8002cec:	e02d      	b.n	8002d4a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8002cee:	68bb      	ldr	r3, [r7, #8]
 8002cf0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002cf4:	d021      	beq.n	8002d3a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8002cf6:	f7fe fc6d 	bl	80015d4 <HAL_GetTick>
 8002cfa:	4602      	mov	r2, r0
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	1ad3      	subs	r3, r2, r3
 8002d00:	68ba      	ldr	r2, [r7, #8]
 8002d02:	429a      	cmp	r2, r3
 8002d04:	d302      	bcc.n	8002d0c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8002d06:	68bb      	ldr	r3, [r7, #8]
 8002d08:	2b00      	cmp	r3, #0
 8002d0a:	d116      	bne.n	8002d3a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8002d0c:	68fb      	ldr	r3, [r7, #12]
 8002d0e:	2200      	movs	r2, #0
 8002d10:	631a      	str	r2, [r3, #48]	; 0x30
 8002d12:	68fb      	ldr	r3, [r7, #12]
 8002d14:	2220      	movs	r2, #32
 8002d16:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d1a:	68fb      	ldr	r3, [r7, #12]
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002d22:	68fb      	ldr	r3, [r7, #12]
 8002d24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d26:	f043 0220 	orr.w	r2, r3, #32
 8002d2a:	68fb      	ldr	r3, [r7, #12]
 8002d2c:	641a      	str	r2, [r3, #64]	; 0x40
 8002d2e:	68fb      	ldr	r3, [r7, #12]
 8002d30:	2200      	movs	r2, #0
 8002d32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002d36:	2301      	movs	r3, #1
 8002d38:	e007      	b.n	8002d4a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8002d3a:	68fb      	ldr	r3, [r7, #12]
 8002d3c:	681b      	ldr	r3, [r3, #0]
 8002d3e:	695b      	ldr	r3, [r3, #20]
 8002d40:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002d44:	2b80      	cmp	r3, #128	; 0x80
 8002d46:	d1ca      	bne.n	8002cde <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8002d48:	2300      	movs	r3, #0
 8002d4a:	4618      	mov	r0, r3
 8002d4c:	3710      	adds	r7, #16
 8002d4e:	46bd      	mov	sp, r7
 8002d50:	bd80      	pop	{r7, pc}

08002d52 <I2C_WaitOnBTFFlagUntilTimeout>:
 8002d52:	b580      	push	{r7, lr}
 8002d54:	b084      	sub	sp, #16
 8002d56:	af00      	add	r7, sp, #0
 8002d58:	60f8      	str	r0, [r7, #12]
 8002d5a:	60b9      	str	r1, [r7, #8]
 8002d5c:	607a      	str	r2, [r7, #4]
 8002d5e:	e02d      	b.n	8002dbc <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8002d60:	68f8      	ldr	r0, [r7, #12]
 8002d62:	f000 f88d 	bl	8002e80 <I2C_IsAcknowledgeFailed>
 8002d66:	4603      	mov	r3, r0
 8002d68:	2b00      	cmp	r3, #0
 8002d6a:	d001      	beq.n	8002d70 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8002d6c:	2301      	movs	r3, #1
 8002d6e:	e02d      	b.n	8002dcc <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8002d70:	68bb      	ldr	r3, [r7, #8]
 8002d72:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002d76:	d021      	beq.n	8002dbc <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8002d78:	f7fe fc2c 	bl	80015d4 <HAL_GetTick>
 8002d7c:	4602      	mov	r2, r0
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	1ad3      	subs	r3, r2, r3
 8002d82:	68ba      	ldr	r2, [r7, #8]
 8002d84:	429a      	cmp	r2, r3
 8002d86:	d302      	bcc.n	8002d8e <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8002d88:	68bb      	ldr	r3, [r7, #8]
 8002d8a:	2b00      	cmp	r3, #0
 8002d8c:	d116      	bne.n	8002dbc <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8002d8e:	68fb      	ldr	r3, [r7, #12]
 8002d90:	2200      	movs	r2, #0
 8002d92:	631a      	str	r2, [r3, #48]	; 0x30
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	2220      	movs	r2, #32
 8002d98:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002d9c:	68fb      	ldr	r3, [r7, #12]
 8002d9e:	2200      	movs	r2, #0
 8002da0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002da4:	68fb      	ldr	r3, [r7, #12]
 8002da6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002da8:	f043 0220 	orr.w	r2, r3, #32
 8002dac:	68fb      	ldr	r3, [r7, #12]
 8002dae:	641a      	str	r2, [r3, #64]	; 0x40
 8002db0:	68fb      	ldr	r3, [r7, #12]
 8002db2:	2200      	movs	r2, #0
 8002db4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002db8:	2301      	movs	r3, #1
 8002dba:	e007      	b.n	8002dcc <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8002dbc:	68fb      	ldr	r3, [r7, #12]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	695b      	ldr	r3, [r3, #20]
 8002dc2:	f003 0304 	and.w	r3, r3, #4
 8002dc6:	2b04      	cmp	r3, #4
 8002dc8:	d1ca      	bne.n	8002d60 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8002dca:	2300      	movs	r3, #0
 8002dcc:	4618      	mov	r0, r3
 8002dce:	3710      	adds	r7, #16
 8002dd0:	46bd      	mov	sp, r7
 8002dd2:	bd80      	pop	{r7, pc}

08002dd4 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8002dd4:	b580      	push	{r7, lr}
 8002dd6:	b084      	sub	sp, #16
 8002dd8:	af00      	add	r7, sp, #0
 8002dda:	60f8      	str	r0, [r7, #12]
 8002ddc:	60b9      	str	r1, [r7, #8]
 8002dde:	607a      	str	r2, [r7, #4]
 8002de0:	e042      	b.n	8002e68 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8002de2:	68fb      	ldr	r3, [r7, #12]
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	695b      	ldr	r3, [r3, #20]
 8002de8:	f003 0310 	and.w	r3, r3, #16
 8002dec:	2b10      	cmp	r3, #16
 8002dee:	d119      	bne.n	8002e24 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8002df0:	68fb      	ldr	r3, [r7, #12]
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	f06f 0210 	mvn.w	r2, #16
 8002df8:	615a      	str	r2, [r3, #20]
 8002dfa:	68fb      	ldr	r3, [r7, #12]
 8002dfc:	2200      	movs	r2, #0
 8002dfe:	631a      	str	r2, [r3, #48]	; 0x30
 8002e00:	68fb      	ldr	r3, [r7, #12]
 8002e02:	2220      	movs	r2, #32
 8002e04:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e08:	68fb      	ldr	r3, [r7, #12]
 8002e0a:	2200      	movs	r2, #0
 8002e0c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002e10:	68fb      	ldr	r3, [r7, #12]
 8002e12:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002e14:	68fb      	ldr	r3, [r7, #12]
 8002e16:	641a      	str	r2, [r3, #64]	; 0x40
 8002e18:	68fb      	ldr	r3, [r7, #12]
 8002e1a:	2200      	movs	r2, #0
 8002e1c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e20:	2301      	movs	r3, #1
 8002e22:	e029      	b.n	8002e78 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8002e24:	f7fe fbd6 	bl	80015d4 <HAL_GetTick>
 8002e28:	4602      	mov	r2, r0
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	1ad3      	subs	r3, r2, r3
 8002e2e:	68ba      	ldr	r2, [r7, #8]
 8002e30:	429a      	cmp	r2, r3
 8002e32:	d302      	bcc.n	8002e3a <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8002e34:	68bb      	ldr	r3, [r7, #8]
 8002e36:	2b00      	cmp	r3, #0
 8002e38:	d116      	bne.n	8002e68 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8002e3a:	68fb      	ldr	r3, [r7, #12]
 8002e3c:	2200      	movs	r2, #0
 8002e3e:	631a      	str	r2, [r3, #48]	; 0x30
 8002e40:	68fb      	ldr	r3, [r7, #12]
 8002e42:	2220      	movs	r2, #32
 8002e44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002e48:	68fb      	ldr	r3, [r7, #12]
 8002e4a:	2200      	movs	r2, #0
 8002e4c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002e50:	68fb      	ldr	r3, [r7, #12]
 8002e52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002e54:	f043 0220 	orr.w	r2, r3, #32
 8002e58:	68fb      	ldr	r3, [r7, #12]
 8002e5a:	641a      	str	r2, [r3, #64]	; 0x40
 8002e5c:	68fb      	ldr	r3, [r7, #12]
 8002e5e:	2200      	movs	r2, #0
 8002e60:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002e64:	2301      	movs	r3, #1
 8002e66:	e007      	b.n	8002e78 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	695b      	ldr	r3, [r3, #20]
 8002e6e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002e72:	2b40      	cmp	r3, #64	; 0x40
 8002e74:	d1b5      	bne.n	8002de2 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8002e76:	2300      	movs	r3, #0
 8002e78:	4618      	mov	r0, r3
 8002e7a:	3710      	adds	r7, #16
 8002e7c:	46bd      	mov	sp, r7
 8002e7e:	bd80      	pop	{r7, pc}

08002e80 <I2C_IsAcknowledgeFailed>:
 8002e80:	b480      	push	{r7}
 8002e82:	b083      	sub	sp, #12
 8002e84:	af00      	add	r7, sp, #0
 8002e86:	6078      	str	r0, [r7, #4]
 8002e88:	687b      	ldr	r3, [r7, #4]
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	695b      	ldr	r3, [r3, #20]
 8002e8e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002e92:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002e96:	d11b      	bne.n	8002ed0 <I2C_IsAcknowledgeFailed+0x50>
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8002ea0:	615a      	str	r2, [r3, #20]
 8002ea2:	687b      	ldr	r3, [r7, #4]
 8002ea4:	2200      	movs	r2, #0
 8002ea6:	631a      	str	r2, [r3, #48]	; 0x30
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	2220      	movs	r2, #32
 8002eac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	2200      	movs	r2, #0
 8002eb4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ebc:	f043 0204 	orr.w	r2, r3, #4
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	641a      	str	r2, [r3, #64]	; 0x40
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	2200      	movs	r2, #0
 8002ec8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002ecc:	2301      	movs	r3, #1
 8002ece:	e000      	b.n	8002ed2 <I2C_IsAcknowledgeFailed+0x52>
 8002ed0:	2300      	movs	r3, #0
 8002ed2:	4618      	mov	r0, r3
 8002ed4:	370c      	adds	r7, #12
 8002ed6:	46bd      	mov	sp, r7
 8002ed8:	bc80      	pop	{r7}
 8002eda:	4770      	bx	lr

08002edc <HAL_RCC_OscConfig>:
 8002edc:	b580      	push	{r7, lr}
 8002ede:	b086      	sub	sp, #24
 8002ee0:	af00      	add	r7, sp, #0
 8002ee2:	6078      	str	r0, [r7, #4]
 8002ee4:	687b      	ldr	r3, [r7, #4]
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d101      	bne.n	8002eee <HAL_RCC_OscConfig+0x12>
 8002eea:	2301      	movs	r3, #1
 8002eec:	e272      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	f003 0301 	and.w	r3, r3, #1
 8002ef6:	2b00      	cmp	r3, #0
 8002ef8:	f000 8087 	beq.w	800300a <HAL_RCC_OscConfig+0x12e>
 8002efc:	4b92      	ldr	r3, [pc, #584]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002efe:	685b      	ldr	r3, [r3, #4]
 8002f00:	f003 030c 	and.w	r3, r3, #12
 8002f04:	2b04      	cmp	r3, #4
 8002f06:	d00c      	beq.n	8002f22 <HAL_RCC_OscConfig+0x46>
 8002f08:	4b8f      	ldr	r3, [pc, #572]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f0a:	685b      	ldr	r3, [r3, #4]
 8002f0c:	f003 030c 	and.w	r3, r3, #12
 8002f10:	2b08      	cmp	r3, #8
 8002f12:	d112      	bne.n	8002f3a <HAL_RCC_OscConfig+0x5e>
 8002f14:	4b8c      	ldr	r3, [pc, #560]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f16:	685b      	ldr	r3, [r3, #4]
 8002f18:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002f1c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002f20:	d10b      	bne.n	8002f3a <HAL_RCC_OscConfig+0x5e>
 8002f22:	4b89      	ldr	r3, [pc, #548]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f24:	681b      	ldr	r3, [r3, #0]
 8002f26:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	d06c      	beq.n	8003008 <HAL_RCC_OscConfig+0x12c>
 8002f2e:	687b      	ldr	r3, [r7, #4]
 8002f30:	685b      	ldr	r3, [r3, #4]
 8002f32:	2b00      	cmp	r3, #0
 8002f34:	d168      	bne.n	8003008 <HAL_RCC_OscConfig+0x12c>
 8002f36:	2301      	movs	r3, #1
 8002f38:	e24c      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8002f3a:	687b      	ldr	r3, [r7, #4]
 8002f3c:	685b      	ldr	r3, [r3, #4]
 8002f3e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002f42:	d106      	bne.n	8002f52 <HAL_RCC_OscConfig+0x76>
 8002f44:	4b80      	ldr	r3, [pc, #512]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f46:	681b      	ldr	r3, [r3, #0]
 8002f48:	4a7f      	ldr	r2, [pc, #508]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f4a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002f4e:	6013      	str	r3, [r2, #0]
 8002f50:	e02e      	b.n	8002fb0 <HAL_RCC_OscConfig+0xd4>
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	685b      	ldr	r3, [r3, #4]
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d10c      	bne.n	8002f74 <HAL_RCC_OscConfig+0x98>
 8002f5a:	4b7b      	ldr	r3, [pc, #492]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	4a7a      	ldr	r2, [pc, #488]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f60:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002f64:	6013      	str	r3, [r2, #0]
 8002f66:	4b78      	ldr	r3, [pc, #480]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f68:	681b      	ldr	r3, [r3, #0]
 8002f6a:	4a77      	ldr	r2, [pc, #476]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f6c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002f70:	6013      	str	r3, [r2, #0]
 8002f72:	e01d      	b.n	8002fb0 <HAL_RCC_OscConfig+0xd4>
 8002f74:	687b      	ldr	r3, [r7, #4]
 8002f76:	685b      	ldr	r3, [r3, #4]
 8002f78:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002f7c:	d10c      	bne.n	8002f98 <HAL_RCC_OscConfig+0xbc>
 8002f7e:	4b72      	ldr	r3, [pc, #456]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	4a71      	ldr	r2, [pc, #452]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f84:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002f88:	6013      	str	r3, [r2, #0]
 8002f8a:	4b6f      	ldr	r3, [pc, #444]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	4a6e      	ldr	r2, [pc, #440]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f90:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002f94:	6013      	str	r3, [r2, #0]
 8002f96:	e00b      	b.n	8002fb0 <HAL_RCC_OscConfig+0xd4>
 8002f98:	4b6b      	ldr	r3, [pc, #428]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f9a:	681b      	ldr	r3, [r3, #0]
 8002f9c:	4a6a      	ldr	r2, [pc, #424]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002f9e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002fa2:	6013      	str	r3, [r2, #0]
 8002fa4:	4b68      	ldr	r3, [pc, #416]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002fa6:	681b      	ldr	r3, [r3, #0]
 8002fa8:	4a67      	ldr	r2, [pc, #412]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002faa:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002fae:	6013      	str	r3, [r2, #0]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	685b      	ldr	r3, [r3, #4]
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	d013      	beq.n	8002fe0 <HAL_RCC_OscConfig+0x104>
 8002fb8:	f7fe fb0c 	bl	80015d4 <HAL_GetTick>
 8002fbc:	6138      	str	r0, [r7, #16]
 8002fbe:	e008      	b.n	8002fd2 <HAL_RCC_OscConfig+0xf6>
 8002fc0:	f7fe fb08 	bl	80015d4 <HAL_GetTick>
 8002fc4:	4602      	mov	r2, r0
 8002fc6:	693b      	ldr	r3, [r7, #16]
 8002fc8:	1ad3      	subs	r3, r2, r3
 8002fca:	2b64      	cmp	r3, #100	; 0x64
 8002fcc:	d901      	bls.n	8002fd2 <HAL_RCC_OscConfig+0xf6>
 8002fce:	2303      	movs	r3, #3
 8002fd0:	e200      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8002fd2:	4b5d      	ldr	r3, [pc, #372]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	d0f0      	beq.n	8002fc0 <HAL_RCC_OscConfig+0xe4>
 8002fde:	e014      	b.n	800300a <HAL_RCC_OscConfig+0x12e>
 8002fe0:	f7fe faf8 	bl	80015d4 <HAL_GetTick>
 8002fe4:	6138      	str	r0, [r7, #16]
 8002fe6:	e008      	b.n	8002ffa <HAL_RCC_OscConfig+0x11e>
 8002fe8:	f7fe faf4 	bl	80015d4 <HAL_GetTick>
 8002fec:	4602      	mov	r2, r0
 8002fee:	693b      	ldr	r3, [r7, #16]
 8002ff0:	1ad3      	subs	r3, r2, r3
 8002ff2:	2b64      	cmp	r3, #100	; 0x64
 8002ff4:	d901      	bls.n	8002ffa <HAL_RCC_OscConfig+0x11e>
 8002ff6:	2303      	movs	r3, #3
 8002ff8:	e1ec      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8002ffa:	4b53      	ldr	r3, [pc, #332]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8002ffc:	681b      	ldr	r3, [r3, #0]
 8002ffe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003002:	2b00      	cmp	r3, #0
 8003004:	d1f0      	bne.n	8002fe8 <HAL_RCC_OscConfig+0x10c>
 8003006:	e000      	b.n	800300a <HAL_RCC_OscConfig+0x12e>
 8003008:	bf00      	nop
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	f003 0302 	and.w	r3, r3, #2
 8003012:	2b00      	cmp	r3, #0
 8003014:	d063      	beq.n	80030de <HAL_RCC_OscConfig+0x202>
 8003016:	4b4c      	ldr	r3, [pc, #304]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8003018:	685b      	ldr	r3, [r3, #4]
 800301a:	f003 030c 	and.w	r3, r3, #12
 800301e:	2b00      	cmp	r3, #0
 8003020:	d00b      	beq.n	800303a <HAL_RCC_OscConfig+0x15e>
 8003022:	4b49      	ldr	r3, [pc, #292]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8003024:	685b      	ldr	r3, [r3, #4]
 8003026:	f003 030c 	and.w	r3, r3, #12
 800302a:	2b08      	cmp	r3, #8
 800302c:	d11c      	bne.n	8003068 <HAL_RCC_OscConfig+0x18c>
 800302e:	4b46      	ldr	r3, [pc, #280]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8003030:	685b      	ldr	r3, [r3, #4]
 8003032:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003036:	2b00      	cmp	r3, #0
 8003038:	d116      	bne.n	8003068 <HAL_RCC_OscConfig+0x18c>
 800303a:	4b43      	ldr	r3, [pc, #268]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 800303c:	681b      	ldr	r3, [r3, #0]
 800303e:	f003 0302 	and.w	r3, r3, #2
 8003042:	2b00      	cmp	r3, #0
 8003044:	d005      	beq.n	8003052 <HAL_RCC_OscConfig+0x176>
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	691b      	ldr	r3, [r3, #16]
 800304a:	2b01      	cmp	r3, #1
 800304c:	d001      	beq.n	8003052 <HAL_RCC_OscConfig+0x176>
 800304e:	2301      	movs	r3, #1
 8003050:	e1c0      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8003052:	4b3d      	ldr	r3, [pc, #244]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8003054:	681b      	ldr	r3, [r3, #0]
 8003056:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	695b      	ldr	r3, [r3, #20]
 800305e:	00db      	lsls	r3, r3, #3
 8003060:	4939      	ldr	r1, [pc, #228]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8003062:	4313      	orrs	r3, r2
 8003064:	600b      	str	r3, [r1, #0]
 8003066:	e03a      	b.n	80030de <HAL_RCC_OscConfig+0x202>
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	691b      	ldr	r3, [r3, #16]
 800306c:	2b00      	cmp	r3, #0
 800306e:	d020      	beq.n	80030b2 <HAL_RCC_OscConfig+0x1d6>
 8003070:	4b36      	ldr	r3, [pc, #216]	; (800314c <HAL_RCC_OscConfig+0x270>)
 8003072:	2201      	movs	r2, #1
 8003074:	601a      	str	r2, [r3, #0]
 8003076:	f7fe faad 	bl	80015d4 <HAL_GetTick>
 800307a:	6138      	str	r0, [r7, #16]
 800307c:	e008      	b.n	8003090 <HAL_RCC_OscConfig+0x1b4>
 800307e:	f7fe faa9 	bl	80015d4 <HAL_GetTick>
 8003082:	4602      	mov	r2, r0
 8003084:	693b      	ldr	r3, [r7, #16]
 8003086:	1ad3      	subs	r3, r2, r3
 8003088:	2b02      	cmp	r3, #2
 800308a:	d901      	bls.n	8003090 <HAL_RCC_OscConfig+0x1b4>
 800308c:	2303      	movs	r3, #3
 800308e:	e1a1      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8003090:	4b2d      	ldr	r3, [pc, #180]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8003092:	681b      	ldr	r3, [r3, #0]
 8003094:	f003 0302 	and.w	r3, r3, #2
 8003098:	2b00      	cmp	r3, #0
 800309a:	d0f0      	beq.n	800307e <HAL_RCC_OscConfig+0x1a2>
 800309c:	4b2a      	ldr	r3, [pc, #168]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80030a4:	687b      	ldr	r3, [r7, #4]
 80030a6:	695b      	ldr	r3, [r3, #20]
 80030a8:	00db      	lsls	r3, r3, #3
 80030aa:	4927      	ldr	r1, [pc, #156]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 80030ac:	4313      	orrs	r3, r2
 80030ae:	600b      	str	r3, [r1, #0]
 80030b0:	e015      	b.n	80030de <HAL_RCC_OscConfig+0x202>
 80030b2:	4b26      	ldr	r3, [pc, #152]	; (800314c <HAL_RCC_OscConfig+0x270>)
 80030b4:	2200      	movs	r2, #0
 80030b6:	601a      	str	r2, [r3, #0]
 80030b8:	f7fe fa8c 	bl	80015d4 <HAL_GetTick>
 80030bc:	6138      	str	r0, [r7, #16]
 80030be:	e008      	b.n	80030d2 <HAL_RCC_OscConfig+0x1f6>
 80030c0:	f7fe fa88 	bl	80015d4 <HAL_GetTick>
 80030c4:	4602      	mov	r2, r0
 80030c6:	693b      	ldr	r3, [r7, #16]
 80030c8:	1ad3      	subs	r3, r2, r3
 80030ca:	2b02      	cmp	r3, #2
 80030cc:	d901      	bls.n	80030d2 <HAL_RCC_OscConfig+0x1f6>
 80030ce:	2303      	movs	r3, #3
 80030d0:	e180      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 80030d2:	4b1d      	ldr	r3, [pc, #116]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 80030d4:	681b      	ldr	r3, [r3, #0]
 80030d6:	f003 0302 	and.w	r3, r3, #2
 80030da:	2b00      	cmp	r3, #0
 80030dc:	d1f0      	bne.n	80030c0 <HAL_RCC_OscConfig+0x1e4>
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	f003 0308 	and.w	r3, r3, #8
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	d03a      	beq.n	8003160 <HAL_RCC_OscConfig+0x284>
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	699b      	ldr	r3, [r3, #24]
 80030ee:	2b00      	cmp	r3, #0
 80030f0:	d019      	beq.n	8003126 <HAL_RCC_OscConfig+0x24a>
 80030f2:	4b17      	ldr	r3, [pc, #92]	; (8003150 <HAL_RCC_OscConfig+0x274>)
 80030f4:	2201      	movs	r2, #1
 80030f6:	601a      	str	r2, [r3, #0]
 80030f8:	f7fe fa6c 	bl	80015d4 <HAL_GetTick>
 80030fc:	6138      	str	r0, [r7, #16]
 80030fe:	e008      	b.n	8003112 <HAL_RCC_OscConfig+0x236>
 8003100:	f7fe fa68 	bl	80015d4 <HAL_GetTick>
 8003104:	4602      	mov	r2, r0
 8003106:	693b      	ldr	r3, [r7, #16]
 8003108:	1ad3      	subs	r3, r2, r3
 800310a:	2b02      	cmp	r3, #2
 800310c:	d901      	bls.n	8003112 <HAL_RCC_OscConfig+0x236>
 800310e:	2303      	movs	r3, #3
 8003110:	e160      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8003112:	4b0d      	ldr	r3, [pc, #52]	; (8003148 <HAL_RCC_OscConfig+0x26c>)
 8003114:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003116:	f003 0302 	and.w	r3, r3, #2
 800311a:	2b00      	cmp	r3, #0
 800311c:	d0f0      	beq.n	8003100 <HAL_RCC_OscConfig+0x224>
 800311e:	2001      	movs	r0, #1
 8003120:	f000 fad8 	bl	80036d4 <RCC_Delay>
 8003124:	e01c      	b.n	8003160 <HAL_RCC_OscConfig+0x284>
 8003126:	4b0a      	ldr	r3, [pc, #40]	; (8003150 <HAL_RCC_OscConfig+0x274>)
 8003128:	2200      	movs	r2, #0
 800312a:	601a      	str	r2, [r3, #0]
 800312c:	f7fe fa52 	bl	80015d4 <HAL_GetTick>
 8003130:	6138      	str	r0, [r7, #16]
 8003132:	e00f      	b.n	8003154 <HAL_RCC_OscConfig+0x278>
 8003134:	f7fe fa4e 	bl	80015d4 <HAL_GetTick>
 8003138:	4602      	mov	r2, r0
 800313a:	693b      	ldr	r3, [r7, #16]
 800313c:	1ad3      	subs	r3, r2, r3
 800313e:	2b02      	cmp	r3, #2
 8003140:	d908      	bls.n	8003154 <HAL_RCC_OscConfig+0x278>
 8003142:	2303      	movs	r3, #3
 8003144:	e146      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8003146:	bf00      	nop
 8003148:	40021000 	.word	0x40021000
 800314c:	42420000 	.word	0x42420000
 8003150:	42420480 	.word	0x42420480
 8003154:	4b92      	ldr	r3, [pc, #584]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003156:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003158:	f003 0302 	and.w	r3, r3, #2
 800315c:	2b00      	cmp	r3, #0
 800315e:	d1e9      	bne.n	8003134 <HAL_RCC_OscConfig+0x258>
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	681b      	ldr	r3, [r3, #0]
 8003164:	f003 0304 	and.w	r3, r3, #4
 8003168:	2b00      	cmp	r3, #0
 800316a:	f000 80a6 	beq.w	80032ba <HAL_RCC_OscConfig+0x3de>
 800316e:	2300      	movs	r3, #0
 8003170:	75fb      	strb	r3, [r7, #23]
 8003172:	4b8b      	ldr	r3, [pc, #556]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003174:	69db      	ldr	r3, [r3, #28]
 8003176:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800317a:	2b00      	cmp	r3, #0
 800317c:	d10d      	bne.n	800319a <HAL_RCC_OscConfig+0x2be>
 800317e:	4b88      	ldr	r3, [pc, #544]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003180:	69db      	ldr	r3, [r3, #28]
 8003182:	4a87      	ldr	r2, [pc, #540]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003184:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003188:	61d3      	str	r3, [r2, #28]
 800318a:	4b85      	ldr	r3, [pc, #532]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 800318c:	69db      	ldr	r3, [r3, #28]
 800318e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003192:	60bb      	str	r3, [r7, #8]
 8003194:	68bb      	ldr	r3, [r7, #8]
 8003196:	2301      	movs	r3, #1
 8003198:	75fb      	strb	r3, [r7, #23]
 800319a:	4b82      	ldr	r3, [pc, #520]	; (80033a4 <HAL_RCC_OscConfig+0x4c8>)
 800319c:	681b      	ldr	r3, [r3, #0]
 800319e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80031a2:	2b00      	cmp	r3, #0
 80031a4:	d118      	bne.n	80031d8 <HAL_RCC_OscConfig+0x2fc>
 80031a6:	4b7f      	ldr	r3, [pc, #508]	; (80033a4 <HAL_RCC_OscConfig+0x4c8>)
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	4a7e      	ldr	r2, [pc, #504]	; (80033a4 <HAL_RCC_OscConfig+0x4c8>)
 80031ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80031b0:	6013      	str	r3, [r2, #0]
 80031b2:	f7fe fa0f 	bl	80015d4 <HAL_GetTick>
 80031b6:	6138      	str	r0, [r7, #16]
 80031b8:	e008      	b.n	80031cc <HAL_RCC_OscConfig+0x2f0>
 80031ba:	f7fe fa0b 	bl	80015d4 <HAL_GetTick>
 80031be:	4602      	mov	r2, r0
 80031c0:	693b      	ldr	r3, [r7, #16]
 80031c2:	1ad3      	subs	r3, r2, r3
 80031c4:	2b64      	cmp	r3, #100	; 0x64
 80031c6:	d901      	bls.n	80031cc <HAL_RCC_OscConfig+0x2f0>
 80031c8:	2303      	movs	r3, #3
 80031ca:	e103      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 80031cc:	4b75      	ldr	r3, [pc, #468]	; (80033a4 <HAL_RCC_OscConfig+0x4c8>)
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80031d4:	2b00      	cmp	r3, #0
 80031d6:	d0f0      	beq.n	80031ba <HAL_RCC_OscConfig+0x2de>
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	68db      	ldr	r3, [r3, #12]
 80031dc:	2b01      	cmp	r3, #1
 80031de:	d106      	bne.n	80031ee <HAL_RCC_OscConfig+0x312>
 80031e0:	4b6f      	ldr	r3, [pc, #444]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 80031e2:	6a1b      	ldr	r3, [r3, #32]
 80031e4:	4a6e      	ldr	r2, [pc, #440]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 80031e6:	f043 0301 	orr.w	r3, r3, #1
 80031ea:	6213      	str	r3, [r2, #32]
 80031ec:	e02d      	b.n	800324a <HAL_RCC_OscConfig+0x36e>
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	68db      	ldr	r3, [r3, #12]
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d10c      	bne.n	8003210 <HAL_RCC_OscConfig+0x334>
 80031f6:	4b6a      	ldr	r3, [pc, #424]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 80031f8:	6a1b      	ldr	r3, [r3, #32]
 80031fa:	4a69      	ldr	r2, [pc, #420]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 80031fc:	f023 0301 	bic.w	r3, r3, #1
 8003200:	6213      	str	r3, [r2, #32]
 8003202:	4b67      	ldr	r3, [pc, #412]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003204:	6a1b      	ldr	r3, [r3, #32]
 8003206:	4a66      	ldr	r2, [pc, #408]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003208:	f023 0304 	bic.w	r3, r3, #4
 800320c:	6213      	str	r3, [r2, #32]
 800320e:	e01c      	b.n	800324a <HAL_RCC_OscConfig+0x36e>
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	68db      	ldr	r3, [r3, #12]
 8003214:	2b05      	cmp	r3, #5
 8003216:	d10c      	bne.n	8003232 <HAL_RCC_OscConfig+0x356>
 8003218:	4b61      	ldr	r3, [pc, #388]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 800321a:	6a1b      	ldr	r3, [r3, #32]
 800321c:	4a60      	ldr	r2, [pc, #384]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 800321e:	f043 0304 	orr.w	r3, r3, #4
 8003222:	6213      	str	r3, [r2, #32]
 8003224:	4b5e      	ldr	r3, [pc, #376]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003226:	6a1b      	ldr	r3, [r3, #32]
 8003228:	4a5d      	ldr	r2, [pc, #372]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 800322a:	f043 0301 	orr.w	r3, r3, #1
 800322e:	6213      	str	r3, [r2, #32]
 8003230:	e00b      	b.n	800324a <HAL_RCC_OscConfig+0x36e>
 8003232:	4b5b      	ldr	r3, [pc, #364]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003234:	6a1b      	ldr	r3, [r3, #32]
 8003236:	4a5a      	ldr	r2, [pc, #360]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003238:	f023 0301 	bic.w	r3, r3, #1
 800323c:	6213      	str	r3, [r2, #32]
 800323e:	4b58      	ldr	r3, [pc, #352]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003240:	6a1b      	ldr	r3, [r3, #32]
 8003242:	4a57      	ldr	r2, [pc, #348]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003244:	f023 0304 	bic.w	r3, r3, #4
 8003248:	6213      	str	r3, [r2, #32]
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	68db      	ldr	r3, [r3, #12]
 800324e:	2b00      	cmp	r3, #0
 8003250:	d015      	beq.n	800327e <HAL_RCC_OscConfig+0x3a2>
 8003252:	f7fe f9bf 	bl	80015d4 <HAL_GetTick>
 8003256:	6138      	str	r0, [r7, #16]
 8003258:	e00a      	b.n	8003270 <HAL_RCC_OscConfig+0x394>
 800325a:	f7fe f9bb 	bl	80015d4 <HAL_GetTick>
 800325e:	4602      	mov	r2, r0
 8003260:	693b      	ldr	r3, [r7, #16]
 8003262:	1ad3      	subs	r3, r2, r3
 8003264:	f241 3288 	movw	r2, #5000	; 0x1388
 8003268:	4293      	cmp	r3, r2
 800326a:	d901      	bls.n	8003270 <HAL_RCC_OscConfig+0x394>
 800326c:	2303      	movs	r3, #3
 800326e:	e0b1      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8003270:	4b4b      	ldr	r3, [pc, #300]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003272:	6a1b      	ldr	r3, [r3, #32]
 8003274:	f003 0302 	and.w	r3, r3, #2
 8003278:	2b00      	cmp	r3, #0
 800327a:	d0ee      	beq.n	800325a <HAL_RCC_OscConfig+0x37e>
 800327c:	e014      	b.n	80032a8 <HAL_RCC_OscConfig+0x3cc>
 800327e:	f7fe f9a9 	bl	80015d4 <HAL_GetTick>
 8003282:	6138      	str	r0, [r7, #16]
 8003284:	e00a      	b.n	800329c <HAL_RCC_OscConfig+0x3c0>
 8003286:	f7fe f9a5 	bl	80015d4 <HAL_GetTick>
 800328a:	4602      	mov	r2, r0
 800328c:	693b      	ldr	r3, [r7, #16]
 800328e:	1ad3      	subs	r3, r2, r3
 8003290:	f241 3288 	movw	r2, #5000	; 0x1388
 8003294:	4293      	cmp	r3, r2
 8003296:	d901      	bls.n	800329c <HAL_RCC_OscConfig+0x3c0>
 8003298:	2303      	movs	r3, #3
 800329a:	e09b      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 800329c:	4b40      	ldr	r3, [pc, #256]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 800329e:	6a1b      	ldr	r3, [r3, #32]
 80032a0:	f003 0302 	and.w	r3, r3, #2
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	d1ee      	bne.n	8003286 <HAL_RCC_OscConfig+0x3aa>
 80032a8:	7dfb      	ldrb	r3, [r7, #23]
 80032aa:	2b01      	cmp	r3, #1
 80032ac:	d105      	bne.n	80032ba <HAL_RCC_OscConfig+0x3de>
 80032ae:	4b3c      	ldr	r3, [pc, #240]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 80032b0:	69db      	ldr	r3, [r3, #28]
 80032b2:	4a3b      	ldr	r2, [pc, #236]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 80032b4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80032b8:	61d3      	str	r3, [r2, #28]
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	69db      	ldr	r3, [r3, #28]
 80032be:	2b00      	cmp	r3, #0
 80032c0:	f000 8087 	beq.w	80033d2 <HAL_RCC_OscConfig+0x4f6>
 80032c4:	4b36      	ldr	r3, [pc, #216]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 80032c6:	685b      	ldr	r3, [r3, #4]
 80032c8:	f003 030c 	and.w	r3, r3, #12
 80032cc:	2b08      	cmp	r3, #8
 80032ce:	d061      	beq.n	8003394 <HAL_RCC_OscConfig+0x4b8>
 80032d0:	687b      	ldr	r3, [r7, #4]
 80032d2:	69db      	ldr	r3, [r3, #28]
 80032d4:	2b02      	cmp	r3, #2
 80032d6:	d146      	bne.n	8003366 <HAL_RCC_OscConfig+0x48a>
 80032d8:	4b33      	ldr	r3, [pc, #204]	; (80033a8 <HAL_RCC_OscConfig+0x4cc>)
 80032da:	2200      	movs	r2, #0
 80032dc:	601a      	str	r2, [r3, #0]
 80032de:	f7fe f979 	bl	80015d4 <HAL_GetTick>
 80032e2:	6138      	str	r0, [r7, #16]
 80032e4:	e008      	b.n	80032f8 <HAL_RCC_OscConfig+0x41c>
 80032e6:	f7fe f975 	bl	80015d4 <HAL_GetTick>
 80032ea:	4602      	mov	r2, r0
 80032ec:	693b      	ldr	r3, [r7, #16]
 80032ee:	1ad3      	subs	r3, r2, r3
 80032f0:	2b02      	cmp	r3, #2
 80032f2:	d901      	bls.n	80032f8 <HAL_RCC_OscConfig+0x41c>
 80032f4:	2303      	movs	r3, #3
 80032f6:	e06d      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 80032f8:	4b29      	ldr	r3, [pc, #164]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003300:	2b00      	cmp	r3, #0
 8003302:	d1f0      	bne.n	80032e6 <HAL_RCC_OscConfig+0x40a>
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	6a1b      	ldr	r3, [r3, #32]
 8003308:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800330c:	d108      	bne.n	8003320 <HAL_RCC_OscConfig+0x444>
 800330e:	4b24      	ldr	r3, [pc, #144]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003310:	685b      	ldr	r3, [r3, #4]
 8003312:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8003316:	687b      	ldr	r3, [r7, #4]
 8003318:	689b      	ldr	r3, [r3, #8]
 800331a:	4921      	ldr	r1, [pc, #132]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 800331c:	4313      	orrs	r3, r2
 800331e:	604b      	str	r3, [r1, #4]
 8003320:	4b1f      	ldr	r3, [pc, #124]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003322:	685b      	ldr	r3, [r3, #4]
 8003324:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	6a19      	ldr	r1, [r3, #32]
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003330:	430b      	orrs	r3, r1
 8003332:	491b      	ldr	r1, [pc, #108]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003334:	4313      	orrs	r3, r2
 8003336:	604b      	str	r3, [r1, #4]
 8003338:	4b1b      	ldr	r3, [pc, #108]	; (80033a8 <HAL_RCC_OscConfig+0x4cc>)
 800333a:	2201      	movs	r2, #1
 800333c:	601a      	str	r2, [r3, #0]
 800333e:	f7fe f949 	bl	80015d4 <HAL_GetTick>
 8003342:	6138      	str	r0, [r7, #16]
 8003344:	e008      	b.n	8003358 <HAL_RCC_OscConfig+0x47c>
 8003346:	f7fe f945 	bl	80015d4 <HAL_GetTick>
 800334a:	4602      	mov	r2, r0
 800334c:	693b      	ldr	r3, [r7, #16]
 800334e:	1ad3      	subs	r3, r2, r3
 8003350:	2b02      	cmp	r3, #2
 8003352:	d901      	bls.n	8003358 <HAL_RCC_OscConfig+0x47c>
 8003354:	2303      	movs	r3, #3
 8003356:	e03d      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8003358:	4b11      	ldr	r3, [pc, #68]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 800335a:	681b      	ldr	r3, [r3, #0]
 800335c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003360:	2b00      	cmp	r3, #0
 8003362:	d0f0      	beq.n	8003346 <HAL_RCC_OscConfig+0x46a>
 8003364:	e035      	b.n	80033d2 <HAL_RCC_OscConfig+0x4f6>
 8003366:	4b10      	ldr	r3, [pc, #64]	; (80033a8 <HAL_RCC_OscConfig+0x4cc>)
 8003368:	2200      	movs	r2, #0
 800336a:	601a      	str	r2, [r3, #0]
 800336c:	f7fe f932 	bl	80015d4 <HAL_GetTick>
 8003370:	6138      	str	r0, [r7, #16]
 8003372:	e008      	b.n	8003386 <HAL_RCC_OscConfig+0x4aa>
 8003374:	f7fe f92e 	bl	80015d4 <HAL_GetTick>
 8003378:	4602      	mov	r2, r0
 800337a:	693b      	ldr	r3, [r7, #16]
 800337c:	1ad3      	subs	r3, r2, r3
 800337e:	2b02      	cmp	r3, #2
 8003380:	d901      	bls.n	8003386 <HAL_RCC_OscConfig+0x4aa>
 8003382:	2303      	movs	r3, #3
 8003384:	e026      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 8003386:	4b06      	ldr	r3, [pc, #24]	; (80033a0 <HAL_RCC_OscConfig+0x4c4>)
 8003388:	681b      	ldr	r3, [r3, #0]
 800338a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800338e:	2b00      	cmp	r3, #0
 8003390:	d1f0      	bne.n	8003374 <HAL_RCC_OscConfig+0x498>
 8003392:	e01e      	b.n	80033d2 <HAL_RCC_OscConfig+0x4f6>
 8003394:	687b      	ldr	r3, [r7, #4]
 8003396:	69db      	ldr	r3, [r3, #28]
 8003398:	2b01      	cmp	r3, #1
 800339a:	d107      	bne.n	80033ac <HAL_RCC_OscConfig+0x4d0>
 800339c:	2301      	movs	r3, #1
 800339e:	e019      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 80033a0:	40021000 	.word	0x40021000
 80033a4:	40007000 	.word	0x40007000
 80033a8:	42420060 	.word	0x42420060
 80033ac:	4b0b      	ldr	r3, [pc, #44]	; (80033dc <HAL_RCC_OscConfig+0x500>)
 80033ae:	685b      	ldr	r3, [r3, #4]
 80033b0:	60fb      	str	r3, [r7, #12]
 80033b2:	68fb      	ldr	r3, [r7, #12]
 80033b4:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	6a1b      	ldr	r3, [r3, #32]
 80033bc:	429a      	cmp	r2, r3
 80033be:	d106      	bne.n	80033ce <HAL_RCC_OscConfig+0x4f2>
 80033c0:	68fb      	ldr	r3, [r7, #12]
 80033c2:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80033ca:	429a      	cmp	r2, r3
 80033cc:	d001      	beq.n	80033d2 <HAL_RCC_OscConfig+0x4f6>
 80033ce:	2301      	movs	r3, #1
 80033d0:	e000      	b.n	80033d4 <HAL_RCC_OscConfig+0x4f8>
 80033d2:	2300      	movs	r3, #0
 80033d4:	4618      	mov	r0, r3
 80033d6:	3718      	adds	r7, #24
 80033d8:	46bd      	mov	sp, r7
 80033da:	bd80      	pop	{r7, pc}
 80033dc:	40021000 	.word	0x40021000

080033e0 <HAL_RCC_ClockConfig>:
 80033e0:	b580      	push	{r7, lr}
 80033e2:	b084      	sub	sp, #16
 80033e4:	af00      	add	r7, sp, #0
 80033e6:	6078      	str	r0, [r7, #4]
 80033e8:	6039      	str	r1, [r7, #0]
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	2b00      	cmp	r3, #0
 80033ee:	d101      	bne.n	80033f4 <HAL_RCC_ClockConfig+0x14>
 80033f0:	2301      	movs	r3, #1
 80033f2:	e0d0      	b.n	8003596 <HAL_RCC_ClockConfig+0x1b6>
 80033f4:	4b6a      	ldr	r3, [pc, #424]	; (80035a0 <HAL_RCC_ClockConfig+0x1c0>)
 80033f6:	681b      	ldr	r3, [r3, #0]
 80033f8:	f003 0307 	and.w	r3, r3, #7
 80033fc:	683a      	ldr	r2, [r7, #0]
 80033fe:	429a      	cmp	r2, r3
 8003400:	d910      	bls.n	8003424 <HAL_RCC_ClockConfig+0x44>
 8003402:	4b67      	ldr	r3, [pc, #412]	; (80035a0 <HAL_RCC_ClockConfig+0x1c0>)
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	f023 0207 	bic.w	r2, r3, #7
 800340a:	4965      	ldr	r1, [pc, #404]	; (80035a0 <HAL_RCC_ClockConfig+0x1c0>)
 800340c:	683b      	ldr	r3, [r7, #0]
 800340e:	4313      	orrs	r3, r2
 8003410:	600b      	str	r3, [r1, #0]
 8003412:	4b63      	ldr	r3, [pc, #396]	; (80035a0 <HAL_RCC_ClockConfig+0x1c0>)
 8003414:	681b      	ldr	r3, [r3, #0]
 8003416:	f003 0307 	and.w	r3, r3, #7
 800341a:	683a      	ldr	r2, [r7, #0]
 800341c:	429a      	cmp	r2, r3
 800341e:	d001      	beq.n	8003424 <HAL_RCC_ClockConfig+0x44>
 8003420:	2301      	movs	r3, #1
 8003422:	e0b8      	b.n	8003596 <HAL_RCC_ClockConfig+0x1b6>
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	681b      	ldr	r3, [r3, #0]
 8003428:	f003 0302 	and.w	r3, r3, #2
 800342c:	2b00      	cmp	r3, #0
 800342e:	d020      	beq.n	8003472 <HAL_RCC_ClockConfig+0x92>
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	f003 0304 	and.w	r3, r3, #4
 8003438:	2b00      	cmp	r3, #0
 800343a:	d005      	beq.n	8003448 <HAL_RCC_ClockConfig+0x68>
 800343c:	4b59      	ldr	r3, [pc, #356]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 800343e:	685b      	ldr	r3, [r3, #4]
 8003440:	4a58      	ldr	r2, [pc, #352]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 8003442:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8003446:	6053      	str	r3, [r2, #4]
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	681b      	ldr	r3, [r3, #0]
 800344c:	f003 0308 	and.w	r3, r3, #8
 8003450:	2b00      	cmp	r3, #0
 8003452:	d005      	beq.n	8003460 <HAL_RCC_ClockConfig+0x80>
 8003454:	4b53      	ldr	r3, [pc, #332]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 8003456:	685b      	ldr	r3, [r3, #4]
 8003458:	4a52      	ldr	r2, [pc, #328]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 800345a:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 800345e:	6053      	str	r3, [r2, #4]
 8003460:	4b50      	ldr	r3, [pc, #320]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 8003462:	685b      	ldr	r3, [r3, #4]
 8003464:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	689b      	ldr	r3, [r3, #8]
 800346c:	494d      	ldr	r1, [pc, #308]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 800346e:	4313      	orrs	r3, r2
 8003470:	604b      	str	r3, [r1, #4]
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	681b      	ldr	r3, [r3, #0]
 8003476:	f003 0301 	and.w	r3, r3, #1
 800347a:	2b00      	cmp	r3, #0
 800347c:	d040      	beq.n	8003500 <HAL_RCC_ClockConfig+0x120>
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	685b      	ldr	r3, [r3, #4]
 8003482:	2b01      	cmp	r3, #1
 8003484:	d107      	bne.n	8003496 <HAL_RCC_ClockConfig+0xb6>
 8003486:	4b47      	ldr	r3, [pc, #284]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800348e:	2b00      	cmp	r3, #0
 8003490:	d115      	bne.n	80034be <HAL_RCC_ClockConfig+0xde>
 8003492:	2301      	movs	r3, #1
 8003494:	e07f      	b.n	8003596 <HAL_RCC_ClockConfig+0x1b6>
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	685b      	ldr	r3, [r3, #4]
 800349a:	2b02      	cmp	r3, #2
 800349c:	d107      	bne.n	80034ae <HAL_RCC_ClockConfig+0xce>
 800349e:	4b41      	ldr	r3, [pc, #260]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80034a6:	2b00      	cmp	r3, #0
 80034a8:	d109      	bne.n	80034be <HAL_RCC_ClockConfig+0xde>
 80034aa:	2301      	movs	r3, #1
 80034ac:	e073      	b.n	8003596 <HAL_RCC_ClockConfig+0x1b6>
 80034ae:	4b3d      	ldr	r3, [pc, #244]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 80034b0:	681b      	ldr	r3, [r3, #0]
 80034b2:	f003 0302 	and.w	r3, r3, #2
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	d101      	bne.n	80034be <HAL_RCC_ClockConfig+0xde>
 80034ba:	2301      	movs	r3, #1
 80034bc:	e06b      	b.n	8003596 <HAL_RCC_ClockConfig+0x1b6>
 80034be:	4b39      	ldr	r3, [pc, #228]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 80034c0:	685b      	ldr	r3, [r3, #4]
 80034c2:	f023 0203 	bic.w	r2, r3, #3
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	685b      	ldr	r3, [r3, #4]
 80034ca:	4936      	ldr	r1, [pc, #216]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 80034cc:	4313      	orrs	r3, r2
 80034ce:	604b      	str	r3, [r1, #4]
 80034d0:	f7fe f880 	bl	80015d4 <HAL_GetTick>
 80034d4:	60f8      	str	r0, [r7, #12]
 80034d6:	e00a      	b.n	80034ee <HAL_RCC_ClockConfig+0x10e>
 80034d8:	f7fe f87c 	bl	80015d4 <HAL_GetTick>
 80034dc:	4602      	mov	r2, r0
 80034de:	68fb      	ldr	r3, [r7, #12]
 80034e0:	1ad3      	subs	r3, r2, r3
 80034e2:	f241 3288 	movw	r2, #5000	; 0x1388
 80034e6:	4293      	cmp	r3, r2
 80034e8:	d901      	bls.n	80034ee <HAL_RCC_ClockConfig+0x10e>
 80034ea:	2303      	movs	r3, #3
 80034ec:	e053      	b.n	8003596 <HAL_RCC_ClockConfig+0x1b6>
 80034ee:	4b2d      	ldr	r3, [pc, #180]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 80034f0:	685b      	ldr	r3, [r3, #4]
 80034f2:	f003 020c 	and.w	r2, r3, #12
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	685b      	ldr	r3, [r3, #4]
 80034fa:	009b      	lsls	r3, r3, #2
 80034fc:	429a      	cmp	r2, r3
 80034fe:	d1eb      	bne.n	80034d8 <HAL_RCC_ClockConfig+0xf8>
 8003500:	4b27      	ldr	r3, [pc, #156]	; (80035a0 <HAL_RCC_ClockConfig+0x1c0>)
 8003502:	681b      	ldr	r3, [r3, #0]
 8003504:	f003 0307 	and.w	r3, r3, #7
 8003508:	683a      	ldr	r2, [r7, #0]
 800350a:	429a      	cmp	r2, r3
 800350c:	d210      	bcs.n	8003530 <HAL_RCC_ClockConfig+0x150>
 800350e:	4b24      	ldr	r3, [pc, #144]	; (80035a0 <HAL_RCC_ClockConfig+0x1c0>)
 8003510:	681b      	ldr	r3, [r3, #0]
 8003512:	f023 0207 	bic.w	r2, r3, #7
 8003516:	4922      	ldr	r1, [pc, #136]	; (80035a0 <HAL_RCC_ClockConfig+0x1c0>)
 8003518:	683b      	ldr	r3, [r7, #0]
 800351a:	4313      	orrs	r3, r2
 800351c:	600b      	str	r3, [r1, #0]
 800351e:	4b20      	ldr	r3, [pc, #128]	; (80035a0 <HAL_RCC_ClockConfig+0x1c0>)
 8003520:	681b      	ldr	r3, [r3, #0]
 8003522:	f003 0307 	and.w	r3, r3, #7
 8003526:	683a      	ldr	r2, [r7, #0]
 8003528:	429a      	cmp	r2, r3
 800352a:	d001      	beq.n	8003530 <HAL_RCC_ClockConfig+0x150>
 800352c:	2301      	movs	r3, #1
 800352e:	e032      	b.n	8003596 <HAL_RCC_ClockConfig+0x1b6>
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	f003 0304 	and.w	r3, r3, #4
 8003538:	2b00      	cmp	r3, #0
 800353a:	d008      	beq.n	800354e <HAL_RCC_ClockConfig+0x16e>
 800353c:	4b19      	ldr	r3, [pc, #100]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 800353e:	685b      	ldr	r3, [r3, #4]
 8003540:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	68db      	ldr	r3, [r3, #12]
 8003548:	4916      	ldr	r1, [pc, #88]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 800354a:	4313      	orrs	r3, r2
 800354c:	604b      	str	r3, [r1, #4]
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	681b      	ldr	r3, [r3, #0]
 8003552:	f003 0308 	and.w	r3, r3, #8
 8003556:	2b00      	cmp	r3, #0
 8003558:	d009      	beq.n	800356e <HAL_RCC_ClockConfig+0x18e>
 800355a:	4b12      	ldr	r3, [pc, #72]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 800355c:	685b      	ldr	r3, [r3, #4]
 800355e:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8003562:	687b      	ldr	r3, [r7, #4]
 8003564:	691b      	ldr	r3, [r3, #16]
 8003566:	00db      	lsls	r3, r3, #3
 8003568:	490e      	ldr	r1, [pc, #56]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 800356a:	4313      	orrs	r3, r2
 800356c:	604b      	str	r3, [r1, #4]
 800356e:	f000 f821 	bl	80035b4 <HAL_RCC_GetSysClockFreq>
 8003572:	4602      	mov	r2, r0
 8003574:	4b0b      	ldr	r3, [pc, #44]	; (80035a4 <HAL_RCC_ClockConfig+0x1c4>)
 8003576:	685b      	ldr	r3, [r3, #4]
 8003578:	091b      	lsrs	r3, r3, #4
 800357a:	f003 030f 	and.w	r3, r3, #15
 800357e:	490a      	ldr	r1, [pc, #40]	; (80035a8 <HAL_RCC_ClockConfig+0x1c8>)
 8003580:	5ccb      	ldrb	r3, [r1, r3]
 8003582:	fa22 f303 	lsr.w	r3, r2, r3
 8003586:	4a09      	ldr	r2, [pc, #36]	; (80035ac <HAL_RCC_ClockConfig+0x1cc>)
 8003588:	6013      	str	r3, [r2, #0]
 800358a:	4b09      	ldr	r3, [pc, #36]	; (80035b0 <HAL_RCC_ClockConfig+0x1d0>)
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	4618      	mov	r0, r3
 8003590:	f7fd ffde 	bl	8001550 <HAL_InitTick>
 8003594:	2300      	movs	r3, #0
 8003596:	4618      	mov	r0, r3
 8003598:	3710      	adds	r7, #16
 800359a:	46bd      	mov	sp, r7
 800359c:	bd80      	pop	{r7, pc}
 800359e:	bf00      	nop
 80035a0:	40022000 	.word	0x40022000
 80035a4:	40021000 	.word	0x40021000
 80035a8:	080053f4 	.word	0x080053f4
 80035ac:	20000000 	.word	0x20000000
 80035b0:	20000004 	.word	0x20000004

080035b4 <HAL_RCC_GetSysClockFreq>:
 80035b4:	b490      	push	{r4, r7}
 80035b6:	b08a      	sub	sp, #40	; 0x28
 80035b8:	af00      	add	r7, sp, #0
 80035ba:	4b29      	ldr	r3, [pc, #164]	; (8003660 <HAL_RCC_GetSysClockFreq+0xac>)
 80035bc:	1d3c      	adds	r4, r7, #4
 80035be:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80035c0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80035c4:	f240 2301 	movw	r3, #513	; 0x201
 80035c8:	803b      	strh	r3, [r7, #0]
 80035ca:	2300      	movs	r3, #0
 80035cc:	61fb      	str	r3, [r7, #28]
 80035ce:	2300      	movs	r3, #0
 80035d0:	61bb      	str	r3, [r7, #24]
 80035d2:	2300      	movs	r3, #0
 80035d4:	627b      	str	r3, [r7, #36]	; 0x24
 80035d6:	2300      	movs	r3, #0
 80035d8:	617b      	str	r3, [r7, #20]
 80035da:	2300      	movs	r3, #0
 80035dc:	623b      	str	r3, [r7, #32]
 80035de:	4b21      	ldr	r3, [pc, #132]	; (8003664 <HAL_RCC_GetSysClockFreq+0xb0>)
 80035e0:	685b      	ldr	r3, [r3, #4]
 80035e2:	61fb      	str	r3, [r7, #28]
 80035e4:	69fb      	ldr	r3, [r7, #28]
 80035e6:	f003 030c 	and.w	r3, r3, #12
 80035ea:	2b04      	cmp	r3, #4
 80035ec:	d002      	beq.n	80035f4 <HAL_RCC_GetSysClockFreq+0x40>
 80035ee:	2b08      	cmp	r3, #8
 80035f0:	d003      	beq.n	80035fa <HAL_RCC_GetSysClockFreq+0x46>
 80035f2:	e02b      	b.n	800364c <HAL_RCC_GetSysClockFreq+0x98>
 80035f4:	4b1c      	ldr	r3, [pc, #112]	; (8003668 <HAL_RCC_GetSysClockFreq+0xb4>)
 80035f6:	623b      	str	r3, [r7, #32]
 80035f8:	e02b      	b.n	8003652 <HAL_RCC_GetSysClockFreq+0x9e>
 80035fa:	69fb      	ldr	r3, [r7, #28]
 80035fc:	0c9b      	lsrs	r3, r3, #18
 80035fe:	f003 030f 	and.w	r3, r3, #15
 8003602:	3328      	adds	r3, #40	; 0x28
 8003604:	443b      	add	r3, r7
 8003606:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 800360a:	617b      	str	r3, [r7, #20]
 800360c:	69fb      	ldr	r3, [r7, #28]
 800360e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003612:	2b00      	cmp	r3, #0
 8003614:	d012      	beq.n	800363c <HAL_RCC_GetSysClockFreq+0x88>
 8003616:	4b13      	ldr	r3, [pc, #76]	; (8003664 <HAL_RCC_GetSysClockFreq+0xb0>)
 8003618:	685b      	ldr	r3, [r3, #4]
 800361a:	0c5b      	lsrs	r3, r3, #17
 800361c:	f003 0301 	and.w	r3, r3, #1
 8003620:	3328      	adds	r3, #40	; 0x28
 8003622:	443b      	add	r3, r7
 8003624:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8003628:	61bb      	str	r3, [r7, #24]
 800362a:	697b      	ldr	r3, [r7, #20]
 800362c:	4a0e      	ldr	r2, [pc, #56]	; (8003668 <HAL_RCC_GetSysClockFreq+0xb4>)
 800362e:	fb03 f202 	mul.w	r2, r3, r2
 8003632:	69bb      	ldr	r3, [r7, #24]
 8003634:	fbb2 f3f3 	udiv	r3, r2, r3
 8003638:	627b      	str	r3, [r7, #36]	; 0x24
 800363a:	e004      	b.n	8003646 <HAL_RCC_GetSysClockFreq+0x92>
 800363c:	697b      	ldr	r3, [r7, #20]
 800363e:	4a0b      	ldr	r2, [pc, #44]	; (800366c <HAL_RCC_GetSysClockFreq+0xb8>)
 8003640:	fb02 f303 	mul.w	r3, r2, r3
 8003644:	627b      	str	r3, [r7, #36]	; 0x24
 8003646:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003648:	623b      	str	r3, [r7, #32]
 800364a:	e002      	b.n	8003652 <HAL_RCC_GetSysClockFreq+0x9e>
 800364c:	4b06      	ldr	r3, [pc, #24]	; (8003668 <HAL_RCC_GetSysClockFreq+0xb4>)
 800364e:	623b      	str	r3, [r7, #32]
 8003650:	bf00      	nop
 8003652:	6a3b      	ldr	r3, [r7, #32]
 8003654:	4618      	mov	r0, r3
 8003656:	3728      	adds	r7, #40	; 0x28
 8003658:	46bd      	mov	sp, r7
 800365a:	bc90      	pop	{r4, r7}
 800365c:	4770      	bx	lr
 800365e:	bf00      	nop
 8003660:	080053e4 	.word	0x080053e4
 8003664:	40021000 	.word	0x40021000
 8003668:	007a1200 	.word	0x007a1200
 800366c:	003d0900 	.word	0x003d0900

08003670 <HAL_RCC_GetHCLKFreq>:
 8003670:	b480      	push	{r7}
 8003672:	af00      	add	r7, sp, #0
 8003674:	4b02      	ldr	r3, [pc, #8]	; (8003680 <HAL_RCC_GetHCLKFreq+0x10>)
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	4618      	mov	r0, r3
 800367a:	46bd      	mov	sp, r7
 800367c:	bc80      	pop	{r7}
 800367e:	4770      	bx	lr
 8003680:	20000000 	.word	0x20000000

08003684 <HAL_RCC_GetPCLK1Freq>:
 8003684:	b580      	push	{r7, lr}
 8003686:	af00      	add	r7, sp, #0
 8003688:	f7ff fff2 	bl	8003670 <HAL_RCC_GetHCLKFreq>
 800368c:	4602      	mov	r2, r0
 800368e:	4b05      	ldr	r3, [pc, #20]	; (80036a4 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003690:	685b      	ldr	r3, [r3, #4]
 8003692:	0a1b      	lsrs	r3, r3, #8
 8003694:	f003 0307 	and.w	r3, r3, #7
 8003698:	4903      	ldr	r1, [pc, #12]	; (80036a8 <HAL_RCC_GetPCLK1Freq+0x24>)
 800369a:	5ccb      	ldrb	r3, [r1, r3]
 800369c:	fa22 f303 	lsr.w	r3, r2, r3
 80036a0:	4618      	mov	r0, r3
 80036a2:	bd80      	pop	{r7, pc}
 80036a4:	40021000 	.word	0x40021000
 80036a8:	08005404 	.word	0x08005404

080036ac <HAL_RCC_GetPCLK2Freq>:
 80036ac:	b580      	push	{r7, lr}
 80036ae:	af00      	add	r7, sp, #0
 80036b0:	f7ff ffde 	bl	8003670 <HAL_RCC_GetHCLKFreq>
 80036b4:	4602      	mov	r2, r0
 80036b6:	4b05      	ldr	r3, [pc, #20]	; (80036cc <HAL_RCC_GetPCLK2Freq+0x20>)
 80036b8:	685b      	ldr	r3, [r3, #4]
 80036ba:	0adb      	lsrs	r3, r3, #11
 80036bc:	f003 0307 	and.w	r3, r3, #7
 80036c0:	4903      	ldr	r1, [pc, #12]	; (80036d0 <HAL_RCC_GetPCLK2Freq+0x24>)
 80036c2:	5ccb      	ldrb	r3, [r1, r3]
 80036c4:	fa22 f303 	lsr.w	r3, r2, r3
 80036c8:	4618      	mov	r0, r3
 80036ca:	bd80      	pop	{r7, pc}
 80036cc:	40021000 	.word	0x40021000
 80036d0:	08005404 	.word	0x08005404

080036d4 <RCC_Delay>:
 80036d4:	b480      	push	{r7}
 80036d6:	b085      	sub	sp, #20
 80036d8:	af00      	add	r7, sp, #0
 80036da:	6078      	str	r0, [r7, #4]
 80036dc:	4b0a      	ldr	r3, [pc, #40]	; (8003708 <RCC_Delay+0x34>)
 80036de:	681b      	ldr	r3, [r3, #0]
 80036e0:	4a0a      	ldr	r2, [pc, #40]	; (800370c <RCC_Delay+0x38>)
 80036e2:	fba2 2303 	umull	r2, r3, r2, r3
 80036e6:	0a5b      	lsrs	r3, r3, #9
 80036e8:	687a      	ldr	r2, [r7, #4]
 80036ea:	fb02 f303 	mul.w	r3, r2, r3
 80036ee:	60fb      	str	r3, [r7, #12]
 80036f0:	bf00      	nop
 80036f2:	68fb      	ldr	r3, [r7, #12]
 80036f4:	1e5a      	subs	r2, r3, #1
 80036f6:	60fa      	str	r2, [r7, #12]
 80036f8:	2b00      	cmp	r3, #0
 80036fa:	d1f9      	bne.n	80036f0 <RCC_Delay+0x1c>
 80036fc:	bf00      	nop
 80036fe:	bf00      	nop
 8003700:	3714      	adds	r7, #20
 8003702:	46bd      	mov	sp, r7
 8003704:	bc80      	pop	{r7}
 8003706:	4770      	bx	lr
 8003708:	20000000 	.word	0x20000000
 800370c:	10624dd3 	.word	0x10624dd3

08003710 <HAL_TIM_Base_Init>:
 8003710:	b580      	push	{r7, lr}
 8003712:	b082      	sub	sp, #8
 8003714:	af00      	add	r7, sp, #0
 8003716:	6078      	str	r0, [r7, #4]
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	2b00      	cmp	r3, #0
 800371c:	d101      	bne.n	8003722 <HAL_TIM_Base_Init+0x12>
 800371e:	2301      	movs	r3, #1
 8003720:	e041      	b.n	80037a6 <HAL_TIM_Base_Init+0x96>
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003728:	b2db      	uxtb	r3, r3
 800372a:	2b00      	cmp	r3, #0
 800372c:	d106      	bne.n	800373c <HAL_TIM_Base_Init+0x2c>
 800372e:	687b      	ldr	r3, [r7, #4]
 8003730:	2200      	movs	r2, #0
 8003732:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003736:	6878      	ldr	r0, [r7, #4]
 8003738:	f7fd fc84 	bl	8001044 <HAL_TIM_Base_MspInit>
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	2202      	movs	r2, #2
 8003740:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	681a      	ldr	r2, [r3, #0]
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	3304      	adds	r3, #4
 800374c:	4619      	mov	r1, r3
 800374e:	4610      	mov	r0, r2
 8003750:	f000 fa70 	bl	8003c34 <TIM_Base_SetConfig>
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	2201      	movs	r2, #1
 8003758:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	2201      	movs	r2, #1
 8003760:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	2201      	movs	r2, #1
 8003768:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800376c:	687b      	ldr	r3, [r7, #4]
 800376e:	2201      	movs	r2, #1
 8003770:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	2201      	movs	r2, #1
 8003778:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	2201      	movs	r2, #1
 8003780:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	2201      	movs	r2, #1
 8003788:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	2201      	movs	r2, #1
 8003790:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003794:	687b      	ldr	r3, [r7, #4]
 8003796:	2201      	movs	r2, #1
 8003798:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	2201      	movs	r2, #1
 80037a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037a4:	2300      	movs	r3, #0
 80037a6:	4618      	mov	r0, r3
 80037a8:	3708      	adds	r7, #8
 80037aa:	46bd      	mov	sp, r7
 80037ac:	bd80      	pop	{r7, pc}
	...

080037b0 <HAL_TIM_Base_Start_IT>:
 80037b0:	b480      	push	{r7}
 80037b2:	b085      	sub	sp, #20
 80037b4:	af00      	add	r7, sp, #0
 80037b6:	6078      	str	r0, [r7, #4]
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80037be:	b2db      	uxtb	r3, r3
 80037c0:	2b01      	cmp	r3, #1
 80037c2:	d001      	beq.n	80037c8 <HAL_TIM_Base_Start_IT+0x18>
 80037c4:	2301      	movs	r3, #1
 80037c6:	e03a      	b.n	800383e <HAL_TIM_Base_Start_IT+0x8e>
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	2202      	movs	r2, #2
 80037cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	68da      	ldr	r2, [r3, #12]
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	f042 0201 	orr.w	r2, r2, #1
 80037de:	60da      	str	r2, [r3, #12]
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	4a18      	ldr	r2, [pc, #96]	; (8003848 <HAL_TIM_Base_Start_IT+0x98>)
 80037e6:	4293      	cmp	r3, r2
 80037e8:	d00e      	beq.n	8003808 <HAL_TIM_Base_Start_IT+0x58>
 80037ea:	687b      	ldr	r3, [r7, #4]
 80037ec:	681b      	ldr	r3, [r3, #0]
 80037ee:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80037f2:	d009      	beq.n	8003808 <HAL_TIM_Base_Start_IT+0x58>
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	4a14      	ldr	r2, [pc, #80]	; (800384c <HAL_TIM_Base_Start_IT+0x9c>)
 80037fa:	4293      	cmp	r3, r2
 80037fc:	d004      	beq.n	8003808 <HAL_TIM_Base_Start_IT+0x58>
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	4a13      	ldr	r2, [pc, #76]	; (8003850 <HAL_TIM_Base_Start_IT+0xa0>)
 8003804:	4293      	cmp	r3, r2
 8003806:	d111      	bne.n	800382c <HAL_TIM_Base_Start_IT+0x7c>
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	689b      	ldr	r3, [r3, #8]
 800380e:	f003 0307 	and.w	r3, r3, #7
 8003812:	60fb      	str	r3, [r7, #12]
 8003814:	68fb      	ldr	r3, [r7, #12]
 8003816:	2b06      	cmp	r3, #6
 8003818:	d010      	beq.n	800383c <HAL_TIM_Base_Start_IT+0x8c>
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	681a      	ldr	r2, [r3, #0]
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	681b      	ldr	r3, [r3, #0]
 8003824:	f042 0201 	orr.w	r2, r2, #1
 8003828:	601a      	str	r2, [r3, #0]
 800382a:	e007      	b.n	800383c <HAL_TIM_Base_Start_IT+0x8c>
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	681a      	ldr	r2, [r3, #0]
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	681b      	ldr	r3, [r3, #0]
 8003836:	f042 0201 	orr.w	r2, r2, #1
 800383a:	601a      	str	r2, [r3, #0]
 800383c:	2300      	movs	r3, #0
 800383e:	4618      	mov	r0, r3
 8003840:	3714      	adds	r7, #20
 8003842:	46bd      	mov	sp, r7
 8003844:	bc80      	pop	{r7}
 8003846:	4770      	bx	lr
 8003848:	40012c00 	.word	0x40012c00
 800384c:	40000400 	.word	0x40000400
 8003850:	40000800 	.word	0x40000800

08003854 <HAL_TIM_IRQHandler>:
 8003854:	b580      	push	{r7, lr}
 8003856:	b082      	sub	sp, #8
 8003858:	af00      	add	r7, sp, #0
 800385a:	6078      	str	r0, [r7, #4]
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	681b      	ldr	r3, [r3, #0]
 8003860:	691b      	ldr	r3, [r3, #16]
 8003862:	f003 0302 	and.w	r3, r3, #2
 8003866:	2b02      	cmp	r3, #2
 8003868:	d122      	bne.n	80038b0 <HAL_TIM_IRQHandler+0x5c>
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	681b      	ldr	r3, [r3, #0]
 800386e:	68db      	ldr	r3, [r3, #12]
 8003870:	f003 0302 	and.w	r3, r3, #2
 8003874:	2b02      	cmp	r3, #2
 8003876:	d11b      	bne.n	80038b0 <HAL_TIM_IRQHandler+0x5c>
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	f06f 0202 	mvn.w	r2, #2
 8003880:	611a      	str	r2, [r3, #16]
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	2201      	movs	r2, #1
 8003886:	771a      	strb	r2, [r3, #28]
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	699b      	ldr	r3, [r3, #24]
 800388e:	f003 0303 	and.w	r3, r3, #3
 8003892:	2b00      	cmp	r3, #0
 8003894:	d003      	beq.n	800389e <HAL_TIM_IRQHandler+0x4a>
 8003896:	6878      	ldr	r0, [r7, #4]
 8003898:	f000 f9b1 	bl	8003bfe <HAL_TIM_IC_CaptureCallback>
 800389c:	e005      	b.n	80038aa <HAL_TIM_IRQHandler+0x56>
 800389e:	6878      	ldr	r0, [r7, #4]
 80038a0:	f000 f9a4 	bl	8003bec <HAL_TIM_OC_DelayElapsedCallback>
 80038a4:	6878      	ldr	r0, [r7, #4]
 80038a6:	f000 f9b3 	bl	8003c10 <HAL_TIM_PWM_PulseFinishedCallback>
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	2200      	movs	r2, #0
 80038ae:	771a      	strb	r2, [r3, #28]
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	681b      	ldr	r3, [r3, #0]
 80038b4:	691b      	ldr	r3, [r3, #16]
 80038b6:	f003 0304 	and.w	r3, r3, #4
 80038ba:	2b04      	cmp	r3, #4
 80038bc:	d122      	bne.n	8003904 <HAL_TIM_IRQHandler+0xb0>
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	681b      	ldr	r3, [r3, #0]
 80038c2:	68db      	ldr	r3, [r3, #12]
 80038c4:	f003 0304 	and.w	r3, r3, #4
 80038c8:	2b04      	cmp	r3, #4
 80038ca:	d11b      	bne.n	8003904 <HAL_TIM_IRQHandler+0xb0>
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	f06f 0204 	mvn.w	r2, #4
 80038d4:	611a      	str	r2, [r3, #16]
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	2202      	movs	r2, #2
 80038da:	771a      	strb	r2, [r3, #28]
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	681b      	ldr	r3, [r3, #0]
 80038e0:	699b      	ldr	r3, [r3, #24]
 80038e2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80038e6:	2b00      	cmp	r3, #0
 80038e8:	d003      	beq.n	80038f2 <HAL_TIM_IRQHandler+0x9e>
 80038ea:	6878      	ldr	r0, [r7, #4]
 80038ec:	f000 f987 	bl	8003bfe <HAL_TIM_IC_CaptureCallback>
 80038f0:	e005      	b.n	80038fe <HAL_TIM_IRQHandler+0xaa>
 80038f2:	6878      	ldr	r0, [r7, #4]
 80038f4:	f000 f97a 	bl	8003bec <HAL_TIM_OC_DelayElapsedCallback>
 80038f8:	6878      	ldr	r0, [r7, #4]
 80038fa:	f000 f989 	bl	8003c10 <HAL_TIM_PWM_PulseFinishedCallback>
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	2200      	movs	r2, #0
 8003902:	771a      	strb	r2, [r3, #28]
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	691b      	ldr	r3, [r3, #16]
 800390a:	f003 0308 	and.w	r3, r3, #8
 800390e:	2b08      	cmp	r3, #8
 8003910:	d122      	bne.n	8003958 <HAL_TIM_IRQHandler+0x104>
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	68db      	ldr	r3, [r3, #12]
 8003918:	f003 0308 	and.w	r3, r3, #8
 800391c:	2b08      	cmp	r3, #8
 800391e:	d11b      	bne.n	8003958 <HAL_TIM_IRQHandler+0x104>
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	681b      	ldr	r3, [r3, #0]
 8003924:	f06f 0208 	mvn.w	r2, #8
 8003928:	611a      	str	r2, [r3, #16]
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	2204      	movs	r2, #4
 800392e:	771a      	strb	r2, [r3, #28]
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	681b      	ldr	r3, [r3, #0]
 8003934:	69db      	ldr	r3, [r3, #28]
 8003936:	f003 0303 	and.w	r3, r3, #3
 800393a:	2b00      	cmp	r3, #0
 800393c:	d003      	beq.n	8003946 <HAL_TIM_IRQHandler+0xf2>
 800393e:	6878      	ldr	r0, [r7, #4]
 8003940:	f000 f95d 	bl	8003bfe <HAL_TIM_IC_CaptureCallback>
 8003944:	e005      	b.n	8003952 <HAL_TIM_IRQHandler+0xfe>
 8003946:	6878      	ldr	r0, [r7, #4]
 8003948:	f000 f950 	bl	8003bec <HAL_TIM_OC_DelayElapsedCallback>
 800394c:	6878      	ldr	r0, [r7, #4]
 800394e:	f000 f95f 	bl	8003c10 <HAL_TIM_PWM_PulseFinishedCallback>
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	2200      	movs	r2, #0
 8003956:	771a      	strb	r2, [r3, #28]
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	681b      	ldr	r3, [r3, #0]
 800395c:	691b      	ldr	r3, [r3, #16]
 800395e:	f003 0310 	and.w	r3, r3, #16
 8003962:	2b10      	cmp	r3, #16
 8003964:	d122      	bne.n	80039ac <HAL_TIM_IRQHandler+0x158>
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	681b      	ldr	r3, [r3, #0]
 800396a:	68db      	ldr	r3, [r3, #12]
 800396c:	f003 0310 	and.w	r3, r3, #16
 8003970:	2b10      	cmp	r3, #16
 8003972:	d11b      	bne.n	80039ac <HAL_TIM_IRQHandler+0x158>
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	681b      	ldr	r3, [r3, #0]
 8003978:	f06f 0210 	mvn.w	r2, #16
 800397c:	611a      	str	r2, [r3, #16]
 800397e:	687b      	ldr	r3, [r7, #4]
 8003980:	2208      	movs	r2, #8
 8003982:	771a      	strb	r2, [r3, #28]
 8003984:	687b      	ldr	r3, [r7, #4]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	69db      	ldr	r3, [r3, #28]
 800398a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800398e:	2b00      	cmp	r3, #0
 8003990:	d003      	beq.n	800399a <HAL_TIM_IRQHandler+0x146>
 8003992:	6878      	ldr	r0, [r7, #4]
 8003994:	f000 f933 	bl	8003bfe <HAL_TIM_IC_CaptureCallback>
 8003998:	e005      	b.n	80039a6 <HAL_TIM_IRQHandler+0x152>
 800399a:	6878      	ldr	r0, [r7, #4]
 800399c:	f000 f926 	bl	8003bec <HAL_TIM_OC_DelayElapsedCallback>
 80039a0:	6878      	ldr	r0, [r7, #4]
 80039a2:	f000 f935 	bl	8003c10 <HAL_TIM_PWM_PulseFinishedCallback>
 80039a6:	687b      	ldr	r3, [r7, #4]
 80039a8:	2200      	movs	r2, #0
 80039aa:	771a      	strb	r2, [r3, #28]
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	691b      	ldr	r3, [r3, #16]
 80039b2:	f003 0301 	and.w	r3, r3, #1
 80039b6:	2b01      	cmp	r3, #1
 80039b8:	d10e      	bne.n	80039d8 <HAL_TIM_IRQHandler+0x184>
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	681b      	ldr	r3, [r3, #0]
 80039be:	68db      	ldr	r3, [r3, #12]
 80039c0:	f003 0301 	and.w	r3, r3, #1
 80039c4:	2b01      	cmp	r3, #1
 80039c6:	d107      	bne.n	80039d8 <HAL_TIM_IRQHandler+0x184>
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	f06f 0201 	mvn.w	r2, #1
 80039d0:	611a      	str	r2, [r3, #16]
 80039d2:	6878      	ldr	r0, [r7, #4]
 80039d4:	f7fd f812 	bl	80009fc <HAL_TIM_PeriodElapsedCallback>
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	681b      	ldr	r3, [r3, #0]
 80039dc:	691b      	ldr	r3, [r3, #16]
 80039de:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80039e2:	2b80      	cmp	r3, #128	; 0x80
 80039e4:	d10e      	bne.n	8003a04 <HAL_TIM_IRQHandler+0x1b0>
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	68db      	ldr	r3, [r3, #12]
 80039ec:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80039f0:	2b80      	cmp	r3, #128	; 0x80
 80039f2:	d107      	bne.n	8003a04 <HAL_TIM_IRQHandler+0x1b0>
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	681b      	ldr	r3, [r3, #0]
 80039f8:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80039fc:	611a      	str	r2, [r3, #16]
 80039fe:	6878      	ldr	r0, [r7, #4]
 8003a00:	f000 fa77 	bl	8003ef2 <HAL_TIMEx_BreakCallback>
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	681b      	ldr	r3, [r3, #0]
 8003a08:	691b      	ldr	r3, [r3, #16]
 8003a0a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003a0e:	2b40      	cmp	r3, #64	; 0x40
 8003a10:	d10e      	bne.n	8003a30 <HAL_TIM_IRQHandler+0x1dc>
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	68db      	ldr	r3, [r3, #12]
 8003a18:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003a1c:	2b40      	cmp	r3, #64	; 0x40
 8003a1e:	d107      	bne.n	8003a30 <HAL_TIM_IRQHandler+0x1dc>
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8003a28:	611a      	str	r2, [r3, #16]
 8003a2a:	6878      	ldr	r0, [r7, #4]
 8003a2c:	f000 f8f9 	bl	8003c22 <HAL_TIM_TriggerCallback>
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	681b      	ldr	r3, [r3, #0]
 8003a34:	691b      	ldr	r3, [r3, #16]
 8003a36:	f003 0320 	and.w	r3, r3, #32
 8003a3a:	2b20      	cmp	r3, #32
 8003a3c:	d10e      	bne.n	8003a5c <HAL_TIM_IRQHandler+0x208>
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	681b      	ldr	r3, [r3, #0]
 8003a42:	68db      	ldr	r3, [r3, #12]
 8003a44:	f003 0320 	and.w	r3, r3, #32
 8003a48:	2b20      	cmp	r3, #32
 8003a4a:	d107      	bne.n	8003a5c <HAL_TIM_IRQHandler+0x208>
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	f06f 0220 	mvn.w	r2, #32
 8003a54:	611a      	str	r2, [r3, #16]
 8003a56:	6878      	ldr	r0, [r7, #4]
 8003a58:	f000 fa42 	bl	8003ee0 <HAL_TIMEx_CommutCallback>
 8003a5c:	bf00      	nop
 8003a5e:	3708      	adds	r7, #8
 8003a60:	46bd      	mov	sp, r7
 8003a62:	bd80      	pop	{r7, pc}

08003a64 <HAL_TIM_ConfigClockSource>:
 8003a64:	b580      	push	{r7, lr}
 8003a66:	b084      	sub	sp, #16
 8003a68:	af00      	add	r7, sp, #0
 8003a6a:	6078      	str	r0, [r7, #4]
 8003a6c:	6039      	str	r1, [r7, #0]
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003a74:	2b01      	cmp	r3, #1
 8003a76:	d101      	bne.n	8003a7c <HAL_TIM_ConfigClockSource+0x18>
 8003a78:	2302      	movs	r3, #2
 8003a7a:	e0b3      	b.n	8003be4 <HAL_TIM_ConfigClockSource+0x180>
 8003a7c:	687b      	ldr	r3, [r7, #4]
 8003a7e:	2201      	movs	r2, #1
 8003a80:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	2202      	movs	r2, #2
 8003a88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	681b      	ldr	r3, [r3, #0]
 8003a90:	689b      	ldr	r3, [r3, #8]
 8003a92:	60fb      	str	r3, [r7, #12]
 8003a94:	68fb      	ldr	r3, [r7, #12]
 8003a96:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8003a9a:	60fb      	str	r3, [r7, #12]
 8003a9c:	68fb      	ldr	r3, [r7, #12]
 8003a9e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003aa2:	60fb      	str	r3, [r7, #12]
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	68fa      	ldr	r2, [r7, #12]
 8003aaa:	609a      	str	r2, [r3, #8]
 8003aac:	683b      	ldr	r3, [r7, #0]
 8003aae:	681b      	ldr	r3, [r3, #0]
 8003ab0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003ab4:	d03e      	beq.n	8003b34 <HAL_TIM_ConfigClockSource+0xd0>
 8003ab6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003aba:	f200 8087 	bhi.w	8003bcc <HAL_TIM_ConfigClockSource+0x168>
 8003abe:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003ac2:	f000 8085 	beq.w	8003bd0 <HAL_TIM_ConfigClockSource+0x16c>
 8003ac6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003aca:	d87f      	bhi.n	8003bcc <HAL_TIM_ConfigClockSource+0x168>
 8003acc:	2b70      	cmp	r3, #112	; 0x70
 8003ace:	d01a      	beq.n	8003b06 <HAL_TIM_ConfigClockSource+0xa2>
 8003ad0:	2b70      	cmp	r3, #112	; 0x70
 8003ad2:	d87b      	bhi.n	8003bcc <HAL_TIM_ConfigClockSource+0x168>
 8003ad4:	2b60      	cmp	r3, #96	; 0x60
 8003ad6:	d050      	beq.n	8003b7a <HAL_TIM_ConfigClockSource+0x116>
 8003ad8:	2b60      	cmp	r3, #96	; 0x60
 8003ada:	d877      	bhi.n	8003bcc <HAL_TIM_ConfigClockSource+0x168>
 8003adc:	2b50      	cmp	r3, #80	; 0x50
 8003ade:	d03c      	beq.n	8003b5a <HAL_TIM_ConfigClockSource+0xf6>
 8003ae0:	2b50      	cmp	r3, #80	; 0x50
 8003ae2:	d873      	bhi.n	8003bcc <HAL_TIM_ConfigClockSource+0x168>
 8003ae4:	2b40      	cmp	r3, #64	; 0x40
 8003ae6:	d058      	beq.n	8003b9a <HAL_TIM_ConfigClockSource+0x136>
 8003ae8:	2b40      	cmp	r3, #64	; 0x40
 8003aea:	d86f      	bhi.n	8003bcc <HAL_TIM_ConfigClockSource+0x168>
 8003aec:	2b30      	cmp	r3, #48	; 0x30
 8003aee:	d064      	beq.n	8003bba <HAL_TIM_ConfigClockSource+0x156>
 8003af0:	2b30      	cmp	r3, #48	; 0x30
 8003af2:	d86b      	bhi.n	8003bcc <HAL_TIM_ConfigClockSource+0x168>
 8003af4:	2b20      	cmp	r3, #32
 8003af6:	d060      	beq.n	8003bba <HAL_TIM_ConfigClockSource+0x156>
 8003af8:	2b20      	cmp	r3, #32
 8003afa:	d867      	bhi.n	8003bcc <HAL_TIM_ConfigClockSource+0x168>
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	d05c      	beq.n	8003bba <HAL_TIM_ConfigClockSource+0x156>
 8003b00:	2b10      	cmp	r3, #16
 8003b02:	d05a      	beq.n	8003bba <HAL_TIM_ConfigClockSource+0x156>
 8003b04:	e062      	b.n	8003bcc <HAL_TIM_ConfigClockSource+0x168>
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	6818      	ldr	r0, [r3, #0]
 8003b0a:	683b      	ldr	r3, [r7, #0]
 8003b0c:	6899      	ldr	r1, [r3, #8]
 8003b0e:	683b      	ldr	r3, [r7, #0]
 8003b10:	685a      	ldr	r2, [r3, #4]
 8003b12:	683b      	ldr	r3, [r7, #0]
 8003b14:	68db      	ldr	r3, [r3, #12]
 8003b16:	f000 f966 	bl	8003de6 <TIM_ETR_SetConfig>
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	681b      	ldr	r3, [r3, #0]
 8003b1e:	689b      	ldr	r3, [r3, #8]
 8003b20:	60fb      	str	r3, [r7, #12]
 8003b22:	68fb      	ldr	r3, [r7, #12]
 8003b24:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003b28:	60fb      	str	r3, [r7, #12]
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	68fa      	ldr	r2, [r7, #12]
 8003b30:	609a      	str	r2, [r3, #8]
 8003b32:	e04e      	b.n	8003bd2 <HAL_TIM_ConfigClockSource+0x16e>
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	6818      	ldr	r0, [r3, #0]
 8003b38:	683b      	ldr	r3, [r7, #0]
 8003b3a:	6899      	ldr	r1, [r3, #8]
 8003b3c:	683b      	ldr	r3, [r7, #0]
 8003b3e:	685a      	ldr	r2, [r3, #4]
 8003b40:	683b      	ldr	r3, [r7, #0]
 8003b42:	68db      	ldr	r3, [r3, #12]
 8003b44:	f000 f94f 	bl	8003de6 <TIM_ETR_SetConfig>
 8003b48:	687b      	ldr	r3, [r7, #4]
 8003b4a:	681b      	ldr	r3, [r3, #0]
 8003b4c:	689a      	ldr	r2, [r3, #8]
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003b56:	609a      	str	r2, [r3, #8]
 8003b58:	e03b      	b.n	8003bd2 <HAL_TIM_ConfigClockSource+0x16e>
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	6818      	ldr	r0, [r3, #0]
 8003b5e:	683b      	ldr	r3, [r7, #0]
 8003b60:	6859      	ldr	r1, [r3, #4]
 8003b62:	683b      	ldr	r3, [r7, #0]
 8003b64:	68db      	ldr	r3, [r3, #12]
 8003b66:	461a      	mov	r2, r3
 8003b68:	f000 f8c6 	bl	8003cf8 <TIM_TI1_ConfigInputStage>
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	681b      	ldr	r3, [r3, #0]
 8003b70:	2150      	movs	r1, #80	; 0x50
 8003b72:	4618      	mov	r0, r3
 8003b74:	f000 f91d 	bl	8003db2 <TIM_ITRx_SetConfig>
 8003b78:	e02b      	b.n	8003bd2 <HAL_TIM_ConfigClockSource+0x16e>
 8003b7a:	687b      	ldr	r3, [r7, #4]
 8003b7c:	6818      	ldr	r0, [r3, #0]
 8003b7e:	683b      	ldr	r3, [r7, #0]
 8003b80:	6859      	ldr	r1, [r3, #4]
 8003b82:	683b      	ldr	r3, [r7, #0]
 8003b84:	68db      	ldr	r3, [r3, #12]
 8003b86:	461a      	mov	r2, r3
 8003b88:	f000 f8e4 	bl	8003d54 <TIM_TI2_ConfigInputStage>
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	681b      	ldr	r3, [r3, #0]
 8003b90:	2160      	movs	r1, #96	; 0x60
 8003b92:	4618      	mov	r0, r3
 8003b94:	f000 f90d 	bl	8003db2 <TIM_ITRx_SetConfig>
 8003b98:	e01b      	b.n	8003bd2 <HAL_TIM_ConfigClockSource+0x16e>
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	6818      	ldr	r0, [r3, #0]
 8003b9e:	683b      	ldr	r3, [r7, #0]
 8003ba0:	6859      	ldr	r1, [r3, #4]
 8003ba2:	683b      	ldr	r3, [r7, #0]
 8003ba4:	68db      	ldr	r3, [r3, #12]
 8003ba6:	461a      	mov	r2, r3
 8003ba8:	f000 f8a6 	bl	8003cf8 <TIM_TI1_ConfigInputStage>
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	2140      	movs	r1, #64	; 0x40
 8003bb2:	4618      	mov	r0, r3
 8003bb4:	f000 f8fd 	bl	8003db2 <TIM_ITRx_SetConfig>
 8003bb8:	e00b      	b.n	8003bd2 <HAL_TIM_ConfigClockSource+0x16e>
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	681a      	ldr	r2, [r3, #0]
 8003bbe:	683b      	ldr	r3, [r7, #0]
 8003bc0:	681b      	ldr	r3, [r3, #0]
 8003bc2:	4619      	mov	r1, r3
 8003bc4:	4610      	mov	r0, r2
 8003bc6:	f000 f8f4 	bl	8003db2 <TIM_ITRx_SetConfig>
 8003bca:	e002      	b.n	8003bd2 <HAL_TIM_ConfigClockSource+0x16e>
 8003bcc:	bf00      	nop
 8003bce:	e000      	b.n	8003bd2 <HAL_TIM_ConfigClockSource+0x16e>
 8003bd0:	bf00      	nop
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	2201      	movs	r2, #1
 8003bd6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	2200      	movs	r2, #0
 8003bde:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003be2:	2300      	movs	r3, #0
 8003be4:	4618      	mov	r0, r3
 8003be6:	3710      	adds	r7, #16
 8003be8:	46bd      	mov	sp, r7
 8003bea:	bd80      	pop	{r7, pc}

08003bec <HAL_TIM_OC_DelayElapsedCallback>:
 8003bec:	b480      	push	{r7}
 8003bee:	b083      	sub	sp, #12
 8003bf0:	af00      	add	r7, sp, #0
 8003bf2:	6078      	str	r0, [r7, #4]
 8003bf4:	bf00      	nop
 8003bf6:	370c      	adds	r7, #12
 8003bf8:	46bd      	mov	sp, r7
 8003bfa:	bc80      	pop	{r7}
 8003bfc:	4770      	bx	lr

08003bfe <HAL_TIM_IC_CaptureCallback>:
 8003bfe:	b480      	push	{r7}
 8003c00:	b083      	sub	sp, #12
 8003c02:	af00      	add	r7, sp, #0
 8003c04:	6078      	str	r0, [r7, #4]
 8003c06:	bf00      	nop
 8003c08:	370c      	adds	r7, #12
 8003c0a:	46bd      	mov	sp, r7
 8003c0c:	bc80      	pop	{r7}
 8003c0e:	4770      	bx	lr

08003c10 <HAL_TIM_PWM_PulseFinishedCallback>:
 8003c10:	b480      	push	{r7}
 8003c12:	b083      	sub	sp, #12
 8003c14:	af00      	add	r7, sp, #0
 8003c16:	6078      	str	r0, [r7, #4]
 8003c18:	bf00      	nop
 8003c1a:	370c      	adds	r7, #12
 8003c1c:	46bd      	mov	sp, r7
 8003c1e:	bc80      	pop	{r7}
 8003c20:	4770      	bx	lr

08003c22 <HAL_TIM_TriggerCallback>:
 8003c22:	b480      	push	{r7}
 8003c24:	b083      	sub	sp, #12
 8003c26:	af00      	add	r7, sp, #0
 8003c28:	6078      	str	r0, [r7, #4]
 8003c2a:	bf00      	nop
 8003c2c:	370c      	adds	r7, #12
 8003c2e:	46bd      	mov	sp, r7
 8003c30:	bc80      	pop	{r7}
 8003c32:	4770      	bx	lr

08003c34 <TIM_Base_SetConfig>:
 8003c34:	b480      	push	{r7}
 8003c36:	b085      	sub	sp, #20
 8003c38:	af00      	add	r7, sp, #0
 8003c3a:	6078      	str	r0, [r7, #4]
 8003c3c:	6039      	str	r1, [r7, #0]
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	681b      	ldr	r3, [r3, #0]
 8003c42:	60fb      	str	r3, [r7, #12]
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	4a29      	ldr	r2, [pc, #164]	; (8003cec <TIM_Base_SetConfig+0xb8>)
 8003c48:	4293      	cmp	r3, r2
 8003c4a:	d00b      	beq.n	8003c64 <TIM_Base_SetConfig+0x30>
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003c52:	d007      	beq.n	8003c64 <TIM_Base_SetConfig+0x30>
 8003c54:	687b      	ldr	r3, [r7, #4]
 8003c56:	4a26      	ldr	r2, [pc, #152]	; (8003cf0 <TIM_Base_SetConfig+0xbc>)
 8003c58:	4293      	cmp	r3, r2
 8003c5a:	d003      	beq.n	8003c64 <TIM_Base_SetConfig+0x30>
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	4a25      	ldr	r2, [pc, #148]	; (8003cf4 <TIM_Base_SetConfig+0xc0>)
 8003c60:	4293      	cmp	r3, r2
 8003c62:	d108      	bne.n	8003c76 <TIM_Base_SetConfig+0x42>
 8003c64:	68fb      	ldr	r3, [r7, #12]
 8003c66:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003c6a:	60fb      	str	r3, [r7, #12]
 8003c6c:	683b      	ldr	r3, [r7, #0]
 8003c6e:	685b      	ldr	r3, [r3, #4]
 8003c70:	68fa      	ldr	r2, [r7, #12]
 8003c72:	4313      	orrs	r3, r2
 8003c74:	60fb      	str	r3, [r7, #12]
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	4a1c      	ldr	r2, [pc, #112]	; (8003cec <TIM_Base_SetConfig+0xb8>)
 8003c7a:	4293      	cmp	r3, r2
 8003c7c:	d00b      	beq.n	8003c96 <TIM_Base_SetConfig+0x62>
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003c84:	d007      	beq.n	8003c96 <TIM_Base_SetConfig+0x62>
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	4a19      	ldr	r2, [pc, #100]	; (8003cf0 <TIM_Base_SetConfig+0xbc>)
 8003c8a:	4293      	cmp	r3, r2
 8003c8c:	d003      	beq.n	8003c96 <TIM_Base_SetConfig+0x62>
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	4a18      	ldr	r2, [pc, #96]	; (8003cf4 <TIM_Base_SetConfig+0xc0>)
 8003c92:	4293      	cmp	r3, r2
 8003c94:	d108      	bne.n	8003ca8 <TIM_Base_SetConfig+0x74>
 8003c96:	68fb      	ldr	r3, [r7, #12]
 8003c98:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003c9c:	60fb      	str	r3, [r7, #12]
 8003c9e:	683b      	ldr	r3, [r7, #0]
 8003ca0:	68db      	ldr	r3, [r3, #12]
 8003ca2:	68fa      	ldr	r2, [r7, #12]
 8003ca4:	4313      	orrs	r3, r2
 8003ca6:	60fb      	str	r3, [r7, #12]
 8003ca8:	68fb      	ldr	r3, [r7, #12]
 8003caa:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003cae:	683b      	ldr	r3, [r7, #0]
 8003cb0:	695b      	ldr	r3, [r3, #20]
 8003cb2:	4313      	orrs	r3, r2
 8003cb4:	60fb      	str	r3, [r7, #12]
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	68fa      	ldr	r2, [r7, #12]
 8003cba:	601a      	str	r2, [r3, #0]
 8003cbc:	683b      	ldr	r3, [r7, #0]
 8003cbe:	689a      	ldr	r2, [r3, #8]
 8003cc0:	687b      	ldr	r3, [r7, #4]
 8003cc2:	62da      	str	r2, [r3, #44]	; 0x2c
 8003cc4:	683b      	ldr	r3, [r7, #0]
 8003cc6:	681a      	ldr	r2, [r3, #0]
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	629a      	str	r2, [r3, #40]	; 0x28
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	4a07      	ldr	r2, [pc, #28]	; (8003cec <TIM_Base_SetConfig+0xb8>)
 8003cd0:	4293      	cmp	r3, r2
 8003cd2:	d103      	bne.n	8003cdc <TIM_Base_SetConfig+0xa8>
 8003cd4:	683b      	ldr	r3, [r7, #0]
 8003cd6:	691a      	ldr	r2, [r3, #16]
 8003cd8:	687b      	ldr	r3, [r7, #4]
 8003cda:	631a      	str	r2, [r3, #48]	; 0x30
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	2201      	movs	r2, #1
 8003ce0:	615a      	str	r2, [r3, #20]
 8003ce2:	bf00      	nop
 8003ce4:	3714      	adds	r7, #20
 8003ce6:	46bd      	mov	sp, r7
 8003ce8:	bc80      	pop	{r7}
 8003cea:	4770      	bx	lr
 8003cec:	40012c00 	.word	0x40012c00
 8003cf0:	40000400 	.word	0x40000400
 8003cf4:	40000800 	.word	0x40000800

08003cf8 <TIM_TI1_ConfigInputStage>:
 8003cf8:	b480      	push	{r7}
 8003cfa:	b087      	sub	sp, #28
 8003cfc:	af00      	add	r7, sp, #0
 8003cfe:	60f8      	str	r0, [r7, #12]
 8003d00:	60b9      	str	r1, [r7, #8]
 8003d02:	607a      	str	r2, [r7, #4]
 8003d04:	68fb      	ldr	r3, [r7, #12]
 8003d06:	6a1b      	ldr	r3, [r3, #32]
 8003d08:	617b      	str	r3, [r7, #20]
 8003d0a:	68fb      	ldr	r3, [r7, #12]
 8003d0c:	6a1b      	ldr	r3, [r3, #32]
 8003d0e:	f023 0201 	bic.w	r2, r3, #1
 8003d12:	68fb      	ldr	r3, [r7, #12]
 8003d14:	621a      	str	r2, [r3, #32]
 8003d16:	68fb      	ldr	r3, [r7, #12]
 8003d18:	699b      	ldr	r3, [r3, #24]
 8003d1a:	613b      	str	r3, [r7, #16]
 8003d1c:	693b      	ldr	r3, [r7, #16]
 8003d1e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003d22:	613b      	str	r3, [r7, #16]
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	011b      	lsls	r3, r3, #4
 8003d28:	693a      	ldr	r2, [r7, #16]
 8003d2a:	4313      	orrs	r3, r2
 8003d2c:	613b      	str	r3, [r7, #16]
 8003d2e:	697b      	ldr	r3, [r7, #20]
 8003d30:	f023 030a 	bic.w	r3, r3, #10
 8003d34:	617b      	str	r3, [r7, #20]
 8003d36:	697a      	ldr	r2, [r7, #20]
 8003d38:	68bb      	ldr	r3, [r7, #8]
 8003d3a:	4313      	orrs	r3, r2
 8003d3c:	617b      	str	r3, [r7, #20]
 8003d3e:	68fb      	ldr	r3, [r7, #12]
 8003d40:	693a      	ldr	r2, [r7, #16]
 8003d42:	619a      	str	r2, [r3, #24]
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	697a      	ldr	r2, [r7, #20]
 8003d48:	621a      	str	r2, [r3, #32]
 8003d4a:	bf00      	nop
 8003d4c:	371c      	adds	r7, #28
 8003d4e:	46bd      	mov	sp, r7
 8003d50:	bc80      	pop	{r7}
 8003d52:	4770      	bx	lr

08003d54 <TIM_TI2_ConfigInputStage>:
 8003d54:	b480      	push	{r7}
 8003d56:	b087      	sub	sp, #28
 8003d58:	af00      	add	r7, sp, #0
 8003d5a:	60f8      	str	r0, [r7, #12]
 8003d5c:	60b9      	str	r1, [r7, #8]
 8003d5e:	607a      	str	r2, [r7, #4]
 8003d60:	68fb      	ldr	r3, [r7, #12]
 8003d62:	6a1b      	ldr	r3, [r3, #32]
 8003d64:	f023 0210 	bic.w	r2, r3, #16
 8003d68:	68fb      	ldr	r3, [r7, #12]
 8003d6a:	621a      	str	r2, [r3, #32]
 8003d6c:	68fb      	ldr	r3, [r7, #12]
 8003d6e:	699b      	ldr	r3, [r3, #24]
 8003d70:	617b      	str	r3, [r7, #20]
 8003d72:	68fb      	ldr	r3, [r7, #12]
 8003d74:	6a1b      	ldr	r3, [r3, #32]
 8003d76:	613b      	str	r3, [r7, #16]
 8003d78:	697b      	ldr	r3, [r7, #20]
 8003d7a:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8003d7e:	617b      	str	r3, [r7, #20]
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	031b      	lsls	r3, r3, #12
 8003d84:	697a      	ldr	r2, [r7, #20]
 8003d86:	4313      	orrs	r3, r2
 8003d88:	617b      	str	r3, [r7, #20]
 8003d8a:	693b      	ldr	r3, [r7, #16]
 8003d8c:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8003d90:	613b      	str	r3, [r7, #16]
 8003d92:	68bb      	ldr	r3, [r7, #8]
 8003d94:	011b      	lsls	r3, r3, #4
 8003d96:	693a      	ldr	r2, [r7, #16]
 8003d98:	4313      	orrs	r3, r2
 8003d9a:	613b      	str	r3, [r7, #16]
 8003d9c:	68fb      	ldr	r3, [r7, #12]
 8003d9e:	697a      	ldr	r2, [r7, #20]
 8003da0:	619a      	str	r2, [r3, #24]
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	693a      	ldr	r2, [r7, #16]
 8003da6:	621a      	str	r2, [r3, #32]
 8003da8:	bf00      	nop
 8003daa:	371c      	adds	r7, #28
 8003dac:	46bd      	mov	sp, r7
 8003dae:	bc80      	pop	{r7}
 8003db0:	4770      	bx	lr

08003db2 <TIM_ITRx_SetConfig>:
 8003db2:	b480      	push	{r7}
 8003db4:	b085      	sub	sp, #20
 8003db6:	af00      	add	r7, sp, #0
 8003db8:	6078      	str	r0, [r7, #4]
 8003dba:	6039      	str	r1, [r7, #0]
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	689b      	ldr	r3, [r3, #8]
 8003dc0:	60fb      	str	r3, [r7, #12]
 8003dc2:	68fb      	ldr	r3, [r7, #12]
 8003dc4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003dc8:	60fb      	str	r3, [r7, #12]
 8003dca:	683a      	ldr	r2, [r7, #0]
 8003dcc:	68fb      	ldr	r3, [r7, #12]
 8003dce:	4313      	orrs	r3, r2
 8003dd0:	f043 0307 	orr.w	r3, r3, #7
 8003dd4:	60fb      	str	r3, [r7, #12]
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	68fa      	ldr	r2, [r7, #12]
 8003dda:	609a      	str	r2, [r3, #8]
 8003ddc:	bf00      	nop
 8003dde:	3714      	adds	r7, #20
 8003de0:	46bd      	mov	sp, r7
 8003de2:	bc80      	pop	{r7}
 8003de4:	4770      	bx	lr

08003de6 <TIM_ETR_SetConfig>:
 8003de6:	b480      	push	{r7}
 8003de8:	b087      	sub	sp, #28
 8003dea:	af00      	add	r7, sp, #0
 8003dec:	60f8      	str	r0, [r7, #12]
 8003dee:	60b9      	str	r1, [r7, #8]
 8003df0:	607a      	str	r2, [r7, #4]
 8003df2:	603b      	str	r3, [r7, #0]
 8003df4:	68fb      	ldr	r3, [r7, #12]
 8003df6:	689b      	ldr	r3, [r3, #8]
 8003df8:	617b      	str	r3, [r7, #20]
 8003dfa:	697b      	ldr	r3, [r7, #20]
 8003dfc:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003e00:	617b      	str	r3, [r7, #20]
 8003e02:	683b      	ldr	r3, [r7, #0]
 8003e04:	021a      	lsls	r2, r3, #8
 8003e06:	687b      	ldr	r3, [r7, #4]
 8003e08:	431a      	orrs	r2, r3
 8003e0a:	68bb      	ldr	r3, [r7, #8]
 8003e0c:	4313      	orrs	r3, r2
 8003e0e:	697a      	ldr	r2, [r7, #20]
 8003e10:	4313      	orrs	r3, r2
 8003e12:	617b      	str	r3, [r7, #20]
 8003e14:	68fb      	ldr	r3, [r7, #12]
 8003e16:	697a      	ldr	r2, [r7, #20]
 8003e18:	609a      	str	r2, [r3, #8]
 8003e1a:	bf00      	nop
 8003e1c:	371c      	adds	r7, #28
 8003e1e:	46bd      	mov	sp, r7
 8003e20:	bc80      	pop	{r7}
 8003e22:	4770      	bx	lr

08003e24 <HAL_TIMEx_MasterConfigSynchronization>:
 8003e24:	b480      	push	{r7}
 8003e26:	b085      	sub	sp, #20
 8003e28:	af00      	add	r7, sp, #0
 8003e2a:	6078      	str	r0, [r7, #4]
 8003e2c:	6039      	str	r1, [r7, #0]
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003e34:	2b01      	cmp	r3, #1
 8003e36:	d101      	bne.n	8003e3c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003e38:	2302      	movs	r3, #2
 8003e3a:	e046      	b.n	8003eca <HAL_TIMEx_MasterConfigSynchronization+0xa6>
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	2201      	movs	r2, #1
 8003e40:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003e44:	687b      	ldr	r3, [r7, #4]
 8003e46:	2202      	movs	r2, #2
 8003e48:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	681b      	ldr	r3, [r3, #0]
 8003e50:	685b      	ldr	r3, [r3, #4]
 8003e52:	60fb      	str	r3, [r7, #12]
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	689b      	ldr	r3, [r3, #8]
 8003e5a:	60bb      	str	r3, [r7, #8]
 8003e5c:	68fb      	ldr	r3, [r7, #12]
 8003e5e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003e62:	60fb      	str	r3, [r7, #12]
 8003e64:	683b      	ldr	r3, [r7, #0]
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	68fa      	ldr	r2, [r7, #12]
 8003e6a:	4313      	orrs	r3, r2
 8003e6c:	60fb      	str	r3, [r7, #12]
 8003e6e:	687b      	ldr	r3, [r7, #4]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	68fa      	ldr	r2, [r7, #12]
 8003e74:	605a      	str	r2, [r3, #4]
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	4a16      	ldr	r2, [pc, #88]	; (8003ed4 <HAL_TIMEx_MasterConfigSynchronization+0xb0>)
 8003e7c:	4293      	cmp	r3, r2
 8003e7e:	d00e      	beq.n	8003e9e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	681b      	ldr	r3, [r3, #0]
 8003e84:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003e88:	d009      	beq.n	8003e9e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	681b      	ldr	r3, [r3, #0]
 8003e8e:	4a12      	ldr	r2, [pc, #72]	; (8003ed8 <HAL_TIMEx_MasterConfigSynchronization+0xb4>)
 8003e90:	4293      	cmp	r3, r2
 8003e92:	d004      	beq.n	8003e9e <HAL_TIMEx_MasterConfigSynchronization+0x7a>
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	681b      	ldr	r3, [r3, #0]
 8003e98:	4a10      	ldr	r2, [pc, #64]	; (8003edc <HAL_TIMEx_MasterConfigSynchronization+0xb8>)
 8003e9a:	4293      	cmp	r3, r2
 8003e9c:	d10c      	bne.n	8003eb8 <HAL_TIMEx_MasterConfigSynchronization+0x94>
 8003e9e:	68bb      	ldr	r3, [r7, #8]
 8003ea0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003ea4:	60bb      	str	r3, [r7, #8]
 8003ea6:	683b      	ldr	r3, [r7, #0]
 8003ea8:	685b      	ldr	r3, [r3, #4]
 8003eaa:	68ba      	ldr	r2, [r7, #8]
 8003eac:	4313      	orrs	r3, r2
 8003eae:	60bb      	str	r3, [r7, #8]
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	681b      	ldr	r3, [r3, #0]
 8003eb4:	68ba      	ldr	r2, [r7, #8]
 8003eb6:	609a      	str	r2, [r3, #8]
 8003eb8:	687b      	ldr	r3, [r7, #4]
 8003eba:	2201      	movs	r2, #1
 8003ebc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003ec0:	687b      	ldr	r3, [r7, #4]
 8003ec2:	2200      	movs	r2, #0
 8003ec4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003ec8:	2300      	movs	r3, #0
 8003eca:	4618      	mov	r0, r3
 8003ecc:	3714      	adds	r7, #20
 8003ece:	46bd      	mov	sp, r7
 8003ed0:	bc80      	pop	{r7}
 8003ed2:	4770      	bx	lr
 8003ed4:	40012c00 	.word	0x40012c00
 8003ed8:	40000400 	.word	0x40000400
 8003edc:	40000800 	.word	0x40000800

08003ee0 <HAL_TIMEx_CommutCallback>:
 8003ee0:	b480      	push	{r7}
 8003ee2:	b083      	sub	sp, #12
 8003ee4:	af00      	add	r7, sp, #0
 8003ee6:	6078      	str	r0, [r7, #4]
 8003ee8:	bf00      	nop
 8003eea:	370c      	adds	r7, #12
 8003eec:	46bd      	mov	sp, r7
 8003eee:	bc80      	pop	{r7}
 8003ef0:	4770      	bx	lr

08003ef2 <HAL_TIMEx_BreakCallback>:
 8003ef2:	b480      	push	{r7}
 8003ef4:	b083      	sub	sp, #12
 8003ef6:	af00      	add	r7, sp, #0
 8003ef8:	6078      	str	r0, [r7, #4]
 8003efa:	bf00      	nop
 8003efc:	370c      	adds	r7, #12
 8003efe:	46bd      	mov	sp, r7
 8003f00:	bc80      	pop	{r7}
 8003f02:	4770      	bx	lr

08003f04 <HAL_UART_Init>:
 8003f04:	b580      	push	{r7, lr}
 8003f06:	b082      	sub	sp, #8
 8003f08:	af00      	add	r7, sp, #0
 8003f0a:	6078      	str	r0, [r7, #4]
 8003f0c:	687b      	ldr	r3, [r7, #4]
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d101      	bne.n	8003f16 <HAL_UART_Init+0x12>
 8003f12:	2301      	movs	r3, #1
 8003f14:	e03f      	b.n	8003f96 <HAL_UART_Init+0x92>
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003f1c:	b2db      	uxtb	r3, r3
 8003f1e:	2b00      	cmp	r3, #0
 8003f20:	d106      	bne.n	8003f30 <HAL_UART_Init+0x2c>
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	2200      	movs	r2, #0
 8003f26:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003f2a:	6878      	ldr	r0, [r7, #4]
 8003f2c:	f7fd f8ae 	bl	800108c <HAL_UART_MspInit>
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	2224      	movs	r2, #36	; 0x24
 8003f34:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	681b      	ldr	r3, [r3, #0]
 8003f3c:	68da      	ldr	r2, [r3, #12]
 8003f3e:	687b      	ldr	r3, [r7, #4]
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003f46:	60da      	str	r2, [r3, #12]
 8003f48:	6878      	ldr	r0, [r7, #4]
 8003f4a:	f000 fc85 	bl	8004858 <UART_SetConfig>
 8003f4e:	687b      	ldr	r3, [r7, #4]
 8003f50:	681b      	ldr	r3, [r3, #0]
 8003f52:	691a      	ldr	r2, [r3, #16]
 8003f54:	687b      	ldr	r3, [r7, #4]
 8003f56:	681b      	ldr	r3, [r3, #0]
 8003f58:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003f5c:	611a      	str	r2, [r3, #16]
 8003f5e:	687b      	ldr	r3, [r7, #4]
 8003f60:	681b      	ldr	r3, [r3, #0]
 8003f62:	695a      	ldr	r2, [r3, #20]
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	681b      	ldr	r3, [r3, #0]
 8003f68:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003f6c:	615a      	str	r2, [r3, #20]
 8003f6e:	687b      	ldr	r3, [r7, #4]
 8003f70:	681b      	ldr	r3, [r3, #0]
 8003f72:	68da      	ldr	r2, [r3, #12]
 8003f74:	687b      	ldr	r3, [r7, #4]
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003f7c:	60da      	str	r2, [r3, #12]
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	2200      	movs	r2, #0
 8003f82:	641a      	str	r2, [r3, #64]	; 0x40
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	2220      	movs	r2, #32
 8003f88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	2220      	movs	r2, #32
 8003f90:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003f94:	2300      	movs	r3, #0
 8003f96:	4618      	mov	r0, r3
 8003f98:	3708      	adds	r7, #8
 8003f9a:	46bd      	mov	sp, r7
 8003f9c:	bd80      	pop	{r7, pc}

08003f9e <HAL_UART_Transmit>:
 8003f9e:	b580      	push	{r7, lr}
 8003fa0:	b08a      	sub	sp, #40	; 0x28
 8003fa2:	af02      	add	r7, sp, #8
 8003fa4:	60f8      	str	r0, [r7, #12]
 8003fa6:	60b9      	str	r1, [r7, #8]
 8003fa8:	603b      	str	r3, [r7, #0]
 8003faa:	4613      	mov	r3, r2
 8003fac:	80fb      	strh	r3, [r7, #6]
 8003fae:	2300      	movs	r3, #0
 8003fb0:	617b      	str	r3, [r7, #20]
 8003fb2:	68fb      	ldr	r3, [r7, #12]
 8003fb4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003fb8:	b2db      	uxtb	r3, r3
 8003fba:	2b20      	cmp	r3, #32
 8003fbc:	d17c      	bne.n	80040b8 <HAL_UART_Transmit+0x11a>
 8003fbe:	68bb      	ldr	r3, [r7, #8]
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	d002      	beq.n	8003fca <HAL_UART_Transmit+0x2c>
 8003fc4:	88fb      	ldrh	r3, [r7, #6]
 8003fc6:	2b00      	cmp	r3, #0
 8003fc8:	d101      	bne.n	8003fce <HAL_UART_Transmit+0x30>
 8003fca:	2301      	movs	r3, #1
 8003fcc:	e075      	b.n	80040ba <HAL_UART_Transmit+0x11c>
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003fd4:	2b01      	cmp	r3, #1
 8003fd6:	d101      	bne.n	8003fdc <HAL_UART_Transmit+0x3e>
 8003fd8:	2302      	movs	r3, #2
 8003fda:	e06e      	b.n	80040ba <HAL_UART_Transmit+0x11c>
 8003fdc:	68fb      	ldr	r3, [r7, #12]
 8003fde:	2201      	movs	r2, #1
 8003fe0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003fe4:	68fb      	ldr	r3, [r7, #12]
 8003fe6:	2200      	movs	r2, #0
 8003fe8:	641a      	str	r2, [r3, #64]	; 0x40
 8003fea:	68fb      	ldr	r3, [r7, #12]
 8003fec:	2221      	movs	r2, #33	; 0x21
 8003fee:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003ff2:	f7fd faef 	bl	80015d4 <HAL_GetTick>
 8003ff6:	6178      	str	r0, [r7, #20]
 8003ff8:	68fb      	ldr	r3, [r7, #12]
 8003ffa:	88fa      	ldrh	r2, [r7, #6]
 8003ffc:	849a      	strh	r2, [r3, #36]	; 0x24
 8003ffe:	68fb      	ldr	r3, [r7, #12]
 8004000:	88fa      	ldrh	r2, [r7, #6]
 8004002:	84da      	strh	r2, [r3, #38]	; 0x26
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	689b      	ldr	r3, [r3, #8]
 8004008:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800400c:	d108      	bne.n	8004020 <HAL_UART_Transmit+0x82>
 800400e:	68fb      	ldr	r3, [r7, #12]
 8004010:	691b      	ldr	r3, [r3, #16]
 8004012:	2b00      	cmp	r3, #0
 8004014:	d104      	bne.n	8004020 <HAL_UART_Transmit+0x82>
 8004016:	2300      	movs	r3, #0
 8004018:	61fb      	str	r3, [r7, #28]
 800401a:	68bb      	ldr	r3, [r7, #8]
 800401c:	61bb      	str	r3, [r7, #24]
 800401e:	e003      	b.n	8004028 <HAL_UART_Transmit+0x8a>
 8004020:	68bb      	ldr	r3, [r7, #8]
 8004022:	61fb      	str	r3, [r7, #28]
 8004024:	2300      	movs	r3, #0
 8004026:	61bb      	str	r3, [r7, #24]
 8004028:	68fb      	ldr	r3, [r7, #12]
 800402a:	2200      	movs	r2, #0
 800402c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004030:	e02a      	b.n	8004088 <HAL_UART_Transmit+0xea>
 8004032:	683b      	ldr	r3, [r7, #0]
 8004034:	9300      	str	r3, [sp, #0]
 8004036:	697b      	ldr	r3, [r7, #20]
 8004038:	2200      	movs	r2, #0
 800403a:	2180      	movs	r1, #128	; 0x80
 800403c:	68f8      	ldr	r0, [r7, #12]
 800403e:	f000 fa38 	bl	80044b2 <UART_WaitOnFlagUntilTimeout>
 8004042:	4603      	mov	r3, r0
 8004044:	2b00      	cmp	r3, #0
 8004046:	d001      	beq.n	800404c <HAL_UART_Transmit+0xae>
 8004048:	2303      	movs	r3, #3
 800404a:	e036      	b.n	80040ba <HAL_UART_Transmit+0x11c>
 800404c:	69fb      	ldr	r3, [r7, #28]
 800404e:	2b00      	cmp	r3, #0
 8004050:	d10b      	bne.n	800406a <HAL_UART_Transmit+0xcc>
 8004052:	69bb      	ldr	r3, [r7, #24]
 8004054:	881b      	ldrh	r3, [r3, #0]
 8004056:	461a      	mov	r2, r3
 8004058:	68fb      	ldr	r3, [r7, #12]
 800405a:	681b      	ldr	r3, [r3, #0]
 800405c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004060:	605a      	str	r2, [r3, #4]
 8004062:	69bb      	ldr	r3, [r7, #24]
 8004064:	3302      	adds	r3, #2
 8004066:	61bb      	str	r3, [r7, #24]
 8004068:	e007      	b.n	800407a <HAL_UART_Transmit+0xdc>
 800406a:	69fb      	ldr	r3, [r7, #28]
 800406c:	781a      	ldrb	r2, [r3, #0]
 800406e:	68fb      	ldr	r3, [r7, #12]
 8004070:	681b      	ldr	r3, [r3, #0]
 8004072:	605a      	str	r2, [r3, #4]
 8004074:	69fb      	ldr	r3, [r7, #28]
 8004076:	3301      	adds	r3, #1
 8004078:	61fb      	str	r3, [r7, #28]
 800407a:	68fb      	ldr	r3, [r7, #12]
 800407c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800407e:	b29b      	uxth	r3, r3
 8004080:	3b01      	subs	r3, #1
 8004082:	b29a      	uxth	r2, r3
 8004084:	68fb      	ldr	r3, [r7, #12]
 8004086:	84da      	strh	r2, [r3, #38]	; 0x26
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800408c:	b29b      	uxth	r3, r3
 800408e:	2b00      	cmp	r3, #0
 8004090:	d1cf      	bne.n	8004032 <HAL_UART_Transmit+0x94>
 8004092:	683b      	ldr	r3, [r7, #0]
 8004094:	9300      	str	r3, [sp, #0]
 8004096:	697b      	ldr	r3, [r7, #20]
 8004098:	2200      	movs	r2, #0
 800409a:	2140      	movs	r1, #64	; 0x40
 800409c:	68f8      	ldr	r0, [r7, #12]
 800409e:	f000 fa08 	bl	80044b2 <UART_WaitOnFlagUntilTimeout>
 80040a2:	4603      	mov	r3, r0
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	d001      	beq.n	80040ac <HAL_UART_Transmit+0x10e>
 80040a8:	2303      	movs	r3, #3
 80040aa:	e006      	b.n	80040ba <HAL_UART_Transmit+0x11c>
 80040ac:	68fb      	ldr	r3, [r7, #12]
 80040ae:	2220      	movs	r2, #32
 80040b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80040b4:	2300      	movs	r3, #0
 80040b6:	e000      	b.n	80040ba <HAL_UART_Transmit+0x11c>
 80040b8:	2302      	movs	r3, #2
 80040ba:	4618      	mov	r0, r3
 80040bc:	3720      	adds	r7, #32
 80040be:	46bd      	mov	sp, r7
 80040c0:	bd80      	pop	{r7, pc}

080040c2 <HAL_UART_Receive_IT>:
 80040c2:	b580      	push	{r7, lr}
 80040c4:	b084      	sub	sp, #16
 80040c6:	af00      	add	r7, sp, #0
 80040c8:	60f8      	str	r0, [r7, #12]
 80040ca:	60b9      	str	r1, [r7, #8]
 80040cc:	4613      	mov	r3, r2
 80040ce:	80fb      	strh	r3, [r7, #6]
 80040d0:	68fb      	ldr	r3, [r7, #12]
 80040d2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80040d6:	b2db      	uxtb	r3, r3
 80040d8:	2b20      	cmp	r3, #32
 80040da:	d11d      	bne.n	8004118 <HAL_UART_Receive_IT+0x56>
 80040dc:	68bb      	ldr	r3, [r7, #8]
 80040de:	2b00      	cmp	r3, #0
 80040e0:	d002      	beq.n	80040e8 <HAL_UART_Receive_IT+0x26>
 80040e2:	88fb      	ldrh	r3, [r7, #6]
 80040e4:	2b00      	cmp	r3, #0
 80040e6:	d101      	bne.n	80040ec <HAL_UART_Receive_IT+0x2a>
 80040e8:	2301      	movs	r3, #1
 80040ea:	e016      	b.n	800411a <HAL_UART_Receive_IT+0x58>
 80040ec:	68fb      	ldr	r3, [r7, #12]
 80040ee:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80040f2:	2b01      	cmp	r3, #1
 80040f4:	d101      	bne.n	80040fa <HAL_UART_Receive_IT+0x38>
 80040f6:	2302      	movs	r3, #2
 80040f8:	e00f      	b.n	800411a <HAL_UART_Receive_IT+0x58>
 80040fa:	68fb      	ldr	r3, [r7, #12]
 80040fc:	2201      	movs	r2, #1
 80040fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004102:	68fb      	ldr	r3, [r7, #12]
 8004104:	2200      	movs	r2, #0
 8004106:	631a      	str	r2, [r3, #48]	; 0x30
 8004108:	88fb      	ldrh	r3, [r7, #6]
 800410a:	461a      	mov	r2, r3
 800410c:	68b9      	ldr	r1, [r7, #8]
 800410e:	68f8      	ldr	r0, [r7, #12]
 8004110:	f000 fa19 	bl	8004546 <UART_Start_Receive_IT>
 8004114:	4603      	mov	r3, r0
 8004116:	e000      	b.n	800411a <HAL_UART_Receive_IT+0x58>
 8004118:	2302      	movs	r3, #2
 800411a:	4618      	mov	r0, r3
 800411c:	3710      	adds	r7, #16
 800411e:	46bd      	mov	sp, r7
 8004120:	bd80      	pop	{r7, pc}
	...

08004124 <HAL_UART_IRQHandler>:
 8004124:	b580      	push	{r7, lr}
 8004126:	b08a      	sub	sp, #40	; 0x28
 8004128:	af00      	add	r7, sp, #0
 800412a:	6078      	str	r0, [r7, #4]
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	681b      	ldr	r3, [r3, #0]
 8004130:	681b      	ldr	r3, [r3, #0]
 8004132:	627b      	str	r3, [r7, #36]	; 0x24
 8004134:	687b      	ldr	r3, [r7, #4]
 8004136:	681b      	ldr	r3, [r3, #0]
 8004138:	68db      	ldr	r3, [r3, #12]
 800413a:	623b      	str	r3, [r7, #32]
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	681b      	ldr	r3, [r3, #0]
 8004140:	695b      	ldr	r3, [r3, #20]
 8004142:	61fb      	str	r3, [r7, #28]
 8004144:	2300      	movs	r3, #0
 8004146:	61bb      	str	r3, [r7, #24]
 8004148:	2300      	movs	r3, #0
 800414a:	617b      	str	r3, [r7, #20]
 800414c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800414e:	f003 030f 	and.w	r3, r3, #15
 8004152:	61bb      	str	r3, [r7, #24]
 8004154:	69bb      	ldr	r3, [r7, #24]
 8004156:	2b00      	cmp	r3, #0
 8004158:	d10d      	bne.n	8004176 <HAL_UART_IRQHandler+0x52>
 800415a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800415c:	f003 0320 	and.w	r3, r3, #32
 8004160:	2b00      	cmp	r3, #0
 8004162:	d008      	beq.n	8004176 <HAL_UART_IRQHandler+0x52>
 8004164:	6a3b      	ldr	r3, [r7, #32]
 8004166:	f003 0320 	and.w	r3, r3, #32
 800416a:	2b00      	cmp	r3, #0
 800416c:	d003      	beq.n	8004176 <HAL_UART_IRQHandler+0x52>
 800416e:	6878      	ldr	r0, [r7, #4]
 8004170:	f000 fac9 	bl	8004706 <UART_Receive_IT>
 8004174:	e17b      	b.n	800446e <HAL_UART_IRQHandler+0x34a>
 8004176:	69bb      	ldr	r3, [r7, #24]
 8004178:	2b00      	cmp	r3, #0
 800417a:	f000 80b1 	beq.w	80042e0 <HAL_UART_IRQHandler+0x1bc>
 800417e:	69fb      	ldr	r3, [r7, #28]
 8004180:	f003 0301 	and.w	r3, r3, #1
 8004184:	2b00      	cmp	r3, #0
 8004186:	d105      	bne.n	8004194 <HAL_UART_IRQHandler+0x70>
 8004188:	6a3b      	ldr	r3, [r7, #32]
 800418a:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800418e:	2b00      	cmp	r3, #0
 8004190:	f000 80a6 	beq.w	80042e0 <HAL_UART_IRQHandler+0x1bc>
 8004194:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004196:	f003 0301 	and.w	r3, r3, #1
 800419a:	2b00      	cmp	r3, #0
 800419c:	d00a      	beq.n	80041b4 <HAL_UART_IRQHandler+0x90>
 800419e:	6a3b      	ldr	r3, [r7, #32]
 80041a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80041a4:	2b00      	cmp	r3, #0
 80041a6:	d005      	beq.n	80041b4 <HAL_UART_IRQHandler+0x90>
 80041a8:	687b      	ldr	r3, [r7, #4]
 80041aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80041ac:	f043 0201 	orr.w	r2, r3, #1
 80041b0:	687b      	ldr	r3, [r7, #4]
 80041b2:	641a      	str	r2, [r3, #64]	; 0x40
 80041b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041b6:	f003 0304 	and.w	r3, r3, #4
 80041ba:	2b00      	cmp	r3, #0
 80041bc:	d00a      	beq.n	80041d4 <HAL_UART_IRQHandler+0xb0>
 80041be:	69fb      	ldr	r3, [r7, #28]
 80041c0:	f003 0301 	and.w	r3, r3, #1
 80041c4:	2b00      	cmp	r3, #0
 80041c6:	d005      	beq.n	80041d4 <HAL_UART_IRQHandler+0xb0>
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80041cc:	f043 0202 	orr.w	r2, r3, #2
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	641a      	str	r2, [r3, #64]	; 0x40
 80041d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041d6:	f003 0302 	and.w	r3, r3, #2
 80041da:	2b00      	cmp	r3, #0
 80041dc:	d00a      	beq.n	80041f4 <HAL_UART_IRQHandler+0xd0>
 80041de:	69fb      	ldr	r3, [r7, #28]
 80041e0:	f003 0301 	and.w	r3, r3, #1
 80041e4:	2b00      	cmp	r3, #0
 80041e6:	d005      	beq.n	80041f4 <HAL_UART_IRQHandler+0xd0>
 80041e8:	687b      	ldr	r3, [r7, #4]
 80041ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80041ec:	f043 0204 	orr.w	r2, r3, #4
 80041f0:	687b      	ldr	r3, [r7, #4]
 80041f2:	641a      	str	r2, [r3, #64]	; 0x40
 80041f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041f6:	f003 0308 	and.w	r3, r3, #8
 80041fa:	2b00      	cmp	r3, #0
 80041fc:	d00f      	beq.n	800421e <HAL_UART_IRQHandler+0xfa>
 80041fe:	6a3b      	ldr	r3, [r7, #32]
 8004200:	f003 0320 	and.w	r3, r3, #32
 8004204:	2b00      	cmp	r3, #0
 8004206:	d104      	bne.n	8004212 <HAL_UART_IRQHandler+0xee>
 8004208:	69fb      	ldr	r3, [r7, #28]
 800420a:	f003 0301 	and.w	r3, r3, #1
 800420e:	2b00      	cmp	r3, #0
 8004210:	d005      	beq.n	800421e <HAL_UART_IRQHandler+0xfa>
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004216:	f043 0208 	orr.w	r2, r3, #8
 800421a:	687b      	ldr	r3, [r7, #4]
 800421c:	641a      	str	r2, [r3, #64]	; 0x40
 800421e:	687b      	ldr	r3, [r7, #4]
 8004220:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004222:	2b00      	cmp	r3, #0
 8004224:	f000 811e 	beq.w	8004464 <HAL_UART_IRQHandler+0x340>
 8004228:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800422a:	f003 0320 	and.w	r3, r3, #32
 800422e:	2b00      	cmp	r3, #0
 8004230:	d007      	beq.n	8004242 <HAL_UART_IRQHandler+0x11e>
 8004232:	6a3b      	ldr	r3, [r7, #32]
 8004234:	f003 0320 	and.w	r3, r3, #32
 8004238:	2b00      	cmp	r3, #0
 800423a:	d002      	beq.n	8004242 <HAL_UART_IRQHandler+0x11e>
 800423c:	6878      	ldr	r0, [r7, #4]
 800423e:	f000 fa62 	bl	8004706 <UART_Receive_IT>
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	681b      	ldr	r3, [r3, #0]
 8004246:	695b      	ldr	r3, [r3, #20]
 8004248:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800424c:	2b00      	cmp	r3, #0
 800424e:	bf14      	ite	ne
 8004250:	2301      	movne	r3, #1
 8004252:	2300      	moveq	r3, #0
 8004254:	b2db      	uxtb	r3, r3
 8004256:	617b      	str	r3, [r7, #20]
 8004258:	687b      	ldr	r3, [r7, #4]
 800425a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800425c:	f003 0308 	and.w	r3, r3, #8
 8004260:	2b00      	cmp	r3, #0
 8004262:	d102      	bne.n	800426a <HAL_UART_IRQHandler+0x146>
 8004264:	697b      	ldr	r3, [r7, #20]
 8004266:	2b00      	cmp	r3, #0
 8004268:	d031      	beq.n	80042ce <HAL_UART_IRQHandler+0x1aa>
 800426a:	6878      	ldr	r0, [r7, #4]
 800426c:	f000 f9a4 	bl	80045b8 <UART_EndRxTransfer>
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	681b      	ldr	r3, [r3, #0]
 8004274:	695b      	ldr	r3, [r3, #20]
 8004276:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800427a:	2b00      	cmp	r3, #0
 800427c:	d023      	beq.n	80042c6 <HAL_UART_IRQHandler+0x1a2>
 800427e:	687b      	ldr	r3, [r7, #4]
 8004280:	681b      	ldr	r3, [r3, #0]
 8004282:	695a      	ldr	r2, [r3, #20]
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800428c:	615a      	str	r2, [r3, #20]
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004292:	2b00      	cmp	r3, #0
 8004294:	d013      	beq.n	80042be <HAL_UART_IRQHandler+0x19a>
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800429a:	4a76      	ldr	r2, [pc, #472]	; (8004474 <HAL_UART_IRQHandler+0x350>)
 800429c:	635a      	str	r2, [r3, #52]	; 0x34
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80042a2:	4618      	mov	r0, r3
 80042a4:	f7fd fb0c 	bl	80018c0 <HAL_DMA_Abort_IT>
 80042a8:	4603      	mov	r3, r0
 80042aa:	2b00      	cmp	r3, #0
 80042ac:	d016      	beq.n	80042dc <HAL_UART_IRQHandler+0x1b8>
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80042b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80042b4:	687a      	ldr	r2, [r7, #4]
 80042b6:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80042b8:	4610      	mov	r0, r2
 80042ba:	4798      	blx	r3
 80042bc:	e00e      	b.n	80042dc <HAL_UART_IRQHandler+0x1b8>
 80042be:	6878      	ldr	r0, [r7, #4]
 80042c0:	f000 f8e3 	bl	800448a <HAL_UART_ErrorCallback>
 80042c4:	e00a      	b.n	80042dc <HAL_UART_IRQHandler+0x1b8>
 80042c6:	6878      	ldr	r0, [r7, #4]
 80042c8:	f000 f8df 	bl	800448a <HAL_UART_ErrorCallback>
 80042cc:	e006      	b.n	80042dc <HAL_UART_IRQHandler+0x1b8>
 80042ce:	6878      	ldr	r0, [r7, #4]
 80042d0:	f000 f8db 	bl	800448a <HAL_UART_ErrorCallback>
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	2200      	movs	r2, #0
 80042d8:	641a      	str	r2, [r3, #64]	; 0x40
 80042da:	e0c3      	b.n	8004464 <HAL_UART_IRQHandler+0x340>
 80042dc:	bf00      	nop
 80042de:	e0c1      	b.n	8004464 <HAL_UART_IRQHandler+0x340>
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80042e4:	2b01      	cmp	r3, #1
 80042e6:	f040 80a1 	bne.w	800442c <HAL_UART_IRQHandler+0x308>
 80042ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80042ec:	f003 0310 	and.w	r3, r3, #16
 80042f0:	2b00      	cmp	r3, #0
 80042f2:	f000 809b 	beq.w	800442c <HAL_UART_IRQHandler+0x308>
 80042f6:	6a3b      	ldr	r3, [r7, #32]
 80042f8:	f003 0310 	and.w	r3, r3, #16
 80042fc:	2b00      	cmp	r3, #0
 80042fe:	f000 8095 	beq.w	800442c <HAL_UART_IRQHandler+0x308>
 8004302:	2300      	movs	r3, #0
 8004304:	60fb      	str	r3, [r7, #12]
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	681b      	ldr	r3, [r3, #0]
 800430a:	681b      	ldr	r3, [r3, #0]
 800430c:	60fb      	str	r3, [r7, #12]
 800430e:	687b      	ldr	r3, [r7, #4]
 8004310:	681b      	ldr	r3, [r3, #0]
 8004312:	685b      	ldr	r3, [r3, #4]
 8004314:	60fb      	str	r3, [r7, #12]
 8004316:	68fb      	ldr	r3, [r7, #12]
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	681b      	ldr	r3, [r3, #0]
 800431c:	695b      	ldr	r3, [r3, #20]
 800431e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004322:	2b00      	cmp	r3, #0
 8004324:	d04e      	beq.n	80043c4 <HAL_UART_IRQHandler+0x2a0>
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800432a:	681b      	ldr	r3, [r3, #0]
 800432c:	685b      	ldr	r3, [r3, #4]
 800432e:	823b      	strh	r3, [r7, #16]
 8004330:	8a3b      	ldrh	r3, [r7, #16]
 8004332:	2b00      	cmp	r3, #0
 8004334:	f000 8098 	beq.w	8004468 <HAL_UART_IRQHandler+0x344>
 8004338:	687b      	ldr	r3, [r7, #4]
 800433a:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800433c:	8a3a      	ldrh	r2, [r7, #16]
 800433e:	429a      	cmp	r2, r3
 8004340:	f080 8092 	bcs.w	8004468 <HAL_UART_IRQHandler+0x344>
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	8a3a      	ldrh	r2, [r7, #16]
 8004348:	85da      	strh	r2, [r3, #46]	; 0x2e
 800434a:	687b      	ldr	r3, [r7, #4]
 800434c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800434e:	699b      	ldr	r3, [r3, #24]
 8004350:	2b20      	cmp	r3, #32
 8004352:	d02b      	beq.n	80043ac <HAL_UART_IRQHandler+0x288>
 8004354:	687b      	ldr	r3, [r7, #4]
 8004356:	681b      	ldr	r3, [r3, #0]
 8004358:	68da      	ldr	r2, [r3, #12]
 800435a:	687b      	ldr	r3, [r7, #4]
 800435c:	681b      	ldr	r3, [r3, #0]
 800435e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004362:	60da      	str	r2, [r3, #12]
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	681b      	ldr	r3, [r3, #0]
 8004368:	695a      	ldr	r2, [r3, #20]
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	681b      	ldr	r3, [r3, #0]
 800436e:	f022 0201 	bic.w	r2, r2, #1
 8004372:	615a      	str	r2, [r3, #20]
 8004374:	687b      	ldr	r3, [r7, #4]
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	695a      	ldr	r2, [r3, #20]
 800437a:	687b      	ldr	r3, [r7, #4]
 800437c:	681b      	ldr	r3, [r3, #0]
 800437e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004382:	615a      	str	r2, [r3, #20]
 8004384:	687b      	ldr	r3, [r7, #4]
 8004386:	2220      	movs	r2, #32
 8004388:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	2200      	movs	r2, #0
 8004390:	631a      	str	r2, [r3, #48]	; 0x30
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	681b      	ldr	r3, [r3, #0]
 8004396:	68da      	ldr	r2, [r3, #12]
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	681b      	ldr	r3, [r3, #0]
 800439c:	f022 0210 	bic.w	r2, r2, #16
 80043a0:	60da      	str	r2, [r3, #12]
 80043a2:	687b      	ldr	r3, [r7, #4]
 80043a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80043a6:	4618      	mov	r0, r3
 80043a8:	f7fd fa4f 	bl	800184a <HAL_DMA_Abort>
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80043b4:	b29b      	uxth	r3, r3
 80043b6:	1ad3      	subs	r3, r2, r3
 80043b8:	b29b      	uxth	r3, r3
 80043ba:	4619      	mov	r1, r3
 80043bc:	6878      	ldr	r0, [r7, #4]
 80043be:	f000 f86d 	bl	800449c <HAL_UARTEx_RxEventCallback>
 80043c2:	e051      	b.n	8004468 <HAL_UART_IRQHandler+0x344>
 80043c4:	687b      	ldr	r3, [r7, #4]
 80043c6:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80043cc:	b29b      	uxth	r3, r3
 80043ce:	1ad3      	subs	r3, r2, r3
 80043d0:	827b      	strh	r3, [r7, #18]
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80043d6:	b29b      	uxth	r3, r3
 80043d8:	2b00      	cmp	r3, #0
 80043da:	d047      	beq.n	800446c <HAL_UART_IRQHandler+0x348>
 80043dc:	8a7b      	ldrh	r3, [r7, #18]
 80043de:	2b00      	cmp	r3, #0
 80043e0:	d044      	beq.n	800446c <HAL_UART_IRQHandler+0x348>
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	681b      	ldr	r3, [r3, #0]
 80043e6:	68da      	ldr	r2, [r3, #12]
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	681b      	ldr	r3, [r3, #0]
 80043ec:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80043f0:	60da      	str	r2, [r3, #12]
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	695a      	ldr	r2, [r3, #20]
 80043f8:	687b      	ldr	r3, [r7, #4]
 80043fa:	681b      	ldr	r3, [r3, #0]
 80043fc:	f022 0201 	bic.w	r2, r2, #1
 8004400:	615a      	str	r2, [r3, #20]
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	2220      	movs	r2, #32
 8004406:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	2200      	movs	r2, #0
 800440e:	631a      	str	r2, [r3, #48]	; 0x30
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	68da      	ldr	r2, [r3, #12]
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	f022 0210 	bic.w	r2, r2, #16
 800441e:	60da      	str	r2, [r3, #12]
 8004420:	8a7b      	ldrh	r3, [r7, #18]
 8004422:	4619      	mov	r1, r3
 8004424:	6878      	ldr	r0, [r7, #4]
 8004426:	f000 f839 	bl	800449c <HAL_UARTEx_RxEventCallback>
 800442a:	e01f      	b.n	800446c <HAL_UART_IRQHandler+0x348>
 800442c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800442e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004432:	2b00      	cmp	r3, #0
 8004434:	d008      	beq.n	8004448 <HAL_UART_IRQHandler+0x324>
 8004436:	6a3b      	ldr	r3, [r7, #32]
 8004438:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800443c:	2b00      	cmp	r3, #0
 800443e:	d003      	beq.n	8004448 <HAL_UART_IRQHandler+0x324>
 8004440:	6878      	ldr	r0, [r7, #4]
 8004442:	f000 f8f9 	bl	8004638 <UART_Transmit_IT>
 8004446:	e012      	b.n	800446e <HAL_UART_IRQHandler+0x34a>
 8004448:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800444a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800444e:	2b00      	cmp	r3, #0
 8004450:	d00d      	beq.n	800446e <HAL_UART_IRQHandler+0x34a>
 8004452:	6a3b      	ldr	r3, [r7, #32]
 8004454:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004458:	2b00      	cmp	r3, #0
 800445a:	d008      	beq.n	800446e <HAL_UART_IRQHandler+0x34a>
 800445c:	6878      	ldr	r0, [r7, #4]
 800445e:	f000 f93a 	bl	80046d6 <UART_EndTransmit_IT>
 8004462:	e004      	b.n	800446e <HAL_UART_IRQHandler+0x34a>
 8004464:	bf00      	nop
 8004466:	e002      	b.n	800446e <HAL_UART_IRQHandler+0x34a>
 8004468:	bf00      	nop
 800446a:	e000      	b.n	800446e <HAL_UART_IRQHandler+0x34a>
 800446c:	bf00      	nop
 800446e:	3728      	adds	r7, #40	; 0x28
 8004470:	46bd      	mov	sp, r7
 8004472:	bd80      	pop	{r7, pc}
 8004474:	08004611 	.word	0x08004611

08004478 <HAL_UART_TxCpltCallback>:
 8004478:	b480      	push	{r7}
 800447a:	b083      	sub	sp, #12
 800447c:	af00      	add	r7, sp, #0
 800447e:	6078      	str	r0, [r7, #4]
 8004480:	bf00      	nop
 8004482:	370c      	adds	r7, #12
 8004484:	46bd      	mov	sp, r7
 8004486:	bc80      	pop	{r7}
 8004488:	4770      	bx	lr

0800448a <HAL_UART_ErrorCallback>:
 800448a:	b480      	push	{r7}
 800448c:	b083      	sub	sp, #12
 800448e:	af00      	add	r7, sp, #0
 8004490:	6078      	str	r0, [r7, #4]
 8004492:	bf00      	nop
 8004494:	370c      	adds	r7, #12
 8004496:	46bd      	mov	sp, r7
 8004498:	bc80      	pop	{r7}
 800449a:	4770      	bx	lr

0800449c <HAL_UARTEx_RxEventCallback>:
 800449c:	b480      	push	{r7}
 800449e:	b083      	sub	sp, #12
 80044a0:	af00      	add	r7, sp, #0
 80044a2:	6078      	str	r0, [r7, #4]
 80044a4:	460b      	mov	r3, r1
 80044a6:	807b      	strh	r3, [r7, #2]
 80044a8:	bf00      	nop
 80044aa:	370c      	adds	r7, #12
 80044ac:	46bd      	mov	sp, r7
 80044ae:	bc80      	pop	{r7}
 80044b0:	4770      	bx	lr

080044b2 <UART_WaitOnFlagUntilTimeout>:
 80044b2:	b580      	push	{r7, lr}
 80044b4:	b084      	sub	sp, #16
 80044b6:	af00      	add	r7, sp, #0
 80044b8:	60f8      	str	r0, [r7, #12]
 80044ba:	60b9      	str	r1, [r7, #8]
 80044bc:	603b      	str	r3, [r7, #0]
 80044be:	4613      	mov	r3, r2
 80044c0:	71fb      	strb	r3, [r7, #7]
 80044c2:	e02c      	b.n	800451e <UART_WaitOnFlagUntilTimeout+0x6c>
 80044c4:	69bb      	ldr	r3, [r7, #24]
 80044c6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80044ca:	d028      	beq.n	800451e <UART_WaitOnFlagUntilTimeout+0x6c>
 80044cc:	69bb      	ldr	r3, [r7, #24]
 80044ce:	2b00      	cmp	r3, #0
 80044d0:	d007      	beq.n	80044e2 <UART_WaitOnFlagUntilTimeout+0x30>
 80044d2:	f7fd f87f 	bl	80015d4 <HAL_GetTick>
 80044d6:	4602      	mov	r2, r0
 80044d8:	683b      	ldr	r3, [r7, #0]
 80044da:	1ad3      	subs	r3, r2, r3
 80044dc:	69ba      	ldr	r2, [r7, #24]
 80044de:	429a      	cmp	r2, r3
 80044e0:	d21d      	bcs.n	800451e <UART_WaitOnFlagUntilTimeout+0x6c>
 80044e2:	68fb      	ldr	r3, [r7, #12]
 80044e4:	681b      	ldr	r3, [r3, #0]
 80044e6:	68da      	ldr	r2, [r3, #12]
 80044e8:	68fb      	ldr	r3, [r7, #12]
 80044ea:	681b      	ldr	r3, [r3, #0]
 80044ec:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 80044f0:	60da      	str	r2, [r3, #12]
 80044f2:	68fb      	ldr	r3, [r7, #12]
 80044f4:	681b      	ldr	r3, [r3, #0]
 80044f6:	695a      	ldr	r2, [r3, #20]
 80044f8:	68fb      	ldr	r3, [r7, #12]
 80044fa:	681b      	ldr	r3, [r3, #0]
 80044fc:	f022 0201 	bic.w	r2, r2, #1
 8004500:	615a      	str	r2, [r3, #20]
 8004502:	68fb      	ldr	r3, [r7, #12]
 8004504:	2220      	movs	r2, #32
 8004506:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800450a:	68fb      	ldr	r3, [r7, #12]
 800450c:	2220      	movs	r2, #32
 800450e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004512:	68fb      	ldr	r3, [r7, #12]
 8004514:	2200      	movs	r2, #0
 8004516:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800451a:	2303      	movs	r3, #3
 800451c:	e00f      	b.n	800453e <UART_WaitOnFlagUntilTimeout+0x8c>
 800451e:	68fb      	ldr	r3, [r7, #12]
 8004520:	681b      	ldr	r3, [r3, #0]
 8004522:	681a      	ldr	r2, [r3, #0]
 8004524:	68bb      	ldr	r3, [r7, #8]
 8004526:	4013      	ands	r3, r2
 8004528:	68ba      	ldr	r2, [r7, #8]
 800452a:	429a      	cmp	r2, r3
 800452c:	bf0c      	ite	eq
 800452e:	2301      	moveq	r3, #1
 8004530:	2300      	movne	r3, #0
 8004532:	b2db      	uxtb	r3, r3
 8004534:	461a      	mov	r2, r3
 8004536:	79fb      	ldrb	r3, [r7, #7]
 8004538:	429a      	cmp	r2, r3
 800453a:	d0c3      	beq.n	80044c4 <UART_WaitOnFlagUntilTimeout+0x12>
 800453c:	2300      	movs	r3, #0
 800453e:	4618      	mov	r0, r3
 8004540:	3710      	adds	r7, #16
 8004542:	46bd      	mov	sp, r7
 8004544:	bd80      	pop	{r7, pc}

08004546 <UART_Start_Receive_IT>:
 8004546:	b480      	push	{r7}
 8004548:	b085      	sub	sp, #20
 800454a:	af00      	add	r7, sp, #0
 800454c:	60f8      	str	r0, [r7, #12]
 800454e:	60b9      	str	r1, [r7, #8]
 8004550:	4613      	mov	r3, r2
 8004552:	80fb      	strh	r3, [r7, #6]
 8004554:	68fb      	ldr	r3, [r7, #12]
 8004556:	68ba      	ldr	r2, [r7, #8]
 8004558:	629a      	str	r2, [r3, #40]	; 0x28
 800455a:	68fb      	ldr	r3, [r7, #12]
 800455c:	88fa      	ldrh	r2, [r7, #6]
 800455e:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004560:	68fb      	ldr	r3, [r7, #12]
 8004562:	88fa      	ldrh	r2, [r7, #6]
 8004564:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004566:	68fb      	ldr	r3, [r7, #12]
 8004568:	2200      	movs	r2, #0
 800456a:	641a      	str	r2, [r3, #64]	; 0x40
 800456c:	68fb      	ldr	r3, [r7, #12]
 800456e:	2222      	movs	r2, #34	; 0x22
 8004570:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004574:	68fb      	ldr	r3, [r7, #12]
 8004576:	2200      	movs	r2, #0
 8004578:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800457c:	68fb      	ldr	r3, [r7, #12]
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	68da      	ldr	r2, [r3, #12]
 8004582:	68fb      	ldr	r3, [r7, #12]
 8004584:	681b      	ldr	r3, [r3, #0]
 8004586:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800458a:	60da      	str	r2, [r3, #12]
 800458c:	68fb      	ldr	r3, [r7, #12]
 800458e:	681b      	ldr	r3, [r3, #0]
 8004590:	695a      	ldr	r2, [r3, #20]
 8004592:	68fb      	ldr	r3, [r7, #12]
 8004594:	681b      	ldr	r3, [r3, #0]
 8004596:	f042 0201 	orr.w	r2, r2, #1
 800459a:	615a      	str	r2, [r3, #20]
 800459c:	68fb      	ldr	r3, [r7, #12]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	68da      	ldr	r2, [r3, #12]
 80045a2:	68fb      	ldr	r3, [r7, #12]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	f042 0220 	orr.w	r2, r2, #32
 80045aa:	60da      	str	r2, [r3, #12]
 80045ac:	2300      	movs	r3, #0
 80045ae:	4618      	mov	r0, r3
 80045b0:	3714      	adds	r7, #20
 80045b2:	46bd      	mov	sp, r7
 80045b4:	bc80      	pop	{r7}
 80045b6:	4770      	bx	lr

080045b8 <UART_EndRxTransfer>:
 80045b8:	b480      	push	{r7}
 80045ba:	b083      	sub	sp, #12
 80045bc:	af00      	add	r7, sp, #0
 80045be:	6078      	str	r0, [r7, #4]
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	681b      	ldr	r3, [r3, #0]
 80045c4:	68da      	ldr	r2, [r3, #12]
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	681b      	ldr	r3, [r3, #0]
 80045ca:	f422 7290 	bic.w	r2, r2, #288	; 0x120
 80045ce:	60da      	str	r2, [r3, #12]
 80045d0:	687b      	ldr	r3, [r7, #4]
 80045d2:	681b      	ldr	r3, [r3, #0]
 80045d4:	695a      	ldr	r2, [r3, #20]
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	681b      	ldr	r3, [r3, #0]
 80045da:	f022 0201 	bic.w	r2, r2, #1
 80045de:	615a      	str	r2, [r3, #20]
 80045e0:	687b      	ldr	r3, [r7, #4]
 80045e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80045e4:	2b01      	cmp	r3, #1
 80045e6:	d107      	bne.n	80045f8 <UART_EndRxTransfer+0x40>
 80045e8:	687b      	ldr	r3, [r7, #4]
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	68da      	ldr	r2, [r3, #12]
 80045ee:	687b      	ldr	r3, [r7, #4]
 80045f0:	681b      	ldr	r3, [r3, #0]
 80045f2:	f022 0210 	bic.w	r2, r2, #16
 80045f6:	60da      	str	r2, [r3, #12]
 80045f8:	687b      	ldr	r3, [r7, #4]
 80045fa:	2220      	movs	r2, #32
 80045fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8004600:	687b      	ldr	r3, [r7, #4]
 8004602:	2200      	movs	r2, #0
 8004604:	631a      	str	r2, [r3, #48]	; 0x30
 8004606:	bf00      	nop
 8004608:	370c      	adds	r7, #12
 800460a:	46bd      	mov	sp, r7
 800460c:	bc80      	pop	{r7}
 800460e:	4770      	bx	lr

08004610 <UART_DMAAbortOnError>:
 8004610:	b580      	push	{r7, lr}
 8004612:	b084      	sub	sp, #16
 8004614:	af00      	add	r7, sp, #0
 8004616:	6078      	str	r0, [r7, #4]
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800461c:	60fb      	str	r3, [r7, #12]
 800461e:	68fb      	ldr	r3, [r7, #12]
 8004620:	2200      	movs	r2, #0
 8004622:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004624:	68fb      	ldr	r3, [r7, #12]
 8004626:	2200      	movs	r2, #0
 8004628:	84da      	strh	r2, [r3, #38]	; 0x26
 800462a:	68f8      	ldr	r0, [r7, #12]
 800462c:	f7ff ff2d 	bl	800448a <HAL_UART_ErrorCallback>
 8004630:	bf00      	nop
 8004632:	3710      	adds	r7, #16
 8004634:	46bd      	mov	sp, r7
 8004636:	bd80      	pop	{r7, pc}

08004638 <UART_Transmit_IT>:
 8004638:	b480      	push	{r7}
 800463a:	b085      	sub	sp, #20
 800463c:	af00      	add	r7, sp, #0
 800463e:	6078      	str	r0, [r7, #4]
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004646:	b2db      	uxtb	r3, r3
 8004648:	2b21      	cmp	r3, #33	; 0x21
 800464a:	d13e      	bne.n	80046ca <UART_Transmit_IT+0x92>
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	689b      	ldr	r3, [r3, #8]
 8004650:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004654:	d114      	bne.n	8004680 <UART_Transmit_IT+0x48>
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	691b      	ldr	r3, [r3, #16]
 800465a:	2b00      	cmp	r3, #0
 800465c:	d110      	bne.n	8004680 <UART_Transmit_IT+0x48>
 800465e:	687b      	ldr	r3, [r7, #4]
 8004660:	6a1b      	ldr	r3, [r3, #32]
 8004662:	60fb      	str	r3, [r7, #12]
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	881b      	ldrh	r3, [r3, #0]
 8004668:	461a      	mov	r2, r3
 800466a:	687b      	ldr	r3, [r7, #4]
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004672:	605a      	str	r2, [r3, #4]
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	6a1b      	ldr	r3, [r3, #32]
 8004678:	1c9a      	adds	r2, r3, #2
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	621a      	str	r2, [r3, #32]
 800467e:	e008      	b.n	8004692 <UART_Transmit_IT+0x5a>
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	6a1b      	ldr	r3, [r3, #32]
 8004684:	1c59      	adds	r1, r3, #1
 8004686:	687a      	ldr	r2, [r7, #4]
 8004688:	6211      	str	r1, [r2, #32]
 800468a:	781a      	ldrb	r2, [r3, #0]
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	605a      	str	r2, [r3, #4]
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004696:	b29b      	uxth	r3, r3
 8004698:	3b01      	subs	r3, #1
 800469a:	b29b      	uxth	r3, r3
 800469c:	687a      	ldr	r2, [r7, #4]
 800469e:	4619      	mov	r1, r3
 80046a0:	84d1      	strh	r1, [r2, #38]	; 0x26
 80046a2:	2b00      	cmp	r3, #0
 80046a4:	d10f      	bne.n	80046c6 <UART_Transmit_IT+0x8e>
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	681b      	ldr	r3, [r3, #0]
 80046aa:	68da      	ldr	r2, [r3, #12]
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80046b4:	60da      	str	r2, [r3, #12]
 80046b6:	687b      	ldr	r3, [r7, #4]
 80046b8:	681b      	ldr	r3, [r3, #0]
 80046ba:	68da      	ldr	r2, [r3, #12]
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80046c4:	60da      	str	r2, [r3, #12]
 80046c6:	2300      	movs	r3, #0
 80046c8:	e000      	b.n	80046cc <UART_Transmit_IT+0x94>
 80046ca:	2302      	movs	r3, #2
 80046cc:	4618      	mov	r0, r3
 80046ce:	3714      	adds	r7, #20
 80046d0:	46bd      	mov	sp, r7
 80046d2:	bc80      	pop	{r7}
 80046d4:	4770      	bx	lr

080046d6 <UART_EndTransmit_IT>:
 80046d6:	b580      	push	{r7, lr}
 80046d8:	b082      	sub	sp, #8
 80046da:	af00      	add	r7, sp, #0
 80046dc:	6078      	str	r0, [r7, #4]
 80046de:	687b      	ldr	r3, [r7, #4]
 80046e0:	681b      	ldr	r3, [r3, #0]
 80046e2:	68da      	ldr	r2, [r3, #12]
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	681b      	ldr	r3, [r3, #0]
 80046e8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80046ec:	60da      	str	r2, [r3, #12]
 80046ee:	687b      	ldr	r3, [r7, #4]
 80046f0:	2220      	movs	r2, #32
 80046f2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80046f6:	6878      	ldr	r0, [r7, #4]
 80046f8:	f7ff febe 	bl	8004478 <HAL_UART_TxCpltCallback>
 80046fc:	2300      	movs	r3, #0
 80046fe:	4618      	mov	r0, r3
 8004700:	3708      	adds	r7, #8
 8004702:	46bd      	mov	sp, r7
 8004704:	bd80      	pop	{r7, pc}

08004706 <UART_Receive_IT>:
 8004706:	b580      	push	{r7, lr}
 8004708:	b086      	sub	sp, #24
 800470a:	af00      	add	r7, sp, #0
 800470c:	6078      	str	r0, [r7, #4]
 800470e:	687b      	ldr	r3, [r7, #4]
 8004710:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8004714:	b2db      	uxtb	r3, r3
 8004716:	2b22      	cmp	r3, #34	; 0x22
 8004718:	f040 8099 	bne.w	800484e <UART_Receive_IT+0x148>
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	689b      	ldr	r3, [r3, #8]
 8004720:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004724:	d117      	bne.n	8004756 <UART_Receive_IT+0x50>
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	691b      	ldr	r3, [r3, #16]
 800472a:	2b00      	cmp	r3, #0
 800472c:	d113      	bne.n	8004756 <UART_Receive_IT+0x50>
 800472e:	2300      	movs	r3, #0
 8004730:	617b      	str	r3, [r7, #20]
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004736:	613b      	str	r3, [r7, #16]
 8004738:	687b      	ldr	r3, [r7, #4]
 800473a:	681b      	ldr	r3, [r3, #0]
 800473c:	685b      	ldr	r3, [r3, #4]
 800473e:	b29b      	uxth	r3, r3
 8004740:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004744:	b29a      	uxth	r2, r3
 8004746:	693b      	ldr	r3, [r7, #16]
 8004748:	801a      	strh	r2, [r3, #0]
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800474e:	1c9a      	adds	r2, r3, #2
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	629a      	str	r2, [r3, #40]	; 0x28
 8004754:	e026      	b.n	80047a4 <UART_Receive_IT+0x9e>
 8004756:	687b      	ldr	r3, [r7, #4]
 8004758:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800475a:	617b      	str	r3, [r7, #20]
 800475c:	2300      	movs	r3, #0
 800475e:	613b      	str	r3, [r7, #16]
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	689b      	ldr	r3, [r3, #8]
 8004764:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004768:	d007      	beq.n	800477a <UART_Receive_IT+0x74>
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	689b      	ldr	r3, [r3, #8]
 800476e:	2b00      	cmp	r3, #0
 8004770:	d10a      	bne.n	8004788 <UART_Receive_IT+0x82>
 8004772:	687b      	ldr	r3, [r7, #4]
 8004774:	691b      	ldr	r3, [r3, #16]
 8004776:	2b00      	cmp	r3, #0
 8004778:	d106      	bne.n	8004788 <UART_Receive_IT+0x82>
 800477a:	687b      	ldr	r3, [r7, #4]
 800477c:	681b      	ldr	r3, [r3, #0]
 800477e:	685b      	ldr	r3, [r3, #4]
 8004780:	b2da      	uxtb	r2, r3
 8004782:	697b      	ldr	r3, [r7, #20]
 8004784:	701a      	strb	r2, [r3, #0]
 8004786:	e008      	b.n	800479a <UART_Receive_IT+0x94>
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	685b      	ldr	r3, [r3, #4]
 800478e:	b2db      	uxtb	r3, r3
 8004790:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004794:	b2da      	uxtb	r2, r3
 8004796:	697b      	ldr	r3, [r7, #20]
 8004798:	701a      	strb	r2, [r3, #0]
 800479a:	687b      	ldr	r3, [r7, #4]
 800479c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800479e:	1c5a      	adds	r2, r3, #1
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	629a      	str	r2, [r3, #40]	; 0x28
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80047a8:	b29b      	uxth	r3, r3
 80047aa:	3b01      	subs	r3, #1
 80047ac:	b29b      	uxth	r3, r3
 80047ae:	687a      	ldr	r2, [r7, #4]
 80047b0:	4619      	mov	r1, r3
 80047b2:	85d1      	strh	r1, [r2, #46]	; 0x2e
 80047b4:	2b00      	cmp	r3, #0
 80047b6:	d148      	bne.n	800484a <UART_Receive_IT+0x144>
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	681b      	ldr	r3, [r3, #0]
 80047bc:	68da      	ldr	r2, [r3, #12]
 80047be:	687b      	ldr	r3, [r7, #4]
 80047c0:	681b      	ldr	r3, [r3, #0]
 80047c2:	f022 0220 	bic.w	r2, r2, #32
 80047c6:	60da      	str	r2, [r3, #12]
 80047c8:	687b      	ldr	r3, [r7, #4]
 80047ca:	681b      	ldr	r3, [r3, #0]
 80047cc:	68da      	ldr	r2, [r3, #12]
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	681b      	ldr	r3, [r3, #0]
 80047d2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80047d6:	60da      	str	r2, [r3, #12]
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	695a      	ldr	r2, [r3, #20]
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	681b      	ldr	r3, [r3, #0]
 80047e2:	f022 0201 	bic.w	r2, r2, #1
 80047e6:	615a      	str	r2, [r3, #20]
 80047e8:	687b      	ldr	r3, [r7, #4]
 80047ea:	2220      	movs	r2, #32
 80047ec:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047f4:	2b01      	cmp	r3, #1
 80047f6:	d123      	bne.n	8004840 <UART_Receive_IT+0x13a>
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	2200      	movs	r2, #0
 80047fc:	631a      	str	r2, [r3, #48]	; 0x30
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	681b      	ldr	r3, [r3, #0]
 8004802:	68da      	ldr	r2, [r3, #12]
 8004804:	687b      	ldr	r3, [r7, #4]
 8004806:	681b      	ldr	r3, [r3, #0]
 8004808:	f022 0210 	bic.w	r2, r2, #16
 800480c:	60da      	str	r2, [r3, #12]
 800480e:	687b      	ldr	r3, [r7, #4]
 8004810:	681b      	ldr	r3, [r3, #0]
 8004812:	681b      	ldr	r3, [r3, #0]
 8004814:	f003 0310 	and.w	r3, r3, #16
 8004818:	2b10      	cmp	r3, #16
 800481a:	d10a      	bne.n	8004832 <UART_Receive_IT+0x12c>
 800481c:	2300      	movs	r3, #0
 800481e:	60fb      	str	r3, [r7, #12]
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	681b      	ldr	r3, [r3, #0]
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	60fb      	str	r3, [r7, #12]
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	681b      	ldr	r3, [r3, #0]
 800482c:	685b      	ldr	r3, [r3, #4]
 800482e:	60fb      	str	r3, [r7, #12]
 8004830:	68fb      	ldr	r3, [r7, #12]
 8004832:	687b      	ldr	r3, [r7, #4]
 8004834:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004836:	4619      	mov	r1, r3
 8004838:	6878      	ldr	r0, [r7, #4]
 800483a:	f7ff fe2f 	bl	800449c <HAL_UARTEx_RxEventCallback>
 800483e:	e002      	b.n	8004846 <UART_Receive_IT+0x140>
 8004840:	6878      	ldr	r0, [r7, #4]
 8004842:	f7fb ff27 	bl	8000694 <HAL_UART_RxCpltCallback>
 8004846:	2300      	movs	r3, #0
 8004848:	e002      	b.n	8004850 <UART_Receive_IT+0x14a>
 800484a:	2300      	movs	r3, #0
 800484c:	e000      	b.n	8004850 <UART_Receive_IT+0x14a>
 800484e:	2302      	movs	r3, #2
 8004850:	4618      	mov	r0, r3
 8004852:	3718      	adds	r7, #24
 8004854:	46bd      	mov	sp, r7
 8004856:	bd80      	pop	{r7, pc}

08004858 <UART_SetConfig>:
 8004858:	b580      	push	{r7, lr}
 800485a:	b084      	sub	sp, #16
 800485c:	af00      	add	r7, sp, #0
 800485e:	6078      	str	r0, [r7, #4]
 8004860:	687b      	ldr	r3, [r7, #4]
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	691b      	ldr	r3, [r3, #16]
 8004866:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	68da      	ldr	r2, [r3, #12]
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	430a      	orrs	r2, r1
 8004874:	611a      	str	r2, [r3, #16]
 8004876:	687b      	ldr	r3, [r7, #4]
 8004878:	689a      	ldr	r2, [r3, #8]
 800487a:	687b      	ldr	r3, [r7, #4]
 800487c:	691b      	ldr	r3, [r3, #16]
 800487e:	431a      	orrs	r2, r3
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	695b      	ldr	r3, [r3, #20]
 8004884:	4313      	orrs	r3, r2
 8004886:	60bb      	str	r3, [r7, #8]
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	681b      	ldr	r3, [r3, #0]
 800488c:	68db      	ldr	r3, [r3, #12]
 800488e:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8004892:	f023 030c 	bic.w	r3, r3, #12
 8004896:	687a      	ldr	r2, [r7, #4]
 8004898:	6812      	ldr	r2, [r2, #0]
 800489a:	68b9      	ldr	r1, [r7, #8]
 800489c:	430b      	orrs	r3, r1
 800489e:	60d3      	str	r3, [r2, #12]
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	681b      	ldr	r3, [r3, #0]
 80048a4:	695b      	ldr	r3, [r3, #20]
 80048a6:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	699a      	ldr	r2, [r3, #24]
 80048ae:	687b      	ldr	r3, [r7, #4]
 80048b0:	681b      	ldr	r3, [r3, #0]
 80048b2:	430a      	orrs	r2, r1
 80048b4:	615a      	str	r2, [r3, #20]
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	681b      	ldr	r3, [r3, #0]
 80048ba:	4a2c      	ldr	r2, [pc, #176]	; (800496c <UART_SetConfig+0x114>)
 80048bc:	4293      	cmp	r3, r2
 80048be:	d103      	bne.n	80048c8 <UART_SetConfig+0x70>
 80048c0:	f7fe fef4 	bl	80036ac <HAL_RCC_GetPCLK2Freq>
 80048c4:	60f8      	str	r0, [r7, #12]
 80048c6:	e002      	b.n	80048ce <UART_SetConfig+0x76>
 80048c8:	f7fe fedc 	bl	8003684 <HAL_RCC_GetPCLK1Freq>
 80048cc:	60f8      	str	r0, [r7, #12]
 80048ce:	68fa      	ldr	r2, [r7, #12]
 80048d0:	4613      	mov	r3, r2
 80048d2:	009b      	lsls	r3, r3, #2
 80048d4:	4413      	add	r3, r2
 80048d6:	009a      	lsls	r2, r3, #2
 80048d8:	441a      	add	r2, r3
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	685b      	ldr	r3, [r3, #4]
 80048de:	009b      	lsls	r3, r3, #2
 80048e0:	fbb2 f3f3 	udiv	r3, r2, r3
 80048e4:	4a22      	ldr	r2, [pc, #136]	; (8004970 <UART_SetConfig+0x118>)
 80048e6:	fba2 2303 	umull	r2, r3, r2, r3
 80048ea:	095b      	lsrs	r3, r3, #5
 80048ec:	0119      	lsls	r1, r3, #4
 80048ee:	68fa      	ldr	r2, [r7, #12]
 80048f0:	4613      	mov	r3, r2
 80048f2:	009b      	lsls	r3, r3, #2
 80048f4:	4413      	add	r3, r2
 80048f6:	009a      	lsls	r2, r3, #2
 80048f8:	441a      	add	r2, r3
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	685b      	ldr	r3, [r3, #4]
 80048fe:	009b      	lsls	r3, r3, #2
 8004900:	fbb2 f2f3 	udiv	r2, r2, r3
 8004904:	4b1a      	ldr	r3, [pc, #104]	; (8004970 <UART_SetConfig+0x118>)
 8004906:	fba3 0302 	umull	r0, r3, r3, r2
 800490a:	095b      	lsrs	r3, r3, #5
 800490c:	2064      	movs	r0, #100	; 0x64
 800490e:	fb00 f303 	mul.w	r3, r0, r3
 8004912:	1ad3      	subs	r3, r2, r3
 8004914:	011b      	lsls	r3, r3, #4
 8004916:	3332      	adds	r3, #50	; 0x32
 8004918:	4a15      	ldr	r2, [pc, #84]	; (8004970 <UART_SetConfig+0x118>)
 800491a:	fba2 2303 	umull	r2, r3, r2, r3
 800491e:	095b      	lsrs	r3, r3, #5
 8004920:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004924:	4419      	add	r1, r3
 8004926:	68fa      	ldr	r2, [r7, #12]
 8004928:	4613      	mov	r3, r2
 800492a:	009b      	lsls	r3, r3, #2
 800492c:	4413      	add	r3, r2
 800492e:	009a      	lsls	r2, r3, #2
 8004930:	441a      	add	r2, r3
 8004932:	687b      	ldr	r3, [r7, #4]
 8004934:	685b      	ldr	r3, [r3, #4]
 8004936:	009b      	lsls	r3, r3, #2
 8004938:	fbb2 f2f3 	udiv	r2, r2, r3
 800493c:	4b0c      	ldr	r3, [pc, #48]	; (8004970 <UART_SetConfig+0x118>)
 800493e:	fba3 0302 	umull	r0, r3, r3, r2
 8004942:	095b      	lsrs	r3, r3, #5
 8004944:	2064      	movs	r0, #100	; 0x64
 8004946:	fb00 f303 	mul.w	r3, r0, r3
 800494a:	1ad3      	subs	r3, r2, r3
 800494c:	011b      	lsls	r3, r3, #4
 800494e:	3332      	adds	r3, #50	; 0x32
 8004950:	4a07      	ldr	r2, [pc, #28]	; (8004970 <UART_SetConfig+0x118>)
 8004952:	fba2 2303 	umull	r2, r3, r2, r3
 8004956:	095b      	lsrs	r3, r3, #5
 8004958:	f003 020f 	and.w	r2, r3, #15
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	681b      	ldr	r3, [r3, #0]
 8004960:	440a      	add	r2, r1
 8004962:	609a      	str	r2, [r3, #8]
 8004964:	bf00      	nop
 8004966:	3710      	adds	r7, #16
 8004968:	46bd      	mov	sp, r7
 800496a:	bd80      	pop	{r7, pc}
 800496c:	40013800 	.word	0x40013800
 8004970:	51eb851f 	.word	0x51eb851f

08004974 <__errno>:
 8004974:	4b01      	ldr	r3, [pc, #4]	; (800497c <__errno+0x8>)
 8004976:	6818      	ldr	r0, [r3, #0]
 8004978:	4770      	bx	lr
 800497a:	bf00      	nop
 800497c:	2000000c 	.word	0x2000000c

08004980 <__libc_init_array>:
 8004980:	b570      	push	{r4, r5, r6, lr}
 8004982:	2600      	movs	r6, #0
 8004984:	4d0c      	ldr	r5, [pc, #48]	; (80049b8 <__libc_init_array+0x38>)
 8004986:	4c0d      	ldr	r4, [pc, #52]	; (80049bc <__libc_init_array+0x3c>)
 8004988:	1b64      	subs	r4, r4, r5
 800498a:	10a4      	asrs	r4, r4, #2
 800498c:	42a6      	cmp	r6, r4
 800498e:	d109      	bne.n	80049a4 <__libc_init_array+0x24>
 8004990:	f000 fcd0 	bl	8005334 <_init>
 8004994:	2600      	movs	r6, #0
 8004996:	4d0a      	ldr	r5, [pc, #40]	; (80049c0 <__libc_init_array+0x40>)
 8004998:	4c0a      	ldr	r4, [pc, #40]	; (80049c4 <__libc_init_array+0x44>)
 800499a:	1b64      	subs	r4, r4, r5
 800499c:	10a4      	asrs	r4, r4, #2
 800499e:	42a6      	cmp	r6, r4
 80049a0:	d105      	bne.n	80049ae <__libc_init_array+0x2e>
 80049a2:	bd70      	pop	{r4, r5, r6, pc}
 80049a4:	f855 3b04 	ldr.w	r3, [r5], #4
 80049a8:	4798      	blx	r3
 80049aa:	3601      	adds	r6, #1
 80049ac:	e7ee      	b.n	800498c <__libc_init_array+0xc>
 80049ae:	f855 3b04 	ldr.w	r3, [r5], #4
 80049b2:	4798      	blx	r3
 80049b4:	3601      	adds	r6, #1
 80049b6:	e7f2      	b.n	800499e <__libc_init_array+0x1e>
 80049b8:	08005440 	.word	0x08005440
 80049bc:	08005440 	.word	0x08005440
 80049c0:	08005440 	.word	0x08005440
 80049c4:	08005444 	.word	0x08005444

080049c8 <memset>:
 80049c8:	4603      	mov	r3, r0
 80049ca:	4402      	add	r2, r0
 80049cc:	4293      	cmp	r3, r2
 80049ce:	d100      	bne.n	80049d2 <memset+0xa>
 80049d0:	4770      	bx	lr
 80049d2:	f803 1b01 	strb.w	r1, [r3], #1
 80049d6:	e7f9      	b.n	80049cc <memset+0x4>

080049d8 <sniprintf>:
 80049d8:	b40c      	push	{r2, r3}
 80049da:	b530      	push	{r4, r5, lr}
 80049dc:	4b17      	ldr	r3, [pc, #92]	; (8004a3c <sniprintf+0x64>)
 80049de:	1e0c      	subs	r4, r1, #0
 80049e0:	681d      	ldr	r5, [r3, #0]
 80049e2:	b09d      	sub	sp, #116	; 0x74
 80049e4:	da08      	bge.n	80049f8 <sniprintf+0x20>
 80049e6:	238b      	movs	r3, #139	; 0x8b
 80049e8:	f04f 30ff 	mov.w	r0, #4294967295
 80049ec:	602b      	str	r3, [r5, #0]
 80049ee:	b01d      	add	sp, #116	; 0x74
 80049f0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80049f4:	b002      	add	sp, #8
 80049f6:	4770      	bx	lr
 80049f8:	f44f 7302 	mov.w	r3, #520	; 0x208
 80049fc:	f8ad 3014 	strh.w	r3, [sp, #20]
 8004a00:	bf0c      	ite	eq
 8004a02:	4623      	moveq	r3, r4
 8004a04:	f104 33ff 	addne.w	r3, r4, #4294967295
 8004a08:	9304      	str	r3, [sp, #16]
 8004a0a:	9307      	str	r3, [sp, #28]
 8004a0c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004a10:	9002      	str	r0, [sp, #8]
 8004a12:	9006      	str	r0, [sp, #24]
 8004a14:	f8ad 3016 	strh.w	r3, [sp, #22]
 8004a18:	4628      	mov	r0, r5
 8004a1a:	ab21      	add	r3, sp, #132	; 0x84
 8004a1c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004a1e:	a902      	add	r1, sp, #8
 8004a20:	9301      	str	r3, [sp, #4]
 8004a22:	f000 f889 	bl	8004b38 <_svfiprintf_r>
 8004a26:	1c43      	adds	r3, r0, #1
 8004a28:	bfbc      	itt	lt
 8004a2a:	238b      	movlt	r3, #139	; 0x8b
 8004a2c:	602b      	strlt	r3, [r5, #0]
 8004a2e:	2c00      	cmp	r4, #0
 8004a30:	d0dd      	beq.n	80049ee <sniprintf+0x16>
 8004a32:	2200      	movs	r2, #0
 8004a34:	9b02      	ldr	r3, [sp, #8]
 8004a36:	701a      	strb	r2, [r3, #0]
 8004a38:	e7d9      	b.n	80049ee <sniprintf+0x16>
 8004a3a:	bf00      	nop
 8004a3c:	2000000c 	.word	0x2000000c

08004a40 <siprintf>:
 8004a40:	b40e      	push	{r1, r2, r3}
 8004a42:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004a46:	b500      	push	{lr}
 8004a48:	b09c      	sub	sp, #112	; 0x70
 8004a4a:	ab1d      	add	r3, sp, #116	; 0x74
 8004a4c:	9002      	str	r0, [sp, #8]
 8004a4e:	9006      	str	r0, [sp, #24]
 8004a50:	9107      	str	r1, [sp, #28]
 8004a52:	9104      	str	r1, [sp, #16]
 8004a54:	4808      	ldr	r0, [pc, #32]	; (8004a78 <siprintf+0x38>)
 8004a56:	4909      	ldr	r1, [pc, #36]	; (8004a7c <siprintf+0x3c>)
 8004a58:	f853 2b04 	ldr.w	r2, [r3], #4
 8004a5c:	9105      	str	r1, [sp, #20]
 8004a5e:	6800      	ldr	r0, [r0, #0]
 8004a60:	a902      	add	r1, sp, #8
 8004a62:	9301      	str	r3, [sp, #4]
 8004a64:	f000 f868 	bl	8004b38 <_svfiprintf_r>
 8004a68:	2200      	movs	r2, #0
 8004a6a:	9b02      	ldr	r3, [sp, #8]
 8004a6c:	701a      	strb	r2, [r3, #0]
 8004a6e:	b01c      	add	sp, #112	; 0x70
 8004a70:	f85d eb04 	ldr.w	lr, [sp], #4
 8004a74:	b003      	add	sp, #12
 8004a76:	4770      	bx	lr
 8004a78:	2000000c 	.word	0x2000000c
 8004a7c:	ffff0208 	.word	0xffff0208

08004a80 <__ssputs_r>:
 8004a80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a84:	688e      	ldr	r6, [r1, #8]
 8004a86:	4682      	mov	sl, r0
 8004a88:	429e      	cmp	r6, r3
 8004a8a:	460c      	mov	r4, r1
 8004a8c:	4690      	mov	r8, r2
 8004a8e:	461f      	mov	r7, r3
 8004a90:	d838      	bhi.n	8004b04 <__ssputs_r+0x84>
 8004a92:	898a      	ldrh	r2, [r1, #12]
 8004a94:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004a98:	d032      	beq.n	8004b00 <__ssputs_r+0x80>
 8004a9a:	6825      	ldr	r5, [r4, #0]
 8004a9c:	6909      	ldr	r1, [r1, #16]
 8004a9e:	3301      	adds	r3, #1
 8004aa0:	eba5 0901 	sub.w	r9, r5, r1
 8004aa4:	6965      	ldr	r5, [r4, #20]
 8004aa6:	444b      	add	r3, r9
 8004aa8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004aac:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004ab0:	106d      	asrs	r5, r5, #1
 8004ab2:	429d      	cmp	r5, r3
 8004ab4:	bf38      	it	cc
 8004ab6:	461d      	movcc	r5, r3
 8004ab8:	0553      	lsls	r3, r2, #21
 8004aba:	d531      	bpl.n	8004b20 <__ssputs_r+0xa0>
 8004abc:	4629      	mov	r1, r5
 8004abe:	f000 fb6f 	bl	80051a0 <_malloc_r>
 8004ac2:	4606      	mov	r6, r0
 8004ac4:	b950      	cbnz	r0, 8004adc <__ssputs_r+0x5c>
 8004ac6:	230c      	movs	r3, #12
 8004ac8:	f04f 30ff 	mov.w	r0, #4294967295
 8004acc:	f8ca 3000 	str.w	r3, [sl]
 8004ad0:	89a3      	ldrh	r3, [r4, #12]
 8004ad2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004ad6:	81a3      	strh	r3, [r4, #12]
 8004ad8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004adc:	464a      	mov	r2, r9
 8004ade:	6921      	ldr	r1, [r4, #16]
 8004ae0:	f000 face 	bl	8005080 <memcpy>
 8004ae4:	89a3      	ldrh	r3, [r4, #12]
 8004ae6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004aea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004aee:	81a3      	strh	r3, [r4, #12]
 8004af0:	6126      	str	r6, [r4, #16]
 8004af2:	444e      	add	r6, r9
 8004af4:	6026      	str	r6, [r4, #0]
 8004af6:	463e      	mov	r6, r7
 8004af8:	6165      	str	r5, [r4, #20]
 8004afa:	eba5 0509 	sub.w	r5, r5, r9
 8004afe:	60a5      	str	r5, [r4, #8]
 8004b00:	42be      	cmp	r6, r7
 8004b02:	d900      	bls.n	8004b06 <__ssputs_r+0x86>
 8004b04:	463e      	mov	r6, r7
 8004b06:	4632      	mov	r2, r6
 8004b08:	4641      	mov	r1, r8
 8004b0a:	6820      	ldr	r0, [r4, #0]
 8004b0c:	f000 fac6 	bl	800509c <memmove>
 8004b10:	68a3      	ldr	r3, [r4, #8]
 8004b12:	2000      	movs	r0, #0
 8004b14:	1b9b      	subs	r3, r3, r6
 8004b16:	60a3      	str	r3, [r4, #8]
 8004b18:	6823      	ldr	r3, [r4, #0]
 8004b1a:	4433      	add	r3, r6
 8004b1c:	6023      	str	r3, [r4, #0]
 8004b1e:	e7db      	b.n	8004ad8 <__ssputs_r+0x58>
 8004b20:	462a      	mov	r2, r5
 8004b22:	f000 fbb1 	bl	8005288 <_realloc_r>
 8004b26:	4606      	mov	r6, r0
 8004b28:	2800      	cmp	r0, #0
 8004b2a:	d1e1      	bne.n	8004af0 <__ssputs_r+0x70>
 8004b2c:	4650      	mov	r0, sl
 8004b2e:	6921      	ldr	r1, [r4, #16]
 8004b30:	f000 face 	bl	80050d0 <_free_r>
 8004b34:	e7c7      	b.n	8004ac6 <__ssputs_r+0x46>
	...

08004b38 <_svfiprintf_r>:
 8004b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004b3c:	4698      	mov	r8, r3
 8004b3e:	898b      	ldrh	r3, [r1, #12]
 8004b40:	4607      	mov	r7, r0
 8004b42:	061b      	lsls	r3, r3, #24
 8004b44:	460d      	mov	r5, r1
 8004b46:	4614      	mov	r4, r2
 8004b48:	b09d      	sub	sp, #116	; 0x74
 8004b4a:	d50e      	bpl.n	8004b6a <_svfiprintf_r+0x32>
 8004b4c:	690b      	ldr	r3, [r1, #16]
 8004b4e:	b963      	cbnz	r3, 8004b6a <_svfiprintf_r+0x32>
 8004b50:	2140      	movs	r1, #64	; 0x40
 8004b52:	f000 fb25 	bl	80051a0 <_malloc_r>
 8004b56:	6028      	str	r0, [r5, #0]
 8004b58:	6128      	str	r0, [r5, #16]
 8004b5a:	b920      	cbnz	r0, 8004b66 <_svfiprintf_r+0x2e>
 8004b5c:	230c      	movs	r3, #12
 8004b5e:	603b      	str	r3, [r7, #0]
 8004b60:	f04f 30ff 	mov.w	r0, #4294967295
 8004b64:	e0d1      	b.n	8004d0a <_svfiprintf_r+0x1d2>
 8004b66:	2340      	movs	r3, #64	; 0x40
 8004b68:	616b      	str	r3, [r5, #20]
 8004b6a:	2300      	movs	r3, #0
 8004b6c:	9309      	str	r3, [sp, #36]	; 0x24
 8004b6e:	2320      	movs	r3, #32
 8004b70:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004b74:	2330      	movs	r3, #48	; 0x30
 8004b76:	f04f 0901 	mov.w	r9, #1
 8004b7a:	f8cd 800c 	str.w	r8, [sp, #12]
 8004b7e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8004d24 <_svfiprintf_r+0x1ec>
 8004b82:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004b86:	4623      	mov	r3, r4
 8004b88:	469a      	mov	sl, r3
 8004b8a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004b8e:	b10a      	cbz	r2, 8004b94 <_svfiprintf_r+0x5c>
 8004b90:	2a25      	cmp	r2, #37	; 0x25
 8004b92:	d1f9      	bne.n	8004b88 <_svfiprintf_r+0x50>
 8004b94:	ebba 0b04 	subs.w	fp, sl, r4
 8004b98:	d00b      	beq.n	8004bb2 <_svfiprintf_r+0x7a>
 8004b9a:	465b      	mov	r3, fp
 8004b9c:	4622      	mov	r2, r4
 8004b9e:	4629      	mov	r1, r5
 8004ba0:	4638      	mov	r0, r7
 8004ba2:	f7ff ff6d 	bl	8004a80 <__ssputs_r>
 8004ba6:	3001      	adds	r0, #1
 8004ba8:	f000 80aa 	beq.w	8004d00 <_svfiprintf_r+0x1c8>
 8004bac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004bae:	445a      	add	r2, fp
 8004bb0:	9209      	str	r2, [sp, #36]	; 0x24
 8004bb2:	f89a 3000 	ldrb.w	r3, [sl]
 8004bb6:	2b00      	cmp	r3, #0
 8004bb8:	f000 80a2 	beq.w	8004d00 <_svfiprintf_r+0x1c8>
 8004bbc:	2300      	movs	r3, #0
 8004bbe:	f04f 32ff 	mov.w	r2, #4294967295
 8004bc2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004bc6:	f10a 0a01 	add.w	sl, sl, #1
 8004bca:	9304      	str	r3, [sp, #16]
 8004bcc:	9307      	str	r3, [sp, #28]
 8004bce:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004bd2:	931a      	str	r3, [sp, #104]	; 0x68
 8004bd4:	4654      	mov	r4, sl
 8004bd6:	2205      	movs	r2, #5
 8004bd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004bdc:	4851      	ldr	r0, [pc, #324]	; (8004d24 <_svfiprintf_r+0x1ec>)
 8004bde:	f000 fa41 	bl	8005064 <memchr>
 8004be2:	9a04      	ldr	r2, [sp, #16]
 8004be4:	b9d8      	cbnz	r0, 8004c1e <_svfiprintf_r+0xe6>
 8004be6:	06d0      	lsls	r0, r2, #27
 8004be8:	bf44      	itt	mi
 8004bea:	2320      	movmi	r3, #32
 8004bec:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004bf0:	0711      	lsls	r1, r2, #28
 8004bf2:	bf44      	itt	mi
 8004bf4:	232b      	movmi	r3, #43	; 0x2b
 8004bf6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8004bfa:	f89a 3000 	ldrb.w	r3, [sl]
 8004bfe:	2b2a      	cmp	r3, #42	; 0x2a
 8004c00:	d015      	beq.n	8004c2e <_svfiprintf_r+0xf6>
 8004c02:	4654      	mov	r4, sl
 8004c04:	2000      	movs	r0, #0
 8004c06:	f04f 0c0a 	mov.w	ip, #10
 8004c0a:	9a07      	ldr	r2, [sp, #28]
 8004c0c:	4621      	mov	r1, r4
 8004c0e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004c12:	3b30      	subs	r3, #48	; 0x30
 8004c14:	2b09      	cmp	r3, #9
 8004c16:	d94e      	bls.n	8004cb6 <_svfiprintf_r+0x17e>
 8004c18:	b1b0      	cbz	r0, 8004c48 <_svfiprintf_r+0x110>
 8004c1a:	9207      	str	r2, [sp, #28]
 8004c1c:	e014      	b.n	8004c48 <_svfiprintf_r+0x110>
 8004c1e:	eba0 0308 	sub.w	r3, r0, r8
 8004c22:	fa09 f303 	lsl.w	r3, r9, r3
 8004c26:	4313      	orrs	r3, r2
 8004c28:	46a2      	mov	sl, r4
 8004c2a:	9304      	str	r3, [sp, #16]
 8004c2c:	e7d2      	b.n	8004bd4 <_svfiprintf_r+0x9c>
 8004c2e:	9b03      	ldr	r3, [sp, #12]
 8004c30:	1d19      	adds	r1, r3, #4
 8004c32:	681b      	ldr	r3, [r3, #0]
 8004c34:	9103      	str	r1, [sp, #12]
 8004c36:	2b00      	cmp	r3, #0
 8004c38:	bfbb      	ittet	lt
 8004c3a:	425b      	neglt	r3, r3
 8004c3c:	f042 0202 	orrlt.w	r2, r2, #2
 8004c40:	9307      	strge	r3, [sp, #28]
 8004c42:	9307      	strlt	r3, [sp, #28]
 8004c44:	bfb8      	it	lt
 8004c46:	9204      	strlt	r2, [sp, #16]
 8004c48:	7823      	ldrb	r3, [r4, #0]
 8004c4a:	2b2e      	cmp	r3, #46	; 0x2e
 8004c4c:	d10c      	bne.n	8004c68 <_svfiprintf_r+0x130>
 8004c4e:	7863      	ldrb	r3, [r4, #1]
 8004c50:	2b2a      	cmp	r3, #42	; 0x2a
 8004c52:	d135      	bne.n	8004cc0 <_svfiprintf_r+0x188>
 8004c54:	9b03      	ldr	r3, [sp, #12]
 8004c56:	3402      	adds	r4, #2
 8004c58:	1d1a      	adds	r2, r3, #4
 8004c5a:	681b      	ldr	r3, [r3, #0]
 8004c5c:	9203      	str	r2, [sp, #12]
 8004c5e:	2b00      	cmp	r3, #0
 8004c60:	bfb8      	it	lt
 8004c62:	f04f 33ff 	movlt.w	r3, #4294967295
 8004c66:	9305      	str	r3, [sp, #20]
 8004c68:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8004d28 <_svfiprintf_r+0x1f0>
 8004c6c:	2203      	movs	r2, #3
 8004c6e:	4650      	mov	r0, sl
 8004c70:	7821      	ldrb	r1, [r4, #0]
 8004c72:	f000 f9f7 	bl	8005064 <memchr>
 8004c76:	b140      	cbz	r0, 8004c8a <_svfiprintf_r+0x152>
 8004c78:	2340      	movs	r3, #64	; 0x40
 8004c7a:	eba0 000a 	sub.w	r0, r0, sl
 8004c7e:	fa03 f000 	lsl.w	r0, r3, r0
 8004c82:	9b04      	ldr	r3, [sp, #16]
 8004c84:	3401      	adds	r4, #1
 8004c86:	4303      	orrs	r3, r0
 8004c88:	9304      	str	r3, [sp, #16]
 8004c8a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004c8e:	2206      	movs	r2, #6
 8004c90:	4826      	ldr	r0, [pc, #152]	; (8004d2c <_svfiprintf_r+0x1f4>)
 8004c92:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004c96:	f000 f9e5 	bl	8005064 <memchr>
 8004c9a:	2800      	cmp	r0, #0
 8004c9c:	d038      	beq.n	8004d10 <_svfiprintf_r+0x1d8>
 8004c9e:	4b24      	ldr	r3, [pc, #144]	; (8004d30 <_svfiprintf_r+0x1f8>)
 8004ca0:	bb1b      	cbnz	r3, 8004cea <_svfiprintf_r+0x1b2>
 8004ca2:	9b03      	ldr	r3, [sp, #12]
 8004ca4:	3307      	adds	r3, #7
 8004ca6:	f023 0307 	bic.w	r3, r3, #7
 8004caa:	3308      	adds	r3, #8
 8004cac:	9303      	str	r3, [sp, #12]
 8004cae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004cb0:	4433      	add	r3, r6
 8004cb2:	9309      	str	r3, [sp, #36]	; 0x24
 8004cb4:	e767      	b.n	8004b86 <_svfiprintf_r+0x4e>
 8004cb6:	460c      	mov	r4, r1
 8004cb8:	2001      	movs	r0, #1
 8004cba:	fb0c 3202 	mla	r2, ip, r2, r3
 8004cbe:	e7a5      	b.n	8004c0c <_svfiprintf_r+0xd4>
 8004cc0:	2300      	movs	r3, #0
 8004cc2:	f04f 0c0a 	mov.w	ip, #10
 8004cc6:	4619      	mov	r1, r3
 8004cc8:	3401      	adds	r4, #1
 8004cca:	9305      	str	r3, [sp, #20]
 8004ccc:	4620      	mov	r0, r4
 8004cce:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004cd2:	3a30      	subs	r2, #48	; 0x30
 8004cd4:	2a09      	cmp	r2, #9
 8004cd6:	d903      	bls.n	8004ce0 <_svfiprintf_r+0x1a8>
 8004cd8:	2b00      	cmp	r3, #0
 8004cda:	d0c5      	beq.n	8004c68 <_svfiprintf_r+0x130>
 8004cdc:	9105      	str	r1, [sp, #20]
 8004cde:	e7c3      	b.n	8004c68 <_svfiprintf_r+0x130>
 8004ce0:	4604      	mov	r4, r0
 8004ce2:	2301      	movs	r3, #1
 8004ce4:	fb0c 2101 	mla	r1, ip, r1, r2
 8004ce8:	e7f0      	b.n	8004ccc <_svfiprintf_r+0x194>
 8004cea:	ab03      	add	r3, sp, #12
 8004cec:	9300      	str	r3, [sp, #0]
 8004cee:	462a      	mov	r2, r5
 8004cf0:	4638      	mov	r0, r7
 8004cf2:	4b10      	ldr	r3, [pc, #64]	; (8004d34 <_svfiprintf_r+0x1fc>)
 8004cf4:	a904      	add	r1, sp, #16
 8004cf6:	f3af 8000 	nop.w
 8004cfa:	1c42      	adds	r2, r0, #1
 8004cfc:	4606      	mov	r6, r0
 8004cfe:	d1d6      	bne.n	8004cae <_svfiprintf_r+0x176>
 8004d00:	89ab      	ldrh	r3, [r5, #12]
 8004d02:	065b      	lsls	r3, r3, #25
 8004d04:	f53f af2c 	bmi.w	8004b60 <_svfiprintf_r+0x28>
 8004d08:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004d0a:	b01d      	add	sp, #116	; 0x74
 8004d0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004d10:	ab03      	add	r3, sp, #12
 8004d12:	9300      	str	r3, [sp, #0]
 8004d14:	462a      	mov	r2, r5
 8004d16:	4638      	mov	r0, r7
 8004d18:	4b06      	ldr	r3, [pc, #24]	; (8004d34 <_svfiprintf_r+0x1fc>)
 8004d1a:	a904      	add	r1, sp, #16
 8004d1c:	f000 f87c 	bl	8004e18 <_printf_i>
 8004d20:	e7eb      	b.n	8004cfa <_svfiprintf_r+0x1c2>
 8004d22:	bf00      	nop
 8004d24:	0800540c 	.word	0x0800540c
 8004d28:	08005412 	.word	0x08005412
 8004d2c:	08005416 	.word	0x08005416
 8004d30:	00000000 	.word	0x00000000
 8004d34:	08004a81 	.word	0x08004a81

08004d38 <_printf_common>:
 8004d38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d3c:	4616      	mov	r6, r2
 8004d3e:	4699      	mov	r9, r3
 8004d40:	688a      	ldr	r2, [r1, #8]
 8004d42:	690b      	ldr	r3, [r1, #16]
 8004d44:	4607      	mov	r7, r0
 8004d46:	4293      	cmp	r3, r2
 8004d48:	bfb8      	it	lt
 8004d4a:	4613      	movlt	r3, r2
 8004d4c:	6033      	str	r3, [r6, #0]
 8004d4e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004d52:	460c      	mov	r4, r1
 8004d54:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004d58:	b10a      	cbz	r2, 8004d5e <_printf_common+0x26>
 8004d5a:	3301      	adds	r3, #1
 8004d5c:	6033      	str	r3, [r6, #0]
 8004d5e:	6823      	ldr	r3, [r4, #0]
 8004d60:	0699      	lsls	r1, r3, #26
 8004d62:	bf42      	ittt	mi
 8004d64:	6833      	ldrmi	r3, [r6, #0]
 8004d66:	3302      	addmi	r3, #2
 8004d68:	6033      	strmi	r3, [r6, #0]
 8004d6a:	6825      	ldr	r5, [r4, #0]
 8004d6c:	f015 0506 	ands.w	r5, r5, #6
 8004d70:	d106      	bne.n	8004d80 <_printf_common+0x48>
 8004d72:	f104 0a19 	add.w	sl, r4, #25
 8004d76:	68e3      	ldr	r3, [r4, #12]
 8004d78:	6832      	ldr	r2, [r6, #0]
 8004d7a:	1a9b      	subs	r3, r3, r2
 8004d7c:	42ab      	cmp	r3, r5
 8004d7e:	dc28      	bgt.n	8004dd2 <_printf_common+0x9a>
 8004d80:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004d84:	1e13      	subs	r3, r2, #0
 8004d86:	6822      	ldr	r2, [r4, #0]
 8004d88:	bf18      	it	ne
 8004d8a:	2301      	movne	r3, #1
 8004d8c:	0692      	lsls	r2, r2, #26
 8004d8e:	d42d      	bmi.n	8004dec <_printf_common+0xb4>
 8004d90:	4649      	mov	r1, r9
 8004d92:	4638      	mov	r0, r7
 8004d94:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004d98:	47c0      	blx	r8
 8004d9a:	3001      	adds	r0, #1
 8004d9c:	d020      	beq.n	8004de0 <_printf_common+0xa8>
 8004d9e:	6823      	ldr	r3, [r4, #0]
 8004da0:	68e5      	ldr	r5, [r4, #12]
 8004da2:	f003 0306 	and.w	r3, r3, #6
 8004da6:	2b04      	cmp	r3, #4
 8004da8:	bf18      	it	ne
 8004daa:	2500      	movne	r5, #0
 8004dac:	6832      	ldr	r2, [r6, #0]
 8004dae:	f04f 0600 	mov.w	r6, #0
 8004db2:	68a3      	ldr	r3, [r4, #8]
 8004db4:	bf08      	it	eq
 8004db6:	1aad      	subeq	r5, r5, r2
 8004db8:	6922      	ldr	r2, [r4, #16]
 8004dba:	bf08      	it	eq
 8004dbc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004dc0:	4293      	cmp	r3, r2
 8004dc2:	bfc4      	itt	gt
 8004dc4:	1a9b      	subgt	r3, r3, r2
 8004dc6:	18ed      	addgt	r5, r5, r3
 8004dc8:	341a      	adds	r4, #26
 8004dca:	42b5      	cmp	r5, r6
 8004dcc:	d11a      	bne.n	8004e04 <_printf_common+0xcc>
 8004dce:	2000      	movs	r0, #0
 8004dd0:	e008      	b.n	8004de4 <_printf_common+0xac>
 8004dd2:	2301      	movs	r3, #1
 8004dd4:	4652      	mov	r2, sl
 8004dd6:	4649      	mov	r1, r9
 8004dd8:	4638      	mov	r0, r7
 8004dda:	47c0      	blx	r8
 8004ddc:	3001      	adds	r0, #1
 8004dde:	d103      	bne.n	8004de8 <_printf_common+0xb0>
 8004de0:	f04f 30ff 	mov.w	r0, #4294967295
 8004de4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004de8:	3501      	adds	r5, #1
 8004dea:	e7c4      	b.n	8004d76 <_printf_common+0x3e>
 8004dec:	2030      	movs	r0, #48	; 0x30
 8004dee:	18e1      	adds	r1, r4, r3
 8004df0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004df4:	1c5a      	adds	r2, r3, #1
 8004df6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004dfa:	4422      	add	r2, r4
 8004dfc:	3302      	adds	r3, #2
 8004dfe:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004e02:	e7c5      	b.n	8004d90 <_printf_common+0x58>
 8004e04:	2301      	movs	r3, #1
 8004e06:	4622      	mov	r2, r4
 8004e08:	4649      	mov	r1, r9
 8004e0a:	4638      	mov	r0, r7
 8004e0c:	47c0      	blx	r8
 8004e0e:	3001      	adds	r0, #1
 8004e10:	d0e6      	beq.n	8004de0 <_printf_common+0xa8>
 8004e12:	3601      	adds	r6, #1
 8004e14:	e7d9      	b.n	8004dca <_printf_common+0x92>
	...

08004e18 <_printf_i>:
 8004e18:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004e1c:	7e0f      	ldrb	r7, [r1, #24]
 8004e1e:	4691      	mov	r9, r2
 8004e20:	2f78      	cmp	r7, #120	; 0x78
 8004e22:	4680      	mov	r8, r0
 8004e24:	460c      	mov	r4, r1
 8004e26:	469a      	mov	sl, r3
 8004e28:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004e2a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8004e2e:	d807      	bhi.n	8004e40 <_printf_i+0x28>
 8004e30:	2f62      	cmp	r7, #98	; 0x62
 8004e32:	d80a      	bhi.n	8004e4a <_printf_i+0x32>
 8004e34:	2f00      	cmp	r7, #0
 8004e36:	f000 80d9 	beq.w	8004fec <_printf_i+0x1d4>
 8004e3a:	2f58      	cmp	r7, #88	; 0x58
 8004e3c:	f000 80a4 	beq.w	8004f88 <_printf_i+0x170>
 8004e40:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004e44:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004e48:	e03a      	b.n	8004ec0 <_printf_i+0xa8>
 8004e4a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004e4e:	2b15      	cmp	r3, #21
 8004e50:	d8f6      	bhi.n	8004e40 <_printf_i+0x28>
 8004e52:	a101      	add	r1, pc, #4	; (adr r1, 8004e58 <_printf_i+0x40>)
 8004e54:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004e58:	08004eb1 	.word	0x08004eb1
 8004e5c:	08004ec5 	.word	0x08004ec5
 8004e60:	08004e41 	.word	0x08004e41
 8004e64:	08004e41 	.word	0x08004e41
 8004e68:	08004e41 	.word	0x08004e41
 8004e6c:	08004e41 	.word	0x08004e41
 8004e70:	08004ec5 	.word	0x08004ec5
 8004e74:	08004e41 	.word	0x08004e41
 8004e78:	08004e41 	.word	0x08004e41
 8004e7c:	08004e41 	.word	0x08004e41
 8004e80:	08004e41 	.word	0x08004e41
 8004e84:	08004fd3 	.word	0x08004fd3
 8004e88:	08004ef5 	.word	0x08004ef5
 8004e8c:	08004fb5 	.word	0x08004fb5
 8004e90:	08004e41 	.word	0x08004e41
 8004e94:	08004e41 	.word	0x08004e41
 8004e98:	08004ff5 	.word	0x08004ff5
 8004e9c:	08004e41 	.word	0x08004e41
 8004ea0:	08004ef5 	.word	0x08004ef5
 8004ea4:	08004e41 	.word	0x08004e41
 8004ea8:	08004e41 	.word	0x08004e41
 8004eac:	08004fbd 	.word	0x08004fbd
 8004eb0:	682b      	ldr	r3, [r5, #0]
 8004eb2:	1d1a      	adds	r2, r3, #4
 8004eb4:	681b      	ldr	r3, [r3, #0]
 8004eb6:	602a      	str	r2, [r5, #0]
 8004eb8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004ebc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004ec0:	2301      	movs	r3, #1
 8004ec2:	e0a4      	b.n	800500e <_printf_i+0x1f6>
 8004ec4:	6820      	ldr	r0, [r4, #0]
 8004ec6:	6829      	ldr	r1, [r5, #0]
 8004ec8:	0606      	lsls	r6, r0, #24
 8004eca:	f101 0304 	add.w	r3, r1, #4
 8004ece:	d50a      	bpl.n	8004ee6 <_printf_i+0xce>
 8004ed0:	680e      	ldr	r6, [r1, #0]
 8004ed2:	602b      	str	r3, [r5, #0]
 8004ed4:	2e00      	cmp	r6, #0
 8004ed6:	da03      	bge.n	8004ee0 <_printf_i+0xc8>
 8004ed8:	232d      	movs	r3, #45	; 0x2d
 8004eda:	4276      	negs	r6, r6
 8004edc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004ee0:	230a      	movs	r3, #10
 8004ee2:	485e      	ldr	r0, [pc, #376]	; (800505c <_printf_i+0x244>)
 8004ee4:	e019      	b.n	8004f1a <_printf_i+0x102>
 8004ee6:	680e      	ldr	r6, [r1, #0]
 8004ee8:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004eec:	602b      	str	r3, [r5, #0]
 8004eee:	bf18      	it	ne
 8004ef0:	b236      	sxthne	r6, r6
 8004ef2:	e7ef      	b.n	8004ed4 <_printf_i+0xbc>
 8004ef4:	682b      	ldr	r3, [r5, #0]
 8004ef6:	6820      	ldr	r0, [r4, #0]
 8004ef8:	1d19      	adds	r1, r3, #4
 8004efa:	6029      	str	r1, [r5, #0]
 8004efc:	0601      	lsls	r1, r0, #24
 8004efe:	d501      	bpl.n	8004f04 <_printf_i+0xec>
 8004f00:	681e      	ldr	r6, [r3, #0]
 8004f02:	e002      	b.n	8004f0a <_printf_i+0xf2>
 8004f04:	0646      	lsls	r6, r0, #25
 8004f06:	d5fb      	bpl.n	8004f00 <_printf_i+0xe8>
 8004f08:	881e      	ldrh	r6, [r3, #0]
 8004f0a:	2f6f      	cmp	r7, #111	; 0x6f
 8004f0c:	bf0c      	ite	eq
 8004f0e:	2308      	moveq	r3, #8
 8004f10:	230a      	movne	r3, #10
 8004f12:	4852      	ldr	r0, [pc, #328]	; (800505c <_printf_i+0x244>)
 8004f14:	2100      	movs	r1, #0
 8004f16:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004f1a:	6865      	ldr	r5, [r4, #4]
 8004f1c:	2d00      	cmp	r5, #0
 8004f1e:	bfa8      	it	ge
 8004f20:	6821      	ldrge	r1, [r4, #0]
 8004f22:	60a5      	str	r5, [r4, #8]
 8004f24:	bfa4      	itt	ge
 8004f26:	f021 0104 	bicge.w	r1, r1, #4
 8004f2a:	6021      	strge	r1, [r4, #0]
 8004f2c:	b90e      	cbnz	r6, 8004f32 <_printf_i+0x11a>
 8004f2e:	2d00      	cmp	r5, #0
 8004f30:	d04d      	beq.n	8004fce <_printf_i+0x1b6>
 8004f32:	4615      	mov	r5, r2
 8004f34:	fbb6 f1f3 	udiv	r1, r6, r3
 8004f38:	fb03 6711 	mls	r7, r3, r1, r6
 8004f3c:	5dc7      	ldrb	r7, [r0, r7]
 8004f3e:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004f42:	4637      	mov	r7, r6
 8004f44:	42bb      	cmp	r3, r7
 8004f46:	460e      	mov	r6, r1
 8004f48:	d9f4      	bls.n	8004f34 <_printf_i+0x11c>
 8004f4a:	2b08      	cmp	r3, #8
 8004f4c:	d10b      	bne.n	8004f66 <_printf_i+0x14e>
 8004f4e:	6823      	ldr	r3, [r4, #0]
 8004f50:	07de      	lsls	r6, r3, #31
 8004f52:	d508      	bpl.n	8004f66 <_printf_i+0x14e>
 8004f54:	6923      	ldr	r3, [r4, #16]
 8004f56:	6861      	ldr	r1, [r4, #4]
 8004f58:	4299      	cmp	r1, r3
 8004f5a:	bfde      	ittt	le
 8004f5c:	2330      	movle	r3, #48	; 0x30
 8004f5e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004f62:	f105 35ff 	addle.w	r5, r5, #4294967295
 8004f66:	1b52      	subs	r2, r2, r5
 8004f68:	6122      	str	r2, [r4, #16]
 8004f6a:	464b      	mov	r3, r9
 8004f6c:	4621      	mov	r1, r4
 8004f6e:	4640      	mov	r0, r8
 8004f70:	f8cd a000 	str.w	sl, [sp]
 8004f74:	aa03      	add	r2, sp, #12
 8004f76:	f7ff fedf 	bl	8004d38 <_printf_common>
 8004f7a:	3001      	adds	r0, #1
 8004f7c:	d14c      	bne.n	8005018 <_printf_i+0x200>
 8004f7e:	f04f 30ff 	mov.w	r0, #4294967295
 8004f82:	b004      	add	sp, #16
 8004f84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004f88:	4834      	ldr	r0, [pc, #208]	; (800505c <_printf_i+0x244>)
 8004f8a:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8004f8e:	6829      	ldr	r1, [r5, #0]
 8004f90:	6823      	ldr	r3, [r4, #0]
 8004f92:	f851 6b04 	ldr.w	r6, [r1], #4
 8004f96:	6029      	str	r1, [r5, #0]
 8004f98:	061d      	lsls	r5, r3, #24
 8004f9a:	d514      	bpl.n	8004fc6 <_printf_i+0x1ae>
 8004f9c:	07df      	lsls	r7, r3, #31
 8004f9e:	bf44      	itt	mi
 8004fa0:	f043 0320 	orrmi.w	r3, r3, #32
 8004fa4:	6023      	strmi	r3, [r4, #0]
 8004fa6:	b91e      	cbnz	r6, 8004fb0 <_printf_i+0x198>
 8004fa8:	6823      	ldr	r3, [r4, #0]
 8004faa:	f023 0320 	bic.w	r3, r3, #32
 8004fae:	6023      	str	r3, [r4, #0]
 8004fb0:	2310      	movs	r3, #16
 8004fb2:	e7af      	b.n	8004f14 <_printf_i+0xfc>
 8004fb4:	6823      	ldr	r3, [r4, #0]
 8004fb6:	f043 0320 	orr.w	r3, r3, #32
 8004fba:	6023      	str	r3, [r4, #0]
 8004fbc:	2378      	movs	r3, #120	; 0x78
 8004fbe:	4828      	ldr	r0, [pc, #160]	; (8005060 <_printf_i+0x248>)
 8004fc0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004fc4:	e7e3      	b.n	8004f8e <_printf_i+0x176>
 8004fc6:	0659      	lsls	r1, r3, #25
 8004fc8:	bf48      	it	mi
 8004fca:	b2b6      	uxthmi	r6, r6
 8004fcc:	e7e6      	b.n	8004f9c <_printf_i+0x184>
 8004fce:	4615      	mov	r5, r2
 8004fd0:	e7bb      	b.n	8004f4a <_printf_i+0x132>
 8004fd2:	682b      	ldr	r3, [r5, #0]
 8004fd4:	6826      	ldr	r6, [r4, #0]
 8004fd6:	1d18      	adds	r0, r3, #4
 8004fd8:	6961      	ldr	r1, [r4, #20]
 8004fda:	6028      	str	r0, [r5, #0]
 8004fdc:	0635      	lsls	r5, r6, #24
 8004fde:	681b      	ldr	r3, [r3, #0]
 8004fe0:	d501      	bpl.n	8004fe6 <_printf_i+0x1ce>
 8004fe2:	6019      	str	r1, [r3, #0]
 8004fe4:	e002      	b.n	8004fec <_printf_i+0x1d4>
 8004fe6:	0670      	lsls	r0, r6, #25
 8004fe8:	d5fb      	bpl.n	8004fe2 <_printf_i+0x1ca>
 8004fea:	8019      	strh	r1, [r3, #0]
 8004fec:	2300      	movs	r3, #0
 8004fee:	4615      	mov	r5, r2
 8004ff0:	6123      	str	r3, [r4, #16]
 8004ff2:	e7ba      	b.n	8004f6a <_printf_i+0x152>
 8004ff4:	682b      	ldr	r3, [r5, #0]
 8004ff6:	2100      	movs	r1, #0
 8004ff8:	1d1a      	adds	r2, r3, #4
 8004ffa:	602a      	str	r2, [r5, #0]
 8004ffc:	681d      	ldr	r5, [r3, #0]
 8004ffe:	6862      	ldr	r2, [r4, #4]
 8005000:	4628      	mov	r0, r5
 8005002:	f000 f82f 	bl	8005064 <memchr>
 8005006:	b108      	cbz	r0, 800500c <_printf_i+0x1f4>
 8005008:	1b40      	subs	r0, r0, r5
 800500a:	6060      	str	r0, [r4, #4]
 800500c:	6863      	ldr	r3, [r4, #4]
 800500e:	6123      	str	r3, [r4, #16]
 8005010:	2300      	movs	r3, #0
 8005012:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005016:	e7a8      	b.n	8004f6a <_printf_i+0x152>
 8005018:	462a      	mov	r2, r5
 800501a:	4649      	mov	r1, r9
 800501c:	4640      	mov	r0, r8
 800501e:	6923      	ldr	r3, [r4, #16]
 8005020:	47d0      	blx	sl
 8005022:	3001      	adds	r0, #1
 8005024:	d0ab      	beq.n	8004f7e <_printf_i+0x166>
 8005026:	6823      	ldr	r3, [r4, #0]
 8005028:	079b      	lsls	r3, r3, #30
 800502a:	d413      	bmi.n	8005054 <_printf_i+0x23c>
 800502c:	68e0      	ldr	r0, [r4, #12]
 800502e:	9b03      	ldr	r3, [sp, #12]
 8005030:	4298      	cmp	r0, r3
 8005032:	bfb8      	it	lt
 8005034:	4618      	movlt	r0, r3
 8005036:	e7a4      	b.n	8004f82 <_printf_i+0x16a>
 8005038:	2301      	movs	r3, #1
 800503a:	4632      	mov	r2, r6
 800503c:	4649      	mov	r1, r9
 800503e:	4640      	mov	r0, r8
 8005040:	47d0      	blx	sl
 8005042:	3001      	adds	r0, #1
 8005044:	d09b      	beq.n	8004f7e <_printf_i+0x166>
 8005046:	3501      	adds	r5, #1
 8005048:	68e3      	ldr	r3, [r4, #12]
 800504a:	9903      	ldr	r1, [sp, #12]
 800504c:	1a5b      	subs	r3, r3, r1
 800504e:	42ab      	cmp	r3, r5
 8005050:	dcf2      	bgt.n	8005038 <_printf_i+0x220>
 8005052:	e7eb      	b.n	800502c <_printf_i+0x214>
 8005054:	2500      	movs	r5, #0
 8005056:	f104 0619 	add.w	r6, r4, #25
 800505a:	e7f5      	b.n	8005048 <_printf_i+0x230>
 800505c:	0800541d 	.word	0x0800541d
 8005060:	0800542e 	.word	0x0800542e

08005064 <memchr>:
 8005064:	4603      	mov	r3, r0
 8005066:	b510      	push	{r4, lr}
 8005068:	b2c9      	uxtb	r1, r1
 800506a:	4402      	add	r2, r0
 800506c:	4293      	cmp	r3, r2
 800506e:	4618      	mov	r0, r3
 8005070:	d101      	bne.n	8005076 <memchr+0x12>
 8005072:	2000      	movs	r0, #0
 8005074:	e003      	b.n	800507e <memchr+0x1a>
 8005076:	7804      	ldrb	r4, [r0, #0]
 8005078:	3301      	adds	r3, #1
 800507a:	428c      	cmp	r4, r1
 800507c:	d1f6      	bne.n	800506c <memchr+0x8>
 800507e:	bd10      	pop	{r4, pc}

08005080 <memcpy>:
 8005080:	440a      	add	r2, r1
 8005082:	4291      	cmp	r1, r2
 8005084:	f100 33ff 	add.w	r3, r0, #4294967295
 8005088:	d100      	bne.n	800508c <memcpy+0xc>
 800508a:	4770      	bx	lr
 800508c:	b510      	push	{r4, lr}
 800508e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005092:	4291      	cmp	r1, r2
 8005094:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005098:	d1f9      	bne.n	800508e <memcpy+0xe>
 800509a:	bd10      	pop	{r4, pc}

0800509c <memmove>:
 800509c:	4288      	cmp	r0, r1
 800509e:	b510      	push	{r4, lr}
 80050a0:	eb01 0402 	add.w	r4, r1, r2
 80050a4:	d902      	bls.n	80050ac <memmove+0x10>
 80050a6:	4284      	cmp	r4, r0
 80050a8:	4623      	mov	r3, r4
 80050aa:	d807      	bhi.n	80050bc <memmove+0x20>
 80050ac:	1e43      	subs	r3, r0, #1
 80050ae:	42a1      	cmp	r1, r4
 80050b0:	d008      	beq.n	80050c4 <memmove+0x28>
 80050b2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80050b6:	f803 2f01 	strb.w	r2, [r3, #1]!
 80050ba:	e7f8      	b.n	80050ae <memmove+0x12>
 80050bc:	4601      	mov	r1, r0
 80050be:	4402      	add	r2, r0
 80050c0:	428a      	cmp	r2, r1
 80050c2:	d100      	bne.n	80050c6 <memmove+0x2a>
 80050c4:	bd10      	pop	{r4, pc}
 80050c6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80050ca:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80050ce:	e7f7      	b.n	80050c0 <memmove+0x24>

080050d0 <_free_r>:
 80050d0:	b538      	push	{r3, r4, r5, lr}
 80050d2:	4605      	mov	r5, r0
 80050d4:	2900      	cmp	r1, #0
 80050d6:	d040      	beq.n	800515a <_free_r+0x8a>
 80050d8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80050dc:	1f0c      	subs	r4, r1, #4
 80050de:	2b00      	cmp	r3, #0
 80050e0:	bfb8      	it	lt
 80050e2:	18e4      	addlt	r4, r4, r3
 80050e4:	f000 f910 	bl	8005308 <__malloc_lock>
 80050e8:	4a1c      	ldr	r2, [pc, #112]	; (800515c <_free_r+0x8c>)
 80050ea:	6813      	ldr	r3, [r2, #0]
 80050ec:	b933      	cbnz	r3, 80050fc <_free_r+0x2c>
 80050ee:	6063      	str	r3, [r4, #4]
 80050f0:	6014      	str	r4, [r2, #0]
 80050f2:	4628      	mov	r0, r5
 80050f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80050f8:	f000 b90c 	b.w	8005314 <__malloc_unlock>
 80050fc:	42a3      	cmp	r3, r4
 80050fe:	d908      	bls.n	8005112 <_free_r+0x42>
 8005100:	6820      	ldr	r0, [r4, #0]
 8005102:	1821      	adds	r1, r4, r0
 8005104:	428b      	cmp	r3, r1
 8005106:	bf01      	itttt	eq
 8005108:	6819      	ldreq	r1, [r3, #0]
 800510a:	685b      	ldreq	r3, [r3, #4]
 800510c:	1809      	addeq	r1, r1, r0
 800510e:	6021      	streq	r1, [r4, #0]
 8005110:	e7ed      	b.n	80050ee <_free_r+0x1e>
 8005112:	461a      	mov	r2, r3
 8005114:	685b      	ldr	r3, [r3, #4]
 8005116:	b10b      	cbz	r3, 800511c <_free_r+0x4c>
 8005118:	42a3      	cmp	r3, r4
 800511a:	d9fa      	bls.n	8005112 <_free_r+0x42>
 800511c:	6811      	ldr	r1, [r2, #0]
 800511e:	1850      	adds	r0, r2, r1
 8005120:	42a0      	cmp	r0, r4
 8005122:	d10b      	bne.n	800513c <_free_r+0x6c>
 8005124:	6820      	ldr	r0, [r4, #0]
 8005126:	4401      	add	r1, r0
 8005128:	1850      	adds	r0, r2, r1
 800512a:	4283      	cmp	r3, r0
 800512c:	6011      	str	r1, [r2, #0]
 800512e:	d1e0      	bne.n	80050f2 <_free_r+0x22>
 8005130:	6818      	ldr	r0, [r3, #0]
 8005132:	685b      	ldr	r3, [r3, #4]
 8005134:	4401      	add	r1, r0
 8005136:	6011      	str	r1, [r2, #0]
 8005138:	6053      	str	r3, [r2, #4]
 800513a:	e7da      	b.n	80050f2 <_free_r+0x22>
 800513c:	d902      	bls.n	8005144 <_free_r+0x74>
 800513e:	230c      	movs	r3, #12
 8005140:	602b      	str	r3, [r5, #0]
 8005142:	e7d6      	b.n	80050f2 <_free_r+0x22>
 8005144:	6820      	ldr	r0, [r4, #0]
 8005146:	1821      	adds	r1, r4, r0
 8005148:	428b      	cmp	r3, r1
 800514a:	bf01      	itttt	eq
 800514c:	6819      	ldreq	r1, [r3, #0]
 800514e:	685b      	ldreq	r3, [r3, #4]
 8005150:	1809      	addeq	r1, r1, r0
 8005152:	6021      	streq	r1, [r4, #0]
 8005154:	6063      	str	r3, [r4, #4]
 8005156:	6054      	str	r4, [r2, #4]
 8005158:	e7cb      	b.n	80050f2 <_free_r+0x22>
 800515a:	bd38      	pop	{r3, r4, r5, pc}
 800515c:	20000558 	.word	0x20000558

08005160 <sbrk_aligned>:
 8005160:	b570      	push	{r4, r5, r6, lr}
 8005162:	4e0e      	ldr	r6, [pc, #56]	; (800519c <sbrk_aligned+0x3c>)
 8005164:	460c      	mov	r4, r1
 8005166:	6831      	ldr	r1, [r6, #0]
 8005168:	4605      	mov	r5, r0
 800516a:	b911      	cbnz	r1, 8005172 <sbrk_aligned+0x12>
 800516c:	f000 f8bc 	bl	80052e8 <_sbrk_r>
 8005170:	6030      	str	r0, [r6, #0]
 8005172:	4621      	mov	r1, r4
 8005174:	4628      	mov	r0, r5
 8005176:	f000 f8b7 	bl	80052e8 <_sbrk_r>
 800517a:	1c43      	adds	r3, r0, #1
 800517c:	d00a      	beq.n	8005194 <sbrk_aligned+0x34>
 800517e:	1cc4      	adds	r4, r0, #3
 8005180:	f024 0403 	bic.w	r4, r4, #3
 8005184:	42a0      	cmp	r0, r4
 8005186:	d007      	beq.n	8005198 <sbrk_aligned+0x38>
 8005188:	1a21      	subs	r1, r4, r0
 800518a:	4628      	mov	r0, r5
 800518c:	f000 f8ac 	bl	80052e8 <_sbrk_r>
 8005190:	3001      	adds	r0, #1
 8005192:	d101      	bne.n	8005198 <sbrk_aligned+0x38>
 8005194:	f04f 34ff 	mov.w	r4, #4294967295
 8005198:	4620      	mov	r0, r4
 800519a:	bd70      	pop	{r4, r5, r6, pc}
 800519c:	2000055c 	.word	0x2000055c

080051a0 <_malloc_r>:
 80051a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80051a4:	1ccd      	adds	r5, r1, #3
 80051a6:	f025 0503 	bic.w	r5, r5, #3
 80051aa:	3508      	adds	r5, #8
 80051ac:	2d0c      	cmp	r5, #12
 80051ae:	bf38      	it	cc
 80051b0:	250c      	movcc	r5, #12
 80051b2:	2d00      	cmp	r5, #0
 80051b4:	4607      	mov	r7, r0
 80051b6:	db01      	blt.n	80051bc <_malloc_r+0x1c>
 80051b8:	42a9      	cmp	r1, r5
 80051ba:	d905      	bls.n	80051c8 <_malloc_r+0x28>
 80051bc:	230c      	movs	r3, #12
 80051be:	2600      	movs	r6, #0
 80051c0:	603b      	str	r3, [r7, #0]
 80051c2:	4630      	mov	r0, r6
 80051c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051c8:	4e2e      	ldr	r6, [pc, #184]	; (8005284 <_malloc_r+0xe4>)
 80051ca:	f000 f89d 	bl	8005308 <__malloc_lock>
 80051ce:	6833      	ldr	r3, [r6, #0]
 80051d0:	461c      	mov	r4, r3
 80051d2:	bb34      	cbnz	r4, 8005222 <_malloc_r+0x82>
 80051d4:	4629      	mov	r1, r5
 80051d6:	4638      	mov	r0, r7
 80051d8:	f7ff ffc2 	bl	8005160 <sbrk_aligned>
 80051dc:	1c43      	adds	r3, r0, #1
 80051de:	4604      	mov	r4, r0
 80051e0:	d14d      	bne.n	800527e <_malloc_r+0xde>
 80051e2:	6834      	ldr	r4, [r6, #0]
 80051e4:	4626      	mov	r6, r4
 80051e6:	2e00      	cmp	r6, #0
 80051e8:	d140      	bne.n	800526c <_malloc_r+0xcc>
 80051ea:	6823      	ldr	r3, [r4, #0]
 80051ec:	4631      	mov	r1, r6
 80051ee:	4638      	mov	r0, r7
 80051f0:	eb04 0803 	add.w	r8, r4, r3
 80051f4:	f000 f878 	bl	80052e8 <_sbrk_r>
 80051f8:	4580      	cmp	r8, r0
 80051fa:	d13a      	bne.n	8005272 <_malloc_r+0xd2>
 80051fc:	6821      	ldr	r1, [r4, #0]
 80051fe:	3503      	adds	r5, #3
 8005200:	1a6d      	subs	r5, r5, r1
 8005202:	f025 0503 	bic.w	r5, r5, #3
 8005206:	3508      	adds	r5, #8
 8005208:	2d0c      	cmp	r5, #12
 800520a:	bf38      	it	cc
 800520c:	250c      	movcc	r5, #12
 800520e:	4638      	mov	r0, r7
 8005210:	4629      	mov	r1, r5
 8005212:	f7ff ffa5 	bl	8005160 <sbrk_aligned>
 8005216:	3001      	adds	r0, #1
 8005218:	d02b      	beq.n	8005272 <_malloc_r+0xd2>
 800521a:	6823      	ldr	r3, [r4, #0]
 800521c:	442b      	add	r3, r5
 800521e:	6023      	str	r3, [r4, #0]
 8005220:	e00e      	b.n	8005240 <_malloc_r+0xa0>
 8005222:	6822      	ldr	r2, [r4, #0]
 8005224:	1b52      	subs	r2, r2, r5
 8005226:	d41e      	bmi.n	8005266 <_malloc_r+0xc6>
 8005228:	2a0b      	cmp	r2, #11
 800522a:	d916      	bls.n	800525a <_malloc_r+0xba>
 800522c:	1961      	adds	r1, r4, r5
 800522e:	42a3      	cmp	r3, r4
 8005230:	6025      	str	r5, [r4, #0]
 8005232:	bf18      	it	ne
 8005234:	6059      	strne	r1, [r3, #4]
 8005236:	6863      	ldr	r3, [r4, #4]
 8005238:	bf08      	it	eq
 800523a:	6031      	streq	r1, [r6, #0]
 800523c:	5162      	str	r2, [r4, r5]
 800523e:	604b      	str	r3, [r1, #4]
 8005240:	4638      	mov	r0, r7
 8005242:	f104 060b 	add.w	r6, r4, #11
 8005246:	f000 f865 	bl	8005314 <__malloc_unlock>
 800524a:	f026 0607 	bic.w	r6, r6, #7
 800524e:	1d23      	adds	r3, r4, #4
 8005250:	1af2      	subs	r2, r6, r3
 8005252:	d0b6      	beq.n	80051c2 <_malloc_r+0x22>
 8005254:	1b9b      	subs	r3, r3, r6
 8005256:	50a3      	str	r3, [r4, r2]
 8005258:	e7b3      	b.n	80051c2 <_malloc_r+0x22>
 800525a:	6862      	ldr	r2, [r4, #4]
 800525c:	42a3      	cmp	r3, r4
 800525e:	bf0c      	ite	eq
 8005260:	6032      	streq	r2, [r6, #0]
 8005262:	605a      	strne	r2, [r3, #4]
 8005264:	e7ec      	b.n	8005240 <_malloc_r+0xa0>
 8005266:	4623      	mov	r3, r4
 8005268:	6864      	ldr	r4, [r4, #4]
 800526a:	e7b2      	b.n	80051d2 <_malloc_r+0x32>
 800526c:	4634      	mov	r4, r6
 800526e:	6876      	ldr	r6, [r6, #4]
 8005270:	e7b9      	b.n	80051e6 <_malloc_r+0x46>
 8005272:	230c      	movs	r3, #12
 8005274:	4638      	mov	r0, r7
 8005276:	603b      	str	r3, [r7, #0]
 8005278:	f000 f84c 	bl	8005314 <__malloc_unlock>
 800527c:	e7a1      	b.n	80051c2 <_malloc_r+0x22>
 800527e:	6025      	str	r5, [r4, #0]
 8005280:	e7de      	b.n	8005240 <_malloc_r+0xa0>
 8005282:	bf00      	nop
 8005284:	20000558 	.word	0x20000558

08005288 <_realloc_r>:
 8005288:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800528c:	4680      	mov	r8, r0
 800528e:	4614      	mov	r4, r2
 8005290:	460e      	mov	r6, r1
 8005292:	b921      	cbnz	r1, 800529e <_realloc_r+0x16>
 8005294:	4611      	mov	r1, r2
 8005296:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800529a:	f7ff bf81 	b.w	80051a0 <_malloc_r>
 800529e:	b92a      	cbnz	r2, 80052ac <_realloc_r+0x24>
 80052a0:	f7ff ff16 	bl	80050d0 <_free_r>
 80052a4:	4625      	mov	r5, r4
 80052a6:	4628      	mov	r0, r5
 80052a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80052ac:	f000 f838 	bl	8005320 <_malloc_usable_size_r>
 80052b0:	4284      	cmp	r4, r0
 80052b2:	4607      	mov	r7, r0
 80052b4:	d802      	bhi.n	80052bc <_realloc_r+0x34>
 80052b6:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80052ba:	d812      	bhi.n	80052e2 <_realloc_r+0x5a>
 80052bc:	4621      	mov	r1, r4
 80052be:	4640      	mov	r0, r8
 80052c0:	f7ff ff6e 	bl	80051a0 <_malloc_r>
 80052c4:	4605      	mov	r5, r0
 80052c6:	2800      	cmp	r0, #0
 80052c8:	d0ed      	beq.n	80052a6 <_realloc_r+0x1e>
 80052ca:	42bc      	cmp	r4, r7
 80052cc:	4622      	mov	r2, r4
 80052ce:	4631      	mov	r1, r6
 80052d0:	bf28      	it	cs
 80052d2:	463a      	movcs	r2, r7
 80052d4:	f7ff fed4 	bl	8005080 <memcpy>
 80052d8:	4631      	mov	r1, r6
 80052da:	4640      	mov	r0, r8
 80052dc:	f7ff fef8 	bl	80050d0 <_free_r>
 80052e0:	e7e1      	b.n	80052a6 <_realloc_r+0x1e>
 80052e2:	4635      	mov	r5, r6
 80052e4:	e7df      	b.n	80052a6 <_realloc_r+0x1e>
	...

080052e8 <_sbrk_r>:
 80052e8:	b538      	push	{r3, r4, r5, lr}
 80052ea:	2300      	movs	r3, #0
 80052ec:	4d05      	ldr	r5, [pc, #20]	; (8005304 <_sbrk_r+0x1c>)
 80052ee:	4604      	mov	r4, r0
 80052f0:	4608      	mov	r0, r1
 80052f2:	602b      	str	r3, [r5, #0]
 80052f4:	f7fb ff58 	bl	80011a8 <_sbrk>
 80052f8:	1c43      	adds	r3, r0, #1
 80052fa:	d102      	bne.n	8005302 <_sbrk_r+0x1a>
 80052fc:	682b      	ldr	r3, [r5, #0]
 80052fe:	b103      	cbz	r3, 8005302 <_sbrk_r+0x1a>
 8005300:	6023      	str	r3, [r4, #0]
 8005302:	bd38      	pop	{r3, r4, r5, pc}
 8005304:	20000560 	.word	0x20000560

08005308 <__malloc_lock>:
 8005308:	4801      	ldr	r0, [pc, #4]	; (8005310 <__malloc_lock+0x8>)
 800530a:	f000 b811 	b.w	8005330 <__retarget_lock_acquire_recursive>
 800530e:	bf00      	nop
 8005310:	20000564 	.word	0x20000564

08005314 <__malloc_unlock>:
 8005314:	4801      	ldr	r0, [pc, #4]	; (800531c <__malloc_unlock+0x8>)
 8005316:	f000 b80c 	b.w	8005332 <__retarget_lock_release_recursive>
 800531a:	bf00      	nop
 800531c:	20000564 	.word	0x20000564

08005320 <_malloc_usable_size_r>:
 8005320:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005324:	1f18      	subs	r0, r3, #4
 8005326:	2b00      	cmp	r3, #0
 8005328:	bfbc      	itt	lt
 800532a:	580b      	ldrlt	r3, [r1, r0]
 800532c:	18c0      	addlt	r0, r0, r3
 800532e:	4770      	bx	lr

08005330 <__retarget_lock_acquire_recursive>:
 8005330:	4770      	bx	lr

08005332 <__retarget_lock_release_recursive>:
 8005332:	4770      	bx	lr

08005334 <_init>:
 8005334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005336:	bf00      	nop
 8005338:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800533a:	bc08      	pop	{r3}
 800533c:	469e      	mov	lr, r3
 800533e:	4770      	bx	lr

08005340 <_fini>:
 8005340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005342:	bf00      	nop
 8005344:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005346:	bc08      	pop	{r3}
 8005348:	469e      	mov	lr, r3
 800534a:	4770      	bx	lr
